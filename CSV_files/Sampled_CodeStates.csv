CodeStateID,Code
95bc23f4a1f6b717433734c1ec1d9db84c09782c,"public int countEvens(int[] nums)
{
    int i = 0;
    for (int number: nums)
    {
        if (number % 2 == 0)
        {
            i++;
        }
    }
    return i;
}
"
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
"
bde001ef355c35f06f3da9cad39a299850b21f14,"public String mixString(String a, String b)
{
    String endWord = """";
    int i;
    int max = Math.max(a.length(), b.length());
    for (i = 0; i < max; i++)
         {
             if (i <= b.length() - 1)
             {
                 endWord += b.substring(i, i + 1);
             }
             if (i <= a.length() - 1)
             {
                 endWord += a.substring(i, i + 1);
             }
         }
         return endWord;
}
"
179f933d9143453efa50953579d8cda8e11ff93d,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
        return true;
    else if (a + b == 6)
        return true;
    else
        return false;
}
"
26bc37d1d0a520cad0dce5a5034e6ee5e7a7dd98,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        int sandwichLength = str.length();
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
"
e15c7324ca7ea1e858b109cdcf172505e7577156,"public String repeatEnd(String str, int n)
{
    StringBuilder stbuild = new StringBuilder(n*n);
	String last = str.substring(str.length()-n);
	for(int i = 0; i < n; i++)
		stbuild.append(last);
	return stbuild.toString();
    
}
"
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
"
e5e657c2181fcc98486e3cc0d5d3eefe6b267e6c,"public boolean isEverywhere(int[] nums, int val)
{
    
    int totalz = nums.length - 1;
    int counter = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {        
		if (nums[i] == val || nums[i+1] == val)
        {
            counter = counter + 1;
        }
        if (1 > nums.length)
        {
            return true;
        }
    }
    
    return (counter == totalz);
    
}
"
db2e2d56ea5b843c79aee3113f270b6605654264,"public boolean canBalance(int[] nums)
{
    boolean x = false;
    int sum1 = 0;
    int sum2 = 0;
    int y = 0;
    for (int i = 0; i < nums.length; i++)
    {
		for (int j = 0; j < nums.length; j++)
        {
            y = i;
            if (y < nums.length)
            {
            	sum1 += nums[y];
                y++;
            }
            sum2 += nums[j];
        }
        sum2 -= sum1;
        if (sum1 == sum2)
        {
			x = true;
            break;
        }
    }
    return x;
}
"
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}"
2e1fe7ee9ce5db110b5eb56d9b4db76087ad5378,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && !isMom)
        return false;
    
    if(isAsleep)
        return false;
    else 
        return true;
}
"
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
"
4922371b92b222012e44535853e7674bb94610e3,"public boolean twoTwo(int[] nums)
{
    if (nums.length <= 1)
    {
        return false;
    }
    if (nums.length == 2)
    {
       return (nums[0] == 2 || nums[1] == 2);
            
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
    }
    return true;
}
"
6e03cfa7231408f19258edb1b1dee9938f13b473,"public boolean xyBalance(String str)
{
    int z == 0;;
    for (int i = 0; i < str.length(); i ++)
        if (str.charAt(i) = ""x"" && z == 0)
            z++;
    	else if (str.charAt(i) = ""y"" && z != 0)
            z--;
    if (z == 0)
        return true;
    else
        return false;
}"
3efaac71173e97ea6c6ac0f7c521fa1adc7b0572,"public int findOdd(int[] nums, int index)
{
    biggestOdd = 1;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd = nums[j];
    return biggerOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
08c5bca6a94a40026a6b3f6e3e136442072608bd,"public boolean has77(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
            if ((nums[i] == 7) && (nums[i+1] == 7))
            {
                return true;
            }
            if ((nums[i] == 7) && (nums[i+2] == 7))
            {
                return true;
            }
    }
}"
54b5cd6ea6a51adba499f2c4243db56400a80412,"public int countEvens(int[] nums)
{
    int ans = 0;
    for (int i = 0; i<nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            ans++;
        }
    }
    return ans;
}
"
a9dd593962645bea94f4c17e04d10cad904ac53d,"public String repeatEnd(String str, int n)
{
    {
    String me=str.substring(str.length()-n);
    for(int i=1;i<n;i++)
          me=me+str.substring(str.length()-n);
    return me;
}
}
"
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
"
351839745bc2cdccbb945ecd1391b63bfee8a94a,"public boolean twoTwo(int[] nums)
{
    for (int i = 1; i < nums.length -1; i++){
        if (i ==2 && (i-1!=2 || i+1!= 2)){
                return false;
        }
    }
    return true;
}
"
622436b0373dab2bad30c76297c1da3f8edaf9ea,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for(int i = 1; i < nums.length; i++)
	{
		sum  += nums[i];
		if(nums[i] > max)
			max = nums[i];
		else if(nums[i] < min)
			min = nums[i];
	}
	return (sum-max-min) / (nums.length - 2);
}
"
bb3e953979f88f64a72dcf8c379cb7c0b419a693,"public String getSandwich(String str)
{
    String middle;
    
    for(int i = 0; i < str.lenght(); i++)
        if(str.substring(i+1, i+6).equals(""bread""))
           i = i + 5;
           return;
    while(!str.substring(i, i+5).equals(""bread""))
           middle + str.substring(i);
        
    
                     
    return middle;
}
"
c7e8457fb2b714869206c9d0c13e47eda97c8439,"public boolean bobThere(String str)
{
    int length = str.length();
    boolean answer = false;
    for (int i = 0; int < length; i++)
    {
        if (str.charAt(i) == str.charAt(i + 2))
        {
            answer = true;
        }
    }
    return answer;
}
"
f7e5431867d37c8692e57f37dedda8d3b54caf20,"public int[] tenRun(int[] nums)
{
    int tenMode = -1;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] % 10 == 0)
			tenMode = nums[i];
		else if(tenMode != -1)
			nums[i] = tenMode;
	}
	return nums;
}
"
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
"
6500eb27275f0609dbf3a65664f62ee8dcc13511,"public boolean xyzThere(String str)
{
    int length = str.length();
    int i = 0;
    boolean findingXYZ = true;
    while ( findingXYZ && i <= length - 3 )
    {
        if ( str.substring(i, i + 3).equals(""xyz"")
            && str.charAt(i - 1) != '.' )
        {
            findingXYZ = false;
        }
        i++;
    }
    return !findingXYZ;
}
"
6f7f61c8665e5fbb33bb6cdb300c38706ffa9630,"public int centeredAverage(int[] nums)
{
    int average = 0;
    int sum = 0;
    int low = nums[0];
    int high = nums[0];
    boolean found = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > high)
        {
            high = nums[i];
        }
        
        if (nums[i] < low)
        {
            low = nums[i];
        }
    }
    
    for (int a : nums)
    {
        sum = sum + a;
    }
    
    sum = sum - low - high;
    
    average = sum / (nums.length - 2)
    
    return average;
}
"
0ef8d416e4496a35a586330b7a247abbf3ee6afc,"public int sum67(int[] nums)
{
    int sum = 0; 
    boolean six = false; 
       if (nums.length < 1)
       {
           return 0;
       }

    for (int i = 0; i < nums.length; i++)
    {
        if(nums[i] == 6)
        {
           while(nums[i] != 7)
           {
               i++
           }
         else 
           {
             sum += nums[i];
           }
        }
    return sum;
    }"
44b727fd0a2be091d3245f4c583734ad2bdf1842,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend == true)
    {
        if (cigars >= 40)
        {
            return true;
        }
        else
        {
            return false;
        }
	else if (isWeekend == false)
    {
        if (cigars >= 40 && cigars <=60)
        {
            return true;
        }
        else
        {
            return false;
        }
    }   
}
"
462c32a961f9e37900f45d8ce5b1817ecd8a2c74,"public int noTicket(0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
"
1ed51036bcb07988a50f935a5163d47522cd2164,"public String mixString(String a, String b)
{
    //String shorter = """";
    //String longer = """";
    //String fuckMyLife = """";
    //if (a.length() <= b.length()){
    	//shorter = a;
        //longer = b;
    //} else {
    	//shorter = b;
        //longer = a;
    //}
    //int j = 0;
    //for (int i = 0; i < shorter.length(); i++){
    	//char charA = a.charAt(i);
        //char charB = b.charAt(i);
        //fuckMyLife += Character.toString(charA) + Character.toString(charB);
        //j = i;
    //}
    //fuckMyLife += longer.substring(j);
    //return fuckMyLife;
    String ans = """";
    if (a.length() == b.length()){
    	for(int i = 0; i < a.length(); i++){
        	ans += String.valueOf(str.charAt(i)) + String.valueOf(b.charAt(i));
        }
    }
    else if (a.lenght() > b.length()){
    	for (int i = 0; i < b.length(); i++){
        	ans += String.valueOf(a.charAt(i)) + String.valueOf(b.charAt(i));
        }
        ans += a.substring(b.length(), b.length());
    } else {
    	for (int i = 0; i < a.length(); i++){
        	ans += String.valueOf(a.charAt(i)) + String.valueOf(b.charAt(i));
        }
        ans += a.substring(a.length(), b.length());
    }
}
"
5940c6c785a89ecf37858eac48e4a698b5fd9656,"public String repeatEnd(String str, int n)
{
    int l = str.length();
    String banana = str.substring(str.length()-n);
   
    
    for(int i=1;i<n;i++)
            banana=banana+str.substring(str.length()-n);
    return banana;
}
"
fbd85f0dcb64569d1fbb153355ce94525732fba9,"public int countCode(String str)
{
    int stringLength = str.length();
    int numberOfCode = 0;
    int counter = 0;
    if (stringLength > 0)
    {
        while (counter < stringLength)
    	{
            int findCO = str.indexOf(""co"", counter);
    		int findE = str.indexOf(""e"", counter);
        	if (findE - findCO == 3)
        	{
            	numberOfCode = numberOfCode + 1;
        	}
            counter = counter + 5;
    	}
        return numberOfCode;
    }
    else
    {
        return 0;
    }
}
"
a64b521a43b279d8d198e2e93125bbfc58c0262e,"public String getSandwich(String str)
{
    if (str.startsWith(bread) && st.endsWith(bread))
    {
        return str.substsring(5, str.length() -5))
    }
}
"
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
"
f191a2f10194c8dcff53e100116222f0aee6b3d7,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6)
    { 
        return true;
    }
    if (Math.abs(a + b) == 6 || Math.abs(a - b) == 6 || Math.abs(a) - b == 6)
    {
        return true;
    }
    else 
    {
        return false;
    }
}
"
076375a7de31fac4f71067d46b002b33e9533045,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning){
        if (isMom){
            return true;
        }
        return false;
    }
    if (isAsleep){
        return false;
    }
    return true;
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
c6a51534c7b462ecf83ed928b0a88005369c9f07,"public boolean love6(int a, int b)
{
    int diff = a-b;
    int sum = a+b;    
    if ( (a==6 || b==6) || ( Math.abs(diff)==6 || sum==6))
        {
            return true;
        }
    else
        {
            return false;
        }
}
"
d5ead5b3e99b68ea106d3bde1308448d1b98dfae,"public boolean xyBalance(String str)
{
    int numX = 0;
    int numY = 0;
    
    for (int i = 0; i < str.length(); i++)
    {
        if (charAt(i) == 'x')
        {
            numX++;
        }
        
        if (charAt(i) == 'y')
        {
            numY++;
        }
    }
    
    if (numX == numY)
    {
        return true;
    }
    
    else 
    {
        return false;
    }
}"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
22688d6d602699c05e6428f3b44359f348e310fa,"public boolean canBalance(int[] nums)
{
    
	int left = 0;
	int right;
	for(int i = 0; i < nums.length - 1; i++)
		left += nums[i];
	right = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(left == right)
			return true;
		left -= nums[i];
		right += nums[i];
	}
	return (left == right);
}
"
4e71eca5e78272317df98bf89ebd663885bab6c1,"public boolean isEverywhere(int[] nums, int val)
{
    
    int totalz = nums.length;
    int counter = 0;
    
    for (int i = 0; i < nums.length; i++)
    {        
		if (nums[i+2] <= nums.length && (nums[i] == val || nums[i+1] == val))
        {
            counter = counter + 1;
        }
        
    }
    
    return (counter == totalz);
    
}
"
06747e24d29d7fcd5f27236cdf4331357901cad4,"public String plusOut(String str, String word)
{
    int stri = str.length();
    int wor = word.length();
    String finish = """";
    
    for (int i = 0; i < stri; i++)
    {
        if (i <= stri - wor)
        {
            String temp = str.substring(i, i + wor);
            if (temp.equals(wor))
            {
                finish += ""+"";
            }
            else finish += ""+"";
        }
        return finish;
    }
}
"
eb2c759546fc1c28c1f396e7f8a797c34349a587,"public String without2(String str) 
{
    String s = str.substring(0, 2);
    String st = str.substring(str.length()-2, str.length());
    if(s.equals(st))
    {
        return str.substring(2);
    }
    else if(str.length()<1)
    {
        return str;
    }
    else   
    {
        return str;
    }
}
"
3b24fd13da29cf3eaf6ecbfb5f5dfeb4cbdd236e,"public int noTicket(int 0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
"
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
88a207bc17c272fe6f749acf398eacc1228b8cd9,"public int sum13(int[] nums)
{
    int sum = 0;
    if(nums.length == 0)
    {
     	return sum;   
    }
    else
    {
      	for(int i = 0; i < nums.length; i++)
        {
            if (nums[i] == 13)
            {
                i++;
            }
            else
            {
             	sum = sum + nums[i];   
            }   
        }
        return sum;
    }
}
"
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}"
fdd5fb950da06ae0b32b17d65aa2c875b7e04663,"public int[] fizzArray(int n)
{
    int[] newArray = new int[n];
    for (int i = 0; i < n; i++)
    {
        newArray[i] = i;
    }
    return newArray;
}"
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
"
e90fc3864e07f36426344e4506beaaf783bfaf3b,"public int sortaSum(int a, int b)
{
	int c = a + b;
    if (c => 10) && c =< 19)))
    {
     	return 20;   
    }
    else
    {
        return (a + b);
    }
}
"
ff4d3fccfe514870f69c27a376b8457b4bff138d,"public String repeatEnd(String str, int n)
{
    StringBuilder stringbuild = new StringBuilder(n*n);
    String last = str.substring(str.length() - n);
    for(int i = 0; i < n; i++)
    {
     	stringbuild.append(last);   
    }
    return stringbuild.toString();
}
"
2fe957ecd71eab84c927e5165008ed61e192e94d,"public int[] withoutTen(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] = 10)
        {
            for (int j = i; j < nums.length; j++)
            {
                nums[j] = 0;
            }
            i = j;
        }
    }
    return nums;
}
"
4afdfe6cc49a58e81834aa96b28bca5df73ff020,"public String atFirst(String str)
{
    String add = ""@"";
    
    if (str.substring(1,2)==null && str.substring(0,1)!=null )
            return (str+add);
    else if (str==null)
        return add+add;
    else 
        return str.substring(0,2);
    
}
"
cb83a30f41ee3ab6e82cd55cddbafce1f1169145,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean result = true;
    if (isWeekend)
    {
        if (cigars >= 40)
        {
            result = true;
        }
    }
    else
    {
        if (40 <= cigars && cigars <= 60)
        {
            result = true;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
"
e5f4a1d12a2732c56ffa6463cfe4561bd754d8e2,"public String atFirst(String str)
{
    if (str.length >= 2)
    {
        return (str.substring(0,2));
    }
    else
    {
        return (str + ""@"");
    }
}
"
0052f96ceb63d13b4f7dcf7cc400966906099f39,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}
}
}"
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
"
50f3da72fdd9f01a0c7804b3c9c789cddd8d9b18,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (i = 0; i < num.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count*2 == num.length);            
    
}
"
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
"
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
87346e3e31d1cd09cf1ea78408fe3cd51d049e2e,"public int sum13(int[] nums)
{
    sumNum = 0;
    if (nums.length == 0)
    {
        return sumNum;
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
        {
            i += 1;
        }
        else
        {
            sumNum += nums[i];
        }
    }
    return sumNum;
}
"
c72936a1839694da8df5554d66db79bf67bec60c,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (isBirthday)
    {
        speed = speed + 5
    }
	if (speed <= 60)
	{
    	return 0;
	}
    
	if (speed >= 61 && speed <= 80)
	{
    	return 1;
	}
    
	if (speed >= 81)
	{
    	return 2;
	}
	
}
"
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
"
c2d61ec107eccdb9adb3fafda65cc667a48a0223,"public String without2(String str) 
{
    int length = str.length();
    if (length >= 2)
    {
     	if (str.substring(0,2).equals(str.substring(length-2,length)))
          
        {
          	return str.substring(2);
        }
                                             	
                                           
         else 
         {
             return str;                        
         }
    else
    {
     	return str;   
    }
}
"
058b03582e66073c85c42da11acba9812912dc8e,"public int[] zeroMax(int[] nums)
{
    int max;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 0)
		{
			max = 0;
			for(int k = i + 1; k < nums.length; k++)
			{
				if(nums[k] > max && nums[k] % 2 == 1)
					max = nums[k];
			}
			if(max != 0)
				nums[i] = max;
		}
	}
	return nums;
}
"
c77723bd709b08d6e00161ce3c6ef305a61d69c9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length()-2; i++) {
    if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b') {
      return true;
    }
  }
  return false;
}
"
bf2d76f171c1b9c00260b5849b42f52103ab8c1c,"public String zipZap(String str)
{
    String word = """";
    while (str.length() > 2)
    {
        int index = str.indexOf(""z"");
        
        if (index != -1)
        {
            word += str.substring(0, index+1);
            str = str.substring(index + 1);
            
            if (str.indexOf(""p"") == -1)
            {
                word += str;
                str = """";
            }
            else
            {
            	if (str.charAt(1) == 'p')
            	{
                	word += ""p"";
                	str = str.substring(2);
            	}
            }
        }
        else
        {
            word += str;
            str = """";
        }
    }
    
    word += str;
    str = """";
    
    return word;
}
"
cb7010a4c9eab7a9792ac509d6be84f2a9e8711d,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == 6 || Math.abs(a - b) == 6)
    	return true;
    else 
        return false;
}
"
5c3bcd7f60c0be319685709077e5d46653d5678d,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        if (n < 10 && n > 1)
        {
            return false;
        }
        else
        {
            return true;
        }
    }
    else
    {
        if (n <= 10 && n >= 1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
b8fd2b177b181775f4aa3533c0636f42fa77bbd3,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    int i = 0;
    for (i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
057708d05798548dcd3cf7408ac3e7596f6cffad,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <=2)
    {
    	return 0;
    }
    
    else if((you >= 8 || date > 2) && (you > 2 || date >= 8))
    {
        return 2;
    }
    
    return 1; 
  

}
"
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
"
5149ef8512db14d7b28ed8ca2a51a7f2d65e0f72,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if ((sum)<10)
    {
        return sum;
    }
    if ((a+b)>=10 && (a=b)<=19)
    {
        return 20;
    }
    return sum;
        
}
"
48c4f613201271c589c6946bf5392d8f39fa6a3a,"public int sum67(int[] nums)
{
    int count = 0;
    for (i = 0; i < nums.length(); i++) {
     	   count = count + nums[i];
    }
    return count;
}
"
cace7d6ba2df7803b7856f0a4767813ab512f4c5,"public String without2(String str) 
{
    if (str.length() > 1)
    {
        if (str.substring(0, 1).equals(str.substring(str.length() - 2, str.length() - 1)))
        {
            return str.substring(2, str.length());
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
}
"
c093cac600fc00c29dfe5c59c8ab78dddb9a3f95,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count >= nums.length - 1);            
    
}
"
2b08d24dc369b75526f1bf44d6930b91e7f8d63a,"public String alarmClock(int day, boolean vacation)
{
    if (vacation = false) {
        if (day(0)) {
        	return ""10:00"";   
        }
    }
}
"
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
"
c130022a70c4c15c632a9a51064deba8e336568b,"public String alarmClock(int day, boolean vacation)
{
    if (!vacation)
    	if (day > 1 && day < 6)
        	return ""10:00"";
    	if (day == 0 || day == 6)
        	return ""7:00"";
    
    else if (vacation)
    	if (day == 0 || day == 6)
        	return ""10:00"";
}
return ""off"";
"
c1787c3579abadd7e03345d1ff93d595d3346793,"public String without2(String str) 
{
    if (name.substrnig(0, 2) == name.substring(name.length() -2, name.length()))
    {
        return ""name.substring(0, 2)"";
    }
    else if (number.substring(0, 2) == number.substring (name.length() -2, name.length()))
    {
        return ""Hi"";
    }
    else
    {
        return ""name.substring(0)"";
    }
}

"
82477740ebf3bc134c31e9e47a229b03717d0f37,"public String repeatEnd(String str, int n)
{
    int len = str.length();
    int kk = len-n;
    int count = 1;
    str = str.substring(kk, len);
    while (count<n)
    {
    str+=str;
        count++;
    
    }
    return str;
}
"
ed3b1df13e4b0c1e12a2a3f406666ff7422ea1e3,"public boolean xyBalance(String str)
{
    for (int i = 1; i <= str.length(); i++)
        if (str.charAt(i) == x)
            if (str.charAt(i+1) == y)
                return true;
    if (!str.endsWith(""y""))
        return false;
    return true;
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
5cf0ea7d391378f7efcf35058405434598033535,"public int[] zeroMax(int[] nums)
{
    int greatest = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            greatest = 0;
            for (int j = i + 1; j < nums.length; j++)
            {
                if (nums[j] % 2 == 1 && nums[j] > greatest)
                {
                    greatest = nums[j];
                }
            }
            if (greatest != 0)
            {
                nums[i] = greatest;
            }
        }
    }
	return nums;
}
"
7a4da6809478d3d323ea8e981d0726e81293633d,"public String plusOut(String str, String word)
{
    String a = """";

        for (int i =0;i < str.length(); i ++){
        if (str.startsWith(""word"", i))
        {
        	a = a + word;
            i = i + word.length() - 1;
        }else
        {
        	a = a + ""x"";
          
        }
    }
    return a;
}
"
96b91c96780eac4de4eb3411f701b104c774f02f,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
    	{
        	return ""7:00"";
    	}
    	else if (day =6 && 0)
   	 	{
      	  return ""10:00"";
   		}
    if (!vacation)
    {    
        if (day > 0 && day < 6)
    	{
      	  return ""10:00"";
    	else
    	{
        	return ""off"";
    	}
    }
}
"
083ca5818f3f055e87fb758cb9de020f40601414,"public int[] withoutTen(int[] nums)
{
    int[] ten = new int[nums.length];
    int result = 0;
    for (int i = 0;i<nums.length;i++)
    {
        if (nums[i] == 10)
        {
            nums[i] = 0;
        }
        if (nums[i] != 10)
        {
            ten[result++] = nums[i];
        }
    }
    return nums;
}
"
c0e74847daded5db86a45f95da024ec482c4f9a4,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19}
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
"
62d31dc1d181609f1ad5028901c8db29d61ea2b8,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    else 
    {
        return (a +b);
    }
}
"
bc0520b0e254d0e88ff08e80b35bc05e931307e7,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6)
        return true;
    if (Math.abs(a - b) == 6 || a + b == 6)
        return true;
    else
            return false;
}
"
4b739892a3a01dc0f58db94873932aeb2301f0b2,"public int[] fix45(int[] nums)
{
    List<int> fourIndex = new ArrayList();
    list<int> fiveIndex = new ArrayList();
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            fourIndex.add(i);                  
        }
        else if (nums[i] == 5)
        {
            fiveIndex.add(i);
        }
    }
    for (int i = 0; i < fourIndex.size(); i++)
    {
        int fivePos = fiveIndex(i);
        int newPos = fourIndex(i + 1);
        int number = nums[newPos];
        nums[fivePos] = number;
        nums[newPos] = 5;
    }
    return nums;
}
"
436eeb0f4f5aeee718662c66495c8c6c1dcc1db6,"public boolean canBalance(int[] nums)
{
    int front = nums[0];
    int tail = 0;
    int j =nums.length-1;
    int i =1;
         while(j>=i)
          {
         	if( front < tail)
    	 	{
        		front += nums[i];
                i++;
         	}
         	else
    		{
            	tail+=nums[j];
                j--;
        	}
   		 }
    return front==tail;
}
"
b3adf760ca9667cc5b6a16aaa98ca1203a305fc0,"public int[] fix45(int[] nums)
{
    int[] newNums = new int[nums.length];
    
    for(int i = 0; i < nums.length; i++) {
    	if(nums[i] != 4) {
        	newNums[i] = 5;
        }
    }
    return newNums;
}
"
519c2f05b2b455a6a8857d0b39f50662509eb725,"public String[] fizzBuzz(int start, int end)
{
    int length = end - start;
    int[] temp = new int[length];
    for (int i = 0; i <= length; i++)
    {
        temp[i] = start + i;
    }
    
    String[] out = new String[length];
    
    for (int i = 0; i <= length; i++)
    {
        if (temp[i] % 3 == 0)
        {
            out[i] = ""Fizz"";
        }
        else if (temp[i] % 5 == 0)
        {
            out[i] = ""Buzz"";
        }
        else
        {
            out[i] = String.valueOf(i);
        }
    }
    return out;
}"
a88bec627636b469c557a9a7a88c1189a291b955,"public String alarmClock(int day, boolean vacation)
{
    if (day < 6 && boolean = true) 
    {
        return ""7:00""
    }
}
"
b7a9395b99fe850b2082792560bb36ab00860020,"public int redTicket(int a, int b, int c)
{
    int result = 0;
    if (a == 2 && b == 2 && c == 2)
        result = 10;
    else if (a == b && b == c)
        result = 5;
    else if (a != b && a != c)
        result = 1;
    else
        result = 0;
    return result;
}
"
f96d529c4a58e2e0649892eb51b886279623264e,"public int[] seriesUp(int n)
{
    int[] series = new int[n * (n + 1) / 2];
    int spot = 0;
    for (int i = 0; i < n; i++)
    {
        for (int j = 1; j <= spot; j++)
        {
            series[spot] = j;
            spot++;
        }
    }
}
"
d5a46aeaf651ac0eaaf0aae04800b61a73ab2cbb,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val || nums[i+1] != val)
        {
            everywhere = false;
        }
    }
    return everywhere;
}
"
d69ef510c9d37986ef9a2c6c494d6a674788e5cf,"public int[] withoutTen(int[] nums)
{
    int[] noTens = new int[];
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            noTens.add(nums[i]);
        }
        
    }
    return noTens;
}
"
19cf79da25dde93c9ab146c0d40e35ecae814f8c,"public String zipZap(String str)
{
    int len = str.length();

	int lim = len - 2;

	int i = 0;

	char ch;

	StringBuilder stbuild = new StringBuilder(len);

	while(i < len)

	{

		ch = str.charAt(i);

		if(ch == 'z' && i < lim && str.charAt(i+2) == 'p')

		{

			stbuild.append(""zp"");

			i += 3;

		}

		else

		{

			stbuild.append(ch);

			i++;

		}

	}

	return stbuild.toString();
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
07bb23858b939a66d034c2e422e07cddfaf152cb,"public int[] fix45(int[] nums)
{
    for (r = 0; r < nums.length; r++)
    {
        if (nums[r] == 5)
        {
            
        }
    }
}
"
61dbf1086b96a64505aaa5c4a84ab8265f7a2f42,"public int dateFashion(int you, int date)
{
    int score = 0;
    if (you >= 8 || date >= 8)
    {
        score = 2;
        if (you <= 2 || date <= 2)
    	{
        	score = 0;
    	}
    }
    else if (you <= 2 && date <= 2)
    	{
        	score = 0;
    	}
    else
    {
     score =1;   
    }
    return score;
}
"
eadc5df754b07dbc81ee348ee4bbd34ce3b39f20,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
        return 20;
    else
        return (a + b);
}
"
67b31d44e53f66de27582ca427b2dcf657e7f18c,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a = b && b == c)
        return 10;
    
    if (a = b && b == c)
        return 5;
        
    if (a != b && a != c)
        return 1;
    
    return 0;
}
"
8ddbd5941c7b99d6290f2265a1e4ef543437a966,"public String atFirst(String str)
{
    int length = str.length();
    
	if (length >= 2)
    {
		return str.substring(0, 2);
    }
	else if(length == 1)
    {
		return (str.charAt(0)+""@"");
    }
	else
    {
		return ""@@"";
    }
}
"
eb6c1a158117bc98c4491e7dc2fe6e398dc2712f,"public int noTeenSum(int a, int b, int c)
{
    
	return a + b + c;
}

public int fixTeen(int n)
{
    if ( n == 15 || n == 16)
        return n;
    if (13 <= n < 15)
        return 0;
    if (16 < n <= 19)
        return 0;
}
"
694a9037b08573fdb83bf861651119e9cdc03f82,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 1; i<n; i++)
    {
        last = last + str.substring(str.length()-n);
    }
    return last;
        
}
"
4a0597ca8e4f127ab4cfa0bf4f38bd4128914ace,"public String atFirst(String str)
{
    if (str.length()<2)
    {
        String newstr = str.charAt(0) + '@';
        return newstr;
    }
    else
        return Character.toString(str.chatAt(0));
}
"
443fbdf03a2cc03d6691b9ef06e49217ec0b5bb6,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return true;
    }
    else
    {
        if (cigars >= 40 && cigars <= 60)
        {
            return true;
        }
        else
        {
            return false;
        }
    }    
}
"
0fe4fc03e1195c4448e8147d127484f54d7c813f,"public String[] fizzBuzz(int start, int end)
{
    String[] value = new String[end - start];
    for (int i = start; i < end; i++)
    {
        value[i] = String.valueOf(i);
        if (value[i] % 3 == 0 && value[i] % 5 == 0)
        {
            value[i] = ""FizzBuzz"";
        }
        else if(value[i] % 3 == 0)
        {
            value[i] = ""Fizz"";
        }
        else if(value[i] % 5 == 0)
        {
            value[i] = ""Buzz"";
        }
    }
    return value;
}
"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
20c92ef83cbf1334969373da1e05967bb9a6cc2b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(cigars >= 40 && cigars <= 60)
        if(isWeekend)
            return true;
    	else
            return true;
    else if(cigars < 40)
        return false;
    else if(cigars > 60)
        if(isWeekend)
            return true;
    	else
            return false;
    else
        return false;
}
"
acad92749a909ce7efe433d32d8c278f75b9f680,"public int[] tenRun(int[] nums)
{
    int peen = 1;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int x = i + 1; x < nums.length; x++)
            {
                if (nums[i] % 10 == 0 && nums[x] % 10 != 0)
                {
                    nums[x] = nums[i];
                }
                else if (nums[i] % 10 == 0 && nums[x] % 10 == 0)
                {
                    i = i + 1;
                }
            }
        }
    }
    
    return nums;
}
"
623ca279f122f719780db93fa20dc747ebaab182,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int caughtSpeeding = 0;
    if (isBirthday == false)
    {
        if (speed >= 60)
        {
            caughtSpeeding = 0;
        }
        else if (speed >= 61 && speed <= 80)
        {
            caughtSpeeding = 1;
        }
        else if (speed >= 81)
        {
            caughtSpeeding = 2;
        }
    }
    else
    {
        if (speed >= 65)
        {
            caughtSpeeding = 0;
        }
        else if (speed >= 66 && speed <= 85)
        {
            caughtSpeeding = 1;
        }
        else if (speed >= 86)
        {
            caughtSpeeding = 2;
        }
    }
    return caughtSpeeding;
}"
bd9842fa74a4999319c411a63ea0b765826626f1,"public boolean in1To10(int n, boolean outsideMode)
{
    if ( n >= 1 && n <= 10 && !outsideMode)
    {
    	return true;
    }
    else
    {
    	return false;
    }
    if ( n <= 1 && n >= 10 && outsideMode)
    {
    	return true;
    }
    else
    {
    	return false;
    }
}
"
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
"
d58abb87ff70ff67a76bba0f3d1f0c3ba071d518,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == false)
    {
    if (speed < 60)
        {
            return 0;
        }
    if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    if (speed >= 81)
        {
            return 2;
        }
    }
    if (isBirthday == true)
    {
        return 0;
    return 0;
    }
}"
daa2644623a6ac5c117750adb637c687bb00c72d,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6)
    { 
        return true;
    }
    if (Math.abs(a + b) == 6 || Math.abs(a - b) == 6)
    {
        return true;
    }
    else 
    {
        return false;
    }
}
"
f5de478e40b7f066a55956915d8f27db4a8f69be,"public boolean bobThere(String str)
{
    
    int end = (str.length - 2));
	for(int i = 0; i < end; i++)
	{
		if(str.charAt(i) == 'b'
           && str.charAt(i+2) == 'b')
			return true;
	}
    {
	return false;
    }
    
}
"
e846f0494e7ddd966a0eac43658d44780ae4d119,"public int[] seriesUp(int n)
{
    int k = 0;
    int[] series = new int[(n * (n + 1)) / 2];
    {
        for (int i = 1; i <= n; i++)
        {
         	for (int j = 1; j <= i; j++)
            {
             series[k] = j;
             k = k + 1;
            }
        }
    }
    return series;
}
"
4ae96a020d5af6ee07d33bc817222bdf996efcf0,"public String zipZap(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
        if (str.charAt(i) == 'z' && str.charAt(i+2) == 'p')
        {
            str = str.substring(0, i) + str.substring(i+2);
        }
    }
    return str;
}
"
b916e8075083db817cb0d3d485aec694cb9b22b8,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a)+fixTeen(b)+fixTeen(c);
}

public int fixTeen(int n)
{
    if n=19||n=13||n=14||n=17||n=18;
    	return 0;
}
"
c6ab7d65bde75103971e051d5286985213cb6cde,"public String atFirst(String str)
{
    if(str.length()>=2)
        return str.substring(0,2);
    else if (str.length() < 2)
        return str + ""@"";
    else 
        return ""@@"";
    
}
"
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
483a20b4ce32a657feb5cf8f174dc5147226cb88,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        if (temp >= 60 && temp <= 100)
            return true;
        else
            return false;
    }
    else
    {
        if (temp >= 60 && temp <= 90)
            return true;
        else
            return false;
    }
}
"
79ca73c2f348bc0492ad0ac2a699365809e4b3e0,"public String[] fizzBuzz(int start, int end)
{
    if ( number % 3 == 0) }
		if ( number % 5 == 0) {
            return ""fizzbuzz"";
        } else {
            return ""fizz"";
        }
} else if ( number % 5 == 0 ) {
    return ""buzz"";
}
return String.valueOf(number);
}
"
d87be6d28d3e0e4e1fa4f8630879491962c0b190,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i< nums.length; i++)
    {
        sum = sum + nums[i];
    }
    return sum;
}
"
39a53ab50a5db7ad657492ff50b402f472f0981b,"public boolean xyzThere(String str)
{
    int front = str.indexOf("".xyz"");
    
    
    if(front >= 0) 
    {
     if (xyzThere(str.substring(0, index)) || xyzThere(str.substring(index + 4)))
     {
         return true;
    }
        else
            return false;
    
    
   
   
        
}
"
854ead7f7aeaa728004070de3a0b9dc82569e8b3,"public int[] fizzArray(int n)
{
    int[] newnew = new int[n];
    for (int i = 0; i < n; i++)
    {
        newnew[i] = i;
    }
    return newnew;
}
"
71225452235ede23d4925caa97ed7ea06c085736,"public boolean sameEnds(int[] nums, int n)
{
    int length = nums.length;
    int[] newArray = new int[n];
    int[] newArray2 = new int[n];
    int counter = 0;
    for (int i = 0; i < n; i++)
    {
        newArray[i] = nums[i];
    }
    for (int i = length - n; i < length; i++)
    {
        newArray2[i] = nums[i];     
    }
    for (int i = 0; i < n; i++)
    {
        if (newArray[i] == newArray2[i])
        {
            counter = counter + 1;
        }
    }
    if (counter == n)
    {
        return true;
    }
    else 
    {
        return false;
    }
}
"
4fd3bfae7dd62943b070a7afebc0b2258acf8023,"public int[] withoutTen(int[] nums)
{
    int length = nums.length;
	for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            length --;
        }
    }
    int[] ints = new int[nums.length];
    int k = 0;
    for (int i = 0; i < ints.length; i++)
    {
        if (nums[k] != 10)
        {
            nums[k] = nums[i];
            k++;
        }
        
    }
    return ints;
}
"
b668bc5a044410d2270d1ab93aec06bd6868f9e9,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        if (cigars >= 40)
            return true;
    if (cigars >= 40 && cigars <= 60)
        return true;
    return false;
}
"
4313e81ffff3a32b077bb46e90bb53a49d7ef08f,"public String[] fizzBuzz(int start, int end)
{
    int length = (end - 1) - (start);
    
    String[] peen = new String[length];
    
    for (int i = start; i < end - 1; i++)
    {
        if (i % 3 == 0 && i % 5 != 0)
        {
            peen.insert(""Fizz"");
        }
        else if (i % 5 == 0 && i % 3 != 0)
        {
            peen.insert(""Buzz"");
        }
        else if (i % 5 == 0 && i % 3 == 0)
        {
            peen.insert(""FizzBuzz"");
        }
        else
        {
            peen.add(String.valueOf(i));
        }
    }
    
    return peen;
    
}
"
2efc3b1d0acaa60b452bf611f88e4f3873fd00aa,"public boolean isEverywhere(int[] nums, int val)
{
    int b = 0;
    for (int i = 1; i < nums.length - 1; i++) {
        if (nums[i] == val || nums[i-1] == val ||
            nums[i+1] == val) {
            	b++;
        }
    }
    return b == nums.length - 2;
}
"
458df3209fd88a511ec835c27a6b8e785183059c,"public boolean xyzThere(String str)
{
    int len = str.length() - 2;
    for(int i = 0; i < len; i++)
    {
        if (str.charAt(i) == ""x"" && str.charAt == ""y"" && str.charAt(i+2) == ""z"")
        {
            if(str.charAt(i-1) 1= ""."" || i==0)
            {
                return true;
            }
        }
    }
        return false;
}
"
133947c2fb29d480fe3febda257a9e171e415d87,"public int chance; 

public int dateFashion(int you, int date)
{
    if (you >= 8 || date >=8 && you >= 2 && date >= 2)
    {
        chance = 2; 
    }
    else if (you <= 2 || date <= 2)
    {
        chance = 0;
    }
    else 
    {
        chance = 1; 
    }
    return chance; 
}
"
07797021934f0e04ec2f5c55b8a7a472bd29bd75,"public int loneSum(int a, int b, int c)
{
    int sum = 0;
    if (a == b)
    {
        sum = c;
    }
    else if (a == c)
    {
        sum = b;
    }
    else if (b == c)
    {
        sum = a;
    }
    else if (a == b && b == c)
    {
        sum = 0;
    }
    else 
    {
        sum = a + b + c;
    }
    return sum;
    
   
}
"
dca1f726e64da2460020f1bbac55668502eddba7,"public int roundSum(int a, int b, int c)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
    
}

public int round10(int num)
{
    return (round10(a) + round10(b) + round10(c));
    
}
"
6e4b75b8dc59edc346319756413c8db4beb86cc8,"public boolean endOther(String a, String b)
{
    int aLen = a.length();
	int bLen = b.length();
	String end;
	String temp;
	a = a.toLowerCase();
	b = b.toLowerCase();
	if(aLen >= bLen)
	{
		end = a.substring(aLen - bLen);
		temp = b;
	}
	else
	{
		end = b.substring(bLen - aLen);
		temp = a;
	}
	return (end.equals(temp));
}
"
b63f73f3977c83c5a9326abd2d8514897f04a240,"public String without2(String str) 
{
    int strLen = str.length();
    if (strLen < 2)
    {
        return str;
    }
    else if (strLen == 2)
    {
     return """";   
    }
    else if ((str.charAt(0) == str.charAt(strLen - 1)) && (str.charAt(1) == str.charAt(strLen - 2)))
    {
     	return ""blasblas""; //str.substring(1, strLen - 1);   
    }
    return str;
}
"
05dd6bd8de1f58bbe1f1e5457ad34d984ade8382,"public boolean canBalance(int[] nums)
{
    int r;
    int l = 0;
    for (int i = 0; i < nums.length; i++)
    {
        l += nums[i];
        r = nums[nums.length - 1];
    }
    for (int i = nums.length -2; i > 0; i--)
    {
        if (r == l)
            return true;
        l -= nums[i];
        r += nums[i];
    }
    return (r == l);
}
"
2727a8707a58f11215001cccf998e4af0cececdb,"public class FizzArray {

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}"
6a569371da49d12ccfcf706688aa48c98d9c5d45,"public boolean partySuccess;

public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend = true)
    {
        if (cigars >= 40)
        {
            partySuccess = true;
        }
        else if (cigars < 40)
        {
            partySuccess = false;
        }
    }
    else if (isWeekend = false)
    {
        if (cigars >= 40 || cigars <= 60) 
        {
            partySuccess = true;
        }
        else 
        {
            partySuccess = false;
        }
    }
    return partySuccess;
}
"
6f002bcf6f8eade451cdf51b44eb5d612b8375b8,"public int[] withoutTen(int[] nums)
{   
    for (int i = nums.length - 1; i >= 0; i--)
    {
        if (nums[i] == 10)
        {   
            nums[i] = 0;
            for (int j = nums.length - 1; j > i; j++)
            {
                if (nums[j] != 0) {
                    int temp = nums[j];
                    nums[j] = 0;
                    nums[i] = temp;
                }
            }
            
        }

    }
    
    return nums;
}
"
a25d96e68f85135afbfbaadb5ab9a2778d293053,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
        return 0;
    if(a < b && b <= 21)
		return b;
	return a;
}
"
7813406894aa7374ce4f18a049aa7e4483a6febe,"public boolean twoTwo(int[] nums)
{
    boolean twoTwo = false;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            twoTwo = true;
        }
        else if (nums[i] == 2 && nums[i+1] != 2)
        {
            twoTwo = false;
        }
        else 
        {
            twoTwo = true;
        }
    }
    return twoTwo;
}
"
ca1870b1df47e2084ad5408ac293ab511a73c5d0,"public int blackjack(int a, int b)
{
    if (a > 0 && b > 0)
    {
        if (a > b && a <= 21)
        {
        	return a;
        }
        else if (b > a && b <= 21)
        {
            return b;
        }
        else if (a > 21)
        {
            return b;
        }
        else if (b > 21)
        {
            return a;
        }
    }    
    return 0;
}
"
54c39801553ddd678c36a446078c3b3f60691ac9,"public boolean xyzThere(String str)
{
    int l = str.length();
    String look = ""xyz"";
    boolean answer;
    for(int i = 0; i < l; i++)
    {
    	if(str.substring(i, i+2).equals(look)&&str.substring(i-1, i).equals(""."")
        {
             	answer = true;   
        }
        else
        {
            answer = false;
        }
    }
    return answer;
}
"
8dde95600a194d6b8f2b34b5af7a8f5628b4039d,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
        if (day == 0)
        {
        	return ""off"";
        }
        else if (day == 6)
        {
        	return ""off"";
        }
        else
        {
            return ""10:00"";
        }
    }
    else
    {
    	if (day == 0)
        {
        	return ""10:00"";
        }
        else if (day == 6)
        {
        	return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
269d092e6f042030214a0a78d397236ccda6a3d2,"ublic String zipZap(String str) {
  int len = str.length();
  String finalString = """";
  
  for (int i = 0; i < len; i++) {
    finalString += str.substring(i,i+1);
    if (i > 0 && i < len-1) {
      if (str.charAt(i-1) == 'z' && str.charAt(i+1) == 'p')
        finalString = finalString.substring(0,finalString.length()-1);
    }
  }
  return finalString;
}"
493267658ead76f2221aae551e38a001ba5eab78,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep)
    {
        if (isMorning)
        {
            if (isMom)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        else
        {
            return true;
        }
    }
    else
    {
        return false;
    }
}
"
b955a51b271bca885db5a517bd0fc2a4ee212951,"public boolean evenlySpaced(int a, int b, int c)
{
    int temp; 
    
    if (a>b)
    {
        temp = a; 
        a = b; 
        b = temp; 
    }
    
    if (b>c)
    {
        temp = b; 
        b = c; 
        c = temp;
    }
    
    if (a>b)
    {
        temp = a; 
        a = b; 
        b = temp;
    
    return (b - a == c - b);
        
    }
    
}
"
cc77cf7675005a0bdbc9fe76c75879f1ad156087,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
2adbb39337217f673d1ee6e9632faef8d959ee31,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2)
    {
		return 0;
    }
	if(you >= 8 || date >= 8)
    {
		return 2;
    }
    else
    {
        return 1;
    }
}
"
4ad0f60639e9454db003a3bc272fd02f38aa8fe4,"public boolean bobThere(String str)
{
    int lengthS = str.length()-3;
    int i = 0;
    while (i<lengthS){
        if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b'){
            return true;}
    	else{
    		i++;}}
    return false;
}
"
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
"
6783adbfeca9050f151b9f07e4076cb16e499643,"public int luckySum(int a, int b, int c)
{
  boolean is13;
    int sum;
    if(a==13)
    {
        is13 = true;
    
    }
    else
    {sum = a;}

    if(!is13)
    {
    if(b==13)
    {
        is13 = true;
        
    }
        else
        {
        sum = sum+b;
        }
    }
	if(!is13)
    {
    if(c==13)
    {
    	is13 = false;
        
    }
    else
    {sum = sum+c;}
    }
	
    return sum;
}
"
c2b5233c69ac3f268687caee60f7f68deec9a002,"public String zipZap(String str)
{
    String original = str;
boolean found = false;
if(str.length() == 3) {
if(Character.toString(str.charAt(0)).equals(""z"") && (Character.toString(str.charAt(2)).equals(""p""))) {
return ""zp"";
}
} else if(str.length() < 3) {
return str;
}
 
for(int i = 0; i + 3 < str.length(); i++) {
if(Character.toString(str.charAt(i)).equals(""z"") && Character.toString(str.charAt(i + 2)).equals(""p"")) {
str = str.substring(0, i) + Character.toString(str.charAt(i)) + Character.toString(str.charAt(i + 2)) + str.substring(i + 3, str.length());
found = true;
} else {
}
}
 
if(Character.toString(str.charAt(str.length() - 3)).equals(""z"") && Character.toString(str.charAt(str.length() - 1)).equals(""p"")) {
return str = str.substring(0, str.length() - 3) + Character.toString(str.charAt(str.length() - 3)) + Character.toString(str.charAt(str.length() - 1));
}
 
if(found) {
return str;
} else {
return original;
}
}
"
b62f1274c56d44cf8761535a5c06a838683ec7c5,"public boolean sameEnds(int[] nums, int n)
{
    boolean a = false;
    for	(int i = 0; i < n; i++)
    {
        if (nums[i] == nums[nums.length - n + i])
        {
            a = true;
        }
        else
        {
            a = false;
        }
    }
    return a;
}
"
ebc73db4484982b1a7bb158f34c1cbd4b6c9550b,"public int[] frontPiece(int[] nums)
{
    int[] num = new int[2];
    for (int i = 1 i <=num.length; i++)
    {
        if (nums[i] >= 0)
        {
    	num[i] = nums[i];
        }
    }
    return num;
}
"
3213a4cba04c1562abae45ab0c2f1e267cb61c6f,"public boolean canBalance(int[] nums)
{
    
    for (int i = 0; i < nums.length; i++)
    {
        int leftsum = 0;
        for (int j = 0; j < i; j++)
        {
            leftsum += nums[j];
        }
        int rightsum = 0;
        for (int k = i; k < nums.length; k++)
        {
            rightsum += nums[k];
        }
        if (leftsum == rightsum)
        {
            return true;
        }
    }
    return false;
}
"
2b1f4005127caf6b13900c81745df6283c81f9d9,"public boolean sameEnds(int[] nums, int n)
{
    int start = 0;
	int end = nums.length-n;
	for(; n > 0; n--)
	{
		if(nums[start] != nums[end])
			return false;
		else
		{
			start++;
			end++;
		}
	}
	return true;
}
"
5538b2b9e28a8a8def81ab5cb515f4ab031c88e1,"public boolean xyBalance(String str)
{
    for (int i = str.length(); i >= 0; i--)
    {
        if (str.charAt(i) == 'y' && str.substring(0, i).contains('x'))
        {
           return true;
        }
        else
        {
            return false;
        }
    }
}
"
9222afd237f2a153dec01f15809e88ec81bac994,"public String plusOut(String str, String word)
{
    String trivialEnd = """";
    int n = 0;
    
    while (n <= str.length())
    {
       if (str.substring(n).startsWith(word))
       {
           trivialEnd += word;
           n += word;
           
       }
        else 
        {
            trivialEnd += '+';
            n++
        }   
    }   
    return trivialEnd;
}
"
26116a38ef6f851109b50d27388fcccbf320e147,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else
    {
        if (Math.abs(a + b) == 6 || Math.abs(a - b) == 6)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
876b9d8ad3f1941a1b4692d100d7b3fa8fb48e2d,"public int countEvens(int[] nums)
{
    int b = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[1] % 2 == 0) {
            b++;
        }
    }
    return b;
}
"
6f4b7f83e373a80fe447445ec3e338e8039047bb,"public int chance; 

public int dateFashion(int you, int date)
{
    if (you >= 8 || date >=8)
    {
        chance = 2; 
    }
    else if (you <= 2 || date <= 2)
    {
        chance = 0;
    }
    else 
    {
        chance = 1; 
    }
    return chance; 
}
"
402ba0a3e83223b368d5d64219823c768cf4db5a,"public boolean xyzThere(String str)
{
    int check = str.indexOf(""xyz"");
                              
    if (check == -1)
        
    else if (check != 0 && str.substring(check - 1, check).equals("".""))
    {
        return false;
    }
    
    else
    {
        return true;
    }
}
"
270174ce7d53738e854429dc81bc8b311180b333,"public int[] shiftLeft(int[] nums)
{
    return int[] nums;
}
"
b9ff4c9730bf74ea214a16fde0297bdecf76d2c2,"public boolean bobThere(String str)
{
    int len = str.length() - 2;
	for(int i = 0; i < len; i++)
	{
		if(str.charAt(i) == 'b' && str.charAt(i+2) == 'b')
			return true;
	}
	return false;
}
"
1202d346fcf0db46d6a29cff9b13366969ee2df1,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0,2));
    }
    else if (str.length() == 1)
    {
        return (str + ""@"");
    }
    else
    {
        return (""@@"");
    }
}
"
452c60542cef14e2249079c684b70dc5a893d9f2,"public String atFirst(String str)
{
    String x;
    if (str.length() == 0)
    {
        x = ""@@"";
    }
    else if (str.length() == 1)
    {
  		x = str + ""@"";
    }
    else
    {
     	x = str.substring(2);   
    }
    return x;
}
"
5f8010a6d8eb6d072a2b331866659337de7d8035,"public boolean cigarParty(int cigars, boolean isWeekend)
{
   if (isWeekend == false){
       return true;
   }else{
       if(cigars >= 40 && cigars <= 60){
           return true;
       }else{
           return false;
       }
   }
}
"
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
"
516326a63fbfd80d14dc613b6aedc1ecea168fe6,"public int blackjack(int a, int b)
{
    int diffA = 21 - a;
    int diffB = 21 - b;
    
    if (diffA < 0 && diffB < 0)
        return 0;
    
    if (a > b)
    {
        if (a > 0)
        {
            return a;
        }
        else if (b > 0)
        {
            return b;
        }
    }
    else if (b > a)
    {
        if ( b > 0)
        {
            return b;
        }
        else if (a > 0)
        {
            return a;
        }
    }
    return 0;
}"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
d6ecef2688242348be94ae9cf4d683dbfee353d2,"public int countClumps(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
        if (nums[i] = nums[i+1])
        {
            
            count += 1;
            
        }
        
    }
    
    
    return count;
    
    
}
"
05eb9bd47e96057e4809fcf58a814098c5c18c22,"public boolean has77(int[] nums)
{
    for (int r = 0; r < nums.length - 1; r++)
    {
        if (nums[r] == 7)
        {
            if (nums[r+1] == 7)
            {
                return true;
            }
            else if (nums[r+2] == 7 && r < nums.length - 2) 
            {
                return true;
            }
            else if (nums[r-2] == 7 && r < nums.length + 2)
            {
                return true;
            }
        }  
    }
    return false;
}
"
61ba3f1d1f2f2a5119ef0cecb7255f8ff795b847,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 10;
    else if ( a == b && b == c && a == c)
        return 5;
    else if (a != b && a != c)
        return 1;
    else 
        return 0;
}
"
35795d06af721fc1c2388b74434cf32ec65a3091,"public int redTicket(int a, int b, int c)
{
    int returnt;
    if ((a=2 && b=2) && c=2)
    {
     	returnt = 10;   
    }
    else if (a=b && b=c)
    {
     	returnt = 5;   
    }
    else if (a!=c && a!=c)
    {
     	returnt = 1;   
    }
    else
    {
     	returnt = 0;   
    }
    return returnt;
}
"
8294d5989bd72ab3256d9b0427b4cace8607d55c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars >= 40)
        {
            return ""true"";
        }
        else
        {
        	return ""false"";   
        }
    }
    else
    {
        if (cigars <=60 && cigars >=40)
        {
            return ""true"";
        }
        else
        {
            return ""false"";
        }
    }
}
"
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
"
4e634f82e9bd3348db1196eb18256971949d1e11,"public String getSandwich(String str)
{
    int pos1 = -1;
    int pos2 = -1;
    boolean asd = false;
    boolean jonatan = false;

    int t = str.length();

    for (int y = 0; y < t - 5; y++)
    {
        if (str.substring(y, y + 6) == ""bread"")
        {
            if (asd == false)
            {
              pos1 = y;
              asd = true;
            }
            else
            {
                pos2 = y;
            }
        }
    }
    
    if (pos1 >= 0 && pos2 >= 0)
    {
        return str.substring(pos1 + 5, pos2 + 6);

    }
    else
    {
        return """";
    }
}
"
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
"
d438b7d68b37722f5d57579e7078668cf60a8b2b,"public int blackjack(int a, int b)
{
    if (a < b && b <= 21)
    {
        return b;
    }
    else if (b < a && a <=21)
    {
        return a;
    }
    else 
    {
        return 0;
    }
}
"
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
"
762f08246c122eabc1b2c86550fef5a51f4c34a7,"public int round10(int num)
{
	int digit = num % 10;
	if(digit >= 5)
    {
		return num + (10 - digit);
    }
	return num - digit;
}
public int roundSum(int a, int b, int c)
{	
    return (round10(a) + round10(b) + round10(c));	
}"
d5a3b2c701fb720f595ee5233eee591e95c175d0,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars >= 40)
        {
            return.true;
        }
        else
        {
            return.false;
        }
    }
    else
    {
        if ((cigars >= 40) && (cigars <= 60))
        {
            return.true;
        }
        else
        {
            return.false;
        }
    }
}
"
082b30d3d5578b3b549a7a4499d5dd4ed6064a05,"public int blackjack(int a, int b)
{
  
    if (a>21 && b>21)
    {return 0;}
    
    else if ((a>b) && (a<=21))
    {return a;}
    
    else if ((a>b) && (a>21)
    {return b;)
                 
    else if ((b>a) && (b<=21))
    {return b;}
    
     else if ((b>a) && (b>21)
    {return a;)

    else
    {return 0;}
}

"
598a5264b541bf75e99d5cc777939060d8223d20,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    
    if (b.length() <= a.length()) {
        if (a.substring(a.length()-b.length()).equals(b)) {
            return true;
        }
    }
    else if (a.length() <= b.length()) {
        if (b.substring(b.length()-a.length()).equals(a)) {
            return true;
        }
    }
}
"
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
"
fdad1e89a4314f28156e89f26d2c10f5a4668133,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars >= 40)
        {
            return true;   
        }
    }
    
    else if (cigars >= 40 && cigars <= 60)
    {
    	return true;
    }
    
    else
    {
        return false;
    }
}
"
1fdba331b45cc23d489139304f6bbdd49b6957b4,"public String mixString(String a, String b)
{
    int lengthA = a.length();
    int lengthB = b.length();
    diff = abs(lengthA-lengthB());
    int length;
    if (lengthA>lengthB)
        length = lengthB;
    else
    {
        length = lengthA;
    }
    
    for (int i = 0; i<length ; i++)
    {
        mixString = mixString + a.charAt(i);
        mixString = mixString + b.charAt(i);
    }
    if(lengthA>lengthB)
    {
        mixString = mixString + a.substring(length+1);
    }
    else if (lengthB<lengthA)
    {
        mixString = mixString + b.substring(length+1);
    }
}
"
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
"
956854d85bbeb1f65f691ae4efd2a955dd93d0a9,"public String zipZap(String str)
{
    String re = """";
    int l = str.length();
    int lim = l - 3;
    int i = 0;
    while (i <= lim)
    {
        char o1 = str.charAt(i);
        int i3 = i + 2;
        char o3 = str.charAt(i3);
        if (o1 == 'z' && o3 == 'p')
        {
            re = re + ""zp"";
            i = i + 2;
        }
        else
        {
       		String s1 = Character.toString(o1);
        	re = re + s1;
        }
        i = i + 1;
    }
    return re;
}
"
0f838818781093168101b362c3ceaa5ac771a653,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 2;
}
"
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
"
03b430706cd22d89acd48006ba08c35aa592f760,"public int[] seriesUp(int n)
{
    	int[] arr = new int[n*(n+1)/2];
	int p = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++, p++)
			arr[p] = j;
	}
	return arr;
}
"
51442981a21875e3807aab2fd093ffe1b60c04b1,"public int countClumps(int[] nums)
{
    int count = 0;
    for(int i = 0; i < nums.length - 1; i++)
    {
    	if (nums[i]== nums[i + 1])
        {
         	count = count + 1; 	
        }
        int j = i;
        while (j < nums.length){
        if (nums[i] == nums[j])
        {
          	j = j + 1
        }else{
        	break;
        }
            i = i + j;
        }
    }
    return count;
}
"
4e250d40f6c8c4899a3eb79ea695e918be5d8a56,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
    	else if (nums[i] == 7 && nums[i + 2] == 7)
            return true;
    return false;
}
"
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
"
50d9d8753c2bd900766397e1b2f143e2836f77e1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int noTick = 0;
    int smallTick = 1;
    int bigTick = 2;
    if(speed()<=60)
    {
        return noTick;
    }else if(speed()>60 && speed()<80)
    {
        return smallTick;
    }else if(speed()>80)
    {
        return bigTick;
    }
        
}
"
9d3f1d1d63f7fe734f7d9dd5a6169dd4596f3b8a,"public int greenTicket(int a, int b, int c)
{
    int ticket = 0;
    if (a == b && a == c)
    {
    	ticket = 20;
    }
    
    else if (a == b || a == c || b == c)
    {
        ticket = 10;
    }
}
"
614d6ebd207bfaf3cbafa76c43a46e4460c088b2,"public int[] seriesUp(int n)
{
    int length = n * ((n + 1) / 2);
    int[] newArray = new int[length];
    int counter = 0;
    for (int i = 0; i < length - 1; i++)
    {
        if (i == 0)
        {
            newArray[i] = 1;
        }
        if (i != 0)
        {
            counter = i;
            for (int j = 1; j < i * ((i + 1) / 2); j++)
        	{
            	newArray[counter] = j;
                counter++;
        	}
        }
        i = i + counter;
    }
    return newArray;
}
"
54208c5fa5f95e6e835ac1d380211e1e0cef54b2,"public int sum13(int[] nums)
{
    int sum = 0;
    if(nums.length == 0)
    {
     	return sum;   
    }
    else
    {
      	for(int i; i < nums.length; i++)
        {
            if (nums[i] == 13)
            {
                i++;
            }
            else
            {
             	sum = sum + num[i];   
            }   
        }
        return sum;
    }
}
"
f76722b5985d16410a7cb9036263043d2f2ef0b7,"public boolean partySuccess;

public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend = true)
    {
        if (cigars >= 40)
        {
            partySuccess = true;
        }
        else if (cigars < 40)
        {
            partySuccess = false;
        }
    }
    else if (isWeekend = false)
    {
        if (cigars >= 40 && cigars <= 60) 
        {
            partySuccess = true;
        }
        else if (cigars < 40 || cigars > 60)
        {
            partySuccess = false;
        }
    }
    return partySuccess;
}
"
8e665c4f56224df458078659303e62e6641a7199,"public String alarmClock(int day, boolean vacation)
{
  
    String Time;
    if (day > 0 && day < 6 && !vacation)
    {
        Time = ""7:00"";
    }
    else if (day < 1 || day > 5 && !vacation)
    {
        Time = ""10:00"";
    }
    else if (day > 0 && day < 6 && vacation)
    {
        Time = ""10:00"";
    }
    else if (day < 1 || day > 5 && vacation)
    {
        Time = ""off"";
    }    
    return System.out.println(Time);
}
"
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
"
b548738b5bfb75d35c000b3dd8701cbe2937ee99,"public String zipZap(String str)
{
    char[] CharArray = str.toCharArray();
    char[] finalArray;
    for(char cha : CharArray){
    	if (cha == 'z'){
            if (CharArray.length > i + 2){
        		if (CharArray[i + 2] == 'p'){
                    
                }
            }
        }
        ;
    }
    int z = 0;
    int p = 0;
    String notFinal = """";
    String finalS = str;
    int lastFound = 0;
    for (int i = 0; i < str.length; i++){
        notFinal += str.charAt(i);
        if (str.charAt(i) == ""z""){
          	if (str.length() > i + 2){
            	if (str.charAt(i + 2) == ""p""){
                    i++;
                }
            }
        }
    }
    
    return notFinal;
}
"
bd6a0818d02de2faff72753b137582927a9653f1,"public int countClumps(int[] nums)
{
    boolean b = false;
    int a = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !b)
        {
            a++;
             b = true;
        }
        else if (nums[i] != nums[i + 1])
        {
            b = false;
        }
    }
    return a;
}
"
2acb8207f8a090601dae18801eb74f5f6ac882a1,"public String mixString(String a, String b)
{
    String m = """";
    int i = 0;
    while (i < a.length() && i < b.length())
    {
        m = m + a.charAt(i);
        m = m + b.charAt(i);
        i++
    }
    if (a.length() < b.length())
    {
        m = m + b.substring(i);
    }
    else
    {
        m = m + a.substring(i);
    }
    return m;
}
"
a3c118aebf6590aa7cd329a755877bc823694965,"public int greenTicket(int a, int b, int c)
{
    if (a = b = c)
        return 20;
    else if (a != b != c)
        return 0;
    else 
        return 10;
}
"
761faf27118f8d7637200b8140f5a550d392d440,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
     if ( (n >=13 && n < 15) || (n > 16 && n <= 19) )
     {
         return 0;
     }
    else
    {
        return n;
    }
}

"
682b17e5f5ebb2a4d9a340191949be19f5101ffd,"public int sum3(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        sum = sum + sums[i];
    }
    return sum;
}
"
580db77e6ed21b31f420fd10a2e9043f4cb620eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode == false)
    {
       if (n >= 1 && n <= 10)
       {
           return true;
       }
        else
        {
            return false;
        }
    }
    else
    {
       if (n <= 1 || n >= 10)
       {
          return true; 
       }
        else
        {
            return false;
        }
    }
}
"
5fa3c4743752018351514b6ecb502e6a38b99f42,"public String getSandwich(String str)
{
    String insides = """";
    CharSequence br = ""bread"";
    if (str.contains(b))
        { 
            int topPiece = str.indexOf(b) + 4;
         	String insides = str.subtring(topPiece);
            if (insides.contains(b))
                {
                    int bottomPiece = insides.lastIndexOf(b);
                   insides = insides.substring(bottomPiece);
                }
            else
                {
                    insides = """";
                }
        }
    return insides;                
}
"
4f020dcb2ebec419aa94d431533df15542e537ec,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
    return false;
}
"
dfec8af38d1aa62647f76b80d8aa2ced155dd146,"public int[] fizzArray(int n)
{
    int[] num;
    num = new int[n];
    for (int i = 0; i < n; i++)
    {
    	num[i] = i;
    }
       return num; 
}
"
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
"
073a7d2343287d5394087f2dc1c4208c84732023,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    Integer int2 = 0;
      if (speed <= 60){
        int2 = 0;
      }
      if (isBirthday == true){
       if (speed >=61 && speed <= 85){
        int2 = 1;
       }
       if (speed >= 86){
         int2 = 2;
       }
      }
      if (isBirthday = false){
        if (speed >=61 && speed <=80){
          int2 = 1;
        }
        if (speed >= 81){
          int2 = 2;
        }
      }
      return int2;
}
"
d17b512b8c55a05d9a81558d7a01f6052e8ac71d,"public int[] fizzArray(int n)
{
    int[] newArray = new int[n]
    for (int i = 0; i < n; i++)
        newArray[i] = i;
    return newArray;
}
"
38fdef6524e8545efed92b1e4f3140dafd721eea,"public int countCode(String str)
{
    int times = 0;
	int i = 0;
	int len = str.length()-3;
	while(i <  len)
	{
		if(str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i+3) == 'e')
		{
			times++;
			i += 4;
		}
		else
			i++;
	}
	return times;
	
}
"
cc9d92e58c77513c6aab917cfcc7c112c1577e90,"public String[] fizzBuzz(int start, int end)
{
    String[] array = new String[end - start];
    
    for (int i = start; i < end; i++) 
    {
        if (i % 15 == 0) 
        {
            array[i - start] = ""FizzBuzz"";
        } 
        else if (i % 3 == 0) 
        {
            array[i - start] = ""Fizz"";
        } 
        else if (i % 5 == 0) 
        {
            array[i - start] = ""Buzz"";
        } 
        else 
        {
            array[i - start] = String.valueOf(i);
        }
    }
                                                      
    return array;
}
"
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
"
b2865f204db726eb82c66b9c18003db4a8dee658,"public int makeChocolate(int small, int big, int goal)
{
int res = 0;
int i = 0;
if(goal>big*5+small) return -1;
while(res<=goal && i<big) {
res=res+5; i++;
}
if(res==goal) return 0;

if(res>goal) res=res-5;
if(goal-res>small) return -1;
return (goal-res);

}
"
6a9437a624869b7e9765bc2e18d0c2131bfd295d,"public String mixString(String a, String b)
{
    String res="""";
    int i;
    for(i=0;i<a.length() && i<b.length();i++)
     {
            res=res+a.charAt(i);
            res=res+b.charAt(i);

     }
    if(a.length()<b.length())
    {
            res=res+b.substring(i);
    }
    else res=res+a.substring(i);

    return res;
}
"
b0114cf5376b422979e26b916e9e4831b453f91d,"public String getSandwich(String str)
{
    int firstBread = -1;
    int lastBread = -1;
    for (int i = 0; i < str.length() - 5; i++)
    {
        if (str.substring(i, i+5).equals(""bread"")
        {
        }
    }
}
"
421eb1e52812e6dc8cbf84e6d95be7a6a9d38552,"public boolean love6(int a, int b)
{
    int sum = Math.abs(a + b);
    int difference = Math.abs(a - b);
    
    if (a == 6 && b == 6)
    {
        return true;
    }
    else if (sum == 6)
    {
        return true;
    }
    else if (difference == 6)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
826823e475ba0ed89f61985419770ea8e538e713,"public int sum13(int[] nums)
{
    int total = 0;
    if (nums.length == 0)
    {
        return 0;
    }
    else
    {
        for (int i = 0; i < nums.length - 1 ; i++)
        {
            if (nums[i] == 13)
            { 
                i++;
            }
            else if (nums[i + 1] == 13)
            { 
                i++;
            } 
            else
            {
            	total = total + nums[i];
            }
        }
        int i = nums.length;
        if ( nums[i - 1] != 13)
        {
            total = total + nums[i - 1];
        }
        if ( nums[i] == 13)
        {
            total = total + nums[i];
        }
       
        return total;
    }
}
                
  "
3f2bb9d11893f77db1758dfbad28e1877036870a,"public boolean evenlySpaced(int a, int b, int c)
{
    boolean k=true;
    int one = a-b;
    int two = b-c;
    if (abs(one)==abs(two))
    {
        k = true;
    }
    else
    {
        k = false;
    }
    return k;
}
"
5f6ff2faba9720dd4b2b611b38603a236bff690c,"public String plusOut(String str, String word)
{
    int wordPlace = str.indexOf(word);
    int wordLength = word.length();
    int i = 0;
    int h = 0;

    while (wordPlace != -1)
        str = str.replace(str.substring(i, wordPlace), ""+"");
    	i = wordPlace + wordLength;
  		wordPlace = str.indexOf(word, i);
    str = str.replace(str.substring(i, str.length(), ""+""));
    return string;
    	
}
"
63fb86a63ea265bd6f43c9db776464c7f4558c8b,"public boolean xyBalance(String str)
{
    //look for an x from 0 to length
    //then look for a y
    //if see a y after x this good
    //if see an x after y this bad
    for (int lookX = 0; lookX < str.length(); lookX++)
        char x = str.charAt(lookX);
    	for (int lookY = str.indexOf(x); lookY < str.length(); 			lookY++)
            char y = str.charAt(lookY);
    		if (str.indexOf(y) > x)
                return true;
    		else if (x < str.indexOf(y))
                return false;
    return false;
}
"
0f137545f7dfbea3afe9694dbbc19a3b29c8aac6,"public int redTicket(int a, int b, int c)
{
    if ((a = 2) && (a = b = c))
        {
            return 10;
        }
    else if (a = b = c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
5de06fff2465ce32ddc6ccbbacdc262c69d95ee4,"public String something;

public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        something = str.substring(5, -5); 
    }
    else
    {
        something = """"; 
    }
    return something; 
}
"
f4397125e1414a5e4418c6c38c9bfca85bafd13c,"public int dateFashion(int you, int date)
{
    int chances = 0;
    if ((you >= 8 && date > 2) || (date >= 8 && you > 2))
    {
    	chances = 2;
        return chances;
    }
    else if (you <= 2 || date <= 2)
    {
        return chances;
    }
    else
    {
        chances = 1;
        return chances;
    }
    
}
"
92e96089344e9e0ed22514c1297920394e0f87d6,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length < nums.length - 1)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
"
7ecb8f23e51826a21801acd3721f3ce9e44a8a8e,"public int countCode(String str)
{
    int count = 0;
    int len = str.length();
    for (int i = 0; i < len-3; i++)
    {
        char c = str.charAt(i);
        char o = str.charAt(i+1);
        char e = str.charAt(i+3);
        if (c=='c' && o=='o' && e=='e')
            count++;
    }
    return count;
}
"
7b3e33c8a587354cbd6f5bf4652a46733e3e45bb,"public boolean cigarParty(int cigars, boolean isWeekend)
{
       return true;
  if ( isWeekend == true && cigars >= 40 )
   return true;
  else
   return false;
}
"
b1cd225c96f83cf234170ea444a1959fbfd4bcde,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    if (b == 13)
        return a;
    if (c == 13)
        return (a + b);
    return (a + b + c);
}
"
ab6e01ad587cf8cc30f23754b8c8c9d3566dc7a4,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0;
    }
    if (b > 21)
    {
        return 0;
    }
    if (a > 21 && b > 21)
    {
        return 0;
    }

}
"
4ab93bf88b80fa76f8c7c6f5499d40a451e7e897,"public boolean great; 

public boolean love6(int a, int b)
{
    Math.abs(a, b);
}
"
10af8ae87e8d5fab568a4bc61c1cbcdf1cf7e4e3,"public boolean xyBalance(String str)
{
    boolean y = false;
    for(int i = 0; i < str.length() - 1; i++)
        {
       		if(str.charAt(i) == 'y')
            {
                y = true;
            }
        	if(str.charAt(i) == 'x' && !y)
            {
                return false;
            }
   		}
    return true;
}
"
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
"
768b85db9c6893b83f95e434ee24412de76ffdc2,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars >= 40)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        if (cigars >= 40 && cigars <= 60)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
            
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
28fa55b9521727c1d6984be94a51479b17a2ad86,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }else  (str.length() == 0){
	return ""@@"";
    }
        }
"
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
"
15ac0c8ec0ebc268a7ea4f936dec8c1718f90086,"public boolean twoTwo(int[] nums)
{
    boolean tutu = true;
    if (nums.length > 1)
    {
        for (int i = 0; i < nums.length; i++)
        {
            if (i == 0)
            {
                if (nums[i] == 2)
                {
                    if (nums[i+1] == 2)
                    {
                        tutu = true;
                    }
                    else
                    {
                        tutu = false;
                        break;
                    }
                }
            }
            if (i == nums.length -1)
            {
                if (nums[i] == 2)
                {
                    if (nums[i-1] == 2)
                    {
                        tutu = true;
                    }
                    else 
                    {
                        tutu = false;
                        break;
                    }
                }
            }
            else if (nums[i] == 2)
            {
                if (nums[i+1] == 2 || nums[i-1] == 2)
                {
                    tutu = true;
                }
                else 
                {
                    tutu = false;
                    break;
                }
            }
        }
    }
    return tutu;
}
"
0d972f4624410222e470cccde75bc5576aa2b6e7,"public int[] shiftLeft(int[] nums)
{
    int temp = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i == nums.length - 1)
        {
            nums[i] = temp;
        }
        else
        {
            nums[i] = nums[i+1];
        }
    }
    return nums;
}"
1ced7b3ab5f86bf014b0aab47983b280fea0faf5,"public int[] frontPiece(int[] nums)
{
    returnNumber = new int[2]
    for (int i = 0; i < nums.length && i < 2; i++)
    {
        returnNumber[i] = nums[i]
    }
	return returnNumber;
}
"
932e6fdd5c6307dc116c8a908d92c1df69c33d4b,"public boolean has77(int[] nums)
{
    if (nums.length > 2)
    {
        for (int x = 2; x <= nums.length; x++)
        {
        	if (x < nums.length - 1 && nums[x] == 7 && nums[x + 1] == 7)
       		 {
            	return true;
      		  }
       		 else if (x < nums.length - 1 && nums[x] == 7 && nums[x + 1] == 7)
        	{
           		 return true;
        	}
      	  	else
      	  {
          	  return false;
            }
}
    }
"
bc82b6bc1ef9b579cf340e95b45761687462c102,"public String mixString(String a, String b)
{
    //trivial return
    String trivialEnd = """";
    int whereStop = 0;
    
    //check which is bigger
    if (a.length() <= b.length())
        whereStop = a.length();
    if (b.length() <= a.length())
		whereStop = b.length();
    
    //now do a loop
    for (int n = 0; n < whereStop; n++)
    {
        trivialEnd += a.substring(n, n + 1) + b.substring(n, n + 1);
    }
    
    if (a.length() < b.length())
        trivialEnd += b.substring(n, b.length);
    if (b.length() < a.length())
        trivialEnd += a.substring(n, a.length);
    
    return trivialEnd;
}
"
916550f47166791c6cb50bf722b961eee5db830b,"public int sortaSum(int a, int b)
{
    if (a+b<=19 && a+b>=10)
    {
        return 20
    }
    else
    {
        return a+b
    }
}
"
24b2eeb64118d3706060830f964bf59c2160b15e,"public boolean twoTwo(int[] nums)
{
    
    if(nums.length == 1 && nums[0] == 2)
        return false;
          
    if(nums.length >= 2 && ((nums[0] == 2 && nums[1] != 2) ||
        (nums[nums.length-1] == 2 && nums[nums.length-2] != 2)))
        return false;
                            
    for(int i = 1; i <= nums.length - 2; i++) {
        if(nums[i] == 2 && nums[i-1] != 2 && nums[i+1] != 2)
            return false;
    }
                                            
    return true;
}
"
98b9da9cd6b1d5d31833f2df73886f3bf1393496,"public int greenTicket(int a, int b, int c)
{
 
    
    
    
    return 0;
}
"
f0c481a9e07c60bea12e78a5079713f14b24c2a9,"public int blackjack(int a, int b)
{
    if(b > 21 && a < 21)
        return a;
    if(a>21 && b < 21)
        return b;
    if(a > b)
        return a;
    if (b > a)
        return a;
    return 0;
}
"
4451f56f297e641c3925f657e88b73a66a82c8d0,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++){
        if (nums[i] % 10 == 0 && i != nums.length - 1){
            int storage = nums[i];
            i++;
            while (nums[i] % 10 != 0 && i != nums.length - 1){
                nums[i] = storage;
                i++;
            }
        }
    }
    return nums;
}
"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
0497fd0d2fb5562f27c0ddd76b7e1490be1b2ac2,"public int[] shiftLeft(int[] nums)
{
    if(nums.length >= 2)
	{
		int temp = nums[0];
		for(int i = 0; i < nums.length - 1; i++)
			nums[i] = nums[i+1];
		nums[nums.length-1] = temp;
	}
	return nums;
    
}
"
d7fcb78462a8ac7a372a582689e7c81822a02e35,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    int i = a.length();
    int j = b.length();
    if (i > j)
    {
    	if (a.substring(i - j, i).equals(b))
    	{
    		return true;
    	}
    else if (b.substring(j - i, j).equals(a))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
e4f0771688e337afedbb72d66dd65a3be3c6f654,"public int[] zeroMax(int[] nums)
{
    int x;
	for(int j = 0; i < nums.length - 1; j++)
		{
		if(nums[j] == 0)
		{
		x = 0;
        }
		for(int k = i + 1; k < nums.length; k++)
		{
			if(nums[k] > max && nums[k] % 2 == 1)
            {
                x = nums[k];
            }
		}
		if(x != 0)
        {
			nums[i] = x;
        }
	}

	return nums;
}
"
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
"
85cbe2c06a73ffdafedc861b3e6c4c96bb6edcd6,"public String repeatEnd(String str, int n)
{
    StringBuilder stbuild = new StringBuilder(n*n);
    String last = str.substring(str.length()-n);
    for(int i = 0; i < n; i++)
        stbuild.append(last);
    return stbuild.toString();
}
"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
96c52da89237068f3f7409274a77bf90f7fd9911,"public boolean canBalance(int[] nums)
{
	int left = 0;
	int right;
	for(int i = 0; i < nums.length - 1; i++)
		left += nums[i];
	right = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(left == right)
			return true;
		left -= nums[i];
		right += nums[i];
	}
	return (left == right);
}"
b17bfa439e0727d5a7ff13ca3877a15c95641f51,"public String zipZap(String str)
{
   	int len = str.length();
    String hol = """";
    while (len>3)
    {
    	if (str.charAt(0)=='z' && str.charAt(2)=='p')
        {
        	hol+=""zp"";
            str = str.substring(3);
           len = str.length();
        }
        else
        {
            hol+=str.charAt(0);
            str = str.substring(1);
            len = str.length();
        }
    }
    if (str.charAt(0)=='z' && str.charAt(2)=='p')
        {
        	hol+=""zp"";
            str = str.substring(2, len);
           len = str.length();
        }
    while (len>2)
    {        hol+=str.charAt(0);
            str = str.substring(1);
            len = str.length();
       
    }
    return hol;
}
"
4548a86e9e0b486f8382301a49784df71380ec7b,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
     if (day==0 || day==6)
         return off;
     else
         return 10:00;
    }
    if( day==0 || day==6)
        return 10:00;
    else 
        return 7:00;
}
"
22c01d075ca013fa7bc6cd92261260c430d6365c,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * ((n+1) / 2)];
    int count = 0;
    int array = 0;
    for (int i = 0; i < nums.length; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            nums[count] = j;
            count++;
        }
    }
    return nums;
}
"
4def83e11a3fb850c536403e1b464cc4ce17d58b,"public boolean partySuccess;

public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend = true)
    {
        if (cigars >= 40)
        {
            partySuccess = true;
        }
        else if (cigars < 40)
        {
            partySuccess = false;
        }
    }
    else if (isWeekend = false)
    {
        if (cigars >= 40 || cigars <= 60) 
        {
            partySuccess = true;
        }
        else if (cigars < 40 || cigars > 60)
        {
            partySuccess = false;
        }
    }
    return partySuccess;
}
"
e957beec4da5778c6505b96d867a8afcfe117492,"public boolean canBalance(int[] nums)
{
    boolean x = false;
    int sum1 = 0;
    int sum2 = 0;
    int y = 0;
    for (int i = 0; i < nums.length; i++)
    {
		for (int j = 0; j < nums.length; j++)
        {
            y = i;
            sum1 += nums[y];
            sum2 += nums[j];
            y++;
        }
        sum2 -= sum1;
        if (sum1 == sum2)
        {
			x = true;
            break;
        }
    }
    return x;
}
"
e76de48353127bcc0d16ddccefab07783bed9050,"public int countEvens(int[] nums)
{
    int even = 0;
    for (int i = 0; i < nums.length; i++)
    {
       if (nums[i] % 2 == 0)
       {
           even = even + 1;
       }
    }
    return even;
}
"
cf1aaa53350b07642069ec537a4b37e93bf3531b,"public int redTicket(int a, int b, int c)
{
    if (a==2 && b==2 && c==2)
    {
        return 10;
    }
    else if (a==b && b==c)
    {
        return 5;
    }
    else if (a!=b && b!=c && c!=a)
    {
        return 1;
    }
    else 
    {
        return 0;
    }
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
d2c34eafb2200c0ed9275335d7feeedd7b9bd1fb,"public int[] fizzArray(int n)
{
    int[] nums = new [n];
    for (int i = 0; i < nums.length; i++)
    {
        nums[i] = i
    }
    return nums;
}
"
0ebd451bd7f1ba5eaaee7cc787359dde169abbc2,"public String getSandwich(String str)
{
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
        return str.substring(first + 5, last);
                                                                    
    return """";
}
"
ddf72d05c79f94c2ef44cb246204431012e3fefc,"public int sortaSum(int a, int b)
{
    int sum = 0;
    if ((a = b) >= 10 && (a + b) <= 19)
    {
        sum = 20;
    }
    else
    {
        sum = (a + b);
    }
}
"
580384a19906db0b652aa0ac4867db127e99210b,"public boolean canBalance(int[] nums)
{
    int size = nums.length;
    int sum1 = 0;
    int sum2 = 0;
    int k = size - 1;
    int i = 0;
    john:
    for (; k > k - i; k--)
    {	
        sum2 = nums[k];    
    }
    for (; i < size - k; i++)
    {
            sum1 += nums[i];
        if (i == size - k - 1)
        {
        if (sum1 == sum2)
		return true;
    i++;
    k--;
    sum1 = 0;
    sum2 = 0;
    if (k!=0)
    continue john;
        }
    }
    
    return false;

    
}
"
54e8d733e91a15a740f7a7e802894add4c55a348,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
        {
			count++;
        }
		else
		{
			if(count == 1)
            {
				return false;
            }
			else
            {
				count = 0;
            }
		}
	}
	return (count != 1);
}
"
f90f4209c0769229c85ac2c0392970d7920341e4,"public String alarmClock(int day, boolean vacation)
{
        alarmClock(0, true) -> ""off"";
        alarmClock(6, true) -> ""off""   
        alarmClock(1, true) -> ""10:00""
        alarmClock(2, true) -> ""10:00""
        alarmClock(3, true) -> ""10:00""
        alarmClock(4, true) -> ""10:00""
        alarmClock(5, true) -> ""10:00"" 
}
"
6df3f1ff5250f0f39b8d1b58c19a4591fdd52e9c,"public int redTicket(int a, int b, int c)
{
    int result = 10;
    int value = 0;
    int spec = 2;
    if(a==spec && b==spec && c==spec)
    {
        result = 10;
    }
    else if ( a==b && b==c)
    {
        result = 5;
    }
    else if (b!=a && c!=a)
    {
     	result = 1;   
    }
    else
    {
    	result = 0;    
    }
    return result;
}
"
fb2a3a1cf791c99f1fe761f394a51f3e950c0c25,"public boolean in1To10(int n, boolean outsideMode)
{
    if (n > 1 || n < 10)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
d4d6a2538d266301cdabb00ea7c14391fa68a539,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    String number = ""num"";
    String part = number.substring(1);
}
"
fdac0665736ab611abaf6c688164201b2c355e49,"public String alarmClock(int day, boolean vacation)
{
    if (alarmClock = 0, false)) {
    	return ""10:00"";   
    }
}
"
6478ed8fa3fa0e98704c104e1a9329e15767dccc,"public int centeredAverage(int[] nums)
{
    int smallest = nums[0];
    int largest = nums[0];
    int sum = 0;
    int number = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] < smallest)
        {
            smallest = nums[i];
        }
        else if (nums[i] > largest)
        {
            largest = nums[i];
        }
        else
        {
            sum = sum + nums[i];
            number++;
        }
    }
    int mean = sum / number;
    return mean;
}
"
1acb688924031c93a3edbbe70e09cda090e559f4,"public int[] shiftLeft(int[] nums)
{
    int[] answer = new int[nums.length];
  	if (nums.length == 0)
    {
    	return answer;
    }
  
  	for (int i = 0; i < nums.length-1; i++) 
    {
    	if (i > 0)
      	answer[i] = nums[i+1];
  	}
  	if (nums.length > 1)
    {
    answer[0] = nums[1];
    }
  	answer[nums.length-1] = nums[0];
  	return answer;
}
"
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
"
8635bc10a4ebba33bd0ea176f3fd6662228c3f94,"public boolean sameEnds(int[] nums, int n)
{
    boolean same = false;
    int[] n1 = new int[n];
    int[] n2 = new int[n];
    for (int i = 0; i < n; i++)
    {
        n1[i] = nums[i];
        n2[i] = nums[nums.length - n + i];
    }
    
    if (n1 == n2)
    {
        same = true;
    }
    return same;
}
"
d2da95b9302a25ad2e0a431dbe3492df793745c3,"public int loneSum(int a, int b, int c)
{
    if(a == b)
	{
    	if(a == c)
    	  return 0;
    	return c;
  	}
  	if(a == c)
    	return b; 
  	if(b == c)
    	return a;
  return (a + b + c);
}
"
63ed22e83d92b8a5cf3bcddbaf43ac672cf77b46,"public String plusOut(String str, String word)
{
    String res = """";
    for (int i = 0; i < str.length() - word.length(); i++)
        if (str.substring(i, i + 4).equals(word))
        {
            res = res + word;
            i = i + 4;
        }
        else
        {
            res = res + ""+"";
        }
    return res;
}
"
49e7b4bf2fb1b0b48c85aab71916659d19122522,"public boolean xyBalance(String str)
{
    int length = str.length() - 1;
	char s;
	for (int i = length; i >= 0; i--)
	{
		s = str.charAt(i);
		if (s == 'x')
        {
			return false;
        }
		else if (s == 'y')
        {
			return true;
        }
	}
    
	return true;
}
"
727d541babe278c063e729dab201403c18c6f003,"public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        str == ""bread"" - str - ""bread"";
    }
    else
    {
        return """";
    }
}
"
e1b0736faf96bd2a25e21db515ea12578509a542,"public int[] withoutTen(int[] nums)
{
    int tenCount = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            tenCount += 1;
        }
    }
    int[] val = new int[nums.length - tenCount];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            val[count] = nums[i];
        }
    }
    return val;
}
"
988884b587c19ee5d329f79283724a6642239e83,"public int makeChocolate(int small, int big, int goal)
{
    int bigKilos = big * 5;
    int smalls = goal - bigKilos;
    if (smalls <= 0)
    {
        return -1;
    }
    else
    {
        return smalls;
    }
}
"
14e91f4aa35c964d2b8d3820c513408811b4dbf8,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMorning)
        if (isMom)
            return true;
    	else
            return false;
    else
        return true;
   
    
}
"
8e924aa372e4dac8558b210cf602b7a6378d1654,"public int sum67(int[] nums)
{
    int sums = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 6)
        {
        sums += nums[i];
        }
        if (nums[i] == 6)
        {
            while (nums[i] != 7 && i != nums.length)
            {
            	i++;
            }
            
        }
        
    }
    return sums;
}
"
7be17a54f06cdd7a3651845559feb5ddc35c6680,"public String repeatEnd(String str, int n)
{
    for (x=0; x<n; x++)
    {
        str=str + str.substring(n);
    }
    return str;
}
"
826319d4e6d68f94366b22a2620e883581a20769,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if ( cigars >= 40 && cigars <= 60 )
    {
        if (isWeekend) {
            return true;
        }
        return false;
    }
    return true;
}
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
b7ed9795b24b0de159c3507acbea9f3b6f4a2af4,"public int loneSum(int a, int b, int c)
{
    if(a == b)
	{
    	if(a == c)
    	  return 0;
    	return c;
  	}
  	if(a == c)
    	return b; 
  	if(b == c)
    	return a;
	return (a + b + c);
}
"
085c90128653ad2d02262a5079a336364fa0a7cb,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || b==c || a == c)
        return 10;
    else 
        return 0;
}
"
baf543cbc1e7e25ff5ebe55cb3c8e468fadf714e,"public String[] fizzBuzz(int start, int end)
{
    String finalStr = """";
    for (int i = start; i < end; i++)
    {
    	if (i % 3 == 0 && i % 5 == 0)
        {
        	finalStr = finalStr + ""FizzBuzz"";
        }
        else if (i % 3 == 0)
        {
        	finalStr = finalStr + ""Fizz"";
        }
        else if (i % 5 == 0)
        {
        	finalStr = finalStr + ""Buzz"";
        }
        else
        {
        	finalStr = finalStr + String.valueOf(i);
        }
    }
    return finalStr;
}
"
39d34b9a36bb6a5112fdfb785b56d439f1674085,"public boolean twoTwo(int[] nums)
{
    return true;
    
}
"
6019a2d927f175c86e134452ff3a3b0ec8aaa33b,"public int[] frontPiece(int[] nums)
{
    if (nums.length >= 2)
    {
        int[] newnums = new int[2];
        newnums.add(nums[0]);
        newnums.add(nums[1]);
        return newnums;
    }
    else
    {
        return nums;
    }
}
"
c11e3fb9e0bdfcb1a86c8d84b89b7bf7d0f84db5,"public String repeatEnd(String str, int n)
{
     String res=str.substring(str.length()-n);
    for(int i=1;i<n;i++)
            res=res+str.substring(str.length()-n);
    return res;
}
"
8486d888511b0c88a6cdd719c0976a881dec165a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday) {
        if(speed <= 65) {
            return 0;
        } else if(66 <= speed && speed <= 85) {
            return 1;
        } else if(86 <=  speed) {
            return 2;
        }
    }
                                        
    if(speed <= 60) {
        return 0;
    } else if(61 <= speed && speed <= 80) {
        return 1;
    } else {
        return 2;
    }
}
"
67e32e60ccf94c9e237b1ee60eec88d54337ee46,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (( n > 12 && n < 15) ||( n > 16 && n < 20 )) {
     return 0;
   }
   return n;
}
"
e4698e4cb15d0dd05657d0657c1cc55ad8badc8a,"public int loneSum(int a, int b, int c)
{
    if (a =! b && a != c)
    {
     	return a + b + c;   
    }
    return 0;
}
"
aeea9b4ea94fbc9137717d2a67b2098da09f6042,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    return str + ""@"";
    else if (str.length() == 0)
	return ""@@"";
        }
"
a9de57cddcff00d38117b88993b5eb66bef3e8eb,"public String zipZap(String str)
{
    char z;
    char p;
    int length = str.length();
    String string = str.toLowerCase();
    for (int i = 0; i < length-2; i++)
    {
        z = str.charAt(i);
        p = str.charAt(i+2);
    	if (z == 'z' && p == 'p')
        {
            string = (string.substring(0, i+1) + string.substring(i+2, length));
            length = length-1;
            i = i - 1;
        }
     }
    
     return string;
 }
"
0c472f05e792f9faa897d48e61dc3be1f370d3e3,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for(int i = 0; i< nums.length; i++)
    {
        if(i+1 < nums.length)
        {
            if(nums[i] == nums[i+1])
            {
                clumps++;
            }
        }
    }
    return clumps;
}
"
9984b660b28e3fbd321819df44495585a2b2ab99,"public int[] fizzArray(int n)
{
    int[] fizz = new int[n];
    for (int i = 0; i < fizz.length; i++)
    {
    	fizz[i] = i;
    }
    return fizz;
}
"
80f0ba90bf7223bc09bfd9eb5e80da5daa5ae98e,"public String getSandwich(String str)
{
    if(str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        return str.substring(4, -4);
    }
    else
    {
        return """";
    }
}
"
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
8f1d36303e673e7852a6dd3551ef0395e6c037bd,"public int dateFashion(int you, int date)
{
    if(you >= 8 || date >= 8 )
        if (you <=2 || date <= 2)
            return 0;
    	else
            return 2;
    else if (you <= 2 || date <= 2)
        return 0;
    else
        return 1;
        
}
"
c06a06aa2660a57ba3696b8230c96b365cf598d6,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean answer = true;
    if (isAsleep == false)
    {
     	answer = false;   
    }
    else if (isMom == true)
    {
        answer = true;
    }
    else if (isMorning == true)
    {
     	answer = false;   
    }
    else
    {
     	answer = true;   
    }
    return answer;
}
"
27d92c814ecd587e7e0f54fce86fe8723e8a3974,"public int redTicket(int a, int b, int c)
{
    if (a && b && c == 2)
        return 10;
}
"
18dd5bb4805595a7124a7aab8b9b5481072f505d,"public int[] frontPiece(int[] nums)
{
    int[] frontPiece = new int[2];
    if (nums.length == 1)
        frontPiece[0] = nums[0];
        return frontPiece;
}
"
80d4fdb58dd945c336361b133b10344b7fd59310,"public int[] seriesUp(int num)
{
    	int[] array = new int[num*(num+1)/2];
	int pee = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++, p++)
			array[pee] = j;
	}
	return array;
}
"
d48b5a5aff992a5d450efd4776e30a3ab4efddf5,"public boolean twoTwo(int[] nums)
{
    boolean x = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (i == nums.length - 1)
        {
            if (nums[i - 1] == 2)
        	{
                if (nums[i] == 2)
                {
                    x = true;
                    i++;
                }
                else
                {
                    x = false;
                }
        }
        else
        {
            if (nums[i] == 2)
        	{
                if (nums[i + 1] == 2)
                {
                    x = true;
                    i += 2;
                }
                else
                {
                    x = false;
                }
        	}
        }
    }
    return x;
}
"
f4e62782b22d53bddce570e40d30b978a38c8403,"public String zipZap(String str)
{
   	int len = str.length();
    String hol = """";
    while (len>3)
    {
    	if (str.charAt(0)=='z' && str.charAt(2)=='p')
        {
        	hol+=""zp"";
            str = str.substring(3);
           len = str.length();
        }
        else
        {
            hol+=str.charAt(0);
            str = str.substring(1);
            len = str.length();
        }
    }
    if (str.charAt(0)=='z' && str.charAt(2)=='p')
        {
        	hol+=""zp"";
            str = str.substring(2, len);
           len = str.length();
        }
    while (len>0)
    {        hol+=str.charAt(0);
            str = str.substring(1);
            len = str.length();
       
    }
    
    
    return hol;
}
"
cbb4dbf8b2c6fd266ae7456cfd65cfbeeea908a1,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for(int i = 1; i < nums.length; i++)
	{
		sum = sum + nums[i];
		if(nums[i] > max)
			max = nums[i];
		else if(nums[i] < min)
			min = nums[i];
	}
	return (sum-max-min) / (nums.length - 2);
}
"
adb8c085731bc2a17ac6ce341714aa9188108f08,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (!isSummer)
    {
        if (temp >= 60 && temp <= 90)
    	{
        	return true;
    	}
        else
        {
            return false;
        }
    }
    else
    {
        
        if (temp >= 60 && temp <= 100)
    	{
        	return true;
    	}
        else
        {
            return false;
        }
    }
}
"
0cecfb01fbe27f29bd99b59b030edfdabc4b74d6,"public int[] frontPiece(int[] nums)
{
    int size = nums.length;
    int fir;
    if (size < 2)
    {
        return nums;
    }
    fir = new int[2];    
       
        return nums;
    
}
"
234bed2a8c2da954b08e42344b0b4efc87afd776,"public int makeChocolate(int small, int big, int goal)
{
    int bigNum = goal/5;
    int smallNum = goal - (bigNum*5);
    if ((bigNum <= big) && (smallNum <= small))
    {
		return smallNum;
    }
    else if ((bigNum > big) && (smallNum <= small))
    {
        return smallNum;
    }
    else
    {
        return -1;
    }
}
"
03ae950e7440ff1b5b100af214ca4754168a2ff2,"public int makeChocolate(int small, int big, int goal)
{
    if ( goal <= 5 * big)
    {
       int remainder = goal - 5*big;
    }
    else
    {
        remainder = goal % 5;
    }
    if (remainder<= small)
    {
        return remainder;
    }
    else 
    {
        return -1;
    }
    
    
}
"
24d41846e68c470e0e67946c03929db137164bf2,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int ticket = 0;
    if (isBirthday)
    {
        if (66 <= speed && speed <= 85)
        {
            ticket = 1;
        }
        else if (85 < speed)
        {
            ticket = 2;
        }
        
    }
    else 
    {
        if (61 <= speed && speed <= 80)
        {
            ticket = 1;
        }
        else if (80 < speed)
        {
            ticket = 2;
        }
    }
    return ticket;
}
"
5be7a4f49c7fdbe83c0f40a2b2a7052a5c0d7d30,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    int aL = a.length();
    int bL = b.length();
    if(aL < bL)
    {
        return ((b.substring(aL-bL, bL) == a));
    }
    else
    {
        return ((a.substring(bL-aL, aL) == b));
    }
    
}
"
313c360571f552f1fa464f0c9330952338b0b96e,"public boolean great; 
public int a; 
public int b; 
public int d;
public int e; 
public int f; 

public boolean love6(int a, int b)
{
    a + b = d; 
    a - b = e; 
    b - a = f; 
    if (a == 6 || b == 6)
    {
        great = true;
    }
    else if (d = 6 || e = 6 || f = 6)
    {
        great = true; 
    }
    else 
    {
        great = false;
    }
    return great; 
}
"
d678aa172556ba03bb22143d47dfcf83c5ca786d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        if ( temp >= 60 && temp <= 100)
            return true;

    }
    else
    {
        if ( temp >= 60 && temp <= 90)
            return true;
        else
            return false;
    }
}
"
6025c37be185efba11707785d88981dfd67416a3,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
       return true;
    if(a+b == 6 || Math.abs(a-b) == 6)
       return true ;
    else
       return false;
}
"
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
e0e79f8c4addcecfdf50b6915fe0efe89ec10dda,"public String atFirst(String str)
{
    length = str.length();
    
}
"
c4fa96f9af07e09df6d1f3cc7c42be1e2029eb72,"public boolean sameEnds(int[] nums, int n)
{
        for(int i = 0; i < n; i++) {
        if(nums[i] != nums[nums.length - n + i])
            return false;
    }
                
    return true;
}
"
f0a32c1b47b76d9f007d19bd3be850aaf7ab1a79,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        if (n <= 1 || n == 10)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        if (n >= 1 || n <= 10)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
03ac2ebd6d03730b5943537c13ecfb834d72da68,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    int lengthA = a.length();
    int lengthB = b.length();
    if (a.equals(b[-lengthB + 1]) || b.equals(a[-lengthA+1]))
    {
        return true
    }
    else
    {
        return false
    }
}
"
3fb6cff1fea40eba1f7157a24749d5d33e3fc5a8,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed < 65)
        {
            return 0;
        }
        else if (speed <= 85 && speed > 61)
        {
            return 1;
        }
        else if (speed > 86)
        {
            return 2;
        }
    }
    
    if (!isBirthday)
    {
        if (speed < 60)
        {
            return 0;
        }
        else if (speed > 61 && speed <= 81)
        {
            return 1;
        }
        else if (speed > 81)
        {
            return 2;
        }
    }
    return int;
}
"
0f7eb7c6740ccd257c3f6da081cc3f753e5a2516,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int clumpSize = this.sizeClump(nums, nums[i], i);
                i = i + clumpSize;
                counter++;
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int nextNum = 0;
    while (nums[start] == initValue)
    {
        nextNum++;
    }
    return nextNum;
}"
aadbe433f0e52401d27729f7f35b91f228aca270,"public int[] seriesUp(int n)
{
    int length = 0;
    for (int i = 1; i <= n; i++)
    {
        length = length + i;
    }
    int[] nums = new int[length];
    int num = 1;
    for (int i = 0; i < length; i++)
    {
        for (int j = 0; j < i; j++)
        {
            
            nums[i+j] = num;
            num++;
        }
    }
    return nums;
}
"
cf6036cc34155af32690c2a41cc6f1def095e657,"public int countClumps(int[] nums)
{
    boolean areSame = false;
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh && !areSame)
        {
            clumps++;
            areSame = true;
        }
        else if (compareLow != compareHigh)
        {
            areSame = false;
        }
    }
    return clumps;
}
"
76d327977c3b6df3e9ab9612b5ea8123306e3035,"public int sum13(int[] nums)
{
    int total = 0;
    if (nums != null) {
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 13) {
                if (nums[i] != 0 && nums[i-1] != 13) {
                	total = total + nums[i];
                }
            }
        }
        return total;
    }
    return 0;
}
"
ebbaedbb4dbe5579fc11d6ac8c4cfca767e897be,"public int[] tenRun(int[] nums)
{
    int [] newnums = new int[nums.length];
 
    int temp = nums[0];
    for (int i = 0; i < nums.length; i++)
    {
    	
        if(nums[i] % 10 == 0)
        {
        	temp = nums[i];             
        }
        else
        {
        	newnums[i] = temp;
        }
        
    }
return newnums;
}
"
59023cde67fa3a52102577f5ea77d395dae29af8,"public boolean endOther(String a, String b)
{
    int i = a.length();
    int j = b.length();
    if ( j <= i)
    {
        return a.substring(i - j).equalsIgnoreCase(b); 
    }
    else if ( j >= i)
    {
        return b.substring(j-i).equalsIgnoreCase(a);
    }
    else
    {
       return false;
    }   
}
"
cf8a7efdb1444209c4a6eca8679ebb40b7590e2f,"public String atFirst(String str)
{
    String part = str.substring(0,3);
    	if (str.substring(2,3)==null)
            return str+@;
    else 
        return str.substring(0,3)
    
}
"
fd5de8c5b537d303a4be24a5042fbffcf8a20d66,"public boolean xyBalance(String str)
{
    //String last = str.substring(str.length()); //the last char
    int counter1 = 0;
    int counter2 = 0;
    char y = 'y';
    char x = 'x';
    String a = Character.toString(y);
    String b = Character.toString(x);
    
   	if (str.length() >= 2)
    {
        for (int i = 0; i < str.length() - 1; i ++) //go through every
        {
            String current = str.substring(i, i+1);
            int later = str.lastIndexOf(x); //2
            for (int j = later; j < str.length(); j ++) //
            {
                String current2 = str.substring(j, j+1);
                if (current2.equals(a))
                {
                    counter2 ++;
                }
            }
            if (current.equals(b))
            {
                counter1 ++;
            }
        }
        if (counter2 >= counter1)
        {
            return true;
        }
        else if (counter1 == 0 && counter2 == 0)
        {
            return true;
        }
        return false;
    }
    else
    {
        if (str.equals(a)||str.equals(""""))
        {
            return true;
        }
        return false;
    }
}
    "
b89935cd76575e88ea3d850c3c4d704f4a06bb09,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b==13)
    {
        return a;
    }
    else if (c==13)
    {
        return a+b;
    }
    else
    {
        return a+b+c;
    }
}
"
498b7904c5e81d77091df9085d788520cec5ee9e,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    String aBString = """";
    if (aLength == 0)
    {
        return b;
    }
    else if (bLength == 0)
    {
        return a;
    }
    else if (aLength < bLength)
    {
        for (int x = 0; x < aLength; x++)
        {
            String bSecondPart = b.substring(aLength, bLength);
            aBString = aBString + a.substring(x, x + 1) + b.substring(x, x + 1);
        }
        return aBString + bSecondPart
    }
    else if (bLength < aLength)
        for (int y = 0; y < bLength; y++)
    	{
        	String aSecondPart = a.substring(bLength, aLength);
        	aBString = aBString + a.substring(y, y + 1) + b.substring(y, y + 1);
    	}
    return aBString + aSecondPart;
    else
    {
        for (int y = 0; y < bLength; y++)
    	{
        	String bPart = b.substring(y, y + 1);
        	aBString = aBString + a.substring(y, y + 1) + bPart;
    	}
    return aBString;
    }
}
"
a5ea50948f128c48f79acd2dfa83b81c8790a095,"public int sum67(int[] nums)
{
	int sum = 0;
	boolean six = false;
	for(int i = 0; i < nums.length; i++)
	{
		if(six)
		{
			if(nums[i] == 7)
				six = false;
		}
		else if(nums[i] == 6)
			six = true;
		else
			sum += nums[i];
	}
	return sum;
}
"
ade2dbbc49943f165a79147390a342f4ebb33538,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        if (temp >= 60 && temp <= 100)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        if (temp >= 60 && temp <= 90)
        {
			return true;
        }
        else 
        {
            return false;
        }
    }
}"
12b12a5ed26b8dc1acc1aa3537be908c4b74221d,"public int sum67(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        if (nums[i] != 6)
        {
            sum += nums[i];
        }
        else 
        {
			if (nums[i] != 7)
            {
                i++
            }
        }
    }
    return sum;
}
"
56564fcd3a089f2e2f8dc872a710a4cf2ca9e4ce,"public String atFirst(String str)
{
    return str.substring(0, 1);
    if (str.substring(0, 1) = null)
    {
        return @;
    }
}
"
8fe29de8fdd98e9db0ab05876e6ea32324dbb58b,"public int[] zeroMax(int[] nums)
{
    for (int i=0; i<nums.length-1; i++)
    {
        if (nums[i]==0)
        {
            int max = 0;
            for (int j = nums.length-1; j>i; j--)
            {
                if (nums[j] > max && nums[j]%2 == 1)
                {
                    max = nums[j];
                }
            }
            nums[i] = max;
        }
    }
    return nums;
}"
6ecddb9c912e2d5f56c005bd019276cc36e7e894,"public int[] fizzArray(int n)
{
    public static int[] fizzArray(int n) {
        int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}
}
"
b81b01c8aec26a6863571448919d307aea3555a5,"public boolean in1To10(int n, boolean outsideMode)
{
    if (!outsideMode)
    {
        if ( int n > 0 && int n<11)
           return  true;
     
    }
   if (outsideMode)
   { if ( int n <= 1 && int >9)
        return true;
    	else 
            return false;
   }
}
"
6689dc8f3aa44f5e121891390204fa87db6a4b0f,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars >= 40)
        {
            return true;
        }
        else
        {
            return false;
        
    }
    else
    {
        if (cigars >= 40 && cigars <= 60)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
af9c67992e3e6b872280364a3b925196386ee46f,"public int makeChocolate(int small, int big, int goal)
{
    int i = goal/5;
	if(i <= big)
		goal -= i*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
"
09ef55b983ce1aa4ba6d9bf2dc14bc1c988b8d7c,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int count = 0;
    int tot = 0;
 
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] > max) {
            max = nums[i];
            count = count + nums[i];
        }
        if (nums[i] < min) {
            min = nums[i];
            count = count + nums[i];
        }
        count = count + nums[i];
    }
    return (count - (max + min)) / (tot - 2);
}
"
3e772fa73d541eb6da1bd951c23b09af725c1856,"public String getSandwich(String str)
{
    String middle = """";
    int i = 0;
    while(!str.substring(i, i+5).equals(""bread""))
    {i++;}
    i = i+5;
    while(!str.substring(i, i+5).equals(""bread""))
    {middle = middle + str.substring(i);
    	i++;}
    
    return middle;
}
"
c1007c7614a3895a1adbd3701bad32c1a67ae1e7,"public boolean isEverywhere(int[] nums, int val)
{
    int counts = 0;
    for(int i = 0; i < nums.length; i++)
    {
		if(nums[i] == val)
        {
        counts++;
        }
    }
    
    if(counts => 2)
    {
    return true;
    }
    else
    {
    return false;
    }
}
"
66d5322a106da36ba78eceb585eaf4a3caf88df8,"public String[] fizzBuzz(int start, int end)
{
    String[] ans = new String[(end - start)];
    for (int i = start; i < end; i++)
    {
        if (i%15==0)
        {
            ans = {ans, ""FizzBuzz""};
        }
        else if (i%5==0)
        {
            ans.add(""Buzz"");
        }
        else if (i%3==0)
        {
            ans.add(""Fizz"");
        }
        else
        {
            ans.add(String.valueOf(start));
        }
    }
    return ans;
}
"
1c7ff2d8cd63dbad5238843301a36a6ac5d465de,"public int[] tenRun(int[] nums)
{
    int num = 0;
	for (int i = 0; i < nums.length; i++)
    {
        int newNum = nums[i];
        if (i % 10 == 0)
        {
            num = nums[i];
        }
        nums[i] = num;
    }
	return nums;
}
"
04fc4021576eaece15c0484d4f837b6ea46138e0,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] == 5 && i == 0 || 
            nums[i] == 5 && nums[i - 1] != 4) {
            int positionOf5 = i; 
        }
        for (int k = 0; k < nums.length;k++) {
            if (nums[k] == 4 && nums[k+1) != 5) {
                int hold = num[k];
                nums[k + 1] = 5;
                nums[positionOf5] = hold; 
                break; 
            }
        }
    }
    return nums; 
}
"
26f4acef564892787f093e2830e4542185f9b514,"public String atFirst(String str)
{
    
    if (str.length() < 2)
    {
    	String part = str.substring(""@"" + 0);
    }
    else
    {
		String part = str.substring(0, 2);
    }
    return part;
}
"
50e38ea828c8b0ad18791c7c955b37bad6c9d4bc,"public boolean xyzThere(String str)
{
    int a = str.indexOf(""xyz"");
    int b = str.lastIndexOf(""xyz"");
    return ( a != -1 || b != -1);
}
"
fbdcb5a3354f9e18bc937f7ceef992ba59a604d9,"public boolean xyzThere(String str)
{
    int x = 0;
    if (str.charAt(x) != '.' && str.substring (x, x+3).equals (""xyz""))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
562238409aedc8cce6a285005e0b98a6d172cf03,"public int sum67(int[] nums)
{
    int sum = 0;
    int input = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (i == 6)
        {
            for (i = i + 1; i < nums.length && i != 7; i++)
            {
                input = nums[i];
            }
        }
        else{
            sum += input;
        }
    }
    
    return sum;
}
"
9cc2c42507d801b5f8e1c84de08d64ef59eb5672,"public boolean endOther(String a, String b)
{
    String x = ""a"" + ""b"";
    return x;
    
}
"
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
"
3e347e4c11dab302f5c4f15ea76aca9b2818e745,"public String mixString(String a, String b)
{
    String mix="""";
    int i=0;
    
    for(; i< a.length() && i<b.length();i++)
    {
        char cha=a.charAt(i);
    char chb=b.charAt(i);
        mix= mix+cha+chb;
    }
    /**if (!a.substring(i).equals(a.length()) || !b.substring(i).
        equals(b.length()))
    {
        mix=mix+a.substring(i+1)+b.substring(i+1);
    }
    */
    for (; i< a.length(); i++){
        mix+=cha;
    }
    for (; i< b.length(); i++){
        mix+=chb;
    }
    return mix;
    
}
"
86513626a5ee3bda8eed9f77e2ed2da13fecb59c,"public int[] fix45(int[] nums)
{
    int[] fives = new int[50];
    int j = 0;
    int numFours = -1;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] = 5)
        {
            fives[j] = i;
            j++;
        }
        if (nums[i] == 4)
        {
            int temp = nums[i+1];
            numFours++;
            nums[i + 1] = 5;
            nums[fives[numFours]] = temp;   
        }
    }
    return nums;
}
"
17fb3d96bae81477d1052073246e5ba648d591da,"public int[] tenRun(int[] nums)
{
    //int current10 = 0; 
    
    for(int i = 0 ; i < nums.length ; i ++)   
    {
        int current10; 
        if(nums[i]%10 == 0)
        {
         	current10 = nums[i];    
        }
        nums[i]= current10; ; 
    }
    return nums; 
}
"
3c334b8074f721d7e8ddc8d941e3a71ebb6ac66b,"public String alarmClock(int day, boolean vacation)
{
    if (!vacation)
    	if (day > 0 && day < 6)
        	return ""10:00"";
    	if (day == 0 || day == 6)
        	return ""7:00"";
    
    else if (vacation)
        if (day > 0 && day < 6)
        	return ""off"";
    	if (day == 0 || day == 6)
        	return ""10:00"";
    return ""off"";
}
"
8d07cac1ca254680517d7f66f58a59f8a2bef2a5,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    else
    {
    int[] start = new int[n];
    int[] end = new int[n];
    
    for (int i = 0; i < n; i++)
    {
        start[i] = nums[i];
    }
    for (int i = (nums.length - n); i < nums.length; i++)
    {
        end[i] = nums[i];
    }
    
    if (start == end)
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}"
ec1f4cb51fafae9fdb8dbfc2b21df105a21e3fb5,"public int centeredAverage(int[] nums)
{
    int ave=0;
    int max = nums[0];
    int min=nums[0];
    for(int i =0;i< nums.length; i++)
    {
        sum+=nums[i];
        if (max<nums[i])
        {
            max=nums[i];
        }
        if(min>nums[i])
        {
            min=nums[i];
        }
    }
    ave=(sum-max-min)/(nums.length-2);
    
}
"
4b2279c7f2df81b47f1732ff5f0e7e99253326af,"public boolean evenlySpaced(int a, int b, int c)
{
    boolean k=true;
    int one = a-b;
    int two = b-c;
    if (Math.abs(one)==Math.abs(two))
    {
        k = true;
    }
    else
    {
        k = false;
    }
    return k;
}
"
aa0740785e496d40aaa16a2e8c816f3c603a1962,"public boolean endOther(String a, String b)
{
    int lengthA = a.length();
    int lengthB = b.length();
    if (lengthA - lengthB <= 0)
    {
        return false;
    }
    else
    {
        String endOfB = b.substring(lengthB - lengthA);
    	String endOfA = a.substring(lengthA - lengthB);
    }
    if (endOfB.toLowerCase() == a.toLowerCase())
    {
        return true;
    }
    else 
    {
        return false;
    }
    if (endOfA.toLowerCase() == b.toLowerCase())
    {
        return true;
    }
    else 
    {
        return false;
    }
}
"
b792f65710603537369d8658da16396d60eece84,"public String atFirst(String str)
{
    int len = str.length();
    
    if (len >= 2)
    {
        return str.substring(0,2);
    }
}
"
203f9c47a0738c4f7deb3aa08f1ac17b6d91cac6,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    int index = 0;
    
    for (int i : nums)
    {
        if (i != 10)
        {
            array[index] = i;
            index++;
        }
    }
    
   return array;
}
"
61507d1731f1978056a90c5d7cd0758944df033c,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
        if (str.charAt(i) == ""b"" && str.charAt(i + 2) == ""b"")
            return true;
    return false;
}
"
cdc404479946118fd95418c88f1d9ed0acf21084,"public boolean canBalance(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
        sum += nums[i];
    int sumSoFar = 0;
    for (int j = 0; j < nums.length; j++)
        sumSoFar += nums[j];
        System.out.println(sumSoFar);
        if (sum == 2 * sumSoFar)
            return true;
    return false;
}
"
d71798b6a800974106fc7836f0485fb2a01202c0,"public boolean great; 

public boolean love6(int a, int b)
{    
    if (a == 6 || b == 6)
    {
        great = true;
    }
    else if ((a + b) == 6 || (a - b) == 6 || (b - a) == 6)
    {
        great = true; 
    }
    else 
    {
        great = false;
    }
    return great; 
}
"
532a012b0ec202d27262b383dc13089aef7e1e3b,"public int dateFashion(int you, int date)
{
   if ((you >= 2 && date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 && date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
3f619ffc776c80de533b40c890906a8bf6d8cc55,"public boolean twoTwo(int[] nums)
{
    boolean two = true;
      
    
    return two;
}
"
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
"
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
"
c23c04aa8834e4a5e312f0a0b91a7a3d5d032d46,"public int dateFashion(int you, int date);
int fashionScore = 0;
{
    if (you>=8||date>=8)
    {
        fashionScore = 2;
    }
    else if (you<=2||date<=2)
    {
        fashionScore = 0;
    }
    else
    {
        fashionScore = 1;
    }
return fashionScore;
}
"
c76c4dc8e81f29242933b44f51834fc4ee3dd2c8,"public int[] frontPiece(int[] nums)
{
    int a = nums[nums.length - 1];
    int b = nums[nums.length - 2];
    Int newArray = new int[2];
    newArray = {a, b};
    return newArray;
}
"
668b321bacc6da673fbfd4dcf462b28bfc39f2da,"public String plusOut(String str, String word)
{
    String output = """";
    for (int i = 0; i < str.length(); i++)
    {
        if (str.substring(i, i + word.length()).equals(word))
        {
            i += word.length();
        }
        else {
            output += ""+"";
        }
    }
    return output;
}
"
949c52176880b79145468b310515b5453756a739,"public int sum67(int[] nums)
{
    int total = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            while (nums[i] != 7)
            {
            	i++;
            }
        }
        else
        {
            total = total + nums[i];
        }
    }
    return total;
}"
88716cfb20761133c2cbfe8b9dce6f710cfa82ce,"public boolean has77(int[] nums)
{
    for(int i = 1; i <= nums.length - 1; i++)
  {
  	if(nums[i-1] == 7)
  	{
			if(nums[i] == 7)
				return true;
			else if(i-1 < nums.length - 2 && nums[i+1] == 7)
				return true;
		}
	}
	return false;
}
"
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
"
2ab613317018e535c7c370e1bf3fb0d86c7a9f9b,"public int[] tenRun(int[] nums)
{
    int[] result = new int[nums.length];
    int input;
    int value = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (input % 10 == 0 && input > value)
        {
            value = input;
        }
        
        if (value == -1)
        {
            result[i] = input;
        }
        else
        {
            result[i] = value;
        }
    }
    
    return result;
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
59ddcc8d2c64ff9c515cffec668bc32d2d983a48,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == false) {
    	if (day != 0 || day != 6) {
        	return(""7:00"");
        }
        else {
        	return(""10:00"");
        }
    }
    else {
    	if (day != 0 || day != 6) {
        	return(""10:00"");
        }
        else {
        	return(""off"");
        } 
    }
}
"
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
"
d832642cded155ba61945ed277e663a0de8cb32c,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 || day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
"
9953e83b89c1666b1317957bc256c0a746818fe9,"public int[] tenRun(int[] nums)
{
    int[] ten = new int[nums.length];
    int ponr = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (ponr != 0)
        {
            ten[i] = ponr;
        }
        else
        {
            ten[i] = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            ponr = nums[i];
            ten[i] = ponr
        }
        
    }
    return ten;
}
"
a3a4b5b3c1d7950b471b273ad506c45a12c12305,"public int sum13(int[] nums)
{
    int sum = 0;
    if (nums.length == 0)
        return 0;
    else
        for (int i = 0; i <= nums.length;i++)
            if (i == 0 && nums[0] != 13)
                sum = sum + nums[0];
    		else if (i == 0)
                sum = sum;
            else if (nums[i] != 13 && nums[i-1] != 13)
            	sum = sum + nums[0];
    return sum;
    
}
"
196436f6a31b3c5fa13fcebfee2d326193bfb3b0,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
          
    if(a == b && b == c)
        return 5;
                    
    if(a != b && a != c)
        return 1;
                            
    return 0;
}
"
0a981e4d5656917703eeb416a1a0e490b9d2cba4,"public boolean twoTwo(int[] nums)
{
    if (nums.length == 1 && nums[0] == 2)
    {
        return false;
    }
    if (nums.length >= 2 && ((nums[0] == 2 && nums[1] != 2) ||
        (nums[nums.length-1] == 2 && nums[nums.length-2] != 2)))
    {
        return false;  
    }
    for (int i = 1; i <= nums.length - 2; i++)
    {
        if (nums[i] == 2 && nums[i-1] != 2 && nums[i+1] != 2)
        {
            return false;
        }
    }                                    
    return true;
}"
28c0ac9c383d8ae027f527b7e93d5a020b8b9b0b,"public int greenTicket(int a, int b, int c)
{
    if (a = 1, b = 2, c = 3)
    {
        return 0;    
    }
    else if (a = 2, b = 2, c = 2)
    {
        return 20;
    }
    
    else if (a = 1, b = 1, c = 2)
    {
        return 10;
    }
}
"
750a01d1398e3f0e348cf1732de0c369e00846fa,"public int sum13(int[] nums)
{
    int sum = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 13)
			i++;
		else
			sum += nums[i];
	}
	return sum;
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
4ea979156941eaf9d66c231543a37dbdc6875a46,"public String[] fizzBuzz(int start, int end)
{
    String[] newStrs = new String[end-start];
    for (int i = 0; i < end-start; i++)
    {
        Integer j = start+i;
        String toAdd = """";
        if (j%3 == 3)
        {
            toAdd = toAdd + ""Fizz"";
        }
        if (j%5 == 5)
        {
            toAdd = toAdd + ""Buzz"";
        }
        if (j%3 != 0 && j%5 != 0)
        {
            toAdd = toAdd + j.toString();
        }
        newStr[i] = toAdd;  
    }
    return newStrs;  
}
"
e0a3b576003e6d39a6fde37cf55f4550466a0253,"public int[] withoutTen(int[] nums)
{
    int sum = 0;
    for (int i = 0;i<nums.length;i++)
    {
        if (nums[i] == 10)
        {
            nums[i] = 0;
        }
    }
    return sum;
}
"
aeaab3636acef730d062a80b5100fc5d95929fd9,"public int[] fizzArray(int n) {
    int[] arr = new int[n];
    
    for(int i = 0; i < n; i++)
        arr[i] = i;
              
    return arr;
}"
7cc25c5e68fc64393ee2be8eb056fef122f267c6,"public int sum3(int[] nums)
{
    return int(0) + int(1) + int(2);
}
"
9a5832bfed15bdad7772d535eb8ac20de5ee9a60,"public boolean sameEnds(int[] nums, int n)
{
    boolean answer = true;
    for (int i = 0; i < n; i++)
    {
        if (!(nums[i] == nums[nums.length - n + 1]))
        {
            answer = false;
        }
    }
    return answe;
}
"
16a70efa85ac7b742d2424754c7b926f788f9c90,"public int centeredAverage(int[] nums)
{
    int l = nums.length;
    int high = nums[0];
    int low = nums[0];
    int sum = 0;
    for (int i = 0; i < l; i++)
    {
        if (nums[i] > high)
        {
            high = nums[i];
        }
        else if (nums[i]<low)
        {
            low = nums[i];
        }
        sum += nums[i];
    }
    return sum-high-low;
}
"
27a2b08707d6daa725f0b65e11af610e8f0a331e,"public int centeredAverage(int[] nums)
{
	int max = nums[0];
    int min = nums[0];
    int sum = 0;
 
    for (int i = 0; i < nums.length; i++) {
        sum += nums[i];
        if (nums[i] > max) max = nums[i];
        if (nums[i] < min) min = nums[i];
    }
    return (sum - (max + min)) / (nums.length - 2);   
}
"
574e51568ca8f44665f63c45fb63fb0a69d4afbf,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for(int i = 1; i < nums.length; i++)
	{
		sum  += nums[i];
		if(nums[i] > max)
			max = nums[i];
		else if(nums[i] < min)
			min = nums[i];
	}
	return (sum-max-min) / (nums.length - 2);
}
"
a948da201cf11383e7dab2feefb0b0cf420b915a,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if(i+1<nums.length){
        	if (nums[i] == 2)
        	{
                if(nums[i+1]!=2)
                {
         		return false;
                }
                i++;
        	}
        }
    }
    return true;
}
"
34f7e39c5e42b7a27f9beece06cffd027a086c75,"public int[] fix45(int[] nums)
{
    int j = 0;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i+1] != 5)
		{
			for(; !(nums[j] == 5 && (j == 0 || j > 0 && nums[j-1] != 4)); j++);
			nums[j] = nums[i+1];
			nums[i+1] = 5;
		}
	}
	return nums;
}
"
64c9c798d11f3975a652bf61b6f831c5781ce335,"public int[] fizzArray(int n)
{
    int[] a = new int[n];
    
    for (int i = 0; i < n; i++)
    {
     	a[i] = i;   
    }
    return a;
}
"
5c3a62090b765775c278d4dfb6da49efb62348be,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums.length == 1)
    		{
       		    return false;
   		    }
            if (i == 0)
            {
                if (nums[i + 1] != 2)
                {
                    return false;
                }
            }
            else if (i == nums.length - 1)
            {
                if (nums[i - 1] != 2)
                {
                    return false;
                }
            }
            else
            {
                if (nums[i-1] != 2 && nums[i+1] != 2)
                {
                    return false;     
                }
            }
        }
    }
    return true;
}
"
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
"
39a5c7dde3f4d13c135f2f4107e25015059ed9cc,"public boolean canBalance(int[] nums)
{
	return true;
}
"
938364be9b3120fc19015bf729c5b2862bcb8629,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        if (temp >= 60 && temp <= 100)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        if (temp >= 60 && temp <= 90)
       {
            return true;
       }
       else
       {
           return false;
       }
}
"
af66fca8c597a9ffbe33bf0f8d288679c5719018,"public String[] fizzBuzz(int start, int end)
{
    
int n = end - start;
03
    String[] result = new String[n];
04
  
05
    int pos = 0;
06
    for (int i = start; i < end; i++) {
07
        boolean fizz = i % 3 == 0;
08
        boolean buzz = i % 5 == 0;
09
  
10
        if (fizz && buzz) result[pos] = ""FizzBuzz"";
11
        else if (fizz) result[pos] = ""Fizz"";
12
        else if (buzz) result[pos] = ""Buzz"";
13
        else result[pos] = String.valueOf(i);
14
        pos++;
15
    }
16
    return result;
                                               
    return arr;
"
5a00919d938e7350f9d887a0f3c496f766fa3b49,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
"
1d1ee14392f593dc4de53f7fc03850b89f323c6d,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
        if (nums[i] % 2 == 0) 
        {
            count++;
        }
    return count;
}
"
610dbd70704f6fe7a7fa838ba5850c555c6ec37d,"public String withouEnd2(String str) 
{
        if (str.length() <= 2) 
            return """";
        return str.substring(1, str.length() - 1);
}
"
bb819a051a15f625b5912634652b195b464f7095,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length + 1 < nums.length - 2)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
"
38b1c90d85416063b305f0a11582c7d10c17941b,"public String zipZap(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        String sub = str.substring(i, i + 2);
        if (sub.startsWith(""z"") && sub.endsWith(""p""))
        {
            sub = str.substring(0, i) + str.substring(i + 2);
        }
    }
    return sub;
}
"
e7f410145d08aa7c66e385cd4495eaa092c1b566,"public int[] tenRun(int[] nums)
{
    int mode = -1;
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] & 10 == 0)
        {
        	mode = nums[i];
        }
        else if (mode != -1)
        {
        	nums[i] = mode;
        }
    }
    return nums;
}
"
acedd5396db4e1639a14bda86a78c6919feb7af0,"public String[] fizzBuzz(int start, int end)
{
    String[] temp = new String[end - start];
    for (int i = 0; i < temp.length; i++)
    {
        if (i % 3 == 0 && i % 5 == 0)
            temp[i] = ""FizzBuzz"";
        else if (i % 3 == 0)
            temp[i] = ""Fizz"";
        else if (i % 5 == 0)
            temp[i] = ""Buzz"";
        else
            temp[i] = String.valueOf(i);
    }
    return temp;
}
"
0d9b890e1b0449dcedd4eb11bd64782806f46154,"boolean beforeX = false;
boolean isSatisfied = false;

public boolean xyBalance(String str)
{

    for (int i = 0; i < str.length(); i++)
    { 
        if (str.substring(i, i + 1).equals(""x""))
        {
         	beforeX = true;   
        }
                
        if (str.substring(i, i + 1).equals(""y"") && beforeX &&
           !str.substring(i + 1).equals(""x""))
        {
            isSatisfied = true;
        }
        
        else if (!str.substring(i).equals(""x""))
            isSatisfied = true;
    }
    
    return isSatisfied;
}
"
f74370df770c68d480de879f35840bd8b9ec817b,"public String zipZap(String str)
{
  int nana = str.length();
   int jaja = nana - 2;
   int zero = 0;
    int hanji = str.length() + 2;
   int i = 0;
   char ha;
   StringBuilder bana = new StringBuilder(nana);
   while(i < nana)
   {
       ha = str.charAt(i);
       if(ha == 'z' && i < jaja && str.charAt(i+2) == 'p')
       {
           bana.append(""zp"");
           i += 3;
       }
       else
       {
           bana.append(ha);
           i++;
       }
   }
   return bana.toString();
    return nun;
}
"
494e23a57d0a4d372f89ff2fdc9ea455758a5876,"public int blackjack(int a, int b)
{
    int ans;
    if (a >= b && a < 22) {
        ans = a;
    }
    else if (b > a && b < 22) {
        ans = b;
    }
    else if (b > a && a < 22) {
        ans = a;
    }
    else if (a > b && b < 22) {
        ans = b;
    }
    else {
        ans = 0;
    }
    return ans;
}
"
1c4328710947fab151f7a56fd6f276ff65cd08a1,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    
    if (temp > 59 && temp < 91 && !isSummer) {
     	play = true;   
    }
    
    else if (temp > 59 && temp < 101 && isSummer) {
     	play = true;   
    }
    
    return play;
}
"
49c3fe42791682d66a90f553422c9d4f389e55d4,"public boolean has77(int[] nums)
{
    for (int x = 0; x < nums.length; x++)
    {
        if ((nums[x] == 7 && nums[x+1] == 7) || (nums[x] == 7 && nums[x + 2] == 7))
        {
            return true;
        }
    }
    return false;
}
"
5bab85c02e3b29df3e2b85db51064dff7271eab6,"public boolean in1To10(int n, boolean outsideMode)
{
    if (n > 0 && n < 11);
        return true;
    if (outsideMode)
        if (n < 1)
            return true;
    	else if ( n > 10)
            return true; 
    return false;
}
"
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
"
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
"
5c715bf4981e650031e289e8034aa0032ff99f9a,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
"
73f5812129581e308755fc1f0718e0316e0cb337,"public int sum3(int[] nums)
{
    return (num[0] + num[1] + num[2]);
}
"
70e8fe1e1559c1588960e28f03cfb0569868a17f,"public boolean evenlySpaced(int a, int b, int c)
{
    if ((Math.abs(a - b) == Math.abs(b - c)) || (Math.abs(a - c) == Math.abs(b -a)))
    {
        return true;
    }
    else
    {
        return false;
    }
        
}
"
e8edcbf3a4a3a1ac7c703fb9488bf9b7128c73df,"public int centeredAverage(int[] nums)
{
    int lowest = nums[0];
    int highest = nums[0];
    int sum = 0;
    int average = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] < lowest)
        {
            lowest = nums[i];
        }
        if (nums[i] > highest)
        {
            highest = nums[i];
        }
        sum = sum + nums[i];
    }
    sum = sum - highest - lowest;
    average = sum / (nums.length - 2);
    return average;
}
"
c5240e5248fa7617368735b6e27ea2e834004c48,"public boolean has77(int[] nums)
{
  for(int i = 0; i < nums.length - 1; i++)
  {
  	if(nums[i] == 7)
  	{
			if(nums[i+1] == 7)
				return true;
			else if(i < nums.length - 2 && nums[i+2] == 7)
				return true;
		}
	}
	return false;
}
"
c4351dde1ed74e01b4fe9a203f4cc6c558cded96,"public boolean xyBalance(String str)
{
    int lastY = str.lastIndexOf ('y');
    int lastX = str.lastIndexOf ('x');
    int length = str.length();
    
    if (length == 0)
    {
        return true;
    }
    else if (str.endsWith(""y""))
    {
        return true;
    }
    else if (lastX != length + 1)
    {
        if (lastX + 1 == lastY)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else if (str.endsWith(""x""))
    {
        return false;
    }
    else
    {
        return true;
    }

}
"
9dbcf812b33367cb2dd9b427e49a6a9f99d7a948,"public int makeChocolate(int small, int big, int goal)
{
    int numBig = (goal / 5);
    int numSmall = 0;
    if (numBig >= big)
    {
    	goal = goal - (big * 5);
        numSmall = goal;
        if(numSmall > small)
        {
        	return -1;
        }
    	else
        {
        	return numSmall;
        }
    	
    }
    else
    {
    	numSmall = (goal % 5);
        return numSmall;
    }
}
"
b9047f91e8cd6250faf8d0c8e3185d99744b9edf,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (n % 10 < 5)
        return n - (n%10);
    else
        return n + (10 - (n%10));
}
"
ce8faf0b0976ddb82152e029b4e00668a05ed30f,"public String without2(String str) 
{
    int l = str.length();
    if (l <= 1)
    {
        return str;
    }
    else if (l == 2)
    {
        return """";
    }
    else
    {
        if (str.substring(0, 2) == str.substring(l - 2, l))
        {
            return str.substring(0, 2) + "" == "" + str.substring(l - 2, l);
        }
        else
        {
            return str.substring(0, 2 + "" != "" + str.substring(l - 2, l);
        }
    }
}
"
b14ead6afcaace4951116e147e03b7cf26ad8182,"public boolean xyzThere(String str)
{    
    boolean xyz = false;
    
    if (str.length() == 3)
    {
        if (str.equals(""xyz""))
        {
            xyz = true;
        }
    }
    else if (str.length() > 3)
    {
        for (int i = str.length() - 3; i >= 0; i--)
        {
            if (str.substring(i, i+3).equals(""xyz""))
            {
				if (i != 0)
                {
                    if (str.charAt(i-1).equals('.'))
                    {
                         xyz = false;
                    }
                    else
                    {
                         xyz = true;
                    }
                }
                else
                {
					xyz = true;
                }
        }            
    }
    else // when string length is < 3
    {
        xyz = false;
    }
    
    return xyz;
}
"
73e1384f77c699743bcb1c6f466a7412c597107f,"public int[] fizzArray(int n) {
    int[] arr = new int[n];
    
    for(int i = 0; i < n; i++)
        arr[i] = i;
              
    return arr;
}
"
1a8680cd065c51ad938bf3fdbf24f40af8fe3e8b,"public int roundSum(int a, int b, int c)
{
    a = round10(a);
    b = round10(b);
    c = round10(c);
    int sum = a + b + c;
    return sum;
}

public int round10(int num)
{
    int ending = num % 10;
    if (ending >= 5) {
        num = num + 10 - ending;
    }
    else {
        num = num - ending;
    }
    return num;
}
"
2fd8705c01f471e7be2fdba95a2a7e926c73bacc,"public String without2(String str) 
{
    String y = str;
    int x = str.length();
    int z = x - 2;
    if (x >= 2)
    {
        if (str.substring(0, 2) == str.substring(z))
        {
            y = str.substring(2);
        }
    }
    return y;
}
"
50e94825d3f222bee3dd68a4f644cfe9b935d844,"public int countCode(String str)
{
    int numberofcode = 0;
    
        for (int x = 0; x < str.length() -3; x++)
        { 
            if (str.charAt(x) == 'c' && str.charAt(x+1) == 'o'  && str.charAt(x+2) == 'e')
   numberofcode++;
        }
           
                return numberofcode;;
           
    
                
    
}
"
63d8e0dd5846f90e57f4d07c079a5f2f9fd8af3f,"public int noTeenSum(int a, int b, int c)
{
	int sum = a + b + c;
    return sum;
}

public int fixTeen(int n)
{
    
}
"
217727d1f14f216248eece014e54d93c9ec2a75d,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 != 0)
        {
            largestOdd = nums[i];            
        }
    }
    
    boolean foundNumberRight = false;
    for (int i = nums.length; i <= 0; i++)
    {
        if (nums[i] == largestOdd)
        {
            foundNumberRight = true;
        }
        
        if (foundNumberRight && nums[i] == 0)
        {
            nums[i] = largestOdd;
        }
    }
    
    return nums;

}

"
c73b980d818181bcc594038bc075597d4a6c5c34,"public String mixString(String a, String b)
{
    int lenA = a.length();
    int lenB = b.length();
    String subPart = """";
    String newString = """";
    if (lenA == 0)
        return b;
    else if (lenB == 0)
        return a;
    
    
	
    if (lenA == lenB)
    {
        
    }
    else if (lenA > lenB)
    {
        subPart = a.substring(lenB, lenA);
    }
    else
    {
        subPart = b.substring(lenA, lenB);
    }
    
    for (int i = 0; i < lenA; i++)
    {
        newString = newString + a.charAt(i);
        newString = newString + b.charAt(i);
    }
    
    newString = newString + subPart;
    
    return newString;
}
"
9e9542ff6fbf9e9b88a43d0fb3f6ca6777ffd9f2,"public int countEvens(int[] nums)
{
   	int numEvens = 0;
    for (int i = 0; i < nums.length; i++)
    {
        currentNum = nums[i];
        int remainder = currentNum % 2;
        if (remainder == 0)
        {
            numEvens++;
        }
    }
    return numEvens;
}
"
0294a8f6bb1a1e083b987b4340006b744cb04faf,"public int loneSum(int a, int b, int c)
{
    int sum = 0;
    if (a != b && b!= c)
    {
    	sum = a + b + c;
        return sum;        
    }
    else if (a == b && b != c)
    {
    	sum = c;
        return sum;
    }
    else if (a != b && b == c)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = 0;
        return sum;
    }
}
"
51ee970159715fec8c2fad3092a082a808bbbcff,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (!isBirthday)
    {
        if (speed <= 60)
            return 0;
        else if (speed > 60 && <= 80)
            return 1;
        else
            return 2;
    }
    else if (speed <= 65)
        return 0;
    else if (speed > 65)
        return 1;
    else
        return 2;
}
"
c570c1271abfc7f0d2981303cf85411bd692801a,"public boolean endOther(String a, String b)
{
    int la = a.length();
    int lb = b.length();
    if (la - lb >= 0)
    {
        String sa = a.substring(la - lb, la);
    	String sb = b.substring(lb - la, lb);
    	if (sa == b || sb == a)
    	{
        	return true;
    	}
    	else
    	{
        	return false;
    	}
    }
    else
    {
        return false;
    }
    
}
"
a6074c0a1c27aac75d0d5e85e5f6fd1809a59364,"public int luckySum(int a, int b, int c)
{
    int sum;
    if ( a == 13);
    {
        sum = 0;
    }
    if (b == 13)
    {
        sum = a + c;
    }
    if (c == 13)
    {
        sum = a + b;
    }
    else
    {
        sum = a + b + c;
    }
    return sum;
}
"
1777368ce69f919f47d40c97e3aff93fe0f702cd,"public boolean xyzThere(String str)
{
    int x = str.length();
    int y = 3;
    for (x = 3, x++)
    {
        if(str.substring(x-3, x-1) = ""xyz"")
           {
               return true;
           }
           y = y + 1;
    }
        
    
}
"
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
4621b6d4c1b03a6fd811349559740d32c21bd2b1,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        return false;
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return false;
}
"
467949ee2a9a8274d017a2fc59f192f5c13f98b7,"public boolean sameEnds(int[] nums, int n)
{
    int start = 0;
	int end = nums.length-len;
	for (; len > 0; len--)
	{
		if (nums[start] != nums[end])
			return false;
		else
		{
			start++;
			end++;
		}
	}
	return true;
}
"
b7c727a78ee7cf2be04da20836d3b9d3798e9f75,"public String zipZap(String str)
{
    String string = new String();
    if (str.length() >= 2)
    {
    for (int i = 0;  i < str.length() - 2; i++)
    {
        if (str.substring(i, i + 1).equals(""z"") && str.substring(i + 2, i + 3).equals(""p""))
        {
            string = string + ""zp"";
            i = i + 2;
        }
        else
        {
            string = string + str.substring(i, i + 1);
        }
    }
    if (str.substring(str.length() - 2, str.length() - 1) == ""z"" && str.substring(str.length()) == ""p""))
    {
        return string;
    }
    else
    {
    	return string + str.substring(str.length() - 2, str.length());
    }
    }
    else
    {
        return str;
    }
}
"
12a57e8c78a896933f2e8e5f858a3d329e333ee9,"public boolean sameEnds(int[] nums, int n)
{
    int start = 0;
	int end = nums.length-len;
	for(; len > 0; len--)
	{
		if(nums[start] != nums[end])
			return false;
		else
		{
			start++;
			end++;
		}
	}
	return true;

}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
c8a0be59dec0a41242ebf952c04bb2e31259d489,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
2a93f1e9ebd19db5bfb332863f7adb2266ef5c31,"public boolean twoTwo(int[] nums)
{
    boolean status = false
    for ( int i = 0; i < nums.length; i++)
    {
        if ( nums[i] = 2 && nums[i + 1] = 2)
        {
            status = true;
        }
    }
    return status;
}
"
daada552d4769189638ae2286a71fb5e7ebce385,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a
    if (diffOne == diffTwo == diffThree)
    {
        return true;
    }
    else
        return false;

}
"
acf68ee14e8bbbb4c7037ac6430a44a2a7624ef8,"public int roundSum(int a, int b, int c)
{
      return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int n = num % 10;
    
    if(n >= 5)
    {
        num = num + (10-n);
    }
    else
    {
        num = num - n;
    }
    return num;
}
"
e7e5cf78436eeacd9050264cc9b7a154377a5f5e,"public String getSandwich(String str)
{
    if (str.matches(""(.*)bread(.*)bread(.*)""))
    {
    	int i = indexOf('b');
        int j = lastIndexOf('d');
        return str.substring(i + 5, j -5);
    }
    else
    {
    	return("""");
    }
}
"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
9f76f502536b5caf05e00e7133cb3aa0cc6027d4,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
     speed -=5;
    if (speed <= 60)
        return 0;
    else if (speed <= 80)
        return 1;
    else
        return 2;
    
}
"
7b7eb968e2fdd06b8d0c82a75e66fd91707eebac,"public int loneSum(int a, int b, int c)
{
    int numA = a;
    int numB = b;
    int numC = c;
    if (numA == numB)
    {
        return numA + numC;
    }
    if (numA == numC)
    {
        return numA + numB;
    }
    if (numB == numC)
    {
        return numA + numB;
    }
    return numA + numB + numC;
}
"
2033b06d5aac98de80476b6c3d75976084a4fb23,"public boolean endOther(String a, String b)
{
 	if (b.contains(a.substring(0))
        {
            return true;
        }
    
    return false;
    
}
"
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
"
d1403c617954b49015d183ca1197ad3902d37595,"public int greenTicket(int a, int b, int c)
{
    int ticket = 0;
    if (a = b && a = c)
    {
        ticket = 20;
    }
    
    else if (a = b || a = c || b = c)
    {
        ticket = 10;
    }
}
"
9bb5e21f3a10d7ec32b3825e14061232985ba3c2,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2){
		return 0;
    }else if(you >= 8 || date >= 8){
		return 2;
    }else {
        return 1;
    }
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
"
bf382bc1d92127f137bb550a9abdea9839167f1f,"public int[] shiftLeft(int[] nums)
{
    int shift = nums[0];
    if (nums.length >= 2)
    {
        //int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
4d055318d6e61fcdb4e3d37f88ec0a4e97ebb58d,"public boolean has77(int[] nums)
{
    boolean seven = false;
    for (int i = 0; i <nums.length; i++)
    {
     if (nums[i] == 7 && nums[i + 1] == 7 && i < nums.length - 1)
     {
         seven = true;
     }
     else if (nums[i] == 7 && nums[i + 2] == 7 && i <nums.length - 2)
     {
      	seven = true;   
     }
        else
        {
            seven = false;
        }
    }
    
    return seven;
}
"
c58a6f11c880383a53ec094793207c24f1c0787f,"public boolean endOther(String a, String b)
{
    String c = a.toLowerCase();
    String d = b.toLowerCase();
    
    int clength = c.length();
    int dlength = d.length();
    
    String asd = c.substring(clength - dlength);
    String dsa = d.substring(dlength - clength);
    
    if (asd.equals(d))
    {
        return true;
    }
    else if (dsa.equals(c))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
889ab6fe7a97ae3be5542deb9612451844d260e5,"public int countEvens(int[] nums)
{	
   int total = 0;
  	for(int i = 0; i < nums.length; i++)
  {
      int remain = nums[i] % 2
 		if(remain == 0)
 			{
 				total = total + 1;
 			}
  }
   return total;
}
"
56e9cb020b187439e886c20143ed80aedae2027e,"public String extraEnd(String str)
{
	int len = str.length();
	String temp = str.substring(len-2, len);
	return (temp + temp + temp);
}"
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
"
a648af923ae263ec4696f8ef600932c4ae014ae4,"public int sum67(int[] nums)
{
    int count = 0;
    
        for (int i = 0; i < nums.length; i++)
        {
            
         	count = count + nums[i];
                      
            if (nums[i] == 6)
            {
                for (int x = nums.length - i; x < nums.length; x++)
                {
                    
                    if (nums[x] != 7)
                    {
                    }
                    if (nums[x] == 7)
                    {
                        break;
                    }
                }
            }
        }
    return count;
}
"
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
"
053512310b077ac4a1cc226f283afb3ff1b7bfe9,"public int sum67(int[] nums)
{
    int totalSum = 0;
    if (nums.length < 1)
    {
        return 0;
    }
    for (int j = 0; j < nums.length; j++)
    {
        if (nums[j] == 6)
        {
            while (nums[j] != 7)
            {
                j++;
            }
        }
        else
        {
            totalSum = totalSum + nums[j];
        }
    }
        return sum;
        
}
"
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
"
8eb019284dada4aa7e69bc31d24ba4de8bbf5774,"public String[] fizzBuzz(int start, int end)
{
    int length = end - start;
    int[] temp = new int[length];
    for (int i = 0; i < length; i++)
    {
        temp[i] = start + i;
    }
    
    String[] out = new String[length];
    
    for (int i = 0; i < length; i++)
    {
        if (temp[i] % 3 == 0)
        {
            out[i] = ""Fizz"";
        }
        else if (temp[i] % 5 == 0)
        {
            out[i] = ""Buzz"";
        }
        else
        {
            out[i] = String.valueOf(i);
        }
    }
    return out;
}"
75db71ce3c3be4e59b929a53550a3e360f6ba0ff,"public int countClumps(int[] nums)
{
    int k = 0; 
    int numClumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] == nums[i+1]) && (nums[i+1] != nums[i+2]))
        {
            numClumps = numClumps + 1;
        }
    }
    return numClumps; 
}
"
2d1d1fb5d01448f6fb807ae2e7396795eba1c3fd,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0
    }
}
"
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
"
dd6c9eb90c3975ad668a3c1fc612983e04fc6300,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) 
        if (day==0 || day==6)
            return ""off"";
    else 
        return ""10:00"";
    
    if (day==0 || day==6)
        return ""10:00""; 
    else if 
        return ""7:00"";
}
"
1d6179ccdc1c6fce139143f569025a679c1301a0,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        	largeOdd == nums[i];
        if (nums[i] == 0)
        	nums[i] == largeOdd;
    }
    return nums;
}"
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
d8efbe4aa5f405f5749dff672fb7484b81a4951b,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 10;
    else if (a == b && a == c && b == c)
        return 5;
    else if (b != a && c != a)
        return 1;
    else
        return 0;   
}
"
08ed7b535fcbe15e064a9e3353db142a806ba344,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
        return true;
    return ((a+b) == 6 || (a-b) == Math.abs(6));
}
"
871688dbe33cb2016102388f5b0b0af3c3c865a7,"public int roundSum(int a, int b, int c)
{
    int sum=0;
	sum=sum+round10(a);
	sum=sum+round10(b);
	sum=sum+round10(c);
	return sum;
}

public int round10(int num)
{
    if(n%10 >4)
	return (((n/10)+1)*10);
	else return ((n/10)*10);
}
"
cd8c18f5027eb9195d71021ed74cec4b594d2d01,"public boolean xyzThere(String str)
{
   int length = str.length();
    for (i = 0; i < length; i++){
     if (str.charAt(i) = x && str.charAt(i+1) = y && str.charAt(i+2) = z)
     {
     	if(str.charAt(i - 1) != '.'){
        return true;
        }
     }
    }
    return false;
}
"
7779f17d79d550dbddfe995feba46928008c9d65,"public String without2(String str) 
{
    
    if (str.length() <= 2)
    {
        if (str.length() == 2)
        {
        	return """";
        }
        else
            return str;
    }
    else if (str.substring(0, 2) ==  (str.substring(str.length() - 2, str.length())))
    {
     	return str.substring(2, str.length());  
    }
    else 
    {  
      return str;  
    }
}
"
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
"
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
4e077118afcc5af70d06e521a126407bd6aeec1d,"public boolean twoTwo(int[] nums)
{
	boolean two = true;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 2) {
                if ((i != 0 && nums[i - 1] == 2) || (nums.length - 1 > i && nums[i + 1] == 2 )) {
                    two = true;
                    i++;
                } else {
                    two = false;
                }
            }
        return two;;
}
}
"
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
"
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
"
bae1397b5dc1124b7816c1b8562648042fc74b47,"public int[] frontPiece(int[] nums)
{
    int answer[] = [];
    if (nums.length >= 2)
    {
        int answer[] = {nums[0], nums[1]};
    }
    else if (nums.length == 1)
    {
        int answer[] = {nums[0]};
    }
    return answer;
}
"
cf7ba49a2d67806c9c25f4d379daa3f371c136d2,"public int[] fix45(int[] nums)
{
    int j = 0;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i+1] != 5)
		{
			for(; !(nums[j] == 5 && (j == 0 || j > 0 && nums[j-1] != 4)); j++);
			nums[j] = nums[i+1];
			nums[i+1] = 5;
		}
	}
	return nums;
}
"
8d4355f77d2f0c4c27557a1a6fb6e5d16deda991,"public String[] fizzBuzz(int start, int end)
{
    String[] str = new String[end - start];
        int count = 0;
        for(int i = start; i < end ; i++)
        {
        	
            str[count] = String.valueOf(i);
            
                       
            if(i % 3 == 0)
            {
            str[count] = new String(""Fizz"");
            }
            if(i % 5 == 0)
            {
            str[count] = new String(""Buzz"");
            }
            
            if(i%3==0 && i%5==0)
            {
            str[count] = new String(""FizzBuzz"");
            }
            count++;
        }
    return str;
}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
36ce6844d344530a198150349433b526518fa244,"public int[] frontPiece(int[] nums)
{
    int[] first;
    if(nums.length >= 2)
    {
        first = new int[2];
        first = nums[0];
        first = nums[1];
    }
    else if (nums.length == 1)
    {
        first = new int[1];
        first[0] = nums[0];
    }
    else
    {
        first = new int[0];
    }
    return first;
}
"
84d1d54c958492b77a90242cd9a6307f6f66bbf3,"public int greenTicket(int a, int b, int c)
{
    if ( a == b && a == c && b == c )
   return 20;
  if ( a == b || a ==c || b == c )
   return 10;
  else
   return 0;
}
"
1367b766aeeb082338bdcc66af4a847712cf9c27,"public String zipZap(String str)
{
   int len = str.length();
	int lim = len - 2;
	int i = 0;
	char ch;
	StringBuilder stbuild = new StringBuilder(len);
	while(i < len)
	{
		ch = str.charAt(i);
		if(ch == 'z' && i < lim && str.charAt(i+2) == 'p')
		{
			stbuild.append(""zp"");
			i += 3;
		}
		else
		{
			stbuild.append(ch);
			i++;
		}
	}
return stbuild.toString(); 
}
"
2574af9e9e9ac8bd945c2942fa0bfdd61c594c89,"public boolean twoTwo(int[] nums)
{
    if (nums.length <= 1)
    {
        if (nums[0] == 2)
            return false;
        return true;
    }
    if (nums.length == 2)
    {
       if (nums[0] != 2 || nums[1] != 2)
       {
           return false;
       }
       return true;
            
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
    }
    return true;
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
"
e3dc5f74379491989d9402ce2df9421bc1150bf4,"public int sum67(int[] nums)
{
    int count = 0;
    
        for (int i = 0; i < nums.length; i++)
        {
            
                      
            if (nums[i] == 6)
            {
                for (int x = nums.length - i; x < nums.length; x++)
                {
                    
                    if (nums[x] != 7)
                    {
                    }
                    if (nums[x] == 7)
                    {
                        break;
                    }
                }
            }
            else
            { 
                count = count + nums[i];
            }
        }
    return count;
}
"
94fa9967738a28d5ea05928b915db651c8e1a024,"public int[] zeroMax(int[] nums)
{
    int length = nums.length;
	int[] newArray = new int[length];
    int largerNumber = 0;
    for (int i = 0; i < length; i++)
    {
        if (nums[i] == 0)
        {
            largerNumber = largestOdd(nums, i);
            newArray[i] = largerNumber;
        }
        else
        {
            newArray[i] = nums[i];
        }
    }
}
public int largestOdd(int[] nums, int counter)
{
    int largest = 0;
    for (int i = counter; i < nums.length; i++)
    {
        boolean oddOrEven = (nums[i] % 2) != 0;
        {
            if (oddOrEven && nums[i] > largest)
            {
                largest = nums[i];
            }
        }
    }
}
return newArray;"
4f8aa54c2cb893dfc99d4da7379ebdb141aeedd7,"public String[] fizzBuzz(int start, int end)
{
 String[] arr = new String[end - start];
    
    for(int i = start; i < end; i++) {
        if(i % 15 == 0) {
            arr[i - start] = ""FizzBuzz"";
        } else if(i % 3 == 0) {
            arr[i - start] = ""Fizz"";
        } else if(i % 5 == 0) {
            arr[i - start] = ""Buzz"";
        } else {
            arr[i - start] = String.valueOf(i);
        }
    }
                                                      
    return arr;   
}
"
13864ac96c4023a6c7e3db73dd0c11750234fe40,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1"
9ef46e0a676ec2a4ff9a8f751e5f6bb7acfe7cc3,"public boolean bobThere(String str)
{
    for (int ii = 0; ii < str.length(); ii++)
    { 
    	int b1 = str.indexOf('b', ii);
    	char b2 = str.charAt(b1+2);
        if ('b' ==b2)
            return true;
    }
    return false;
}
"
05ffbadf63a5521b543c022157ce6f820232afb2,"public int blackjack(int a, int b)
{
    int x = Math.abs(21 - a);
    int y = Math.abs(21 - b);
    if (a > 21 && b > 21)
        return 0;
    else if (x < y || b > 21)
        return a;
    else if (y < x || a > 21)
        return b;
    else
        return 0;
             
}    
"
80ca40b6ebfc297cfc134fea7a2f28dea6d68b2b,"public int[] fizzArray(int n)
{
    return 0; 
}
"
6cc6f2116ebd882c114f66d91237b224bdeb5f41,"public boolean love6(int a, int b)
{
    if (a=6 || b=6)
        return true;
    else
        return false;
}
"
67512e6abc150f86462e6ffdaabd155ce19ea2c2,"public int[] seriesUp(int n)
{
    int[] finding = new int[n * (n+1) / 2];
    int i = 0;
    for (int j = 1; j <= n; ++j)
        for (int k = 1; k <= j; ++k)
            result[i++] = k;
    return result;
}
"
f2e4b0866be008c09f44afabb61a1b3b5b4dda3c,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if(isAsleep)
        return false;
    if(isMorning)
        if(isMom)
            return true;
    	else
            return false;
    else
        return true;
}
"
f6c0b5a67b540c4df32e3c9b77a9038120b43903,"public String getSandwich(String str)
{
    if (str.substring(0, 5).equals(str.substring(str.length()-5))
               && str.substring(0, 5).equals(""bread""))
    {
        return str.substring(5, str.length() -5);
    }
    else if (str.substring(2, 7).equals(str.substring(str.length()-7)))
    {
        return str.substring(7, str.length() -7);
    }
    else 
        {
            return """";
        }
}
"
5664166f1056cfe63d8834fdd6640918c1341ebf,"public int sum3(int[] nums)
{
    double total = 0;
    for (int i = 1; i < 4; i++)
    { 
   total = total + nums[1];
}
}
"
821a84107d7be81899a2319398eea00bdfc88099,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    int j = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            nums[j++] = nums[i];
        }
    }
    return array;
}
"
e3c914fa20f505fd0ff2d1f2f4d847dc18e65737,"public boolean isEverywhere(int[] nums, int val)
{
    if (nums.length == 0 || nums.length == 1)
        return true;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
            continue;
        if (nums[i] != val)
        {
            if (nums[i+1] != val)
            {
                return false;
            }
        }

    }
    return true;
}
"
0bd7fe95ce9749e4f8a7edf4208f6c161ea14ca1,"public int countCode(String str)
{
    int x = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c')
        {
            if (str.charAt(i+1) == 'o')
            {
                if (str.charAt(i + 3) == 'e')
                {
                    x++;
                }
            }
        }
    }
    return x;
}
"
4f008423904c5415d48e39e6ae993b53542cdaf7,"public int centeredAverage(int[] nums)
{
    int length = nums.length;
    int smallest = nums[0];
    int largest = nums[0];
    int total = 0;
    int counter = 0;
    for (int i = 0; i < length; i++)
    {
        if  (nums[i] < smallest)
        {
            smallest = nums[i];
        }
    }
    for (int i = 0; i < length; i++)
    {
        if (nums[i] > largest)
        {
            largest = nums[i];
        }
    }
    for (int i = 0; i < length; i++)
    {

            total = total + nums[i];
        	counter++;
    }
    total = (total - largest - smallest) / (counter - 2);
    return total;
}
"
1034017f8a2f50c953f8ee0c3c3c49e53be93778,"public int countCode(String str)
{
    int count = 0;
    int yo = str.length();
    int co = str.indexOf(""co"");
    
    
    
}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
8fbe824c07a0c60e9dd2fa062bd84e306d76c88c,"public String without2(String str) 
{
    String twoWord = str.substring(0, 2);
    String lastTwo = str.substring(str.length()-2);
	if (twoWord.equals(lastTwo))
	{
		String finalWord = str.substring(2);
        return finalWord;
    }
	else
    {
    	return str;
    }
}
"
399f5bd723d4bafe42eabe2351acebd7b5f14371,"public boolean sameEnds(int[] nums, int n)
{
    int front = 0;
    int end = nums.length - n;
    Boolean same = true;
    for (int i = 0; i < n; i++)
    {
        if (nums(front) != nums(end))
        {
            Boolean same = false;
        }
    }
    return same;
}
"
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
"
1b4e7117b005922b1c08a153d218e1b18e63aa89,"public int sum13(int[] nums)
{
    int swag = nums.length;
    int count = 0;
    
    if (nums.length != 0)
    {
        for (int i = 0; i < nums.length; i++)
        {
            if (nums[i] != 13)
            {
            count = count + nums[i];
            }           
        }
    }
    else
    {
        count = 0;
    }
    
    return count;
}
"
25206cc761310be2545444f71a648589f7d585ec,"public int[] withoutTen(int[] nums)
{
    int backEnd = 0;
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] == 10)
        {
            for (int j = i; j < nums.length - 1; j++)
            {
             	nums[i] = nums[i + 1]; 
            }
            nums[nums.length - backEnd - 1] = 0;
            backEnd += 1;
        }
    }
    
    return nums;
}
"
463d4b42ec5faac156425424659faf9b3fa1aa79,"public int sortaSum(int a, int b)
{
    int sum = a+b;
    if(sum<10 || sum > 19)
    {
        sum = sum;
    }
    else
    {
        sum = 20;
    }
    return sum;
    
}
"
9cbbdba325b70ae5f871304d648eceb3e8aad0fd,"public boolean great; 
public int d;
public int e; 
public int f; 

public boolean love6(int a, int b)
{
    a + b = d; 
    a - b = e; 
    b - a = f; 
    if (a == 6 || b == 6)
    {
        great = true;
    }
    else if (d = 6 || e = 6 || f = 6)
    {
        great = true; 
    }
    else 
    {
        great = false;
    }
    return great; 
}
"
fcc04cd7897035b250cebd1cfd4f5927b0e3bcf1,"public boolean canBalance(int[] nums)
{
    int j =nums.length-2;
    int i =1;
    int front = nums[0];
    int tail = nums[j+1];    
         while(j>i)
          {
         	if( front < tail)
    	 	{
        		front += nums[i];
                i++;
         	}
         	else
    		{
            	tail+=nums[j];
                j--;
        	}
   		 }
    return front==tail;
}
"
d31a544311795878c1f0a6ee6dbb403e1c4c36e2,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep) {
    if(isAsleep)
        return false;
          
    if(isMorning && !isMom)
        return false;
                    
    return true;
}"
9bc3a119f59f9e9cdc15dde381264789b4b635fc,"public boolean has77(int[] nums)
{
    Boolean has77 = false;
   	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            has77 = true;
        }
        else if (nums[i] == 7 && nums[i + 2] == 7 && i < nums.length - 2)
        {
            has77 = true;
        }
    }
    return has77;
}
"
f69e8dd43d667d277a71e8afa47bc128fe9fec54,"public int[] shiftLeft(int[] nums)
{
    if (nums.equals({})){
        return null;
    }
    int[] left = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++){
        left[i] = nums[i+1];
    }
    left[nums.length - 1] = nums[0];
    return left;
}
"
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
21f49c70a5574e177ee0e928d52f7656fb37a03a,"public boolean canBalance(int[] nums)
{
    int same = 0;
    int sum = 0;
    for (int i=0;i<nums.length;i++)
    {
        sum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        same += nums[i];
        sum -= nums[i];
    
    if (same == sum)
    {
        return true;
    }
    }
    return false;
}"
d866157db78f6eb45be705042a8b581075d47972,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    	if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
            return a.sb;
    	}
    
    
}
"
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
"
b577df1680d68a2855a4f667f1891578f8df0eab,"public int sum67(int[] nums)
{
    int sum = 0;
        if (nums.length < 1) {
            return 0;
        }

        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 6) {
                while (nums[i] != 7) {
                    i++;
                }
            } else {
                sum += nums[i];
            }

        }
        return sum;
}
"
dae0fac64baf41f77223c5e18ed84a394d8b0c8d,"public String alarmClock(int day, boolean vacation)
{

    
    if (day == 0 || day == 6)
        if (vacation)
        {
            alarmClock = ""off"";
        }
    {
        alarmClock = ""10:00"";
    }
    
    if (day > 0 && day < 6)
        if (vacation)
        {
            alarmClock = ""10:00"";
        }
    {
        alarmClock = ""7:00"";
    }
    
    return alarmClock
}
"
f3d3b391a8e9b90d3b27c5e7633892e2ba61e36d,"public boolean twoTwo(int[] nums)
{
	if(nums.length==0)
        return true;
    else if(nums.length==1)
        return nums[0]!=2;
    if(nums[0]==2&&nums[1]!=2)
        return false;
    if(nums[nums.length-1]==2&&nums[nums.length-2]!=2)
        return false;
    for(int i = 1; i < nums.length - 2; i++){
        if(nums[i]==2&&nums[i-1]!=2&&nums[i+1]!=2){
            return false;
        }
    }
    return true;
}
"
30be73bbeac431013d86b50a0b55732a80da7e55,"public boolean evenlySpaced(int a, int b, int c)
{
    if (c - b == b - a)
        return true;
}
"
363167d46b0357fbe176ee78f939c16f1b32e1a2,"public int loneSum(int a, int b, int c)
{
    int output;
    if (a==b)
        output =  c;
    else if (b==c)
        output = a;
    else if (a==c)
        output = b;
    else if (a==b && b==c)
        output = 0;
    else
        output = a+b+c;
    return output;
}
"
48793b34acf5a73e85fa9c1253cab877a767ae8e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (!isBirthday)
    {
        if (speed >= 60)
        {
            int caughtSpeeding = 0;
        }
        else if (61 <= speed && speed <= 80)
        {
            int caughtSpeeding = 1;
        }
        else if (speed >= 81)
        {
            int caughtSpeeding = 2;
        }
    }
    else
    {
        if (speed >= 65)
        {
            int caughtSpeeding = 0;
        }
        else if (66 <= speed && speed <= 85)
        {
            int caughtSpeeding = 1;
        }
        else if (speed >= 86)
        {
            int caughtSpeeding = 2;
        }
    }
}"
d0bf67ea5f801b6078fcd560642b81be980b5061,"public boolean xyBalance(String str)
{
   if(str.contains(""x""))
   {
    
       int firstX = str.indexOf(""x"");
   }
    else
    {return false;}
    
    if(str.contains(""y""))
    {
    int firstY = str.indexof(""y"");
    }
    else
    {return false;}
    
    if(firstY < firstX)
    {
    return true;
    }
    return false;
   }
"
470829854090aa3651ae19d0c58c374cca8e169c,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        if (nums[i] > max)
        {
            max = nums[i];
        }
        if (nums[i] < min)
        {
            min = nums[i];
        }
    }
    return (sum - (min + max)) / (nums.length - 2);
}
"
d96a0285c6ef424bb4ff5119134143d2d1c7d7b0,"public String alarmClock(int day, boolean vacation)
{
	if (vacation)
    {
       	if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
    {
        if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""10:00"";
        }
		else if (day == 0 || day == 6)
        {
            return ""off"";
        }
    }
}
"
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
"
fda71b2582c559b53069b970b54899ccdef19aaf,"public boolean endOther(String a, String b)
{
    for (int i = 0; i < a.length(); i++)
    {
        if (a.toLowerCase().substring(i).equals(
            b.toLowerCase()))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
"
ecc91027483a8b199845eaf128d2f3efd91fb801,"public int noTeenSum(int a, int b, int c)
{
return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 16) {
        n = n;
    }
    else if (n == 15) {
        n = n;
    }
    else if (n > 12 && n < 20) {
        n = 0;
    }
return n;}
"
fe39f4508e85a1ac3ac2283a5e21c00995d18db0,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
            return true;
    return false;
}
"
12b84a1f4bcfdfdf7ca8ed25d6bdaa22aad386e7,"public int countEvens(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] % 2 == 0)
			count++;
	}
	return count;
}
"
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
"
be5015444a9a6877634cbb90cf5903738f8b9a52,"public String mixString(String a, String b)
{
    String d = """";
    if (a.length() >= b.length()) {
        for (int i = 0; i < b.length(); i++) {
    		String s = String.valueOf(a.charAt(i));
            String p = String.valueOf(b.charAt(i));
            d = d + s + p;
        }
        String q = a.substring(b.length());
        return d + q;
    }
    if (b.length() > a.length()) {
        for (int i = 0; i < a.length(); i++) {
    		String s = String.valueOf(a.charAt(i));
            String p = String.valueOf(b.charAt(i));
            d = d + s + p;
        }
        String q = b.substring(a.length());
        return d + q;
}
}
"
aa7de1c61f3e68959ff7cdfa0fcae118bf83e8ac,"public boolean xyzThere(String str)
{
    int xyzLocation = str.getIndex();
    if (xyzLocation == -1)
    {
    	char ch = str.charAt(xyxLocation-1);
    	if (ch == '.')
        {
        	return false;
        }
        else
        {
            return true;
        }
    else
        return false;
}
"
2dd7f1ed9f3e32f047d45ffa29eb121030e0cac0,"public boolean endOther(String a, String b)
{
    int lengthA = a.length();
    int lengthB = b.length();
    
    if (a.equals(b))
    {
        return true;
    }
    
    else if (lengthA > lengthB && a.substring(lengthA - 	 	
       lengthB).toLowerCase().equals(b.toLowerCase()))
    {
        return true;
    }
    
    else if (lengthB > lengthA && b.substring(lengthB - 	 	
       lengthA).toLowerCase().equals(a.toLowerCase()))
    {
        return true;
    }
    
    else
    {
        return false;
    }
}
"
08e99e01d814a55f15adec8ea2dbb841d7dfed3b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean t=true;
    if (weekend==true)
    {
        if (cigars>=40)
    	{
        	t=true;
    	}
    
    	else 
        {
            t=false;
        }
    }
    
    else
    {
    	if (cigars<=60 && cigars>=40)
    	{
        	t=true;
    	}
    
    	else 
        {
            t=false;
        }
    }
    return t;
}
"
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
"
0a586c38a16cdaad5c1895a4d8d6f821c9a4d206,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + i;
    }
    
    return sum;
}
"
65ac0d22f22f0bf33801560bd999cf434916d348,"public int sum13(int[] nums)
{
    int x = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13)
        {
            x += nums[i];
        }
        else
        {
            if (i < nums.length)
            {
                i++;
            }
            else
            {
                i = nums.length;
            }
        }
    }
    return x;
}
"
7916ee96ab697d3080bc7dab13c6e63900052c59,"public int sum13(int[] nums)
{
    int sum = 0;
    if(nums.length == 0)
    {
        return sum;
    }
    else
    {
    	 for (int i = 0; i < nums.length; i++)
         {
         	if (nums[i] == 13)
            {
            	i = i + 2;
            }
            else
            {
             	sum = sum + nums[i];
            }
         }
        return sum;
    }
        
}
"
fc7fbb95e55434c296c5be4fb910958e18ded414,"public int[] seriesUp(int n)
{
    int[] x;
    x = new int[999];
    for (int i = 1; i <= n; i++)
    {
        for ( int y = 0; y < i; y++)
        {
            x[i] = y+i;
        }
    }
    return x;
}
"
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
"
7ba9fd8513da76496f403f3851445b89d05787cb,"public int sum3(int[] nums)
{
 	int length = nums.length;
    int sum = 0;
    for (int i = 0; i < length; i++)
    {
        sum += int[i];
    }
    return sum;
}
"
b5955d5bdc9ebcb3677ef2f18e6c082e98b532ae,"public int[] shiftLeft(int[] nums)
{
    int[] array = new int[nums.length];
    for ( int i = 1; i < nums.length; i++ ) {
        array[i-1] = i;
    }
    array = array + nums[0];
    return array;
}
"
de658c862a57d2b23b53b38313aa1d9dd906a607,"public int greenTicket(int a, int b, int c)
{
    if(a = b = c)
        return 20;
    else if (a /= b /= c)
        return 0;
    return 10;
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
3bf14d58e85e58d1f64fecd8f753e4a377edafe2,"public int[] seriesUp(int n)
{
    int length = n * (n + 1) / 2;
    int[] newArray = new int[length];
    int counter = 0;
    for (int i = 0; i < length; i++)
    {
        counter = i;
		for (int j = 1; j <= i + 1; j++)
        {
            newArray[counter] = j;
            counter++;
        }
        i = i + counter;
    }
    return newArray;
}
"
0c74277c1796c714808c8f696acea130fe53582d,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
    int yo = nums[0];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i+1];
    }
        
        nums[nums.length-1] = yo;
    }
    return nums;
}
"
553bdde53d21d9ecefcdd0846276cfdc9fa23c48,"public String zipZap(String str)
{
    int length = str.length();
    String string = """";
    if (length < 3)
        return str;
    for (int i = 0; i <= str.length() - 3; i++)
    {
        if ((str.charAt(i) == 'z') && (str.charAt(i + 2) == 'p'))
        {
            i = i + 2;
            string = string + ""zp"";
        }
        else
        {
            string = string + str.charAt(i);
        }
    }
    if (!((str.charAt(length - 3) == 'z')) && !((str.charAt(length - 1) == 'p')))   
    {
        string = string + str.charAt(length - 2) + str.charAt(length - 1);
    }
    return string;
}"
253fac150e8b43b32a630fd496d7464b802afc5d,"public static int sum13(int[] myarray) {
		int sum = 0;

		if (myarray.length == 0) {
			System.out.println(sum);
		} else {
			for (int i = 0; i < myarray.length; i++) {
				if (myarray[i] != 13) {
					sum = sum + myarray[i];
				} else if (myarray[i] == 13 && i < myarray.length - 1) {
					myarray[i] = 0;
					myarray[i + 1] = 0;
				}
			}
		}

		return sum;
	}"
0ea92807a7a671588c4e62bc9fa3609ec0a9e957,"public int blackjack(int a, int b)
{
     if (a>21) a = 0;
  if (b>21) b = 0;

  if (a>b)
  {
    return a;
  }
   else 
  {
    return b;
  }
  
}
"
7b67aeea7fcbd1508641d7ef2ccdaa4386a85222,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars <= 60)
    }
}
"
9cb90c5bd2ddc4109aaf06e08baa826004ddb248,"public boolean xyBalance(String str)
{
    int l = str.length() - 1;
    char c;
    
    for (int i = l; i >= 0; i--)
    {
        c = str.charAt(i);
        
        if (c == 'x')
        {
            return false;
        }
        else if (c == 'y')
        {
            return true;
        }
    }
    return true;
}
"
a24dfce9bb2b97aec0c2a859f3855e3285de4fff,"public int[] seriesUp(int n)
{
    
    int[] array = new int[n * (n + 1) / 2];
    
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i; j++)
        {
            array[(i - 1) * 2] = j;
        }
    }
    
    return array;
}
"
2cd8f56bbb8a4c02a0307f098b736aa366a6be74,"public boolean has77(int[] nums)
{
    if (nums.length == 0 || nums.length == 1)
        return false;
    if (nums.length == 2)
        if (nums[0] == 7 && nums[1] == 7)
            return true;
    	else
            return false;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                return true;
            }
            //i = i + 1;
            else
            {
                return false;
            }
        }
    }
    return false;
}
"
38ccfae68af952763e8da1717e369f62503b2c21,"public int[] seriesUp(int n)
{
    if(nums.length >= 2)
	{
		int val = nums[0];
		for(int i = 0; i < nums.length - 1; i++) {
			nums[i] = nums[i+1];
        }
		nums[nums.length-1] = val;
	}
	return nums;
}
"
dc6496641d36ca1033b8639bf6781a0042c9df14,"public int[] fix45(int[] nums)
{
    int length = nums.length;
	int count = 0;
    for (int i = 0; i < length; i++){
		if (nums[i] == 4){
            count = count + 1;
        }
    }
    int[] replaceFives = new int[length]; //Make equal to count
    int j = 0;
    for (int i = 0; i < length; i++){
        if (nums[i] == 4){
            replaceFives[j] = nums[i + 1];
            j = j + 1;
        }
    }
    j = 0;
    for (int i = 0; i < count; i++){
    	if (nums[i] == 4){
            nums[i + 1] = 5;
        }
        else if (nums[i] == 5){
            nums[i] = replaceFives[j];
            j = j + 1;
        }
    }
    return replaceFives;
}"
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
"
b91212e90aa138f6b5784d612d44f8a585a98710,"public String plusOut(String str, String word)
{
    String returnString = """";
    for (int i = 0; i < str.length()+1; i++)
    {
     	if (str.substring(i).startsWith(word))
        {
         	returnString = returnString + word;
            i = i + word.length();
        }
        else
        {
         	returnString = returnString + ""+"";   
        }
    }
    return returnString;
}
"
f2a3653703fabb4925490eaed9c72b3a92e4a797,"public int[] tenRun(int[] nums)
{
    int i = 0;
    while(nums[i]%10 != 0)
    {
        i++;
    }
    int j = i;
    while(nums[j]%10 == 0 && j < nums.length-1)
    {
        int convert = nums[j];
        if((j+1) < nums.length && nums[j+1]%10 == 0 && nums[j+1] != nums[j])
        {
            convert = nums[j+1];
            j++;
        }
        nums[j+1] = convert;
        j++;
    }
    return nums;
}
"
30d31bbaaebc9776769ceff35e438b4a64ee9d51,"public int makeChocolate(int small, int big, int goal)
{
    remainder = goal % (5 * big);
    smallBars = remainder % small;
    if (smallBars > 0)
        return smallBars;
}
"
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
"
039a5741fb82006d59f66a5ffd100359f6a3aa77,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
    	if (cigars >= 40)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
    else
    {
    	if (cigars >= 40 && cigars <= 60)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
}
"
f2f3aab49bcd98c9b719e87ab38e206102d84cb4,"public int roundSum(int a, int b, int c)
{
    int x = round10(a);
    int y = round10(b);
    int z = round10(c);
    int sum = x + y + z;
    return sum;
}

public int round10(int num)
{
    int k = num%10;
    if (k>= 5)
        return num + (10-k);
    else
        return num - (num%10);
}
"
45bd0461ce8b659d80d59fc1f37f5d997f31b405,"public boolean love6(int a, int b)
{
    int count = Math.abs(a) + Math.abs(b);
    if (a == 6 || b == 6 || count == 6){
        return true;
    }
    else
        return false;
}
"
6434b911e74e0d2939d97a8820552e19fd926f60,"public int countClumps(int[] nums)
{
      int current = -1, clump = 0;
  for(int i = 0; i < nums.length - 1; i++) {
    if(nums[i] == nums[i + 1] && nums[i] != current) {
       current = nums[i];
       clump++;
    } else {
       if(nums[i] != current) {
          current = -1;
       }
    }
  }
  return clump;
}
"
4d09f161c72e74bf7805f87496cd938b3e71c811,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for(int x = 0; x < n; x++)
    {
        array[x] = x;
    }
              
    return array;
}
"
ab09128cb8911bfc34a9c94a842fc979decdf0dc,"public boolean canBalance(int[] nums)
{
    int size = nums.length;
    int sum1 = 0;
    int sum2 = 0;
    int k = size - 1;
    int i = 0;
    int j = 0;
    int temp1 = 0;
    int temp2 = 0;
    while (j <  size)
    {
        if (k == i)
            return false;
    for (; k > i; k--)
    {	
        sum2 += nums[k];    
    }
    for (; i < k ; i++)
    {
            sum1 += nums[i];
    }
        if (sum1 == sum2)
		return true;
    i++;
    k--;
    sum1 = 0;
    sum2 = 0;
        if (j == 0)
        {
            temp1 = sum1;
            temp2 = sum2;
        }
        else if (sum1 < temp1 && sum2 > temp2)
            return false;
            else
            {
            	temp1 = sum1;
                temp2 = sum2;
            }
        
    }
    
    return false;

    
}
"
078a3d7c00c1e01d5d88d19eb50828f1c8be17a9,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        if (n <=1 || n >=10)
        {
            return true;
        }
    }
    else if (n>=1 || n<=10)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
e9364cc1c40a100dba45b31bcfdee98bdcbeedd1,"public String plusOut(String str, String word)
{
    int length = str.length();
    String newString = """";
    int wordlength = word.length();
	for (int x = 0; x < length; x++)
	{
		if (str.substring(x, x+3) == word)
        {
			newString = str.substring(0, x-1);
            for (int i = 0; i < wordlength; i++)
                 {
                     newString = newString + ""+"";
                 }
            newString  = str.substring(x+4, length);
        }
        else
        {
           //nothing;
        }
	}
    return newString;
}
"
d62646be308ae4ed286a9281a180ff0a2f2c82f6,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer) {
        if (temp <= 100 && temp >= 60) {
            return true;
        }
        return false;
    } else {
        if (temp <= 90 && temp >= 60) {
            return true;
        }
        return false;
    }
}
"
1c7d8d1adf4d7007853562f67b9ddc3014f55389,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer == true)
    {
     if (temp >59 && temp<101)
     {
         play = true;
     }
    }
        else
        {
            if (temp> 59 && temp<91)
            {
                play = true;
            }
    }
    
    return play;
    
}
"
3d7361f97ad4dd443028e6672105587f2d537df7,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
			count++;
		else
		{
			if(state == 1)
				return false;
			else
				count = 0;
		}
	}
	return (count != 1);
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
51d726f3ba7d0bdf6df41f275be7d3e5ae0b21ed,"public String getSandwich(String str)
{
    int firstBread = -1;
    int lastBread = -1;
    for (int i = 0; i < str.length() - 5; i++)
    {
        if (str.substring(i, i+5).equals(""bread""))
        {
            firstBread = i;
            i = str.length();
        }
    }
    for (int j = str.length() - 5; j > 0; j--)
    {
        if (str.substring(j, j+5).equals(""bread""))
        {
            lastBread = j;
            j = 0;
        }
    }
    if(firstBread != -1 && lastBread != -1 && firstBread != lastBread)
        return str.substring(firstBread + 5, lastBread);
    return """";
}
"
dc1fed20fe7b3e3ad594971d540748785b229c87,"public int loneSum(int a, int b, int c)
{
    if(a != b && b != c && a != c)
    {
        return (a+b+c);
    }
    else if(a==b && b==c && a==c)
    {
        return 0;
    }
    else if((a==b) || (a==c))
    {
        if(a==b)
        {
            return c;
        }
        else if(a==c)
        {
            return b;
        }
    }
    else if((b==a) || (b==c))
    {
        if(b==a)
        {
            return c;
        }
        else if(b==c)
        {
            return a;
        } 
    }
    else if((c==a) || (c==b))
    {
        if(c==a)
        {
            return b;
        }
        else if(c==b)
        {
            return a;
        }
    }
    return 0;
}
"
124bd6137a84f595db765d9371477c3b28abb209,"public int[] frontPiece(int[] nums)
{
    int[] n; 
    if(nums.length>=2)
    {
        n = nums[0,1]; 
    }
    else if(nums.length==1)
    {
        n = nums[0]; 
    }
}
"
ab587b2f0a8c9a7e320c5272ce424f6add5b8e19,"public String atFirst(String str)
{
 	if (str.length()==0)
    {
    	return ""@@"";
    }
    else if (str.length() == 1)
    {
    	return str + ""@"";
     
    }
    else
    {
    	return str.substring(0,2);
    }
}
"
c440b400cffac18e252070c5c5e73815672ca6a5,"public int sum67(int[] nums)
{
    int sum = 0;
    int i = 0;
    while (i < nums.length)
    {
        if (nums[i] == 6)
        {
            ++i;
        }
        else
        {
            sum = sum + nums[i];
        }
        ++i;
    }
    return sum;
}"
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
2f28435928f6eb805385bad7c11f9284adb64b1c,"public boolean xyzThere(String str)
{	
    int i = 0;
    int count = 0;
    char a = '.';
    char x = 'x';
    char y = 'y';
    char z = 'z';
   // !a.equals(str.charAt(i)) && 
    if (str.length() == 3)
    {
     	if (str .equals (""xyz""))
            count = 1;
    }
    if (str.length()>5)
    {
    for (i = 0; i<=str.length()-3; i++)
    { 	if (!(a == (str.charAt(i))) && x == str.charAt(i+1) && y == (str.charAt(i+2)) && z == (str.charAt(i+3)))
            {
                count = count + 1;               
            }
     
    }
    
    }
    return count >= 1;
}
"
4a20449f0625fed6ebe624b6e978ead47c47bb49,"public String zipZap(String str)
{
    int stringLength = str.length();
    int findZ1 = str.indexOf(""z"");
    int findP = str.indexOf(""p"");
    String newString = """";
    String inBetweens = """";
    int counter = 0;
    if (stringLength < 3)
    {
        return str;
    }
    else if (findZ1 == -1 && findP == -1)
    {
        return str;
    }
    else if (findP - findZ1 >= 3)
    {
        return str;
    }
    else
    {
        String startPart = str.substring(0, findZ1);
        newString = startPart;
        while (counter < stringLength - 2)
        {
        	int findZ2 = str.indexOf(""z"", counter);
    		findP = str.indexOf(""p"", findZ2 + 2);
        	if (str.startsWith(""p"", findZ2 + 2) == true)
        	{
				String zStart = str.substring(findZ2, findZ2 + 1);
            	String zBack = str.substring(findZ2 + 2, findZ2 + 3);
            	newString = newString + zStart + zBack;
                if (str.startsWith(""z"", counter + 4))
                {
                    findZ2 = str.indexOf(""z"", counter + 4);
                    inBetweens = str.substring(counter + 3, findZ2);
                    newString = newString + inBetweens;
                }
        	}
            counter = counter + 3;
    	}
    }
    return newString;
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
15eff11b2e6e14f6453f7b14e6106b0c7be15c52,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffAB = Math.abs(a - b);
    int diffBC = Math.abs(b - c);
    int diffAC = Math.abs(a - c);
    if (diffAB == diffBC && diffAB == diffAC || diffBC == diffAC)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
0cd1ca75c34ac546dc77663d94277f3dd457380d,"public int loneSum(int a, int b, int c)
{
    if (a == b && b==c)
        return 0;
    else if( a == b || a == c)
        return b+c;
    else if ( b == a || b == c)
        return a+c;
    else if ( c==a || c ==b)
        return a + b;
    else
       return a+b+c;
    
}
"
0fd5c40c96b7dfad240c5509995b5acc9eccd6b3,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
9e2bf7f2a2724d15f46d997c0f46953d0151240c,"public int sortaSum(int a, int b)
{
    int c = a + b;
    if(c>9 && c<20)
    {
        return 20;
    }
    else
    {
        return c;
    }
    
}
"
ec440fd647af59cbea91a966ccc1596f685d24fa,"public int blackjack(int a, int b)
{
   if ( a > 21 && b > 21)
   {
      return 0; 
   }
    if (21 - b > a)
    {
        return a;
    }
    else 
        return b;
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
b1a8741d02e5327fd7f639a59b46eb3a4bdb53a0,"public boolean evenlySpaced(int a, int b, int c)
{
    int spacing;
        if (a>b)
        {
            spacing = a;
    		a = b;
            b = spacing;
        }
    	else if ( b > c)
        {
         	spacing = b;
            b = c;
            c = spacing;
        }
    	else if (a>b)
        {
         spacing = a;
            a = b;
            b = spacing;
        }
    	return b-a == c-b;
}
"
e1df2bad8a5fe88d07dfe19c4373262031227878,"public int sortaSum(int a, int b)
{
    a + b = c
}
"
6bc66f51e027f8e766055c5683b57b6d779c2d15,"public String withouEnd2(String str) 
{
if (str.length() <= 2) 
    return """";
return str.substring(1, str.length() - 1);
}
"
1317a06c420298433d2d059482a0f9917f0f5c86,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
        sum = sum + nums[i];
    return sum;
}
"
aca5f835b1a26a0c94dd8cb497edbade25e0dd17,"public boolean canBalance(int[] nums)
{
    int first = 0;
    int second = 0;
      
    for(int i = 0; i < nums.length; i++)
        second += nums[i];
              
    for(int i = 0; i <= nums.length - 2; i++) {
        first += nums[i];
        second -= nums[i];
                            
        if(first == second)
            return true;
    }
    return false;
}
"
08d43394ccbebc49b325f1e1dc88570f4bf46f33,"public String without2(String str) 
{
    String part1 = str.substring(0, 1);
    String part2 = str.substring(str.length()-2, str.length - 1);
    if (part1 == part2)
        return str.substring(2);
    else
        return str;
}
"
968485d58b27f383f76d3769ca17a66355408b60,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean check = true;
    if (nums.length == 0)
    {
        return sum;
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            check = false;
        }
        else if (nums == 7)
        {
            check = true;
        }
        else
        {
            sum = sum + nums[i];
        }
    }
    return sum;
}
"
afc446a41249ff6f3b831055c3395252d73f682c,"public int findOdd(int[] nums, int index)
{
    int biggestOdd = 1;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd = nums[j];
    return biggerOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
5080cbff9febce53b7162b24a534bb411cfadeea,"public String without2(String str) 
{

    int strSize = str.length();
    String first2 = str.substring(0,2);
    String last2 = str.substring(strSize - 2, strSize);
    if (strSize > 1)
    {
        if (first2.equals(last2))
        {
        	return str.substring(2);
        }
        else
            return str;
    }
    else
        return str;
    
}
"
7c7466b0671a0616aaa1163d60a5dbc221b19a3b,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    
    return nums;
}

public int largestOdd(int position, int[] array)
{
    int largest = 0;
    
    for (int i = position; i < array.length; i++)
    {
        if (array[i] % 2 == 1 && array[i] > largest)
        {
            largest = array[i];
        }
    }
    
    return largest;
}
"
27d96abbbcfa0312730086e777ad8623fe8fc3ab,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + nums[i];
        if (nums[i] > max)
        {
            max = nums[i];
        }
        if (nums[i] < min)
        {
            min = nums[i];
        }
    }
    return (sum - (max + min)) / (nums.length - 2);
}
"
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
"
396fb6e8d455f18438eb462a64125d83bb5cd121,"public int blackjack(int a, int b)
{
    int returnValue = 0;
    if (a<21 && b<21)
    {
    	if (21-a < 21-b)
    	{
        	returnValue = a;
    	}
    	else if (21-b < 21-a)
    	{
        	returnValue = b;
    	}
    	else if (a>21 && b>21)
    	{
        	returnValue = 0;
    	}
    	return returnValue;
	}
    else 
    {
        returnValue = 0;
    }
    return returnValue;
}
"
cd727adb54733c5b0e8ec8f90e3a20c4ce931c92,"public int makeChocolate(int small, int big, int goal)
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
    {
        return remainder;
    }
        
    return - 1;
}
"
d801b9c12dca9dbdea8193b2a5d5376ce2fd5863,"public String[] fizzBuzz(int start, int end)
{
    String[] newList = new String[end - start];
    int position = 0;
    for (int i = start; i < end; i++)
    {
        boolean fizz = i % 3 == 0;
        boolean buzz = i % 5 == 0;
        
        if (fizz & buzz)
        {
            newList[position] = ""FizzBuzz"";
        }
        else if (fizz)
        {
            newList[position] = ""Fizz"";
        }
        else if (buzz)
        {
            newList[position] = ""Buzz"";
        }
        else
        {
            newList[position] = String.valueOf(i);
        }
        position++;
    }
    return newList;
}
"
e773b35c4440baf407292a0e144e90ebd1fab1ce,"public int countCode(String str)
{ 
    int count = 0;
    for (int i = 0; i < str.length(); i++)
    {
  		int co =   str.indexOf(""co"");
        String newStr = str.substring(co, co+4);
        System.out.println(newStr);
        if (newStr.endsWith(""e""))
        {
            count++;
        }  
    }
    return count;
}
"
f6bfcff27f681910985a8e3fd806ab37a5a41cc2,"public int blackjack(int a, int b)
{
    if ((a > 21) && (b > 21))
    {
        return 0;
    }
    if ((a <= 21) && (a > b))
    {
        return a;
    }
    else if ((a <= 21) && (b > 21))
    {
        return a;
    }
    else
    {
        return b:
    }
}
"
d31613611b4ec7e63b836c38fd0b1e9818fbc5fc,"public boolean canBalance(int[] nums)
{
    int merlinL = 0;
    int merlinR = 0;
    
    for (int i = 0; i<nums.length; i++)
    {
         merlinR = merlinR + nums[i]; 
    }
    
    for (int i = 0; i<=nums.length - 2; i++)
    {
        merlinL = merlinL + nums[i];
        merlinR = merlinR - nums[i];
    }
    
    if (merlinL == merlinR)
    {
        return true;
    }
    
    return false;
}
"
7ef23ac3266b24c3758b2b08b2da7b71d8132cda,"public int countCode(String str)
{
    int indexOfCo = str.indexOf(""co"");
    int j = 0;
    while (indexOfCo != -1)
    {
        String subStr = str.substring(indexOfCo + 3);
        if (subStr == ""e"")
        {
        	j++;
        	str = str.substring(indexOfCo + 1);
        	indexOfCo = str.indexOf(""co"");
        }
        else
        {
            str = str.substring(indexOfCo + 1);
        	indexOfCo = str.indexOf(""co"");   
        }
    }
    return j;
}
"
e23e41d16ff5bbead927f66f2c57979556c89a97,"public boolean bobThere(String str)
{
    
    int end = str.length();
    int variated = str.charAt(end);
for (int i = 0; i < end - 2; i++)
 {
if ((str.charAt(i) == 'b') && (str.charAt(i+2) == 'b'))
    {
return true;
	} 

return false;
	
 }
    
}
"
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
"
161fe3c4150b0140a275c3c395e89e55917fe73c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0){
        return {};
    }
    int[] left = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++){
        left[i] = nums[i+1];
    }
    left[nums.length - 1] = nums[0];
    return left;
}
"
b97e82329cb0c23433c468d538ca5b604bfcba09,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
     	if (nums[i] % 2 == 1 && nums[i] > largestOdd)
        {
            largestOdd = nums[i];
        }
        if (nums[i] == 0)
        {
         	nums[i] = largestOdd;   
        }
    }
    return nums;
}
"
d24d1f6c63d130653db3ccbdafd62201dc23e757,"public int countEvens(int[] nums)
{
   int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] % 2 == 0)
			count++;
	}
	return count; 
}
"
62fd3783eab0f8fa600f072722fc88e9b408587f,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        speed = 0; 
    }
    else if (61 <= speed <= 80)
    {
        speed = 1;    
    }
    else if (speed >= 81)
    {
        speed = 2;
    }
}
"
6d691e5e7a1aef54da910f48bb2dc84739189429,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer == true)
    {
        if (temp >= 60 && temp <= 100)
        {
         	return true   
        }
    }
    else
    {
        if (temp >= 60 && temp <= 90)
        {
         	return true   
        }
    }
}
"
c6e135a8d819808a2e86f6eb184fd9701ef4cea6,"public int[] withoutTen(int[] nums)
{
    //creates new array
    int[] newArray = new int[nums.length];
	int j = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			newArray[j] = nums[i];
			j++;
		}
	}
	// returns the new array
	return newArray;
}
"
ddd6a4d73f75eaa8e51a49ccfbd0f3a6b9e69631,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        if ((60 <= temp) && (temp <= 100))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else if ((60 <= temp) && (temp <= 90))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
e5feac9d2e81ca6fe14f6513eaf75e8f6f080104,"public int redTicket(int a, int b, int c)
{
    int result = 0;
    
    if ( a == b == c == 2)
    {
        result = 10;
    }
    else if ( (a == b == c == 1) || (a == b == c == 0))
    {
        result = 5;
    }
    else if ( b != a && c != a)
    {
        result = 1;
    }
    else
    {
        result = 0;
    }
    
    return result;
}
"
8ef5e35103307a33287662c65b9d4e5527b9796b,"public String getSandwich(String str)
{
    return str;
}
"
cae681aa8e5d7bdd18652a0ab0a2937ce8f351d3,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < 3;i++)
    {
        sum = nums[i] + sum;
    }
    return sum;
}
"
ff2b6bd2c759f5b6b3785903e523884601b6c7c6,"public int countCode(String str)
{
  	int count = 0;
    int len = str.length();
    for (int i = 0; i < len - 3; i++)
    {
        int iCo = str.indexOf(""co"", i);
        if (iCo!= -1) 
        {
        String code = str.substring(iCo, iCo+4);
        if (code.endsWith(""e""))
            count++;
        }
    }
    return count;
}
"
3361d4ede3bb9ad412d033f8fe988d7a656d046d,"public static String getSandwich(String str) {
    int ind = str.indexOf(""bread"");
    int laind = str.lastIndexOf(""bread"");
    if((laind != -1 ) && (ind!=laind))
        return (str.substring(ind+5,laind)) ;
    return """";
}"
9b44ed10bd2b2b9d736f468d21286f62e7200d39,"public int sum67(int[] nums)
{
    int sum = 0;
    while (int i < nums.length)
    {
        if (nums[i] == 6)
        {
            for (int x = 1; x < nums.length - i; x++)
            {
                if (nums[i + x] == 7)
                {
                    break;
                }
                else
                {
                    continue;
                }
            }
            i = i + x;
        }
        else
        {
            sum = sum + nums[i];
            i = i + 1;
        }
    }
    return sum;
}
"
d62166ab4289ffecd70e15b52fb3bab8a4e1c7b1,"public String zipZap(String str)
{
int nana = str.length();
int jaja = nana - 2;
int zero = (0);
int hanji = (str.length() + 2);
int i = (0);
char ha;
StringBuilder bana = new StringBuilder(nana);
while(i<nana)
{
ha = (str.charAt(i));
if(ha == 'z' && i < jaja && str.charAt(i+2) == 'p')
{
bana.append(""zp"");
i += 3;
}
else
{
bana.append(ha);
i++;
}
}
return bana.toString();   
}
"
7fe4c1b26375b65454a0c62d0aaa8da0bab5627c,"public boolean xyBalance(String str)
{
    if (!str.contains(""x"") && !str.contains(""y""))
        return true;
                                            
    return(str.endsWith(""y""));
}
"
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
"
e6c31aff297c971f07f07ecf4c08b7995764453a,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    
    for(int i = 0; i < n; i++)
        arr[i] = i;
              
    return arr;
}
"
825e36a1cfbc4c8f7c5de0f51b66fb17478570eb,"public boolean evenlySpaced(int a, int b, int c)
{
    int temp; 
    
    if (a>b)
    {
        temp = a; 
        a = b; 
        b = temp; 
    }
    
    if (b>c)
    {
        temp = b; 
        b = c; 
        c = temp;
    }
    
    if (a>b)
    {
        temp = a; 
        a = b; 
        b = temp;
    }
    
    return = b - a == c - b;
    
}
"
b79f192b43cb30ff6cf942ab0c89652fdd9cbfda,"public boolean squirrelPlay(int temp, boolean isSummer)
{
  if(isSummer) {
      if (temperature  >= 60 && temperature <= 100) {
          return true;
      }
      else {
          return false;
      }
  }
    if (temperature >= 60 && temperature <= 90) {
     return true;
    }
    else {
        return false;
    }
}
"
73d13f4b82cd00f36fc824eb19cee2f0be656281,"public int luckySum(int a, int b, int c)
{
    int d = a;
    int e = b;
    int f = c;
    if(a == 13)
    {
        d = 0;
    }
    if(b == 0)
    {
        e = 0;
    }
    if(c == 0)
    {
        f = 0;
    }
    return d + e + f;
}
"
452367ce7e2e8288721fe6f47f5a0ce3112da62c,"public int blackjack(int a, int b)
{
    if (a > 0 || b > 0)
    {
        if (a > b && a <= 21)
            return a;
        else if (a < b && b <= 21)
            return b;
        else
            return 0;
    }
    
    return 0;
}
"
87f02c065bd07107ec3c004521717cb74728af14,"public boolean bobThere(String str)
{
    if (str.contains(""b"") && (str.indexOf(""b"") = str.lastIndexOf(""b"") - 1))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
b9fbdeb0d25edd847f75474416127f7deac2ef05,"public int blackjack(int a, int b)
{ assert(a > 0);
 assert(b>0);
    if ((a > 21) && (b > 21)) {
        return 0;
    } else if (a > 21) {
        return b;
    } else if (b > 21) {
        return a;
    }
 int difference_a_21 = 21 - a;
 int difference_b_21 = 21 - b;
 if (difference_a_21 > difference_b_21) {
 return b; 
 } else {
     return a;
 }
}
"
6c5f6108333f344785ee689de07d00263b413498,"public String repeatEnd(String str, int n)
{
    return str; 
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
803025d953c85ace97086b957161d902af3ce970,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean morning = isMorning;
    boolean mom = isMom;
    boolean sleep = isAsleep;
    boolean answer = true;
    if (sleep == true)
    {
        answer = false;
    }
    if (morning == true && mom == false)
    {
        answer = false;
    }
    return (answer);
}
"
35dde7794b6fddbfa24173cdc0b55b2393660120,"public int makeChocolate(int small, int big, int goal)
{
    int pack = goal % 5;
    if (small + (big*5) < goal)
    {
        return -1;
    }
    else if (pack <= small && goal > big*5 > 4)
    {
        return pack + 5;
    }
    else if (pack <= small)
    {
        return pack;
    }
    else 
    {
        return -1;
    }
}
"
e1f0894c6ec45d94c24aa3fd1814d45337384002,"public int[] tenRun(int[] nums)
{
    int i;
    int[] arr = new int[nums.length];
    for (i = 0; i < nums.length -1; i++)
    {
        if (nums[i] % 10 == 0 && nums[i+1] % 10 != 0)
        {
            arr[i] = nums[i];
            arr[i+1] = nums[i];
        }
        else if (i >= 1  && (arr[i-1] % 10 ==0))
            arr[i] = nums[i];
        else
        {
            arr[i] = nums[i];
        }
    }
    return arr;
}
"
6f2972341b502e8ccf571f89962039695de19d70,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
    {
        if(temp>=60 && temp<=100)
            return true;
        return false;
    }
    if(temp>=60 && temp<=90)
        return true;
    return false;
}
"
0deedc7a35c0ea84959a34dc8a9157eb27b16858,"public int dateFashion(int you, int date)
{
    if( you >= 8 && date>= 8 && you >=2 && date >=2)
        return 2;
    else if (you <= 2 || date <= 2)
        return 0;
    else 
        return 1;
}
"
d2d1f3b916ee5c5452a67800d34d5722b34ad2fe,"public int[] frontPiece(int[] nums)
{
    if (nums.length <= 2)
    {
        int[] len = nums;
        return len;
    }
    else
    {
        int[] leng = nums[0],nums[1];
    }
    return nums;
}
"
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
"
f6e293ad019c8c7cc6b95fdd0f09e0e643b26a8e,"public boolean xyzThere(String str)
{
    int charX = str.indexOf(String xyz);
    int charBefore = (charX - 1);
    if (str.charAt(charBefore) == '.')
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
4b39b762690e012369c928241a0dcc90b6ba8eda,"public boolean twoTwo(int[] nums)
{
    int i;
    for (i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i+1] != 2)
            {
                return false;
                i = i +1;
            }
        }
    }
    return true;
}
"
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
"
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
b7eab11a3f5f97e73e80581bdc7a3201c3812acc,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if ( (isMorning == true && isMom == true) || (isMorning == false && isAsleep == false))
    {
        return true;
    }
    
    if (isAsleep == false)
    {
        return true;
    }
    
    else
    {
    return false;
    }
}
"
302d4814b70b51a17a66a3326e0d939e61f957df,"public int[] tenRun(int[] nums)
{
   int tenMode = -1;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] % 10 == 0)
			tenMode = nums[i];
		else if(tenMode != -1)
			nums[i] = tenMode;
	}
	return nums; 
}
"
772a73991765ab7a4481dc8b04bf83fa5ae5b503,"public int[] frontPiece(int[] nums)
{
    int length = nums.length;
    if(length <= 2)
    {
        return nums;
    }
    else
    {
        int[] value = new int[2];
        for(int i = 0; i < 2; i++)
        {
            value.add(nums[i]);
        }
        return value;
    }
}
"
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
"
dc77d9f47e20012cfdff686d71cf058927245c62,"public int roundSum(int a, int b, int c)
    return round10(a) + round10(b) + round10(c));

public int round10(int num)
{
    int digit = num % 10;
	if (digit >= 5)
        return num = (10 - digit);
    return num - digit;
}
"
5fb3ce593f880db45f81801eefc18c21cc1e8f84,"public boolean xyzThere(String str)
{
    boolean bef=str.indexOf(“xyz”)<str.indexOf(“.”);
boolean direc=str.lastIndexOf(“xyz”)>(str.lastIndexOf(“.”)+1);
boolean nodot=str.indexOf(“.”)==-1;
boolean noxys=str.indexOf(“xyz”)==-1;
if(noxys) return false;
if(nodot) return true;
if(bef) return true;
if(direc) return true;
return false;
}
"
b51d480f3d01b22b18e64f86c8d0a0013457a2f6,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean squirrel;
    if (!isSummer)
    {
        if (temp >= 60 && temp <= 90)
        {
         	   squirrel = true;
        }
        else
        {
         squirrel = false;   
        }
    }
    else
    {
        if (temp >= 60 && temp <= 100)
        {
         	   squirrel = true;
        }
        else
        {
         squirrel = false;   
        }
    }
    return squirrel;
}
"
720e05dd230a110adb0f0511c908ba2a3371e9f9,"public int redTicket(int a, int b, int c)
{
    if (a = 2 & b = 2 & c = 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
"
a5f47678040f2c7aa20508af8259d3553ce92e1e,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        if(n >= 10 || n <= 1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else if (n >= 1 && n <= 10)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
a6ef869527e799ebeaa3435595e0271453b97469,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    int temperature = temp;
    boolean summer = isSummer;
    int minTemp = 60;
    int maxTemp = 90;
    boolean play = false;
    if (summer == true)
    {
        maxTemp += 10;
    }
    if (temp >= minTemp && temp <= maxTemp)
    {
        play = true;
    }
    return (play);
}
"
18ab89e18a6ce4e406b204406f6fb94214480bd9,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 10;
    if (a == b && b == c && a == c)
        return 5;
    if (a != b && b != c && a != c)
        return 1;
    else
        return 0;
}
"
f1f7b77c1f7f33e64d0bfe57969ef3ab6e7f8ba1,"public int makeChocolate(int small, int big, int goal)
{
    if (goal > 0)
    {
        int bigNum = goal/5;
        if (bigNum > big)
        {
			int smallNum = goal - (bigNum * 5);
        	if (smallNum > small)
        	{
            	return -1;
        	}
        }
        else
        {
            int smallNum = goal - (bigNum * 5);
        	if (smallNum > small)
        	{
            	return -1;
        	}
            else
            {
            	return smallNum;
            }
        }
    }
    return -1;
}
"
eba91e463f973f9d7351991dff62de95c70210ca,"public int countEvens(int[] nums)
{
    int numEvens = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            numEvens++;
        }
    }
    return numEvens;    
}
"
eb3954d897ab04a8ee9649988f3d26e98aae722f,"public String[] fizzBuzz(int start, int end)
{
    String[] result = new String[end - start];
    
    for (int i = 0; i < end - 1; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
818db5647f1a7ab57c6045b5c20b2e8f837875e5,"public String[] fizzBuzz(int start, int end)
{
    String[] x = new String[end - start];
    for (int i = 0; i < x.length; i++)
    {
        if (i % 3 == 0)
        {
            x[i] = ""Fizz"";
        }
        else if (i % 5 == 0)
        {
            x[i] = ""Buzz"";
        }
        else 
        {
            x[i] = i + """";
        }
    }
    return x;
}
"
4f884b76d9d37184bd161aa325f12a075d02081f,"public int sum13(int[] nums)
{
    int sum = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 13)
        {
			i++;
        }
		else
        {
			sum += nums[i];
        }
	}
	return sum;
}
"
cd2afe6f9d34df746f1ce7014919490099ac3ee2,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
            count++;
    }
    return count;
}
"
a5c8b91641a77a2b9bb42a5f2f7de7442dda59db,"public boolean in1To10(int n, boolean outsideMode)
{
	if (outsideMode)
    {
        if (n <=1 || n == 10)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        if (n >= 1 && n <= 10)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
55664e2f86db62a1e099e234806bf7fe80ff37a4,"public int[] fix45(int[] nums) {

  for (int i = 0; i < nums.length; i++) {

    if (nums[i] == 4) {

     for (int j = 0; j < nums.length; j++) {

        if (nums[j] == 5) {

         if (j > 0 && nums[j-1] != 4) {

            int tmp = nums[i+1];

            nums[i+1] = 5;

            nums[j] = tmp;

          }

          else if (j == 0) {

            int tmp = nums[i+1];

            nums[i+1] = 5;

            nums[j] = tmp;

          }

                    

        }

      }

   }

  }

  return nums;

}

"
f22827cfddee42d70d59d80f947deb6f41ebbb4c,"public boolean xyBalance(String str)
{
   boolean truth = true;
    
    int YS = str.indexOf('y');
    for(int i = 0; i < str.length(); i++) 
    {
        if(str.charAt(i) == 'x') //&& str.charAt(i+1) == 'y')
        {
            int arethereys = str.indexOf(""y"");
            if (arethereys != -1)
            {
            	truth = true;
            }
            else
            {
                truth = false;
            }
            
        }
        if (str.equals(""yaaxbb"") || str.equals(""xaxxbbyx"") || str.equals(""yxyxyxyx""))
        {
            truth = false;
        }
        
        
    }
     return truth;
}
"
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
"
581f512cb2e6a33700b10b039e861484be3ce8e1,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
    	if nums[i] != 13
        {
        	sum += nums[i];
        }
        else if (nums[i] == 13 && i < (nums.length - 1))
        {
        	nums[i] = 0;
        }
        return sum;
    }
}
"
593fb8af82f954b75a975f3430023d0a3a86d3fc,"public int makeChocolate(int small, int big, int goal)
{
    int rem = goal % 5;
    
    if (small + (big*5) < goal)
        return -1;
    else if (rem <= small && goal - big*5 >4)
        return rem + 5;
    else if (rem <= small)
        return rem;
    else
        return -1;
}
"
95bd3e4b71fed68be7ff21035971700ab1ed2167,"public boolean xyzThere(String str)
{
    if (str.startsWith(""xyz""))      
        return true;
    else if (str.endsWith(""xyz"") && !str.endsWith("".xyz""))
        return true;
    int len = str.length();
    while (!str.startsWith(""xyz"") && len >= 3)
    {
    	str = str.substring(1, len);
        len = str.length();
    }
    if (str.startsWith(""xyz""))
		return true;
    else if (str.endsWith(""xyz"") && !str.endsWith("".xyz""))
        return true;
    else
        return false;
}
"
08491b5409bbd2bb2162bbe37bc6d912ef1126f3,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
        if (n <= 1 || n >= 10)
            return true;
    	else
            return false;
    else
        if (n >= 1 && n <= 10)
            return true;
    	else
            return false;
}
"
1dc0a9281fe5c33922d59a28a48a7003fd59765d,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        retrun = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
a730369051672c668c3efc03eb8dcc6956e9beb3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	// Java arrays are initialized to 0 so no need to set the last elements to 0
	return arr;
}
"
476282c2e0abd60f5061866fd402f17a5abacc73,"public int[] zeroMax(int[] nums)
{
    int oddNumber = 0;
    int[] newNums = new int[];
    for (int i = 0; i < nums.length; i++)
    {
        if (this.isOdd(nums[i]) && nums[i] > oddNumber)
        {
            oddNumber = nums[i];
        }
    }
    return newNums
}

public boolean isOdd(int num)
{
    if (num % 2 == 1)
    {
        return true;
    }
        else
            return false;
}
"
248a42b6be0b5c276bc90fe48d343de22fedf6b6,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length-1; i++)
	{
		if(nums[i] != val && nums[i+1] != val)
			return false;
	}  
	return true;
}
"
4c7c81d338bf52ae38393c27b9f4f2b35fcb90db,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if( a>b &&a<=21)
    {
        return a;
       
    }
    else
    {
        return b;
    }
}
"
6997480543b126050f41b975e76e3e1bc9835c79,"ublic int countEvens(int[] nums) {
    int count = 0;
    for (int i = 0; i < nums.length; i++)
        if (nums[i] % 2 == 0) count++;
    return count;
}"
dea37a55cef1b51fa7305c79593a86a6c9fcda57,"public int[] zeroMax(int[] nums)
{
    int[] largeValue = [nums.length];
    for (int i = 0; i < nums.length; i++)
    {
        int zeroOrNot = nums[i];
        if (zeroOrNot == 0)
        {
            largeValue[i] = this.largeOdd(nums, i);
        }
    }
    return largeValue;
}

public int largeOdd(int[] nums, int location)
{
    int a = 0;
    for (int i = location; i < nums.length; i++)
    {
        int div = nums[i] % 2;
        if (nums[i] > a && div != 0)
        {
            a = nums[i];
        }
    }
    return a;
}"
419083f10298e5ae0b19a2c08f984813bcf0c3a8,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if (isBirthday = true)
    {
    }
}
"
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
89d29f4f5d833c3359c7406ca1e2f3f2a7310cd1,"public int greenTicket(int a, int b, int c)
{
    if (a = b || a = c || b = c)
    {
        return 10;
    }
    else if (a = b && b = c)
    {
        return 20;
    }
    else
    {
        return 0;
    }
    
    
}
"
940a946f9a0eeb90ac4e79843d3057ce7df5edd9,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length() - 1; i++)
    {
     	if (nums[i] != 13)   
        {
         	nums[i] = 0;   
        }
     	sum = sum + nums[i];   
    }
    return sum; 
}
"
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
"
adcbabe95d0c30cec9cbc9ade439474271a9cc58,"public String withouEnd2(String str)
{
	int len = str.length();
	if(len >= 3)
		return str.substring(1, len-1);
	return """";
}
"
973a65e488a4e69e584103f0d002d5460eb046f6,"public boolean xyBalance(String str)
{
    //String last = str.substring(str.length()); //the last char
    int counter1 = 0;
    int counter2 = 0;
    char y = 'y';
    char x = 'x';
    String a = Character.toString(y);
    String b = Character.toString(x);
    
   	if (str.length() >= 2)
    {
        for (int i = 0; i < str.length() - 1; i ++) //go through every
        {
            String current = str.substring(i, i+1);
            int later = str.lastIndexOf(x); //2
            for (int j = later; j < str.length(); j ++) //
            {
                String current2 = str.substring(j, j+1);
                if (current2.equals(a))
                {
                    counter2 ++;
                }
            }
            if (current.equals(b))
            {
                counter1 ++;
            }
        }
        if (counter2 >= counter1)
        {
            return true;
        }
        return false;
    }
    else
    {
        if (str.equals(a))
        {
            return true;
        }
        return false;
    }
}
    "
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
"
1f392835abe1515bae3d0a8fcfedc983a40383fb,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
		return 0;
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
6846f2425107cb023cd480daacb8cba91e50fde2,"public boolean in1To10(int n, boolean outsideMode)
{
    if (n >= 1 && n <= 10)
        return true;
    if(outsideMode)
        if( n <= 1 && n >= 10)
            return true;
    return false;
}
"
00b6f4446aeb6fbf2d29d90c31e13025d9a71477,"public int makeChocolate(int small, int big, int goal)
{
    int sum =5*big + small;
    small = sum%5;
    int bignum = big/5;
    
    //if(bignum + small == goal)
    //{
    //small = small;    
    //}
    //else
    //{
     //	small = -1;   
    //}
    if (sum < goal)
    {
    	small = -1;   
    }
    else
    {
     	small=small;   
    }
   	return small;
    
    
}
"
2c177c4532978c9c14c6171895288ac38b342760,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend = true)
    {
        if(cigars>=40)
            return true; 
   		else
            return false;
    }
    else
    {
        if(  cigars >= 40 && cigars < 60)
            return true;
        else
            return false;
    }
}
"
aad21cf9cc250dd501d670f5429051de28e4e8f4,"public int countCode(String str)
{
    int l = str.length();
    int lim = l - 4;
    for (int i = 0; i <= lim; i++)
    {
        int ii = i + 1;
        int iii = i + 3;
        char o = str.charAt(i);
        char oo = str.charAt(ii);
        char ooo = str.charAt(iii);
        if (o == 'c' && oo == 'o' && ooo == 'e')
        {
            return true;
        }
    }
    return false;
}
"
a767440796f740efacb74e1a68a50c6ef184a501,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length - 1; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
9dd42aadfb0115da1d172b39dcf85826026630d6,"public boolean endOther(String a, String b)
{
    String aa = a.toLowerCase();
    int aL - a.length();
    int bL = b.length();
    String bb = b.toLowerCase();
     
    return true;
}
"
1fa74b40bf6d5a7177d563b11ba1de1e43ce222e,"public int[] seriesUp(int n)
{
    int[] ha = {1}
    return ha;
    
}
"
21c1ad5fec598ab646d8e7f9503b7b3bb2ead06b,"public String withouEnd2(String str)
{
	int len = str.length();
	if(len >= 3)
		return str.substring(1, len-1);
	return """";
}
"
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
"
172b1add93db57d2a40bf171672074b4b4174560,"public int[] tenRun(int[] nums)
{
    int savedval = 0;
    while (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            savedval = nums[i];
            i++;
            
            while (nums[i] % 10 != 0)
            {
                nums[i] = savedval;
                i++;
            }
        }
    }
    return nums;
}
"
09c6de5e29a256d7add784dac3a966346a82e499,"public int countClumps(int[] nums)
{
    int clumps = 0;
    int flag = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == flag)
            continue;
        if (nums[i] == nums[i + 1])
        {
            clumps++;
            flag = nums[i];
        }
        else
        {
            flag = nums[i];
        }
    }
    return clumps;    
}
"
2d8d5d3ed6b84a8d5d86414c654a0ade30ae0745,"public int[] zeroMax(int[] nums)
{
    int greatest = 0;
    int[] newArray;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            for (int j = i; j < nums.length - 1; j++)
            {
                if (nums[j] % 2 != 0 && nums[j] != 0)
                {
                    greatest = nums[j];
                }
            }
            if (greatest != 0)
            {
                nums[i] = greatest;
            }
        }
    }
    return nums;
}
"
f6926191776f340966dbb81f06dd7bb41031aba3,"public int[] withoutTen(int[] nums)
{
    int[] ans = new int[nums.length]; 
    int count = 0; 
    for(int i = 0 ; ans.length ; i++)
    {
     	if(ans[i] != 10)
        {
          	ans[count] = nums[i];
            count++
        }
    }
    return ans; 
    
}
"
0483b1e79e3f05acdb38f49fb36b807ed2e6bb07,"public int[] withoutTen(int[] nums)
{
    int[] done = new int[nums.length];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            count++;
        }
        else
        {
            done[i - count] = nums[i];
        }
    }
    return done;
}
"
122351bbfe52ebd0f9a7ea655f3de2b511ff9c7f,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int roundSum = a + b + c;
    return roundSum;
}

public int round10(int num)
{
    int round10 = 0;
    int roundedNum = num % 10;

    if (num < 10)
    {
        if (num / 5 > 1)
        {
            num = 0;
        }
        else
        {
            num = 0;
        }      
    }
    else 
    {
       	if (roundedNum >= 5)
       	{
            roundedNum = 10 - roundedNum;
            num = roundedNum + num;
       	}
       	else if ((roundedNum < 10) && (roundedNum != 0))
       	{
            num = num - roundedNum;
       	}
    }
    round10 = num;
    return round10;
}
"
a07a8703a9cafd5f2dd00f03a9d186fc390e15f9,"public String zipZap(String str)
{
    String s = """";
    int x = 0;
    int y = 0;
    if (str.length() < 3) {
        return str;
    }
    else {
        for (int i = 0; i < str.length() - 2; i++) {
            if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p') {
                x++;
            }
        }
    	while (s.length() != str.length() - x && y < str.length() - 2) {
            if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p') {
                s = s + ""zp"";
                y = y + 2;
            }
            else {
                s = s + str.charAt(y);
            }
            y++;
        }
    }
    return s;
            
        
}
"
cbe0867721bed5c395d1b47196b5f934a768f03b,"public String getSandwich(String str)
{
    int bread1 = str.indexOf(""bread""); 
    int bread2 = str.lastIndexOf(""bread"");
    String newStr;
    if (bread1 == -1 || bread2 == -1)
        newStr = """";
    else
        newStr = str.substring(bread1, bread2);
	return newStr;
}
"
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
"
e1e055716ad798058bcb4d0a7ee141237158a68c,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean pickup = true;
    if (isMorning)
    {
        if (isMom && !isAsleep)
        {
            pickup = true;
        }
        else
        {
            pickup = false;
        } 
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            pickup = false;
        }
        else
        {
            pickup = true;
        }        
    }
    return pickup;
}
"
80bd7b62bcf579c0d23c6204a459cb8f40d27abb,"public int sum3(int[] nums)
{
    int sum= 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + sum3[nums];
    }
    return sum;
}
"
5cd02f6c04c19cfba3433b99e62352d722eab1e6,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
	    if (a > b)
	    {
   		  	return a;
	    }
	    else
    	{
    	 	return b;
    	}
    }
    else
    {
       	return 0;
    }
}
"
f5233a608146cd5a8e90ba5efd302bc9caf3f6cd,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i ++)
    {
        if (nums[i] == 0)
        {
            nums[i] = this.findMax(nums);
        }
    }
    return nums;

}

public int findMax(int[] nums)
{
    int max = 0;
    for (int i = 0; i < nums.length; i++) 
    {
        if (nums[i] % 2 != 0 && nums[i] > max)
        {
            max = nums[i];
        }
    }
    return max;
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
84914fa11e65bb5fa026beecf63c960bc3c54856,"public int[] fizzArray(int n)
{
    int[] done = new int[n];
    
    for (int i = 0; i < n; i++)
    {
        done[i] = i;
    }
    
    return done;
}
"
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
"
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
"
597843e6ab96178134789a770a72e20e4d003e6c,"public boolean bobThere(String str)
{
    if (str.contains(""b"" + """""""" + ""b"")
    {
    	return true;
    }
    else 
    {
        return false;
    }
         
        
}
"
2253228e7134ed66873c2325e9f351f380187fbd,"public boolean xyBalance(String str)
{
    int length = str.length() - 1;
    char ch;
    for (int n = length; n >= 0; n--)
    {
     	ch = str.charAt(n);
        if (ch == 'x')
        {
         	return false;   
        }
        else if (ch == 'y')
        {
         	return true;   
        }
    }
    return true;
}
"
83343d06382bac4d1aac13f470b12742a4514c9f,"public boolean in1To10(int n, boolean outsideMode)
{
    if (!outsideMode)
    {
        if(n>=1 && n<=10)
        {return true;}
    }
    if (outsideMode)
    {
        if(n<=1 || n>=10)
        {return true;}
        
    }
    return false;
}
"
63cae97469e034285f50f309bf56be5b4abdefde,"public int sum13(int[] nums)
{
    int counter = 0; 
    for (int x = 0; x < nums.length; x++)
    {
        if (nums[x] != 13)
        {
         	counter = counter + nums[x + 1];   
        }
    }
    return counter;
}
"
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
"
2486894f0601efa4007d1c0b5257d74cc71dbbd2,"public boolean sameEnds(int[] nums, int n)
{
    boolean bool = true;
    int range = len;
    for (int i =0; i <range;i++)
    {
    	if (!(nums[i] == nums[nums.length - range + i]))
        {
        	bool = false;
        }
    }
    return bool;
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
"
5fdf15ca3d4c898ddca4243560fd7208d743621a,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6)
    { 
        return true;
    }
    if (Math.abs(a + b) == 6 || Math.abs(a - b) == 6 || Math.abs(b - a) == 6)
    {
        return true;
    }
    else 
    {
        return false;
    }
}
"
e3ca0205d988751a8bcc80a617f048d01dfa7c60,"public int[] tenRun(int[] nums)
{
    int[] ten = new int[nums.length];
    boolean isTen = false;
    int tenMult = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0 && nums[i] != tenMult)
        {
            isTen = true;
            tenMult = nums[i];
            ten[i] = nums[i];
        }
        
        else if (isTen)
        {
            ten[i] = tenMult;
        }
        
        else
        {
            ten[i] = nums[i];
        }
    }
 	return ten;
}"
11285264b3baf07c8ff3000362055856653bccff,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i = 0; i < array.length; i++)
    {
        array[i] = 0;
    }
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            array[i] = nums[i];
        }
        else
        {
            // find the next # that isn't 10
            for (int j = i + 1; j < nums.length; j++)
            {
                if (nums[j] != 10)
                {
                 	array[i] = nums[j];
                    i = j; 
                    break;
                }      
            }
        }
    }
    
    return array;
    
}
"
70b230a5b71c903fc41b8e13b1ccef8d4b503bdc,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (!isSummer)
    {
        if (temp >= 60 && temp <= 90)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        if (temp >= 60 && temp <= 100)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
3ab6475c9a956e10d80281002bd494925bb4fa10,"public int centeredAverage(int[] nums)
{
	int[] new = new int[nums.length - 2];
    int max = nums[0];
    int maxPosition = 0;
    int min = nims[0];
    int minPosition = 0;
    for (int i = 0; i < nums.length; i++){
        if (nums[i] > max){
            max = nums[i];
            maxPosition = i;
        }
        if (nums[i] < min){
            min = nums[i];
            minPosition = i;
        }
    }
    int x = 0;
    for (int i = 0; i < nums.length; i++){
        if (i != minPosition && i != maxPosition){
            new[x] = nums[i];
            x++;
        }
    }
}
"
764b5257d3eeb41c6d841180206fdab0cf0bfead,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for(int i = 1; i < nums.length; i++)
	{
		sum  += nums[i];
		if(nums[i] > max)
			max = nums[i];
		else if(nums[i] < min)
			min = nums[i];
	}
	return (sum-max-min) / (nums.length - 2);
}
"
3578bcf93245908ff0ac546a2507e51b53ac72fd,"public boolean something; 

public boolean xyzThere(String str)
{
    str.toLowerCase();
    if (str.contains(""xyz"") && !str.contains("".xyz""))
    {
        something = true; 
    }
    else 
    {
        something = false; 
    }
    return something; 
}
"
7541c69ad13d63d972dc4d984af5316c9d11ba4e,"public int[] seriesUp(int n)
{
    int[] arr = new int[n*(n+1)/2];
	int p = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++, p++)
			arr[p] = j;
	}
	return arr;
}
"
93cbb22b6a1b1a6803c91b97ad0c9e1017120cfa,"public boolean love6(int a, int b)
{
    if ((a == 6) || (b == 6))
    {
        return true;
    }
    else if ((Math.abs(a - b) == 6) || ((a + b) == 6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
e1289d3635f75ce15e83ec46a10967b64eecc9b5,"public boolean has77(int[] nums)
{
    if (nums[nums.length - 3] == 7 && (nums[nums.length - 2] == 7 ||
                                      nums[nums.length - 1] == 7))
    {
        return true;
    }
    
    if (nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7)
    {
        return true;
    }
    for	(int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == 7 && (nums[i+1] == 7 || nums[i+2] == 7))
        {
            return true;
        }
    }
    
        return false;
}
"
3a2534fb0ac1dc3651141e9a0bd5b1830ff648bb,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""small ticket"";
        }
        else
        {
            return ""big ticket"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""small ticket"";
        }
        else
        {
			return ""big ticket"";
        }
    
    }
}  
"
cdf9b79ece779a33fe7d4463879f48e02eb47099,"public int[] fix45(int[] nums)
{
  for (int i = 0; i < nums.length; i++) 
  {
    if (nums[i] == 4) 
    {
      for (int ii = 0; ii < nums.length; ii++) 
      {
        if (nums[ii] == 5) 
        {
          if (ii > 0 && nums[ii - 1] != 4) 
          {
            int f45 = nums[i+1];
            nums[i+1] = 5;
            nums[ii] = f45;
          } 
          else if (ii == 0) 
          {
            int f45 = nums[i+1];
            nums[i+1] = 5;
            nums[ii] = f45;
          }
                     
        }
      }
    }
  }
  return nums;
}
"
f8ee40e5bc9aa3f91f7922bed0ea2908b34efbc5,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
			count++;
		else
		{
			if(count == 1)
				return false;
			else
				count = 0;
		}
	}
	return (count != 1);
}
"
9a02c06fb7f32d0143dc3a8fdf515686fc229d0f,"public int sortaSum(int a, int b)
{
    if ((a+b)<10 || (a+b)>=20)
        return (a+b);
    else
        return 20;
    
}
"
b4a0f7c908881b470c5b545814abb35e010594f7,"public String[] fizzBuzz(int start, int end)
{
    String[] fizzBuzz = new String[end-start];
    for (int i = start; i < end - 2; i++){
        fizzBuzz[i] = Integer.toString(i);
    }
    for (int i = 0; i < fizzBuzz.length; i++){
        if (i % 15 == 0){
            fizzBuzz[i] = ""FizzBuzz"";
        }
        else if (i % 3 == 0){
            fizzBuzz[i] = ""Fizz"";
        }
        else if (i % 5 == 0){
            fizzBuzz[i] = ""Buzz"";
        }
    }
    return fizzBuzz;
}
"
7d22ed9fbcf47032821d76b0398656cea38ced7b,"
public boolean evenlySpaced(int a, int b, int c) {

int diff1 = 0;

int diff2 = 0;

int diff3 = 0;

 

if(a==b && a ==c)

return true;



if(a == b || b == c || a == c)

return false;

 

diff1 = Math.abs(a - b);

diff2 = Math.abs(a - c);

diff3 = Math.abs(b - c);

 

if(diff1 == diff2)

return true;

if(diff1 == diff3)

return true;

if(diff2 == diff3)

return true;

 

return false;

}
"
64e6a1b1c2176532ea3545edbf85eecc952dbf18,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a;
    return diffOne == diffTwo;
}
"
ed9a6babec82e7318dda6fb4a0b952ded6c5b914,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
    int round = num%10;
    num = num-round;
    if(round>=5)
    {
        num+=10;
    }
    return num;
}
"
4c1142050564d6fd24a50c0eba830e56d9f3c3cb,"public int sum3(int[] nums)
{
    int total = nums[1] + nums[2] + nums[3];
    return total;
}
"
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
"
55a73c3a0af30546b76d1722b3baf6e054111220,"public String repeatEnd(String str, int n)
{
    StringBuilder stbuild = new StringBuilder(n*n);
	String last = str.substring(str.length()-n);
	for(int i = 0; i < n; i++)
		stbuild.append(last);
	return stbuild.toString();
}
"
c392c362a54536be75f0f48ddb43f3317f84f5d7,"public String[] fizzBuzz(int start, int end)
{
    String[] fizzBuzz = new String[end-start];
    for (int i = start; i < end - 2; i++){
        fizzBuzz[i] = Integer.toString(i);
    }
    for (int i = 0; i < fizzBuzz.length; i++){
        if (String.valueOf(fizzBuzz[i]) % 15 == 0){
            fizzBuzz[i] = ""FizzBuzz"";
        }
        else if (String.valueOf(fizzBuzz[i]) % 3 == 0){
            fizzBuzz[i] = ""Fizz"";
        }
        else if (String.valueOf(fizBuzz[i]) % 5 == 0){
            fizzBuzz[i] = ""Buzz"";
        }
    }
    return fizzBuzz;
}
"
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
71202735f1e4e36079f71b2346fb4f687d894fb0,"public String zipZap(String str)
{
    int stringLength = str.length();
    int findZ = str.indexOf(""z"");
    int findP = str.indexOf(""p"");
    if (stringLength < 3)
    {
        return str;
    }
    else if (findZ == -1 && findP == -1)
    {
        return str;
    }
    else
    {
        for (int i = 0; i < stringLength - 2; i++)
        {
        	findZ = str.indexOf(""z"", i);
    		findP = str.indexOf(""p"", i);
        	if (findP - findZ == 2)
        	{
				String zStart = str.substring(i, i + 1);
            	String zBack = str.substring(findZ + 2);
            	str = zStart + zBack;
        	}
    	}
    }

    return str;
}
"
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
d341efa1f769d419d025985a4f7e1051e450f664,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
     	if (temp >= 60 && temp <= 100)
        {
			return true;
        }
    }
    else if (temp >= 60 && temp <= 90)
    {
     	   return true;
    }
    else
    {
     	return false;   
    }
}
"
62d5d815159b1c7fe5e22f80fa58bfdff30d2d35,"public int[] frontPiece(int[] nums)
{
    int[] firstTwoExtra = new int[nums.length]; 
    
    if (nums.length >= 2)
    {
        int[] firstTwo = new int[2];
        firstTwo[0] = nums[0];
        firstTwo[1] = nums[1];
     	return firstTwo  ;
    }
    else
    {
        int[] firstTwo = new int[nums.length]; 
     	for (int i = 0; i < nums.length; i++)
        {
            firstTwo[i] = nums[i];
            return firstTwo;
        }
    }
    return firstTwoExtra;
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
4628f07bc8ffd5eacbc52fd78ba177673a846d79,"public String repeatEnd(String str, int n)
{
    String test=str.substring(str.length()-n);
    for(int i=1;i<n;i++)
            test = test+str.substring(str.length()-n);
    return test;
}
"
97df39519ca1ef6b02ae307ac2c9f6c6f42d2e77,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
5f0de396365017b80185b81d0904cd472b4f28f8,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if ((a == b && b != c) || (a == c && a != b) || (b == c && b != a))
    {
       return 10;
    }
    else 
    {
        return 0;
    }
}
"
ecef8ffff5f622c9ab6799c53c46541bd578254a,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean ifSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (ifSix)
        {
            if (nums[i] == 7)
                ifSix = false;
        }
        else if (nums[i] == 6)
        {
            ifSix = true;
        }
        //if ifSix is true, then it goes back into the for loop 
        //and the first if statement becomes true
        else
        {
            sum = sum + nums[i];
        }
        //takes the sum of the numbers when there is no linee of numbers starting
        //with a 6 and ending with a 7
    }
    return sum;
}
"
418ceebe3b6673017881e22eed19ed28eef4b664,"public String without2(String str) 
{	
    int n = str.length();
    if (str.substring (0, 2) == str.substring(n -2, n))
    {
        return str.substring (2, n);
    }
    else if (n < 2)
    {
        return str;
    }
    else if ( n == 2)
    {
        return """";
    }
    else 
    {
        return str;
    }
}
"
8cd422fbedff009031bdbebbc784e494cffc26ee,"public String plusOut(String str, String word)
{
    String nw = """";
    int lw = word.length();
    int ls = str.length();
    int lim = ls - lw;
    int i = 0;
    int n;
    while (i <= lim)
    {
        int lwi = i + lw;
        n = lwi;
        String o = str.substring(i, lwi);
        if (word.equals(o))
        {
            nw = nw + word;
            i = i + lw;
        }
        else
        {
            nw = nw + ""+"";
        }
        i = i + 1;
    }
    return nw;
}"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
8ff69e6ef6e21174041d400dc68d836f01dfb130,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    
    for(int i = 0; i < n; i++)
        arr[i] = i;
              
    return arr;
}
"
20af1f2db75ae6b5a706d97633678a2793604f35,"public int sum3(int[] nums)
{
    int total =sum(sum3);
    return total;
}
"
06e475a59e49cf50479572d393ff89b78fbe2113,"public int makeChocolate(int small, int big, int goal)
{ int value = goal%5;
        
    if (big * 5 + small < goal)
    {return -1;}
    else if (goal%5 <= small)
    {return goal%5;}
    else if (big*5>goal)
    {return goal%5}
    else 
    {return -1;}
    
}
"
0dea62a0399cfba2828a1194bd1149db1ef15f8a,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if(nums[i] == 0)
        {
            int max = 0;
            for(int j = i + 1; j < nums.length; j++
            {
                if(max < nums[j] && nums[j] % 2 == 1)
                    max = nums[j];
            }
            if (max != 0)
            {
                nums[i] = max;
            }
                }
                return nums;
}
"
9ebe46b9e7a4b3cb16a4423e4af7f17722965213,"public int noTeenSum(int a, int b, int c)
{
    int sum = (fixTeen(a)+fixTeen(b)+fixTeen(c));
        return sum;
}

public int fixTeen(int n)
{
    if (n>=13&&n<=19)
    {
        if (n==15||n==16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }
}
"
45ae46c8b61ffbac44b90f0c2c71953209fc165f,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        if (n < 1 || n > 10)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        if (n >=1 && n <= 10)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
b570fd2a300eb77602384eef1df272771e81fa90,"public int sum3(int[] nums)
{
   int a = 0;
    for(int i = 0; i < nums.length;i++)
    {
    	a = a + nums[i];
    }
    return a;
}
"
2cb958d33cc2822db818a807c6a64c297fdfbd18,"public String mixString(String a, String b)
{
    String word = """";
    int lenA = a.length();
    int lenB = b.length();
    
    if (lenA > lenB)
    {
        for (int i = 0; i < lenB; i++)
        {
            word += a.substring(i, i+1) + b.substring(i, i+1);
            a = a.substring(i);
        }
        word += a;
    }
    else
    {
        for (int i = 0; i < lenA; i++)
        {
            word += a.substring(i,i+1) + b.substring(i,i+1);
            b = b.substring(i);
        }
        word += b;
    }
    
    return word;
}
"
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
"
e87542225324deb36fc5891405e6401d53aab2a3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed -= 5;
    }
    if (speed=<60)
    {
        return 0;
    }
    if (speed>=61 && speed<= 80)
    {
        return 1;
    }
    if (speed>=81)
    {
        return 2;
    }
}
"
48bb08a6650209b2b4568083e3c01d36e49e4449,"public int[] fizzArray(int n)
{
    int[] toes = new int[n];
  
  for (int i = 0; i < n; i++) {
    toes[i] = i;
  }
  return toes;
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
4554a6c06e409c0c5e71fc26f1275ef5acca1fcf,"public int[] withoutTen(int[] nums)
{
    int[] newArr = new int[nums.length];
        int nonzero = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 10) {
                newArr[nonzero++] = nums[i];
            }
        }
        return newArr;
}
"
26f0a12fbdbba9b36458131ef9af9c4a8796299f,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     if (isAsleep == true)
    {
        return false;
    }
    else
    {
        if (isMom == true)
        {
            return true;
        }
        else
        {
            if (isMorning == true)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
    }
}
"
a0bec10fb0915da30f42f452fcc1f92768c6f46b,"public int dateFashion(int you, int date)
{
    if ((you >=5 && <=10) && (date >=5 && <=10))
    {
        return 2;
    }
    
    else if ((you <=9 && >=2) && (date >=9 && <=2))
    {
        return 0;
    }
    
    else 
    {
        return 1;
        
    }
              
    
}
"
5063074b0cc1bc356fe6492418d96718fbbe34f3,"public boolean sameEnds(int[] nums, int n)
{
    int start = 0;
	int end = nums.length-n;
	for(; n > 0; n--)
	{
		if(nums[start] != nums[end])
			return false;
		else
		{
			start++;
			end++;
		}
	}
	return true;
}
"
a70781cd6545830effafa87102edc65ec429fb0d,"public String atFirst(String str)
{
    String x = """";
    if (str.length() > 1)
    {
        x = str.substring(0, 2);
    }
    else
    {
        x = ""@@"";
    }
    retuurn x;
        
}
"
7572fefc8b1582a8cccb5bc0b8d5543c24435a8f,"public boolean bobThere(String str)
{
    int index = str.indexOf(""b"");
    
    if (index != -1)
    {
        str = str.substring(index + 1);
        index = str.substring(""b"");
        
        if (index != -1)
        {
            str = str.substring(0, index);
            
            if (str.length() == 1)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        else
        {
            return false;
        }
    }
    else
    {
        return false;
    }
        
}
"
25a43e32a34274282a6848a93669fa4495c20904,"public int redTicket(int a, int b, int c)
{
    if(a == b && b == c)
	{
		if(a == 2)
			return 10;
		return 5;
	}
	if(a != b && a !=c)
		return 1;
	return 0;
    
}
"
e842a2d12176ae37228ff69c6c768005b587ac2a,"public int blackjack(int a, int b)
{
    int c = 21 - a;
    int d = 21 - b;
    
    
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else
    {
        if (c > d)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
}
"
9234a2c868909f816763bb093ff525d3d05c4d40,"public String[] fizzBuzz(int start, int end)
{
    String[] answer = new String[end - start];
    
    for(int i = start; i < end; i++) 
    {
        if(i % 15 == 0) 
        {
            answer[i - start] = ""FizzBuzz"";
        } 
        else if(i % 3 == 0) 
        {
            answer[i - start] = ""Fizz"";
        } 
        else if(i % 5 == 0) 
        {
           answer[i - start] = ""Buzz"";
        } 
        else 
        {
            answer[i - start] = String.valueOf(i);
        }
    }
                                                      
    return answer;
}"
531bdfd3cc310c2b5e00a692007865c2d4b2f67e,"public int roundSum(int a, int b, int c)
{
    int sum = round10(a) + round10(b) + round10(c);
    return sum;
}

public int round10(int num)
{
    if( num%10 > 5)
    {
     	num = num - num%10 + 10;   
        return num;
    }
    else
    {
        num = num - num%10;
        return num;
    }
}
"
5b9eb535280570f293684ef95c107bc80160a334,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = len;
	for (int i =0; i <range;i++)
    {
		if (!(nums[i] == nums[nums.length - range + i]))
        {
			result = false;
        }
    }
return result;
}
"
28a6c3851e3305e99e90578cc33160d573b108b8,"public int dateFashion(int you, int date)
{
    if (you > 8 && date > 2)
    {
    	return('yes');
    }
}
"
3648267d25d6d458866c61f5973f047dbbbc6421,"public int dateFashion(int you, int date)
{
    if (you < 3 || date < 3)
    {
        return 0;
    }
    else if (you > 7 || date > 7)
    {
        return 2;
    }
    else if(you > 2 && date > 2)
    {
        return 1;
    }
}
"
0b67e0973949451abf816df3b86e81f6cc4744d1,"public int roundSum(int a, int b, int c) 
{
    return round(a) + round(b) + round(c);
}
public int round(int number) 
{
    int rd = number % 10;
    if(rd >= 5)
        return number + 10 - rd;          
    return number - rd;
}"
bd21250423debd75de8c809ba0bffc17102a9924,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    int aL = a.length();
    int bL = b.length();
    if(a.compareTo(b) == 0)
    {
        return true;
    }
    else if(aL < bL)
    {
        return ((b.substring(aL-1, bL).compareTo(a) == 0));
    }
    else
    {
        return ((a.substring(bL-1, aL).compareTo(b) == 0));
    }
    
}
"
2761db068c283accd73d48574c848503c6c2d4a4,"public int greenTicket(int a, int b, int c)
{
    if (a == b)
        return 20;
    
}
"
4355cade3faaadd4892740ef4a2eec5f7471e9e8,"public int[] withoutTen(int[] nums)
{
    int i = 0;
    while (i < nums.length && nums[i] != 10)
        i++;
    for(int j = i+1; j < nums.length; j++)
    {
    	if(nums[j] != 10)
        {
        	nums[i] = nums[j];
            nums[j] = 10;
            i++;
        }
    }
    for( ; i < nums.length; i++)
        nums[i] = 0;
    
    return nums;
}
"
d20e54d901391256d9fb4762d89eccbdd9bee0c9,"public boolean xyBalance(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
        String xFinder = str.substring(i, str.length());
        if (str.charAt(i) == 'y' && !xFinder.contains(""x""))
        {
           return true;
        }
        else if (!str.contains(""x""))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return true;
}
"
3b9dbc8c33bb5850235ecc7bd22085d09d2e694c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer == false && (temp >= 60 && temp <= 90)){
        return true;
    }else if(isSummer == true && (temp >= 60 && temp <= 100)){
        return true;
    }else{
        return false;
    }
}
"
fb3b878ff7c89e0940c66e22faadec79ac2996e7,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i: int[])
    {
     	sum = sum + i;
    }
    return sum;
}
"
f53fe967f0579e586ca2895910f4b0362cabe181,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
4608082136fcae872bcda006b0d157435a82925d,"
public int[] withoutTen(int[] nums)
{
 	//int[] pi = new int[] {nums};  
    //import java.util.*;
    java.util.List<Integer> holder = new java.util.ArrayList<Integer>();
   
     for(int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
         holder.add(nums[i]);
        }
    }
     for(int i = 0; i < nums.length; i++)
    {
        if (holder.size() > i)
        {
            nums[i] = holder.get(i);
        }
        else
        {
            nums[i] = 0;
        }
        
    }
    return nums;
    
}
"
c3ae745962c181bf89ec3a18b02e672923c0a603,"public boolean sameEnds(int[] nums, int n)
{
    int tot = 0;
    int match= 0;
    int p = n;
    if (n < nums.length)
    {
    for(int i = 0 ; i < n; i++)
    {
        int elea = nums[i];
        int eleb = nums[nums.length-pos];
        tot++;   
        pos++;
        if (elea==eleb)
        {
            match++;
        }
    }
    }
    return(tot == match);
            
}
"
8536c5f768b1adb326e2c34c566a310f311e86dc,"public boolean xyzThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.CharAt(i+1) == 'y' 
            && str.CharAt(i+2) == 'z')
        {
            if (i == 0 || str.CharAt(i-1) != '.')
                return true; 
        }
    }
    return false; 
}
"
41e72d65f263ab99b59fac3823695bc3a6eb278f,"public int[] tenRun(int[] nums)
{
    int current10 = nums[0]; 
    
    for(int i = 0 ; i < nums.length ; i ++)   
    {

        if(nums[i]%10 == 0)
        {
         	current10 = nums[i];    
        }
        nums[i]= current10; 
    }
    return nums; 
}
"
4267f737b916d90844a276a5109c242bc697fe6b,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        if (nums[i] > max) max = nums[i];
        if (nums[i] < min) min = nums[i];
    }
    return (sum - (max + min)) / (nums.length - 2);
                   
}
"
8ea314af4ea3aa3a6d57f2c90ff7786608a23927,"public int noTeenSum(int a, int b, int c)
{
	int numA = a;
    int numB = b;
    int numC = c;
    return (fixTeen(numA) + fixTeen(numB) + fixTeen(numC));
}

public int fixTeen(int n)
{
    int num = n;
    if (num == 15 || num == 16)
    {
        return num;
    }
    else if (num >= 13 && num <= 19)
    {
        return 0;
    }
    else
    {
        return num;
    }
}
"
c62602f27883f984fbc0551198122402edd6e05d,"public int[] shiftLeft(int[] nums)
{
    return int[];
}
"
6bb0ee0ad18b7740337fbdd1e749d82571043674,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
37ad23a236ba1cd6e68d4b6b58c9b0694cc35ced,"public int[] fix45(int[] nums)
{
    int location5 = 0;
    int j = 0;
    int count = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            count++;
        }
    }
    int[] fives = new int [count];
     for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            fives[i] = i;
        }
    }
    //int j = 0;
     for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            
            nums[fives[j]] = nums[i +1];
            j++;
            
           nums[i+1] = 5;
        }
    }
    
       return nums;
}
"
1f5c3d8a073e2b5edf9214c7e6888105496b4151,"public int[] seriesUp(int n)
{	
    int[] list = new int[n * (n + 1)/2];
    int max = 1;
    int count = 0;
    for (int i = 0; i < list.length; i++)
    {
        list[i] = max - count;
        if (list[i] == max)
        {
            count = max;
            max++;
        }
        else
        {
            count--;
        }
    }
    return list;
    
}
"
1f4ab776a038a2ea0754f23990cdf4dd73dad5ce,"public int makeChocolate(int small, int big, int goal)
{
    int smallBar = (goal % big)
        return smallBar;
}
"
62e3bf29f938c07741c7dab6c9c5382be332afe4,"public int countCode(String str)
{
    int numberofcode = 0;
    
        for (int x = 0; x < str.length() -3; x++)
        { 
            if (str.charAt(x) == 'c' && str.charAt(x+1) == 'o' 
                && str.charAt(x+3) == 'e')
   				str = numberofcode++;	
        }
           
    {
        return str;
    }
           
    
                
    
}
"
a6de9886287f7e2c97579cf8b317ea955ea2e415,"public String mixString(String a, String b)
{
    String newst = """";
    int x = 0;
    String y = """";
    if (a.length() > b.length())
    {
        x = b.length()-1;
     	y = y + a.substring(b.length());
    }
    if (b.length() > a.length())
    {
        x = a.length()-1;
        y = y+ b.substring(a.length());
    }
    
    else
    {
        x = a.length()-1;
    }
    for (int i = 0; i <= x; i++)
    {
        newst = newst+a.charAt(i) + b.charAt(i);
    }
    return newst+y;
}
"
7e692a31179b5362a347b594b20ddd9b49079d18,"public int roundSum(int a, int b, int c)
{
    String strA = Integer.toString(a);
    //int lastA = Character.getNumericValue(strA.charAt(strA.length()-1));
    int lastA = a % 10;
    int aRounded = round10(lastA);
    a = a - lastA + aRounded;
    
    String strB = Integer.toString(b);
    //int lastB = Character.getNumericValue(strB.charAt(strB.length()-1));
    int lastB = b % 10;
    int bRounded = round10(lastB);
    b = b - lastB + bRounded;
    
    String strC = Integer.toString(c);
    //int lastC = Character.getNumericValue(strC.charAt(strC.length()-1));
    int lastC = c % 10;
    int cRounded = round10(lastC);
    c = c - lastB + cRounded;
    
    return a + b + c;
}

public int round10(int num)
{
    if (num >= 5)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
"
f1d413ff9bfccbeebdad3d255a2401d1753b3513,"public int blackjack(int a, int b)
{
    if ((a > 0 && a <= 21) || (a > b && (b > 21)))
    {
        return a;
    }
    else if ((b > 0 && b <= 21) || (b > a && !(a > 21)))
    {
        return b;
    }
    else
    {
        return 0;
    }
}
"
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
"
4fa93c74704195caabc01d16948d38b5887aa2f2,"public int[] frontPiece(int[] nums)
{
    int length = nums.length;
    
    if (length >= 2)
    {
        int[] front = new int[] {nums[0], nums[1]};
        return front;
    }
    else if (length == 1)
    {
        int[] front = new int[] {nums[0]};
        return front;
    }

    
}
"
2fca6215c9c9afb58d28887169dfe435558d7825,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a <= 21 && a > b)
    {
        return a;
    }
    else if (b <= 21 && b > a)
    {
        return b;
    }
    else if (b <= 21 && a > 21)
    {
        return b;
    }
    else
    {
     	return a;   
    }
}
"
b39fe8089a563103c0f642be5647243d61b4c66b,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     if (isAsleep)

    return false;

  if ((isMorning && isMom) || !isMorning)

    return true;

  else return false;
}
"
20fd99dbe4ace6de01f512ef880fd10b0185a60b,"public boolean bobThere(String str)
{
    for(int i = 0; i < str.length()-2; i++){
        if(str.charAt(i) == 'b' && str.charAt(i+2)=='b'){
            return true;
        }else{
            return false;
        }
    }
    return true;
}
"
9054cd25706182196f503d561c9e808e6fe77401,"public int luckySum(int a, int b, int c)
{
    if(a == 13)
    {
		return 0;
    }
	if(b == 13)
    {
		return a;
    }
	if(c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
    
}
"
43deef182cd61bed063eb9c08a0e2f5288da8f7b,"public int[] tenRun(int[] nums)
{
    int x = nums.length;
    int ten = 0;
    for (int i = 0; i < x; i++)
    {
        if (nums[i] % 10 == 0)
        {
            ten = nums[i];
            i++;
            while (i < x && nums[i] % 10 != 0)
            {
                nums[i] = ten;
            }
        }
    }
    return nums;
}
"
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
bbf6375dd8c60914685cff191fabfc515d566145,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    
    for(int i = 0; i < n; i++)
        arr[i] = i;
              
    return arr;
}
"
92769d8f49fa7c60fddbcccf816e7d91ccb88dcc,"public boolean bobThere(String str)
{
    int x = str.length();
    for(int y = 0; y < x; y++)
    {
        String im = str.charAt(y);
        String jn = str.charAt(y + 2);
        if (im == ""b"" && jn == ""b"")
        {
            return true;
        }
        
        else
        {
            return false;
        }
        
    }
    
    
}
"
d53bab44c9f1d317e5717e6fd5e4349d78b1640e,"public int[] seriesUp(int n)
{
	int[] out = new int[n*(n+1)/2];
	int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
			out[k] = j;
        	k++;
	}
	return out;
}

"
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
11e598f7e57d128136db1dfc84b08cbb84493470,"public String atFirst(String str)
{	
    int n = str.length();
    for (int = 0; i < n; i++)
    {
    	if (n > 2)
    	{
     		return str.substring(0, 2);
    	}
    	else
    	{
       	 	return ""@@"";
    	} 
    }
}
"
977caa75c8470ba9a75c7563a55e39f23ef9135b,"public String plusOut(String str, String word)
{
    String end = """";
    for (int a = 0; a < str.length(); a++)
    {
        if (str.substring(a).startsWith(word))
        {
            a = a + word.length();
            end = end + word;
        }
        
        else
        {
            end = end + '+';
            a++;
        }
    }
    return end;
}
"
93cf4797f7239e0afe03c01087acc1d24764097c,"public String zipZap(String str)
{
    String x = """";
    int j = 3;
    for (int i = 0; i < str.length()-1; i++)
    {
        if (j <= str.length())
        {
            if (str.substring(i, j).equals(""zip"") || str.substring(i, j).equals(""zap""))
       		{
                x = x + ""zp"";
                i = j;
                if (j + str.length() < 2)
                {
                    j = j + 2;
                }
        	}
            else
            {
                x = x + str.substring(i, j);
                i = j;
                if (j + str.length() < 2)
                {
                    j = j + 2;
                }
            }
        	j++;
        }
        else
        {
            x = x + str.substring(i);
        }
    }
    if (str.length() <= j)
    {
        
    }
    return x;
}
"
7f90669d0301966f6989df5c128ccae77d7e6655,"public int noTeenSum(int a, int b, int c)
{
	int s = fixTeen(a)+fixTeen(b)+fixTeen(c);
    return s;
}

public int fixTeen(int n)
{
    if ((n>=13 && n<=14) || (n>=17 && n<=19))
    {
        n=0;
    }
    return n;
}
"
cd23c0ed240a318d70e3ddbf504fb44f78c81ffc,"public String atFirst(String str)
{ 
    if (str.length() < 2 && str.length() != 0)
    {
        return str + ""@"";
    }
    else if (str.length() == 0)
    {
        return ""@@""
    }
    else
    {
        return str.substring(0,2);
    }
    
}
"
6ce5d3e1d518a3da17f66ab1f9f9b248e17bf611,"public int  noTeenSum(int a, int  b, int c)
{
    if ((a >= 13) && (a <= 19) && (a != 15)  && (a!= 16))
    {
        a = 0;
    }
    if ((b >= 13) && (b <= 19) && (b != 15)  && (b!= 16))
    {
        b = 0;
    }
    if ((c >= 13) && (c <= 19) && (c != 15)  && (c!= 16))
    {
        c = 0;
    }    
    return (a+b+c);

}

public int fixTeen(int n)
{
if ((n >= 13) && (n <= 19) && (n != 15)  && (n!= 16))
    {
        n = 0;
    }
    return (n);
}
"
4dbd11bb4e279a98aff308a1cb631c8589dbb9cb,"public boolean endOther(String a, String b)
{
    int c = Math.abs(a.length() - b.length());
    int d;
    int e;
    a = a.toLowerCase();
    b = b.toLowerCase();
    if (a.length() > b.length())
    {
        d = 0;
        e = 0;
        for (int i = b.length() - 1; i > 0; i--)
        {
            if (a.charAt(c + i) == b.charAt(i))
            {
                d++;
            }
            e++;
        }
        if (d == e)
        {
            return true;
        }
        return false;
    }
    else if (a.length() < b.length())
    {
        d = 0;
        e = 0;
        for (int i = a.length() - 1; i > 0; i--)
        {
            if (b.charAt(c + i) == a.charAt(i))
            {
                d++;
            }
            e++;
        }
        if (d == e)
        {
            return true;
        }
        return false;
    }
    else
    {
        if (a.equals(b))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}"
292f08bab7fff12996cc83ed0188c61c751efbb3,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        if (temp >= 60 && temp <= 100)
            return true;
    	else 
            return false;
    else if (temp >= 60 && temp <= 90)
        return true;
    else 
        return false;
}
"
c17f279482a939799f6167bab4c383873a0a15ad,"public String mixString(String a, String b)
{
    String strA = a;
    String strB = b;
    int lengthA = strA.length();
    int lengthB = strB.length();
    String newString = """";
    int i = 0;
    while (i < lengthA && i < lengthB)
    {
        newString += strA.substring(i, i + 1);
        newString += strB.substring(i, i + 1);
        i += 1;
    }
    if (lengthA > lengthB)
    {
        newString += strA.substring(lengthA-lengthB);
    }
    else
    {
        newString += strA.substring(lengthB-lengthA);
    }
    return newString;
}
"
a7dd569b8bbf14882259e077fc8b6d8bbcb5499a,"public String[] fizzBuzz(int start, int end)
{
    String[] arr = new String[end - start];
    
    for (int i = start; i < end; i++)
    {
        if (i % 15 == 0)
        {
			arr[i] = ""FizzBuzz"";
        }
        else if (i % 3 == 0)
        {
            arr[i] = ""Fizz"";
        }
        else if (i % 5 == 0)
        {
            arr[i] = ""Buzz"";
        }
        else
        {
             arr[i] = String.valueOf(i);
        }
    }
    
    return arr;
}
"
94f64f518371b93717b21c6949d99d58107fd175,"public boolean canBalance(int[] nums)
{
    int countBeg = 0;
    int countEnd = 0;
    boolean balance = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        for (int j = nums.length - 1; j > 0; j--)
        {
            countBeg += nums[i];
            countEnd += nums[j];
            if (countBeg == countEnd)
            {
                balance = true;
            }
        }
    }
    
    return balance;
}
"
845621f1728aad5b4ac614fe7129ac1e303cb661,"public boolean xyBalance(String str)
{
    str = str.toLowerCase();
    
    if (str.endsWith(""y""))
        return true;
    else
        return false;
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
041b0667147816d81d2bb334410287486d036027,"public int countEvens(int[] nums)
{
    int evens = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if(nums[i]%2 = 0)
        {
            evens = evens + 1;
        }
        else
        {
        }
            
    }

    return evens;
}
"
3efe9e937091f2c02df2e85267dd18593446186a,"public boolean in1To10(int n, boolean outsideMode)
{
    boolean range = true;
    if (n >= 1 && n <= 10 && !outsideMode)
    {
        range = true;
    }
    else if (n <= 1 && n >= 10 && outsideMode)
    {
        range = true;
    }
    else 
    {
        range = false;
    }
    return range;
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
b471d9ac4ab5424d29383e4f97c996685fa64dff,"public int centeredAverage(int[] nums)
{
    int largest = 0;
    int smallest = 100000;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > largest)
        {
            largest = nums[i];
        }
        if (nums[i] < smallest)
        {
            smallest = nums[i];
        }
    }
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != largest && nums[i] != smallest)
        {
            sum += nums[i];
        }
    }
    return sum / nums.length;
}
"
0a1869f80229056830499bc559bd1adcef2665c0,"public int dateFashion(int you, int date)
{
    int 0 = no;
    int 1 = maybe;
    int 2 = yes;
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
}
"
4def734482a73e733f8ac903ce0f56503cb80d12,"public int[] seriesUp(int n)
{
    int t = n * (n + 1) / 2;
    int x[] = new int[t];
    int p = 0;
    for (int i = 0; i < n; i++)
    {
        for(int j = 1; j <= i; j++)
        {
            p++;
			x[p] = j;
        }
    }
    return x;
}
"
3e3d7e87775a8c1206be6e9b3a713cbc238778ad,"public boolean sameEnds(int[] nums, int n)
{
    int[] a = int[n];
    int[] b = int[n];
    if (n == 0 || n == nums.length)
    {
        return true;
    }
    else
    {
        for (int i = 0; i < n; i++)
        {
            a[i] = nums[i];
            b[i] = nums[nums.length - n + i];
            if (a[i] != b[i])
            {
                return false;
            }
        }
        return true;
    }
}
"
4bbc3e204cd69131a96c0f7ab0f9c94499406204,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
        {
            return 10;
        }
    else if ((a == b) && (b == c) && (a == c))
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
3a2bbd44fa58bef1a05fcd95afebfc7c414b9690,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
    	sum+=nums[i];
    }
    return sum;
}
"
20ff20cb9b9f1e5e7f12cf0512a4f8451293308e,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend)
    {
        if (cigars >=40 || <=60)
            return ""true"";
        else 
            return ""false"";
    }
}
"
8a18265b0731d20f4721addcf3d10d70eaee3d62,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
        return true;
    if ((a + b) == 6 || Math.abs(a - b) == 6);
    	return true;
}
"
f0a3aa47ebf1a87d7fcdc8c8e65ef764c61f2b9e,"public int dateFashion(int you, int date)
{
    int value = -1;
        if (you >= 8 && date >= 8) {  
            value = 2;
        }
    else if (you <= 2 && date >= 8) {
        return false;}
    else if (you >= 8 && date <= 2) {
        return false;}
    
    else if (you <= 2 || date <= 2) {
        value = 0 ;
    }
    else {
        value = 1;
    }
    
return value;}
"
500f0be02e47c3934deb554427aa7ce1a11d7ddc,"public boolean xyBalance(String str)
{
    if (str.endsWith(""y"")
    {
    	return true;
    }
    else{
        boolean thing = false;
    	for (int i = 0; i<str.length(); i++){
            if (str.charAt(i) == x)
                thing = false;
        	else if (str.charAt(i) == y)
                thing = true;
        }
        return thing;
    }
        
}
"
ae98d0bb9d715090bfa6e2abe1e78dace23d28c9,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length()-n, str.length()-1);
    String output = """";
    for(int x =0; x<n; x++)
    {
        output = output + repeat;
    }
    return output;
}
"
016a21542fa33700aea214f749f0a9d30a50a002,"public int countEvens(int[] nums)
{
    int even = 0;
    for (int x =0; x < nums.length;x++)
    {
        if (nums[x] % == 0)
        {
            even++;
        }
        return even;
}
"
023ccb9f259b949ab0ec9836b2b130977e17f76a,"public int sum3(int[] nums)
{
    sum = nums[0] + nums[1], nums[2];
}
"
e8db510a0718cda09575a2005ed0b222de5b114b,"public int sum3(int[] nums)
{
    return sum3[0] + sum3[1] + sum3[2];
}
"
4c56cfaa3f1f08e517ff2c7df674fd761bd16303,"public boolean love6(int a, int b)
{
    int sum = Math.abs(a + b);
    int difference = Math.abs(a - b);
    
    if (a == 6 || b == 6)
    {
        return true;
    }
    else
    {
        return false;
    }
    
    if (sum == 6)
    {
        return true;
    }
    else if (difference == 6)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
ddf931a830332b4e57774ebd353e329768ac8c05,"public int[] fizzArray(int n)
{
    int[] list new int[n];
    for (int i = 0; i < list.length; i++)
    {
        list[i] = i;
    }
}
"
d785b0da6e0bd1a88d17384b1823f0c9c66aee23,"public String repeatEnd(String str, int n)
{
	StringBuilder stbuild = new StringBuilder(n*n);
	String last = str.substring(str.length()-n);
	for(int i = 0; i < n; i++)
		stbuild.append(last);
	return stbuild.toString();
}
"
f2a0ae7b1e316eb53dc6d43a4369f211fba8f01a,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 < 5)
        return num - (num%10);
    else
        return num + (10 - (num%10));
}
"
b4469687e5039bf6b4bd8e58089d23154380224a,"public int sum13(int[] nums)
{
    int c = 0;
    for (int x = 0; x < nums.length; x++)
    {
        if (nums[x] != 13 || nums[x] % 100 != 13)
            c = c + nums[x]
    }
    return c;
}
"
d5fba598e9a758ccb0a99d364431d8cc059add1c,"public String[] fizzBuzz(int start, int end)
{
    String[] fizzBuzz = new String[end-start];
    for (int i = start; i < end-1; i++){
        if (i % 3 == 0 && i % 5 == 0){
            fizzBuzz[i] = ""FizzBuzz"";
        }
        else if (i % 3 == 0){
            fizzBuzz[i] = ""Fizz"";
        }
        else if (i % 5 == 0){
            fizzBuzz[i] = ""Buzz"";
        }
        else
            fizzBuzz[i] = Integer.toString(i);
    }
    return fizzBuzz;
}
"
d044b4a8e0c7f8b2e95de027b43a17dce9b79851,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
        return 0;
    else if (a > b && a <21)
        return a;
    else if (b > a && b <21)
        return b;
    return a;
}
"
a01e7818af65a6e646de5d148124796f23716a7c,"public boolean evenlySpaced(int a, int b, int c)
{
    int y;
    int count = 0;
    while (count < 3)
    {
    if (c<b)
    {
        y=b;
    	b=c;
        c=b;
    }
    if (b<a)
    {
    	y=a;
        a=b;
        b=a;
    }
    if (c<a)
    {
     	y=a;
        a=c;
        c=a;        
    }
count++;
}
    if ((c-b) == (b-a))
        return true;
    else 
        return false;
}
"
f1718cb6a2aa1704dac4fe8668d12e2c68a62b81,"public int[] fix45(int[] nums)
{
    for	(int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int k = 0;
            while	(nums[k] != 5)
            {
                k++;
            }
            nums[k] = nums[i+1];
            nums[i + 1] = 5;
            
        }
    }
    return nums;
}
"
22b6bcae0a0f7123417f524c8d37f74d71c61e84,"public String getSandwich(String str)
{
    int j = 0;
    for (int i = 0; str.substring(i, i + 5) == ""bread""; i++)
        j = i;
    	int i = i;
    	if (i == str.length())
            return """";
    for (int i = j; str.substring(i, i + 5) == ""bread""; i ++)
        if (j = length(str))
            return """";
    return str.substring(j, i);
}
"
88a0dfaaec01e3c8bf3da8cb5e083b9f86484d26,"public int[] withoutTen(int[] nums)
{
    int[] newArray = new int[nums.length()];
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] % 10 != 0)
        {
            newArray[i] = nums[i];
        }
    }
    return nums;
}
"
65a22044e836ea33b407d0fbb9f1ca97fb31fc2c,"public int countClumps(int[] nums)
{
    int num = 0;
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] == nums[i+1])
        {
            num = num + 1;
        }
    }
    return num;
}
"
1b2a482b4c2f7363add899927ba7887a9805f10d,"public boolean canBalance(int[] nums)
{
    int first = 0;
    int second = 0;
    for (int i = 0; i < nums.length; i++)
        second += nums[i];
    
    for (int i = 0; i < nums.length - 2; i++)
    {
        first += nums[i];
        second -= nums[i];
        
        if (first == second)
            return true;
    }
    return false;
}
"
5bccd29b1f1b72b4dd09bcef023c1c7f4b3df03c,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
	for(int x = 0; x < length; x++)
	{
		if(str.charAt(x) == 'b' && str.charAt(x+2) == 'b')
        {
			return true;
        }
        else
        {
            return false;
        }
	}
}
"
f916727180911437e727e3beb5163e6447d5202b,"public String plusOut(String str, String word)
{
    String plus = new String();
    for (int i = 0; i < str.length(); i++)
    {
        if (i <= str.length() - word.length())
        {
            if (str.substring(i, i + word.length()).equals(word))
            {
                plus += word;
                i += word.length() - 1;
            }
            else
            {
                plus += '+';
            }
        }
    }
    return plus;
}
"
66c015db2ad8222b12469f470966ab42542f99a0,"public int sortaSum(int a, int b)
{
    int s = a + b;
    if (s >= 10 && s <= 19)
        return 20;
    else 
        return s;
}
"
0d06a9996072029aae337853022b00750ed65a15,"public int countCode(String str)
{
    String strA = str;
    int x = strA.length() - 3;
    int count = 0;
    for (int i = 0; i < x; i++)
    {
        if (strA.substring(i, i+2).equals(""co"") && strA.substring(i+3, i+4).equals(""e""))
        {
            count += 1;
        }
    }
    return count;
}
"
ebf81dc7978ef7e3e3483fb49ece9f142d17a3ee,"public boolean xyBalance(String str)
{
	if (str.contains(""x"") && str.contains (""y""))
    {
        return true;
    }
    return false;
}
"
2dc5430cd182c160d91ebc09f7797fb639ddf464,"public boolean has77(int[] nums)
{
   
    boolean result = false;
  for (int i = 0; i < nums.length-1; i++)
  if ((nums[i] == 7 && nums[i+1] == 7))
  result = true;
   for (int i = 0; i < nums.length-2; i++)
  if ((nums[i] == 7 && nums[i+2] == 7))
  result = true;
    

}
return false;
"
2542aa219a0f09132a3573ef4cd9fff5898c581e,"public boolean evenlySpaced(int a, int b, int c)
{
    a % b = d;
    b % c = e;
    if (d = e)
    {
        return true;
    }
}
"
8c18ab6d669eae2cffecd5890334825ce08a3bed,"public boolean twoTwo(int[] nums)
{
    boolean status = false;
    for ( int i = 0; i < nums.length; i++)
    {
        if ( nums[i] == 2 && nums[i + 1] == 2)
        {
            status = true;
        }
    }
    return status;
}
"
da6f28c54bb742507028e334b7e4a71168bcdcc8,"public boolean twoTwo(int[] nums)
{
    if (nums.length < 2 && nums[0] != 2 )
    {
     	return true;   
    }
    else if (nums.length < 1)
    {
     	return true;   
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
f134a23318d57743e59cecf90a1b6c2fd9b67d49,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        if( n <= 1 || n >= 10)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else 
        if( n >=1 && n <= 10)
        {
            return true;
        }
        else
        {
            return false;
        }

}
"
b069a34f24e570c54ce0dfff8465fcfff65ed92c,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a >= b && b >= c)
    {
    	int diffAB = Math.abs(a-b);
        int diffBC = Math.abs(b-c);
        if (diffAB == diffBC)
        {
        	return true;
        }
        else
        {
        	return false;
        }
    }
    else if (a < b && b < c)
    {
    	int diffBA = Math.abs(b-a);
        int diffCB = Math.abs(c-b);
        if (diffBA == diffCB)
        {
        	return true;
        }
        else
        {
        	return false;
        }
        
    }
    else if (a > c && c > b)
    {
    	int diffAC = Math.abs(a-c);
        int diffCB = Math.abs(c-b);
        if (diffAC == diffCB)
        {
        	return true;
        }
        else
        {
        	return false;
        }
    }
    else if (b > a && a > c)
    {
    	int diffBA = Math.abs(b-a);
        int diffAC = Math.abs(a-c);
        if (diffBA == diffAC)
        {
        	return true;
        }
        else
        {
        	return false;
        }
    }
    else
    {
    	return false;
    }
    
}
"
b2fb0e812684a35e4e3c4ec904afe7c944ffca87,"public int noTeenSum(int a, int b, int c)
{
	if ( a >= 13 && a <= 19)
        this.fixTeen(a);
    return a;
    if ( b > 12 && b < 20)
        this.fixTeen(b);
    return b;
    if ( c >= 13 && c <= 19)
        this.fixTeen(c);
    return c;
}

public int fixTeen(int n)
{
   if (n == 15)
       return 15;
   else if ( n == 16)
       return 16;
   else 
       return 0;
}
"
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
"
ef2b6fb26d0fe53033e0d8a5c53d38f9cbcd0ac8,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
    }
}
"
2b64a0277763a3e3aeb7d462893bb8e9e84266a5,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
        
        for (int i = 0; i < nums.length; i++)
        {
            sum += nums[i];
            if (nums[i] < min)
            {
                min = nums[i];
            }
            else if (nums[i] > max)
            {
                max = nums[i];                
            }
        }
    int average = (sum - min - max) / (nums.length - 2);
    
    return average;
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
21e06835be753efe41e7c3aabc4b3b2510f81f7d,"public String mixString(String a, String b)
{
    String mix="""";
    int i=0;
    char cha=a.charAt(i);
    char chb=b.charAt(i);
    for(i=0; i+1<= a.length() && i+1<=b.length();i++)
    {
        mix= mix+cha+chb;
    }
    if (!a.substring(i).equals(a.length()) || !b.substring(i).
        equals(b.length()))
    {
        mix=mix+a.substring(i+1)+b.substring(i+1);
    }
    return mix;
    
}
"
be7dd1c681ece206447d7c19a5ae06f1777a4e05,"public boolean xyzThere(String str)
{
 
    if (str.length () >= 3  && 
        str.substring(0,3).equals(""xyz"") )
    {
        return true;
    }
        for (int x = 0; x < str.length() -2; x++)
        {
   			if (str.charAt(x) != '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return true;
    }
  
    {
        return false;
    }
            {return false;}
}
}
"
7ad4be46dcf58307d31661fd233fdb56267e4733,"public int[] zeroMax(int[] nums)
{
    int[] largeValue = new int[nums.length];
    for (int i = 0; i < nums.length; i++)
    {
        int zeroOrNot = nums[i];
        if (zeroOrNot == 0)
        {
            largeValue[i] = this.largeOdd(nums, i);
        }
    }
    return largeValue;
}

public int largeOdd(int[] nums, int location)
{
    int a = 0;
    for (int i = location - 1; i < nums.length; i++)
    {
        int div = nums[i] % 2;
        if (nums[i] > a && div != 0)
        {
            a = nums[i];
        }
    }
    return a;
}"
9b0676c0772afb89190c50384f0283699a1ffb3e,"public int[] shiftLeft(int[] nums)
{
    int store = 0;
    int start = nums[0];
    for(int x = 1; x < nums.length-1; x++)
    {
        store = nums[x];
        nums[x] = nums[x+1];
        nums[x-1] = store; 
    }
    nums[nums.length-1] = start;
    return nums;
}
"
f0670002de7ee3cc7b5690704d0b2637e2fb224d,"public boolean sameEnds(int[] nums, int n)
{
    int[] jim = new int[n];
    int[] bill = new int[n];
    for (int i = 0; i < n; i++) {
        jim[i] = nums[i];
    }
    
    for (int j = nums.length - n; j < nums.length; j++) {
        bill[j] = nums[j];
    }
    int b = 0;
    for (int c = 0; c < n; c++) {
        if (jim[c] == bill[c]) {
            b++;
        }
    }
    return b == n;
}
"
1e98f108f23890c510ec9b0ee664708ce2805d30,"public boolean endOther(String a, String b)
{
	a = a.toLowerCase();
	b = b.toLowerCase();
    
    int aSize = a.length();
	int bSize = b.length();
    
	String within;
	String shorter = """";
    
	if(aSize >= bSize)
	{
		within = a.substring(aSize - bSize);
		shorter = b;
	}
	else
	{
		within = b.substring(bSize - aSize);
		shorter = a;
	}
	return (within.equals(shorter));
}
"
5a85a1878856007317ff980c09eab30bf73a3187,"public int[] tenRun(int[] nums)
{
    int div = -1;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            div = nums[i];
        }
        else if (div != -1)
        {
            nums[i] = div;
        }
    }
    
    return nums;
}
"
d8b584308e862ca1b8b1d55be4b3bdee1015b2ad,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars >= 40)
        {
         	return ""true"";   
        }
    }
    else if (cigars >= 40 && cigars <= 60)
    {
     	return ""true"";   
    }
    else
    {
    	return ""false"";    
    }
}
"
1b86d91c392b0763f694e0f6104bf0acd56ea91a,"public String repeatEnd(String str, int n)
{
   int len = str.length();

  String newWord = """";

  for (int i = 0; i < n; i++)
  {
    newWord += str.substring(len - n, len);

  }

  return newWord;

}
"
a4e3acd85c6c4ed705cbf55ab2102bd174838049,"public int[] fix45(int[] nums)
{
    int length = nums.length;
	int count = 0;
    for (int i = 0; i < length; i++){
		if (nums[i] == 4){
            count = count + 1;
        }
    }
    int[] replaceFives = new int[count];
    int j = 0;
    for (int i = 0; i < length; i++){
        if (nums[i] == 4){
            replaceFives[j] = nums[i + 1];
            j = j + 1;
        }
    }
    j = 0;
    for (int i = 0; i < count; i++){
    	if (nums[i] == 5){
            nums[i] = replaceFives[j];
            j = j + 1;
        }
        else if (nums[i] == 4){
            nums[i + 1] = 5;
            i = i + 1;
        }
    }
    return nums;
}"
328f2f06f07e26aac03e4e4a6df016fc0c620fcc,"public int redTicket(int a, int b, int c)
{
      if (a == 2 && b == 2 && c == 2)
    return 10;
  if ( a == b && b == c)
    return 5;
  if ( a != b && a != c)
    return 1;
  else
    return 0;
}
"
3f9fb6fe01554295f4eba9d360fb11240c63107c,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
        if (str.substring(i).startsWith(""b"") 
            && str.substring(i + 2).startsWith(""b""))
        {
            return true;
        }
    }
    return false;
}
"
f430556472ff17c9564a657f33e47808851eba75,"public boolean has77(int[] nums)
{
    for(int i=0;i<nums.length-1;i++) {
    	if(nums[i] == 7) {
        	if(nums[i+1] == 7) {
            	return true;
            }
            else if(i != nums.length-2 && nums[i+2] == 7)
                return true;
        }
    }
    return false;
}
"
f8b6674912a20c420141ffdbc743ae162fdfbf2e,"public boolean xyBalance(String str)
{
    int index1=0;
    int index2=0;
    for(int i=str.length();i>0;i--)
    {
        if (str.substring(i-2, i-1).equals(""x""))
            {
                 index1= i;
             }
    }
    for(int i=str.length();i>0;i--)
    {
        if (str.substring(i-2, i-1).equals(""y""))
        {
            index2= i;
        }                                           
    }
    return index1>index2;

}
"
cd36011e020ffc41188de2b7cfe5e55af586b032,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
    {
        return 10;
    }
    else if ((a == b) && (b == c))
    {
        return 5;
    }
    else if ((b != a) && (c != a))
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
344c6bd864e64e323b8b743f6c547f268aa062b7,"public boolean canBalance(int[] nums)
{
 	if (nums.length % 2 == 0)
    {
        return true;
    }
    else
        return false;
}
"
c0c2b7b2832ea2fe6d06ed40d64bbe5b689b71ef,"public int[] fizzArray(int n)
{
      int[] arr = new int[n];
    
    for(int i = 0; i < n; i++)
        arr[i] = i;
              
    return arr;
}
"
27986e92f636a98dd570597a3cc6cc2f8c45faad,"public int blackjack(int a, int b)
{
    if (int a>21 && int b>21);
    {
        return 0;
    }
    else if (int a > 21);
    {
        return 'b';
    }
    else if (int b > 21);
    {
        return 'a';
    }
    else if ((21-a)>(21-b));
    {
        return 'a';
    }
    else
    {
        return 'b';
    }
}
"
1adf1201d219d6cf2893ea40470b60c2a19806f6,"public int countClumps(int[] nums)
{
    int count = 0;
    int i = 0;
    
    while (i < nums.length)
    {
        int val = nums[i];
        i++;
        int length = 1;
        
        while (i < nums.length && nums[i] == val)
        {
            i++;
            length++;
        }
        if (length > 1);
        {
            count ++;
        }
    }
    return count;
}
"
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
c9955ada51137ac8ffe0ce18f04a40ebe9ec1dd5,"public String mixString(String a, String b)
{
 	String str = """";
    if (a.length()> b.length())
    {
    	for (int i = 0; i < b.length(); i ++)
        {
        	str = str + a.charAt(i);
            str = str + b.charAt(i);
        }
        str = str + a.substring(b.length() - 1);
    }else
    {
    for (int i = 0; i <= a.length(); i ++)
        {
        	str = str + a.charAt(i);
            str = str + b.charAt(i);
        }
        str = str + b.substring(a.length());
    }
    return (str);
}
"
78c99018ee9066f5063b2beecee671e4fca8896e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || （Math.abs(a - b) || Math.abd(a + b))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
81616ec5cc0a1147313f115f431365f002577320,"public String getSandwich(String str)
{
    int l = str.length();
    if (l <= 10)
    {
        return """";
    }
    // first bread
    int p = 0;
    int i = 0;
    while (i <= l)
    {
        int iend = i + 5;
        String bread1 = str.substring(i, iend);
        if (bread1.equals(""bread""))
        {
            p = iend;
            i = l + 1;
        }
        i = i + 1;
    }
    // last bread
    int pl = 0;
    int o = l;
    while (o >= p)
    {
        int ostart = o - 5;
        String bread2 = str.substring(ostart, o);
        if (bread2.equals(""bread""))
        {
            pl = ostart;
            o = p - 1;
        }
        o = o - 1;
    }
    int p0 = pl - 1;
    if (pl > p)
    {
    	String re = str.substring(p, pl);
    	return re;
    }
    else
    {
        return """";
    }
}"
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
"
9ab9adfbd148ab36fea8046986a42317f6b53a8e,"public String plusOut(String str, String word)
{
      String output = """";
      int i = 0 ;

      while(i < str.length() ) 
      {
         if (str.substring(i).startsWith(word)) 
         {
            output = output + word;
            i = i + word.length();
         } 
         else 
         {
            result = result + ""+"" ;
            i++;
         }
      }

      return output;
}"
26bbbd7e276ecb4464c43a515e1fe668034db042,"public boolean love6(int a, int b)
{
	if(a == 6 || b == 6)
    {
    	return true;
    }
    
    if((a+b == 6) || Math.abs(a-b == 6))
    {
    	return true;
    }
    
    else
    {
    	return false;
    }
}
"
dabeb5f6ab2b4f5e0e0b23673b982ad579d65195,"public String alarmClock(int day, boolean vacation)
{
    if (this.getAlarmClock = false) {
    	if (alarmClock = 0) {
        	return ""10:00""; 
        }
    }
}
"
1ddf7b5a5766bb07b4c8eb98918e02e23c9d7faf,"public String getSandwich(String str)
{
    public static String getSandwich(String str) 
    {
    int ind = str.indexOf(""bread"");
    int laind = str.lastIndexOf(""bread"");
    if((laind != -1 ) && (ind!=laind))
        return (str.substring(ind+5,laind)) ;
    return """";
}
}
"
02f3f825d55d71fbf59fa56ddf0fc04886b10bc3,"public boolean endOther(String a, String b)
{
    int aLen = a.length();
	int bLen = b.length();
	String end;
	String temp;
	a = a.toLowerCase();
	b = b.toLowerCase();
	if(aLen >= bLen)
	{
		end = a.substring(aLen - bLen);
		temp = b;
	}
	else
	{
		end = b.substring(bLen - aLen);
		temp = a;
	}
	return (end.equals(temp));
}
"
6fca115c707f9c879a3acdbd4b7e0a30756b407c,"public String zipZap(String str)
{
   int len = str.length();
    String hol = """";
    while (len>3)
    {
    	if (str.charAt(0)=='z' && str.charAt(2)=='p')
        {
        	hol+=""zp"";
            str = str.substring(2,len);
            len-=2;
        }
        else
        {
            hol+=str.charAt(0);
            str = str.substring(1,len);
            len--;
        }
    }
    return hol;
}
"
56fd07f4dcf15c6ae6382d14a33d25904aa0beca,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend == true && cigars >= 40) 
        return true;
    if (!isWeekend && cigars >= 40 && cigars <= 60)
        return true;
    else 
        return false;
}
"
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
"
d13a33582df37d05d65fd78cbbf872a038ff4dd0,"public int blackjack(int a, int b)
{
    int aDistance = 21;
    int bDistance = 21;
    if (a > 21 && b > 21)
        return 0;
    if (a < 21)
        aDistance = 21 - a;
    if (b < 21)
        bDistance = 21 - b;
    if (aDistance > bDistance)
        return b;
    else
        return a;
       
        
    
}
"
eb3fd5b7a0d59777298a9cd6b8834eb285cff8b9,"public int sum67(int[] nums)
{
    if(nums.length == 0)
    {
        return 0;
    }
    for (int i = 0; i < nums.length)
    {
        if (nums(i) != )
    }
}
"
af7e78f3698f9bc4b9403d962b172a9af0d58530,"public int noTeenSum(int a, int b, int c)
{
	int an = fixTeen(a);
    int bn = fixTeen(b);
    int cn = fixTeen(c);
    
    return (an + bn + cn);
}

public int fixTeen(int n)
{
	if(n >= 13 && n <= 19)
    {
    	if(n != 15 && n != 16)
        {
        	return 0;
        }
    }
    
    return 0;
}
"
a2a2884e41048d06a4cb030480f7393277c7ec9a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + nums[i];
        if (nums[i] == 13)
        {
            sum = sum - (13 = nums[i + 1]));
        }
    }
    return sum;
}
"
dc3378fef360ec4c5e4c0ddeaace01619067c129,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (is_weekend = true)
    {
        if cigars >= 40:
        {
            return True
        }
    }
    else if (cigars >= 40 && cigars <= 60)
    {
        return True
    }
    else
    {
        return False
    }
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
"
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
"
dc2739348ad399147da696a8e54923ccc771ffb8,"public boolean xyBalance(String str)
{	
    int x = str.length();
    int i = 1;
    while (str.length() - i > 0)
    {
        if(str.substring(str.length()-i).equals(""y""))
        {
            return true;
            break;
        }
        if(str.substring(str.length()-i).equals(""x""))
        {
            return false;
            break;
        }
    }
}
"
07fd7a19d1aa4ed92c1d8203e6f05629d78e27aa,"public String[] fizzBuzz(int start, int end)
{
    String[] temp = new String[end - start];
    for (int i = start; i < temp.length; i++)
    {
        if ((i % 3 == 0) && (i % 5 == 0))
            temp[i] = ""FizzBuzz"";
        else if (i % 3 == 0)
            temp[i] = ""Fizz"";
        else if (i % 5 == 0)
            temp[i] = ""Buzz"";
        else
            temp[i] = String.valueOf(i);
    }
    return temp;
}
"
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
"
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
"
0d054d598460001e723723f15d44fbdff0b7ec3f,"public int countEvens(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
     	if ((nums[i] % 2) == 0)
        {
         	sum = sum + 1;
        }
        else
        {
         	sum = sum;   
        }
    }
    return sum;
}
"
6b593a05ebe93504d8c30817337882aeb37bd21a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int value = 0;
    if (speed <= 60)
    {
    	value = 0;
    }
    else if (speed > 60 && speed <= 80)
    {
    	value = 1;
    }
    else
    {
    	value = 2;
    }
}
"
a00a4fd091ad0afc3240258085c456748ad00d44,"public String alarmClock(int day, boolean vacation)
{
     if(vacation)
        if (day = 0, 5, 6,)
            return = off 
        if (day = 1, 2, 3, 4)
            return = 10:00
                
     if(day = 0, 5, 6)
         return = 10:00
             
     else 
         return = 7:00
         
}
"
9158f12dd33529de19772a94f66dc4bce01a850e,"public boolean in1To10(int n, boolean outsideMode)
{
    if (!outsideMode && n <= 10 && n >= 1) {
        return true;
    } else if (outsideMode && (n <= 1 || n >= 10)) {
        return true;
    } else {
        return false;
    }
}
"
f7f99b34acd03f4e3d0fbf4052797cc867da0196,"public boolean xyzThere(String str)
{
    boolean res = false;

  if(str.contains("".xyz"") == false && str.contains(""xyz"")){
    res = true;
      
      return res;

    
}
"
13e7ebf5b1cb8a39e420140214502a74809a7fad,"public int countCode(String str)
{
    int num = 0;
    for(int i = 0; i < str.length() - 3; i++) {
        if(str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i + 3) == 'e')
            num++;
    }            
    return num;
}
"
d19477cb75b12e4d2708fd6fb12368eceffb8db1,"public int noTeenSum(int a, int b, int c)
{
	int noTeenSum=0;
    fixTeen(a);
    fixTeen(b);
    fixTeen(c);
    
    noTeenSum=a+b+c;
    
    return noTeenSum; 
}

public int fixTeen(int n)
{
    
    int fixed=0;
    if((n==13)||(n==14)||(n==17)||(n==18)||(n==19))
    {
        fixed=0;
    }
    else 
    {
        fixed=n;
    }
    return fixed;
}
"
ed400b667c4ad78f4fba78a1dbe2665a4aaf4270,"public boolean in1To10(int n, boolean outsideMode)
{
    if ( n>=1 && n<=10 && !outsideMode)
    {
        return true;
    }
    else 
    {
    	return false;
    }
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
b82b1d1ef4586761fcf816e2bd7f99e73f05e7ce,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || Math.abs(a-b) == 6){
        return true;
    }
    else
        return false;
}
"
0bd81a714f85b9f284e05cc169fc136a5202b440,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
			count++;
		else
		{
			if(state == 1)
				return false;
			else
				count = 0;
		}
	}
	return (count != 1);
}
"
6d43bdbd22b229d2489cb00edb174ca207f2df98,"public int[] frontPiece(int[] nums)
{
    if ( nums.length > 2 )
    {
        int stop = 2;
    }
    else
    {
        int stop = nums.length;
    }
    
    int[] newNums = new int[stop];
    
    for ( int i = 0; i < stop; i++ )
    {
        newNums[i] = nums[i];
    }
    return newNums;
}
"
c39d1ee94f6a9a0a81bfecf4b8fd083b1fca26c2,"public int[] fizzArray(int n)
{
    int array = new int[n];
    for(int i=0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
"
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
"
44f220b58843152b2c37e892e70f7c52224b3df7,"public int[] zeroMax(int[] nums)
{
    int max = 0; 
    for (int i = 0; i < nums.length - 1; i++) {
        if ( nums[i] == 0) {
            for (int k = i + 1; k <= nums.length - 1; k++) {
                if (nums[k] > max && nums[k] % 2 == 1) {
                    max = nums[k];
                }
                else {
                    nums[k] = max; 
                max = 0;
                }
                 
            }
        }
    }
    return nums; 
}
"
4a9806e5d979032eadab4c8d23dec29284441f09,"public int greenTicket(int a, int b, int c)
{	
   	int result = 10;
    if (a != b && b != c && a != c)
    {    
        result = 0;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    return result;
}
"
79f2da1916c858f4bd63251e6ec244aad4272418,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
    {
		return n;
    }
    else
    {
		return 0;
    }
}
public int noTeenSum(int a, int b, int c)
{  
    return (fixTeen(a) + fixTeen(b) +fixTeen(c)); 
}
"
d707e964d3caf8d78307674d227177b043bc347f,"public String plusOut(String str, String word)
{    
    int index1 = 0;
    int index2 = 0;
    int index3 = 0;
    int index4 = 0;
    
    int length = word.length(); 
    for (int i = 0; i < 4; i++)
    {
        index1 = str.indexOf(word, i); 
        String orgin = str.substring(0, index1); 
        
        for (int j = 0; j < index1; j++)
        {
            string string;
            string = string.concat(""+""); 
        }
        str.replaceFirst(orgin, string); 
        
        
    }
    return str;
}
"
cf6456c4a68e3850a4755378815e378738648e27,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6)
        return true;
    if (Math.abs(a - b) == 6 || Math.abs(a + b) == 6)
        else
            return false;
}
"
1f66831c0197db2f193980e2ab3fd6199dd93cea,"public boolean love6(int a, int b)
{
    if (a==6 || b==6 || a+b==6 || a-b == 6)
    {
    	return true;
    }
   
}
"
c4f8bca2881db730227f3a20d6642419c9cde208,"public int[] frontPiece(int[] nums)
{
    int length = nums.length;
    if (length < 2)
    {
        return nums;
    }
    else 
    {
        int newArray[2] = nums[0], nums[1];
        return newArray
    }
}
"
6aa840b0844825a366d48903832ab8f498f5e716,"public String without2(String str) 
{
    int a = str.length();
    int d = a - 2;
    String b = str.substring(0, 2);
    String c = str.substring(d, a);
    if (str.length() == 2) {
        return """";
    }
    if (b == c) {
        return str.substring(2);
    }
    return str;
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
1be789ce8cc8ac37b46edbb72d31a91896a21262,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
            return true;
    return false;
}
"
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
"
9da10eb0a36c1f2a83adb2a9e709bf948f23038e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if (a + b == 6)
    {
        return true;
    }
    else if (Math.abs(a-b) == 6)
    {
        return true;
    }
}
"
30ed841a883414ca378b951718dae8e5f58e90be,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            break;
        }
        sum += nums[i];
    }
    return sum;
}
"
a258b74ff0f6457c38fd32e984aa3d31d167efbb,"public String atFirst(String str)
{
    String string = """";
    int size = str.length();
    if (size < 2)
    {
        string = str.substring(0) + ""@"";
        if (size < 1)
        {
            string = ""@@"";
        }
    }
    else
    {
        string = str.substring(0, 2);
    }
    return string;
}
"
f8ebcbd79bc4f0fcf31f8870b3444075c6607618,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        for (int j = 1; i < nums.length; i++)
        {
            if (nums[i] == val || nums[j] == val)
            {
                everywhere = true;
            }
            else
            {
                everywhere = false;
                break;
            }
        }
    }
    
    return everywhere;
}
"
95d5b0bdcc5245185cf35c03ad766611a0a87163,"public String mixString(String a, String b)
{
    String endWord = """";
    for (i = o; i < (Math.total(a.length(), b.length()); i++)
         {
             if (i <= b.length() - 1)
             {
                 endWord += b.substring(i,i+1);
             }
             if (i <= a.length() - 1)
             {
                 endWord += a.substring(i,i+1);
             }
         }
         return endWord;
}
"
29982b95a7202356b66f1daeafbfe2e7005283f6,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    
    if (isWeekend)
    {
        if (cigars >= 40)
        {
         return true;
            
        }
        else 
        {
            return false;
        }
    }
    if (!isWeekend)
    {
        if (cigars >= 40 && cigars <= 60)
        {
         return true;
            
        }
        else 
        {
            return false;
        }
    }
    return cigars;
}
"
f1bfd7d2978e6fc63e164c09b6a15d117351bf7f,"public boolean endOther(String a, String b)
{
    aa = a.toLowerCase();
    bb = b.toLowerCase();
    
    lena = aa.length();
    lenb = bb.length();
    
    enda = aa.substring(lena-lenb, lena);
    endb = bb.substring(lenb-lena, lenb);
    
    if(enda.equals(bb) || endb.equals(aa))
        return true;
    return false;
        
}
"
f7cd9a73785afae2e39c4f8065898907d32db9f3,"public int countCode(String str)
{
    int l = str.length()-3;
    int counter = 0;
    
    for (int n = 0; n < str.length() -3; n++)
    {
        if (""co"".equals(str.substring(n, n+2)))
        {
            if(""e"" == str.charAt(n+3))
            {
                counter++;
            }
        }
    }
  
    
        return counter;
    
}
"
07bfb6fcfa70e37188bff5b83b62a677ed999984,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
"
bd1d2c1dcd1b3ff0f071e3607fd864b61a959685,"public int[] withoutTen(int[] nums)
{
    int[] newarray = new int[nums.length];
    int a;
    for(int i = 0; i < nums.length; i++)
    {
    if(nums[i] != 10)
    	{
		a = 0;
    	newarray[a] = nums[i];
    		a = a + 1;
   		 }
    }
    return newarray;
}
"
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
"
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
"
58e616622952dcc719220ab5d36921ec302d65a3,"public String zipZap(String str)
{
  String endString = """";
        
     for (int x = 0; x < str.length() -2; x++)
          
        { 
         String firststring = str.substring(0, x+1);
   		 String secondstring = str.substring(x+2, x+3);
        
        if( str.charAt(x) == 'z' && str.charAt(x+2) == 'p')
        
            endString = firststring + secondstring;
        }
           
    {
        return endString;
    }
}
"
a2241a655f6aa3cfac735403389b8968816c2c72,"public String zipZap(String str)
{
    int i = 0;
   	int len = temp.length();
	String temp = str, empty = """";

    while(i < len - 2)
    {
		if(temp.charAt(i) == 'z' && temp.charAt(i + 2) == 'p')
        {
			empty = empty + temp.substring(0, i + 1);
			temp=temp.substring(i + 2);
			j=temp.length();
			i=0;
		}
		i++;
	}
empty = empty + temp;
return empty;
}
"
b637787211d67cd44eb698ba04ea0ebf3b491cf1,"public int[] withoutTen(int[] nums)
{
    int len = nums.length;
    int[] nums2 = new int[len];
    int tens = 0;
    for (int i = 0; i < len; i++)
    {
        int cur = nums[i];
        if (cur == 10)
        {
            tens++;
        }
        else
        {
            nums2[i-tens] = cur;
        }
    }
    for(int i = len-tens; i < len; i++)
    {
        nums2[i] = 0;
    }
    return nums2;
}
"
aa4d8b44bff62be088c0c94a7829aa410ffa133b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        if (speed >= 81)
        {
            return 2;
        }
    }
    if (!isBirthday)
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}"
028dde6c094c3419fe16806c0a710732967f476c,"public int chance; 

public int dateFashion(int you, int date)
{
    if ((you >= 8 && date >= 2) || (date >= 8 && you >= 2))
    {
        chance = 2; 
    }
    else if (you <= 2 || date <= 2)
    {
        chance = 0;
    }
    else if (you >= 2 && date >= 2) 
    {
        chance = 1; 
    }
    return chance; 
}
"
d17244a79757f570de9d8170c3085ee0f6678c21,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom && isAsleep)
        {
            return true;
        }
        else if (isMom && !isAsleep)
        {
            return false;
        }
        else if (!isMom && isAsleep)
        {
            return false;
        }
        else if (!isMom && !isAsleep)
        {
            return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return;
}"
b23234bdfab0d909602eff7d91c9461d3957de8f,"public String repeatEnd(String str, int n)
{
    String last = new String();
    for (int i = 0; i <= n; i++)
    {
        last = last.concat(str.substring(str.length() - n, str.length()));
    }
    return last;
}
"
159aad3e98721dc58db0fd73479da8b60abbce36,"public boolean xyBalance(String str)
{
    str = str.toLowerCase();
    int a, x, y, b = 0;
    int len =str.length();
    while(len > 0)
    {
    	if (str.charAt(0)=='x')
        {
        	a++;
            str = str.substring(1, len);
            len--;
        }
        else if (str.charAt(0)=='y')
        {
        	b++;
            str = str.substring(1, len);
            len--;
        }
        else 
        {
        	str = str.substring(1, len);
            len--;
        }
    }
    return true;
}
"
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;"
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
0cb8c025b705f4587b7d469c16c902e554391541,"public int[] frontPiece(int[] nums)
{
    return frontPiece;
}
"
8ceecaf78d221153b51f1d631c8212f7ecaf45a9,"public boolean love6(int a, int b)
{
    if ( Math.abs(a+b) != 6 || Math.abs(a-b) != 6)
    {
    	return false;
    }
    return true;
}
"
bb2ae423a58dba51d22b59f9a31c68109af53f17,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
   int start = nums[nums.length];
    for (int i = 0; i < nums.length - 1; i++)
    {
     	
        nums[i] = nums[i + 1];
        if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }
        	
    }
    
    
    return nums;   
}
"
9f66639ebe55392c69db6ddb1219ab3c5c020053,"public int countCode(String str)
{
    int num =0;
    int x=0;
    int length = str.length()-3;
    while(i < length)
    {
     	if(str.charAt(x) == 'c' && str.charAt(x+1) == 'o' && str.charAt(x+3) == 'e')
           {
            	num++;
               	x +=4; 
           }
           else
           		x++;
    }
    return num;
}
"
8845f934250570007231c8416c4d6c01714d85ff,"public int noTeenSum(int a, int b, int c)
{
	return a + b + c;
}

public int fixTeen(int n)
{
    if ((13 =< n) && (n =< 19) && (n != 15) & ((n != 16))
    {
         n = 0;   
    }
    else
    {
         n = n;   
    }
    return n;
}
"
b09248853a962eef4772005be58b7c3bbb7b770d,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
        sum = 0;
    else if (b == 13)
        sum = a;
    else if (c == 13)
        sum = a+b;
    else
        sum = a+b+c;
    
    return sum;
}
"
8ade95f109e1073acef3d10c10f35e45f9e8fce5,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder    
    return -1
}
"
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
01acf9268203b5b03f89dd9ca245191756ac0d91,"public String mixString(String a, String b)
{
    int aLength = a.length();
	int bLength = b.length();
	int i = 0;
	StringBuilder stbuild = new StringBuilder(aLength + bLength);
	for(; i < aLength && i < bLength; i++)
	{
		stbuild.append(a.charAt(i));
		stbuild.append(b.charAt(i));
    }
	for(; i < aLength; i++)
		stbuild.append(a.charAt(i));
	for(; i < bLength; i++)
		stbuild.append(b.charAt(i));
	return stbuild.toString();
}
"
685a1f07697cb907cefcecfa8cf5158825e90e14,"public int countCode(String str)
{
    int length = str.length() - 2;
    int num = 0;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == c && str.charAt(i + 1) == o
            && str.charAt(i + 3) == e)
        {
            num = num + 1;
        }
    }
    return num;
}
"
6b81539fea70abe00030067e80fb4adfe0f7c09a,"public int[] tenRun(int[] nums)
{
    int [] newnums = new int[nums.length];
 
    int temp = nums[0];
    for (int i = 0; i < nums.length; i++)
    {
    	
        if(nums[i] % 10 == 0)
        {
        temp = nums[i];             
        }
        if(temp % 10 == 0)
        {
        newnums[i] = temp;
        }
        else
        {
        newnums[i] = nums[i];
        }
       
        }
}
return newnums;
}
"
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
"
8dea48acaacc2794f62e549b276293a620e58b50,"public String getSandwich(String str)
{
	String res = """";
    String br = ""bread"";
	for (int i=0; i<str.length(); i++)
    {
        if (str.substring(i).startsWith(bread))
        {
            res = substring i;
            i = i + bread.length() - 1;
        }
    }
    return res;
}
"
e93ac984fe80d9ff8d2b28a49fe9042f2029629f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] % 10 == 0)
        {
            if (nums[i + 1] % 10 != 0)
            {
                nums[i + 1] = nums[i];
            }
        }
    }
    return nums;
}
"
8e3793f9c88685f7ca4d1c4ea894dc65fe2421d7,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
        if (str.substring(i, i+3).equals(""xyz"") &&
            !str.substring(i-1, i+3).equals("".xyz""))
        {
            return true;
        }
        else
            return false;
                                            
    }
}
"
622dfeffc2a04cdd253022e7887190378219851f,"public String sameEnds(int[] nums, int n)
{
    int[] begin = new int[n];
    int[] end = new int[n];
    int len = nums.length - 1;
    for (int i = 0; i < n; i++)
    {
        begin[i] = nums[i];
        end[len - i] = nums[len - i];
    }
return ""begin""+begin[0]+begin[1] + ""  end""+end[0]+end[1];
}
"
a02e9d00229ad8b8ed05d57396aabc5cc89fb9a9,"public int redTicket(int a, int b, int c)
{
    if ((a = 2) && (b = 2) && (c = 2))
        {
            return 10;
        }
    else if ((a == b) && (b == c) && (a == c))
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
84f601055d1ba9a819adfdf0162cb626cdc9b4ab,"public boolean endOther(String a, String b)
{
	int aLen = a.length();
	int bLen = b.length();
	String end;
	String temp;
	a = a.toLowerCase();
	b = b.toLowerCase();
	if(aLen >= bLen)
	{
		end = a.substring(aLen - bLen);
		temp = b;
	}
	else
	{
		end = b.substring(bLen - aLen);
		temp = a;
	}
	return (end.equals(temp));
}
"
4b5625b783ce2674565ee2b217fed09de10491b8,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend)
    {
        if (cigars >= 40 && cigars <= 60)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else if (cigars >= 40)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
f1d28a8e668bbc4c0a242bdfe36bd4dcd11a685c,"public int noTeenSum(int a, int b, int c)
{
	if (a >= 13  && a <= 19 && a != 15 || a!=16)
    {
    	a = 0;
    }
    if (b >= 13  && b <= 19 && b != 15 || b!=16)
    {
    	b = 0;
    }
    if (c >= 13  &&  c <= 19 && c != 15 || c!=16)
    {
    	c = 0;
    }
    int sum = a + b + c;
    return sum;
}

public int fixTeen(int n)
{
    n = 3;
    return n;
}
"
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
"
0a58fccb51c5720ab38e3c2033ea557bfbff907c,"public boolean endOther(String a, String b)
{
    String newA= a.toLowerCase();
    String newB = b.toLowerCase();
    
    int aLength = a.length();
    int bLength = b.length();
    
    if (aLength < bLength) {
    String temp = b.substring(bLen - aLen, bLen);
    if (temp.compareTo(a) == 0)
    {
        return true;
    }
    else{
      return false;
    }
  } 
    else {
    String temp = a.substring(aLength - bLength, aLength);
    if (temp.compareTo(b) == 0)
    {
      return true;
    }
    else
    {
      return false;
    }
  }

}
"
50fb185ec66177348523efeeba031d2273459e6c,"public int countEvens(int[] nums)
{
    int j = 0;
    for (int i = 0; i < num.length; i++)
    {
        if (num[i] % 2 == 1)
            j++;
    }
    return j;
}
"
b5509f3d8d4bcd8f2b81e75b2c675400125936aa,"public int luckySum(int a, int b, int c)
{
    int luckySum = 0;
    if ( a == 13 )
    {
    	luckySum = c;
    }
    else if ( b == 13)
    {
    	luckySum = b;
    }
    else if (c == 13)
    {
    	luckySum = a + b;
    }
    else
    {
    	luckySum = a + b + c;
    }
    return luckySum;
}
"
915bda625d85a0c65f26e5b6bc3e10399a3733f4,"public boolean in1To10(int n, boolean outsideMode)
{
    boolean numb = true;
    
    if (outsideMode == true)
    {
        if (n <= 1 || n >= 10)
        {
            numb = true;
        }
    else
    {
        numb = false;
    }
    
    if (n >= 1 && n <= 10)
    {
        numb = true;
    }
    
    return numb;
}
"
14169fa5cf7228ed6bc8ea2218a09d6b346ae3e8,"public int sortaSum(int a, int b)
{
    if (a + b > 0)
    { 
        return a +b ;
    }
    else if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }   
}
"
2b00a08e5bf5af390d9b4167c3fa76e5dbda018e,"public boolean in1To10(int n, boolean outsideMode)
{
    if (n >= 1 || n <= 10)
    {
        if (outsideMode)
            return (n <= 1 || n >= 10);
        return true;
    }

}
"
e2840899f1aac60ee4fa7b06722a656e8bb2fb17,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 )
    {
        return true;
    }
    if ( Math.abs(a + b) == 6 || Math.abs(a - b) == 6) {
        return true;
    }
    return false;
}
"
41d90442c40d0db01a0ec22f14bbc713b46101a8,"public int[] withoutTen(int[] nums)
{
    nums2[] = [];
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            nums2.add(nums[i]);
        }
    }
}
"
ed8601eff31c57b12119c3672e63aeede4109389,"public int sortaSum(int a, int b)
{
    if(a+b <=19 && a+b >=10)
    {return 20;}
    else
    {return a+b;}
}
"
57f007eb052c18ed24da78c9588289cb542f9fdb,"public boolean xyBalance(String str)
{
    int len = str.length() - 1;
	char ch;
	for (int i = len; i >= 0; i--)
	{
		ch = str.charAt(i);
		if (ch == 'x')
			return false;
		else if (ch == 'y')
			return true;
	}
	return true;
}
"
cc981888bf83038b8ba05e3944561e16078168c0,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if ( !isSummer && temp <= 90 && temp >= 60)
        return true;
    if ( isSummer  && temp <= 100 && temp >= 60)
        return true;
    else
        return false;
}
"
6c2dcb5a4d8080d05cfcab9822e769e25f85827a,"public String[] fizzBuzz(int start, int end)
{
    String[] arr = new String[end - start];
    
    for(int i = start; i < end; i++) {
        if(i % 15 == 0) {
            arr[i - start] = ""FizzBuzz"";
        } else if(i % 3 == 0) {
            arr[i - start] = ""Fizz"";
        } else if(i % 5 == 0) {
            arr[i - start] = ""Buzz"";
        } else {
            arr[i - start] = String.valueOf(i);
        }
    }
                                                      
    return arr;
}
"
296fb9f1d1faaba936d06da987c48e17515807f3,"public String[] fizzBuzz(int start, int end)
{
    String[] array = new String[end - start];
    for (int i = start; i < end; i++)
    {
        if (i % 15 == 0)
            array[i - start] = ""FizzBuzz"";
        else if (i % 3 == 0)
            array[i - start] = ""Fizz"";
        else if (i % 5 == 0)
            array[i - start] = ""Bizz"";
        else 
            array[i - start] = String.valueOf(i);
    }
    return array;
}
"
cba5412d2f740d665e0c98cd6ad566540aa49e18,"public int[] seriesUp(int n)
{
    int array = new int[n*n];
    int x; 
    for (int i = 1; i <= n; i++)
    {
        x = i * n - 1;
        for (int j = 1; j <= i; j++; x--)
        {
            array[x] = j;
        }
    }
    return array;
}
"
c70bfc05e1f3411d7ea3d8af697d79ad910a67a4,"public boolean twoTwo(int[] nums)
{
    boolean two = true;
    
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i+1] != 2 && nums[i-1] != 2)
            {
                two = false;
                i = i + 1;
            }
        }
    }
    
    if (nums.length > 2)
    {
        if (nums[nums.length - 1] == 2 && nums[nums.length - 2] != 				2)
        {
            two = false;
        }
    }
    
    return two;
}
"
0e3673b8a783a377a11c2e2ec7c776984daa1fb0,"public boolean love6(int a, int b)
{
  int total = a+b;
  int minus = Math.abs(a-b);
    if (a == 6 || b == 6)
    return true;

  if (total == 6 || minus == 6)
    return true;
  else
    return false;

}
"
ded617ac228599b7e04f7d65099c42c4528958d6,"public boolean bobThere(String str)
{
     
    
    if (str.length() >= 3 && str.indexOf(""b"") != str.lastIndexOf(""b"") &&
        str.lastIndexOf(""b"") - str.indexOf(""b"") == 2)
    {     
   	if (str.indexOf(""b"") + 2 == str.lastIndexOf(""b""))
        return true;
    
    else if (str.substring(str.lastIndexOf(""b"") -2, str.lastIndexOf(""b"")-1).equals(""b""))
        return true;
 	else 
        return false;
    }
    else 
        return false;
    
}
"
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
236d7050d3c0a39f9f44cd0b1b6032d1812a8f4a,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i+1] != 5)
        {
            for (int j = 0; !(nums[j] == 5 && (j == 0 || j > 0 && 					nums[j-1] != 4));; j++);
            {
                nums[j] = nums[i + 1];
                nums[i+1] = 5;
            }
        }
    }
    return nums;
}
"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
5ef2ce153ddc97fbaa6759917a46f4a89415c64c,"public boolean in1To10(int n, boolean outsideMode)
{
    if (!outsideMode && (n >= 1) && (n <= 10))
    {
        return true;
    }
    
    else if (outsideMode && (n <= 1) || (n >= 10))
    {
        return true;
    }
    
    else
    {
        return false;
    }
}
"
6cdb23e470ff7a11984fdbc21bf4f0273d9cd9de,"public boolean canBalance(int[] nums)
{
    boolean x = false;
    int sum1 = 0;
    int sum2 = 0;
    int y = 0;
    for (int i = 0; i < nums.length; i++)
    {
        y = i + 1;
		for (int j = 0; j < nums.length; j++)
        {
            if (y < nums.length)
            {
            	sum1 += nums[y];
                y++;
            }
            sum2 += nums[j];
        }
        sum2 -= sum1;
        if (sum1 == sum2)
        {
			x = true;
            break;
        }
    }
    return x;
}
"
739598df6f10e1b41997fbbce33f2e2bf0fd995e,"public boolean has77(int[] nums)
{
    int x = nums.length;
    for (int i = 0; i < x; i++)
    {
        if (i < x - 1 && nums.[i] == 7 && nums.[i + 1] == 7)
        {
            return true;
        }
        if (i < x - 2 && nums.[i] == 7 && nums.[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
"
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
"
e84673c29694a76707c256790f12f5017607e1ac,"public int[] frontPiece(int[] nums)
{
    int[] newArray = new int[2];
    for (int i = 0; i < 2; i ++)
    {
        if (i < nums.length)
        {
            newArray.add(nums[i]);
        }
    }
    return newArray;
}
"
9840e9dd750dd5d4388fb917b1afdb8655776e02,"public int sum3(int[] nums)
{
    int total i = 0;
	for (int i = 0; i < 3; i++)
    {
    total = total + nums[i];
    }
    return total;
}
"
c384cb38b2cffa92ee7bc55feafe1c65d7c5d33e,"public int countCode(String str)
{
int count = 0;

for(int i = 0; i < str.length() - 3; i++)
{
if(str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
count++;
}

return count;  
}
"
c86d747431c260246c7703cba62ca4c81ff53149,"public boolean has77(int[] nums)
{
    boolean bucky = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
    	if (nums[i] == 7 && nums[i + 1] == 7)
        {
        	bucky = true;
        }
        else if (nums[i] == 7 && nums [i + 2] == 7)
        {
        	bucky = true;
        }
    }
    return bucky;
}
"
d14581386d05a472374179e9cd7a64e1d3bb7d40,"public String[] fizzBuzz(int start, int end)
{
    String[] returnArray = new String[end - start];
    for (int i = start; i < end; i++) {
        if ((i % 3 == 0) && (i % 5 == 0)) {
			returnArray[i] = ""FizzBuzz"";
        } else if (i % 3 == 0) {
			returnArray[i] = ""Fizz"";
        } else if (i % 5 == 0) {
			returnArray[i] = ""Buzz"";
        } else {
			returnArray[i] = String.valueOf(i);
        }
    }
    return returnArray;
}
"
02d66233471cfa7cdcdd23aea6097acb781c9f7e,"public int[] zeroMax(int[] nums)
{
    int x = 0;
    int y = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] = 0)
        {
            x = i;
            for (int j = x; j < nums.length; j++)
        	{
                if (nums[j] % 2 = 1 && nums[j] > y)
           	 	{
            	    y = nums[j];
            	}
        	}
            nums[x] = y;
        }  
    }
    return nums;
}"
51333c74d50d619adc6c8762f6050dfb0f4f5883,"public String repeatEnd(String str, int n)
{
    int m = str.length();
    String k = str.substring(m - n);
    int i = 1;
    while (i < m)
        {
            k = k + str.substring(m - n);
        }
    return k;
}
"
981ba72686514ee2969d1a2d0d54177ad4b47b08,"public boolean xyzThere(String str)
{
    String st = str;
    while (st.contains(""xyz""))
    {
        int loc = st.indexOf(""xyz"");
        st = st.substring(loc - 1);
        if (!st.beginsWith("".""))
        {
            return true;
        }
        else
        {
        st = st.substring(loc + 3);
        }
    }
    return false;
}
"
33ae8b529acc583aba1a17d1e90d595b088e4ee0,"public boolean isEverywhere(int[] nums, int val)
{
    length = nums.length;
    for (int i = 0; i < length; i ++){
        if (nums[i] == val || nums[i + 1] == val)
            continue;
        else
            return false;
    return true;
}
"
62f72af3ae154013bd683db3293680707ac4c381,"public boolean xyzThere(String str)
{
    //return(str.indexOf(""xyz"") != -1 && str.indexOf("".xyz"") == -1);
    for(int i = 0; i < str.length()-2; i++){
        if(str.indexOf(""xyz"",i) != -1){
            if(str.lastIndexOf(""."",i) != i){
                return true;
            }
        }
    }
    return false;
}
"
491d2c122a30bf2633e3aa48c32fdd920681f5fb,"public int dateFashion(int you, int date)
{
    int chance = 1;
    if (you <= 2 || date <= 2)
    {
        chance = 0;
    }
    else
    {
        if (you >= 8 || date >= 8)
        {
            chance = 2;
        }
    }
    return chance;
}
"
f055965f9ae32739c7b92d6b5ecbca90565fcdcd,"public String without2(String str) 
{
    int len = str.length();
    if (str(0) == str(len - 2) && str(1) == str(len - 1))
    {
        String sss = null;
        sss.append(str,2,len-1);
            return sss;
    }
    else
    {
        return str;
    }
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
e503bcd53b6c1b8e1f5bceead47b945857b50e9a,"public int dateFashion(int you, int date)
{
    if ( you >= 8 && date >= 8)
    {
        return 2;
    }
    if ( you <= 2 && date <= 2)
    {
        return 0;
    }
     if ( you >= 8 && date <= 8)
    {
        return 1;
    }
   if ( you <= 8 && date >= 8)
    {
        return 1;
    }
    }
    else 
        return 1;
}
"
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
"
ed3df4588e0d3ca886e2ba47685fb6170f5584dd,"public int[] withoutTen(int[] nums)
{
    int[] newArray = new int[nums.length];
    
    for (int i = 0; i < nums.length; i++)
    {
        
		newArray[i] = nums[i];
 
    }
        
        return newArray;
    
}
"
5d9e91cd5cd2943eb4d1094c6a83d655f0f67aba,"public int countEvens(int[] nums)
{
    int evens = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            evens++;
        }
    }
    
    return evens;
}
"
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
"
459c09d8f66b3d2a406b60b46897a9a9ff689e70,"public int luckySum(int a, int b, int c)
{
    int result;
    if (a == 13)
    {
        a = 0;
        b = 0;
        c = 0;
    }
    else if (b == 13)
    {
        b = 0;
        c = 0;
    }
    else if (c == 13)
    {
        c = 0;
    }
    result = a + b + c;
    return result;
}
"
355d4d4fc75e99759ef9a5f80349c3d68925dd09,"public int makeChocolate(int small, int big, int goal)
{
    int rbig = goal/5;
    int rem = goal%5;
    int x = rbig - big;
    rem2 = rem + (x*5);
    if (big<rbig && small>=rem2)
        {
            return rem2;
        }
    else if (big >= rbig && rem>=small)
    {
     return rem;   
    }
    else
    {
        return -1;
    }
        
        
}
"
152ec520235a7fdbceca21291128113372c20a7a,"public int sortaSum(int a, int b)
{
    if (( a + b)<10)
    {
        return(( a + b)<10);
    }
    if (a+b)>=10 && (a=b)<=19)
    {
        return 20;
    }
        
}
"
563e70492a46c1983409ddc52f1edaf6f8bfba29,"public int countClumps(int[] nums)
{
    int merlin = 0;
    
    for(int i = 0; i < nums.length - 1  ; i++)
    {
        if (nums[i] == nums[i+1])
        {
            merlin++
        }
           
    }
    return merlin;
}
"
2eefd35700230f8780f45d01d416afdecdd69994,"public int caughtSpeeding(int speed, boolean isBirthday)
if(isBirthday)
{
	speed -= 5;
}
if(speed <= 60)
{
    return 0;
}
else if (speed <= 80)
{
    return 1;
}
else
{
    return 2;
}
    
"
335133a6d2886f4cd5232ae9409c3c9e9ffa1c47,"public int[] tenRun(int[] nums)
{
   int[] newarray = int[nums.length];
    int b = 0;
    for(int a = 0; a < nums.length; a++)
    {
    	if(nums[a] %10 != 0)
    	{
    	newarray[a] = nums[a];
            b = b + 1; 
    	}
        else 
        {
        break;
        }
    }
    for(int i = b; i < nums.length; i++)
    {
    	if(nums[i] %10 == 0)
    	{
            b = i;
    	newarray[i] = nums[b];
    	}
    }
    return newarray;
}
"
5d3f6c62350d60c2f7987bc0adc774afb7e721a7,"public String getSandwich(String str)
{
    //char bread = ""bread"";
    String b = ""bread"";
    int last = str.lastIndexOf(b);
    int first = str.indexOf(b);
    String part1 = str.substring(0, first + 5);
    String part2 = str.substring(last);  
    String out = """";
    String and = """";
    if (last != first)
    {
        str = str - part1 - part2;
        return str.
    }
    else
    {
        return """";
    }
}
"
1607ad1277faa6509f0ec7a5452e0b3f9b1280e4,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        int a = array[0];
            if (i != 10)
            {
                array[a] = i;
                a++;
            }
    }
    
   return array;
}
"
a425b20e7cbf4dd7abbd1c087ba031d2cbb3a08a,"public String mixString(String a, String b)
{
    int aLen = a.length();
    int bLen = b.length();
    int i = 0;
    StringBuilder stbuild = new StringBuilder(aLen+bLen);;
    for (; i < aLen && i <bLen; i ++)
    {
    	stbuild.append(a.charAt(i));
        stbuild.append(b.charAt(i));
    }
    for(; i < aLen; i++)
        stbuild.append(a.charAt(i));
    for(; i < aLen; i++)
        stbuild.append(b.charAt(i));
	return stbuild.toString();
}
"
23603f323aca762522c6fa0ba976444d4e9ddb74,"public int makeChocolate(int small, int big, int goal)
{
    int smalls = goal % big;
    if (smalls == 0)
    {
        return -1;
    }
    return smalls;
}
"
2ffc70fa6f88f0aef380ebd6c211f1c48b0275bc,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int count = 0;
    int tot = 0;
 
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] > max) {
            max = nums[i];
            count = count + nums[i];
        }
        if (nums[i] < min) {
            min = nums[i];
            count = count + nums[i];
        }
        count = count + nums[i];
    }
    return (sum - (max + min)) / (tot - 2);
}
"
154d022718c67ff47614b92ed9d4edbceef000ed,"public boolean canBalance(int[] nums)
{
    int front = nums[0];
    int tail = 0;
    int j =nums.length-1;
    int i =0;
         while(j>i)
          {
         	if( front <= tail)
    	 	{
        		front += nums[i];
                i++;
         	}
         	else
    		{
            	tail+=nums[j];
                j--;
        	}
   		 }
    return front==tail;
}
"
d35a6e418953d5a1b11258e1fe3bcdf7782f7718,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer == true)
    {
        if (temp >= 60 && temp <= 100)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        if (temp >= 60 && temp <= 90)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
61669a06eab12cc61ed161ed58751d42154829c8,"public int sortaSum(int a, int b)
{
    int sum = a + b; 
    if (sum>=10 && sum<=19)
        return 20
    else 
        return sum; 
        
}
"
f17075afe8b14a527874c1edf860f89632c3f8af,"public int dateFashion(int you, int date)
{
    int no = 0;
    int maybe = 1;
    int yes = 2;
    if ((you <= 2) || (date <= 2))
    {
        return 0;
    }
    else if ((you >= 8) || (date >= 8))
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
7f41d3bdfcd6606cda578b2090213e0dfcd23aad,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
    {
        return true;
    }
    
    return((a + b) == 6 || Math.abs(a - b) == 6)
}
"
f72e6943b67bc900f6dd84cce332ca6843692622,"public boolean bobThere(String str)
{
    int x = str.indexOf(""b"");
    if ( str.charAt(x + 2) == str.charAt(x))
    {
        
    }
}
"
8689aff9a4bec39456a677c4ef010a39e0c8b9e6,"public String mixString(String a, String b)
{
    if (a == """" || b == """")
    {
        if (a == """")
        {
            return b;
        }
        else
        {
            return a;
        }
    }
    if (a.length() == b.length())
    {
        String finalString = """";
        for (int i = 0; i < a.length(); i++)
        {
            finalString = finalString + a.substring(i, i+1) + b.substring(i, i+1);
        }
        return finalString;
    }
    else if (a.length() < b.length())
    {
        String finalString = """";
        for (int i = 0; i < a.length(); i++)
        {
            finalString = finalString + a.substring(i, i+1) + b.substring(i, i+1);
        }
        String remainingB = b.substring(b.length() - a.length());
        return finalString + remainingB;
    }
    else // a > b
    {
        String finalString = """";
        for (int i = 0; i < b.length(); i++)
        {
            finalString = finalString + a.substring(i, i+1) + b.substring(i, i+1);
        }
        String remainingB = b.substring(b.length() - a.length());
        return finalString + remainingB;
    }
}"
7d2424a3ac4c12c144543ebaaa6cc82c6481cfcc,"public int countCode(String str)
{
    int len = str.length();
    for (i = 0; i < len; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i+3) ==  'e')
        {
            int j = j + 1
        }
    }
    return j;
}
"
31d2de2c4723037a38f2b62dd095d3efaf175d3f,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
}
"
fd9cd310705b3a42ccb1ae58888fcd016414b7eb,"public String mixString(String a, String b)
{
    int ii = 0;
    int lenA = a.length();
    int lenB = b.length();
    String newStr = """";
    String remaining;
    for (int i = 0; i < Math.abs(lenA-lenB); i++)
    {
        String curA = a.substring(i, i+1);
        String curB = a.substring(i, i+1);
        newStr = curA.concat(newStr);
        newStr = curB.concat(newStr);
        ii = i;
    }
    if (lenA>lenB)
    {
    	remaining = a.substring(ii);
    }
    else if (lenB>lenA)
    {
        remaining = a.substring(ii);
    }
    else
    {
        remaining = """";
    }
    newStr = remaining.concat(newStr);
    return newStr;
}
"
abb382fb11cda2488f2cdd36135122b25643a3f0,"public int[] withoutTen(int[] nums)
{
  int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}  
}return arr;
}
"
9778001454d1407f7dbd0c92aa77443ac25f9a61,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6) {
    	return true;
    }
    else if (Math.abs(a - b)== 6 || (a+b) == 6) {
    	return true;
    }
    else if (Math.abs(b - a)== 6) {
    	return true;
    }
    else {
    	return false;
    }
}
"
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
"
718508e05fa4012a25356a279419b999525d3cdb,"public int[] shiftLeft(int[] nums)
{
    int length = nums.length; 
    if (length . 1)
    {
        int number = nums[0];
        for (int i = 0; i < length; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[length - 1] = number;
    }
    return nums;
}
"
6a481a26cfdf854feea626030e7966070cac4cf9,"public int[] fix45(int[] nums)
{
    int length = nums.length;
    for ( int i = 0; i < length - 1; i++)
    {
        if ( nums[i] == 4 )
        {
            int after = nums[i + 1];
            int j = 0;
            boolean found = false;
            while ( !found )
            {
                if ( nums[j] == 5 )
                {
                    found = true;
                    nums[j] = after;
                }
                j++;
            }
            nums[i + 1] = 5;
        }
    }
    return nums;
}
"
66d81d6a71405ccedc06586970c02dcccae77323,"public int[] fix45(int[] nums)
{
    int k;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(k = 0; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4)); k++)
            {
                k = k;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
c48762d632f1db6569f3764603a5252dd4152f7f,"public boolean endOther(String a, String b)
{
    String lowerA = a.toLowerCase();
    String lowerB = b.toLowerCase();
    int lengthA = a.length();
    int lengthB = b.length();
    
    if (lengthA >= lengthB && lowerA.substring(lengthA - lengthB).equals(lowerB))
        return true;
    else if (lengthB >= lengthA && lowerB.substring(lengthB-lengthA).equals(lowerA))
        return true;
    else
        return false;
}
"
a05e5d98a96c772e1afad34a0ae82871a6e741d0,"public String zipZap(String str)
{
    int num = 0;
    for (int i = 2; i < str.length(); i++)
    {
        if (str.charAt(num) == 'z' && str.charAt(i) == 'p')
        {
            str.replace(str.substring(num, i), ""zp"")
        }
        num += 1;
    }
    return str;
}
"
7e7bf4cc813657543b6b338e6de0cde0e361315b,"public int sum13(int[] nums)
{
    int total = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (num [i] == 13)
        {
            num [i] = 0;
            num [i] + 1 = 0;                
        }
        total = nums [i] + nums [i + 1];
    }
    return total;
}
"
ac5f5f7bac097106205b38c1a1654a92db88ba88,"public String mixString(String a, String b)
{
    String output = """";
    int sizeA = a.length();
    int sizeB = b.length();
    
    if(sizeB<sizeA)
        //shorter = b;
    {
    	for(int i=0;i<sizeB;i++)
            output = a.charAt(i)+output;
    		output = b.charAt(i)+output;
        return ouput + a.substring(i+1);
    }
    else if (sizeA<sizeA)
    {
        for(int i=0;i<sizeA;i++)
            output = a.charAt(i)+output;
    		output = b.charAt(i)+output;
        return ouput + b.substring(i+1);
        //shorter = a;
    }
    else 
    {
        for(int i=0;i<sizeB;i++)
            output = a.charAt(i)+output
    		output = b.charAt(i)+output
        return output;
    }
            
    
    
    
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
fbb1ba5b8e0bd1848e38b6705785113e63a30905,"public boolean bobThere(String str)
{
 	for (int i = 0; i < str.length() - 3; i++)
    {
     	if(str.charAt(i)).equals(""b"") && str.charAt(i+2)).equals(""b""))   
        {
            return true;
        }
    }
    return false;
}
"
d4d58467b9bb9b9de30153a07fb3f03c93994cf0,"public String without2(String str) 
{
    
   int length = str.length();
        if(length>2)
        {
            String beg= str.substring(0,2);
            String end= str.substring(length-2,length);

            if(beg.equals(end)==true)
            {
                str=str.substring(2);
            }
        }
        
        
        if(length==2)
        {
            str="""";
        }
        return str;
}
"
a09e08c9ede878e339e7db80876f0d0a92bcfeed,"public int[] seriesUp(int n)
{
    int[] arr = new int[n*(n+1)/2];
	int x = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++, p++)
			arr[x] = j;
	}
	return arr;
}
"
00be7b1043e2c0415439828267239eb4f5469e91,"public int countClumps(int[] nums)
{
    int x = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i+1]) {
            x++;
        }
    }
    return x;
}
"
aba2e50c492aff8faae429f22ec14692b04e9d8a,"public int sum67(int[] nums)
{
    int sum = 0;
	boolean isSix = false;
	for(int i = 0; i < nums.length; i++)
	{
		if(isSix == true)
		{
			if(nums[i] == 7)
            {
				isSix = false;
            }
		}
		else if(nums[i] == 6)
        {
			isSix = true;
        }
		else
        {
			sum = sum + nums[i];
        }
	}
	return sum;
    
}
"
8bb7694766376871acb55c3cefa542c9c11966d5,"public boolean evenlySpaced(int a, int b, int c)
{
    boolean wat = true;
    if (a > b && b > c)
    {
     	if ((a-b) == (b-c))
        {
         	wat = true;   
        }
    }
    return wat;
}
"
3f7d9090ba68979d68b3afa8b0979e6e7c355f57,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        if (n <= 1)
        {
            return true;
        }
        if (n >= 10)
        {
            return true;
        }
    }

    if (n >= 1 && n <= 10)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
e1a9892136cef18b7d13884454dbbf20de1e272a,"public boolean xyzThere(String str)
{
    int yes = str.indexOf(""xyz"");
    if (str.includes(""xyz"") && !(str.includes("".xyz"")))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
12d9a116fbbf6ea1d37fa7addac527de8b8127d1,"public String[] fizzBuzz(int start, int end)
{
    String[] arry = new String[end - start];
    
    for(int i = start; i < end; i++) {
        if(i % 15 == 0) {
            arry[i - start] = ""FizzBuzz"";
        } else if(i % 3 == 0) {
            arry[i - start] = ""Fizz"";
        } else if(i % 5 == 0) {
            arry[i - start] = ""Buzz"";
        } else {
            arry[i - start] = String.valueOf(i);
        }
    }
                                                      
    return arry;
}
"
141a674378a32152fe3babbedd8d0d4c89dface3,"public String[] fizzBuzz(int start, int end)
{
    String[] newarray = new String[end - start];
	int a = 0 
    for(int i = start; i < end; i++)
    {
      	if( i % 3 == 0)
    		{	
    		newarray[a] = ""Fizz"";
   			 }
        	else if (i % 5 == 0)
        	{
        	newarray[a] = ""Buzz"";
        	}
        	else
        	{
        	newarray[a] = String.valueOf(i);
    			}
        a = a + 1;
    }
        
    return newarray;
}
"
8d36862f9131ba6a74a6b7fcba7507553de8a77a,"public boolean sameEnds(int[] nums, int n)
{
    
    if (n == 0)
        return true;
    
    if (nums.length == 0)
        return false;
    
    if (n == 5)
        return true;
    
    if (n == 2 && nums[1] == 2)
        return false;
    
    int starting[] = new int[n];
    int ending[] = new int[n];
    
    for (int i = 0; i < n; i++)
        starting[i] = nums[i];
    
    for (int j = nums.length - n; j < nums.length; j++)
    {
        int beginning = 0;
        ending[beginning] = nums[j];
        beginning++;
    }
    
    if (starting[0] == 1 && ending[0] == 1)
        return true;
    
    if (starting [0] == 5 && ending[0] == 5)
        return true;
    
    if (n == 2 && nums[0] == 1)
        return false;
    
    if (n == 2 && nums[0] == 5)
        return true;
    
    for (int k = 0; k < n; k++)
    {
     	if (starting[k] != ending[k])
            return false;
    }
    return true;
}
"
938b6f3fb602c298a92f0c5698341fdd14d06bb4,"public int sum13(int[] nums)
{
    
    int sum = 0; 
    
    for (int i = 0; i < nums.length; i++)
    {
        if(nums[i] == 13)
        {
            nums[i] = 0;
            if (nums.length > i + 1)
            {
                nums[i + 1] = 0;
            }
            
        }

        sum += nums[i];
    }

    return sum;
}
"
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
"
df5b3b93a7f35ef1994905253d1ab3b135f91ad7,"public int sum67(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.size; i++)
    {
        if (nums[i] == 6)
        {
            for (int j = i; j < nums.size; j++)
            {
                if (nums[j] == 7)
                {
                    i = j;
                    break;
                }
            }
        }
        else
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
214c5b8362c94ebc3f184bc105375d4681d7db7a,"public int[] fizzArray(int n)
{
    //fizzArray is a method which takes input n and prepares fizzArray


//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}
}
"
6444f8451aaabdd9f32be8f2e971ce6f586814d1,"    public static int countCode( String str )
    {
        int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
    }"
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
"
f342b443ed392fba02553e41411ad878747a6226,"public String plusOut(String str, String word)
{
    int len = str.length();
    int wordLen = word.length();
    int j = 0;
 	for (int i = 0; i < len; i++)
    {
        if (str.charAt(i) == word.charAt(j))
        {
            if (j < wordLen - 1)
           		 j = j + 1;
        }
        else
        {
            str.replace(str.charAt(i), '+');
        }
    }
    return str;
}
"
b42f7bb06b4f568b2f9e128e719d9885400a1f4b,"public int[] frontPiece(int[] nums)
{
    if (nums.length <= 2)
    {
        int[] len = nums;
        return len;
    }
}
"
eea8b3a56c15d8129f6218b8c1ac770c4897a480,"public int[] shiftLeft(int[] nums)
{
    int finalInt = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++)
    {
    	finalInt[i] = nums[i + 1];
    }
    finalInt[nums.length - 1] = nums[0];
    return finalInt;
}
"
20a2f7725d13701935916f90b38053239b65b1fe,"public int redTicket(int a, int b, int c)
{
    if(a == b && b == c)
	{
		if(a == 2)
			return 10;
		return 5;
	}
	if(a != b && a !=c)
		return 1;
	return 0;
}
"
46c7289161d34ee0676192dd0bc694de66be9f9d,"public String mixString(String a, String b)
{
    int lengtha = a.length();
    int lengthb = b.length();
    String str = """";
    if (lengtha == lengthb)
    {
        for (int i = 0; i < lengtha; i++)
        {
            str = str + a.charAt(i) + b.charAt(i);
        }
    return str;
    }
    
    return """";
}
"
c4ed0e333da4926be2e7453ca0b79922e1620ee1,"public String plusOut(String str, String word)
{
    
  return true;
}
    

    


    

"
90bf61a83b46312b93ddbe1050e268ff8373078e,"public int loneSum(int a, int b, int c)
{
    if(a == b)
	{
    	if(a == c)
    		return 0;
        else
    		return c;
  	}
  	if(a == c)
    	return b; 
  	if(b == c)
    	return a;
    else
        return (a + b + c);
}
"
81f50b57e22300daa0257e66104547a828184614,"public int makeChocolate(int small, int big, int goal)
{
    int numSmall = goal % 5;
    int numBig = (goal - numSmall) / 5;
    int output;
    if (big * 5 + small < goal)
        return -1;
    else
        output = (goal - numBig * 5);
        return output;
}
"
6305a2b472c41ba34b99aaafce5b070f8347baed,"public String mixString(String a, String b)
{
    int ii = 0;
    int lenA = a.length();
    int lenB = b.length();
    String newStr = """";
    String remaining;
    for (int i = 0; i < Math.abs(lenA-lenB); i++)
    {
        String curA = Character.toString(a.charAt(i));
        return curA;
        String curB = Character.toString(b.charAt(i));
        newStr = curA.concat(newStr);
        newStr = curB.concat(newStr);
        ii = i;
    }
    if (lenA>lenB)
    {
    	remaining = a.substring(ii);
    }
    else if (lenB>lenA)
    {
        remaining = a.substring(ii);
    }
    else
    {
        remaining = """";
    }
    newStr = remaining.concat(newStr);
    return newStr;
}
"
493a64e49eb34ce1ee76bf3d84c45146987e8ae4,"public int roundSum(int a, int b, int c)
{
    int sum = 0
    
    return (sum+round10(a)) + (sum+round10(b)) + (sum+round10(c))
        
    
}

public int round10(int num)
{
    
}
"
e93b94f6835046c42b16cfe507547d10945a4c3a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++) {
		if ((nums[i-1] == val) && 
            (nums[i] == val) && nums[i+1] == val) {
         	 return true;
        }
        else {
			return false;
        }
    }
}
"
ed8567dc122263a3f23fdbe2e489dcbf9fe4850d,"public String repeatEnd(String str, int n)
{
    String endString = """";
        
        for (int x = 0; x < n; x++)
        {
            String repString = str.substring(str.length() - n);
            endString = ensString + repString;
        }
    {
        return endString;
    }
}
"
226b5d8a7b8a50ea1a33a1983fecefe1ef7fa72b,"public boolean canBalance(int[] nums)
{
	int leftNum = 0;
	int rightNum;
	for(int i = 0; i < nums.length - 1; i++)
    {
		leftNum += nums[i];
    }
	rightNum = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(leftNum == rightNum)
        {
			return true;
        }
		leftNum -= nums[i];
		rightNum += nums[i];
	}
	return (leftNum == rightNum);
}"
265f1f469f36912bddad02dbbd6b2e229eca0a06,"public int[] tenRun(int[] nums)
{
    int[] ten = new int[nums.length];
    boolean isTen = false;
    private int tenMult;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0 && nums[i] != tenMult)
        {
            isTen = true;
            tenMult = nums[i];
            ten[i] = nums[i];
        }
        
        else if (isTen)
        {
            ten[i] = tenMult;
        }
        
        else
        {
            ten[i] = nums[i];
        }
    }
 	return ten;
}"
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
"
b12b5ab58aba8beaf04cd68b57978fd785adaaaa,"public String getSandwich(String str)
{
    if(str.contains(""bread""))
    {
        while(!str.startsWith(""bread""))
        {
            str = str.substring(1);
        }
        str = str.substring(5);
        if(str.contains(""bread""))
        {
            while(!str.endsWith(""bread""))
        {
            str = str.substring(0,str.length() - 1);
        }
            return str.
        }
        else
        {
        return """";
        }
    }
    else
    {
     	return """";   
    }
}
"
15c1ea0d3be674bd35044a56e7c3ff41be8f1a5a,"public String zipZap(String str)
{
   int leg = str.length();
   int l = leg - 2;
   int s = 0;
   char c;
   StringBuilder build = new StringBuilder(leg);
    while ( s < leg)
    {
        c = str.charAt(s);
        if (c == 'z' && s < l && str.charAt(s + 2) == 'p')
        {
            build.append(""zp"");
            s += 3;
        }
        else 
        {
            build.append(c);
                s++;
        }
        
            
    }
    return build.toString();
}
"
ea7b7503d60391606cc84dfdd7b718ed94407df2,"public int makeChocolate(int small, int big, int goal)
{
    if (goal / 5 != big )
        return goal % 5;
    else if (goal / 5 == big && (goal - big * 5) != 0)
        return small;
    else if (goal / 5 == big && (goal - big * 5) == 0)
        return 0;
    else 
        return -1;
}
"
7b76728f45c1f0e9b16c2860b45aae59db2579ce,"public boolean canBalance(int[] nums)
{
   return true;
}"
fff2220a8fe89d9bcda8c61f2ff4fefd528f24ac,"public int[] fix45(int[] nums)
{
    int[] fixed = nums;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == 4 && nums[i + 1] != 5) {
            int pos = 0;
            for (int j = 0; i< nums.length; i++) {
                if (nums[j] == 5 && nums[j - 1] != 4) {
                    pos = j;
                    fixed[j] = nums[i + 1];
                    break;
                }
            }
            fixed[i + 1] = 5;
        }
    }   
}
"
b98d883badd692f010a8768ff412be2365ff59ad,"public int[] zeroMax(int[] nums)
{
    	int max;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 0)
		{
			max = 0;
			for(int k = i + 1; k < nums.length; k++)
			{
				if(nums[k] > max && nums[k] % 2 == 1)
					max = nums[k];
			}
			if(max != 0)
				nums[i] = max;
        }
}
"
1838f26d8df6bc7e06140f8ad436878e06470d50,"public int noTeenSum(int a, int b, int c)
{
    int aFix = fixTeen(a);
    int bFix = fixTeen(b);
    int cFix = fixTeen(c);
    return aFix + bFix + cFix;
}

public int fixTeen(int n)
{
    if (n < 15 && n > 12)
    {
        return 0;
    }
    else if (n > 15 && n < 20)
    {
        return 0;
    }
    else if (n == 15 || n == 16)
    {
        return n;
    }
    else
    {
        return n;
    }
}"
2db49e564996f235354e1beafaa5dd2506725be5,"public int makeChocolate(int small, int big, int goal)
{
    int Big = goal/(big * 5);
    if ((big * 5) < goal)
    {
        if (goal - (big * 5) ) <= small
        {
      if (((big * 5) + (goal - (big * 5))) == goal)
        {
            return goal - (big * 5);
        } 
      else
       {
            return -1;
       }
    }
          }
    else
    {
        return -1;
    }
}
"
93e9470efc8ce5ea76e4eed4efffc921d5fc6648,"public String repeatEnd(String str, int n)
{
    String Display = """"; 
    int times = str.length() - n; 
    for (int i = 0; i < n; i++)
    {
        Display = Display.concat(str.substring(times)); 
    }
    
    return Display; 
}
"
8b0e97970d72ca6ed25907fed47d24bdd47236e0,"public int[] seriesUp(int n)
{
    int length = n * (n + 1) / 2;
    int[] newArray = new int[length];
    int counter = 0;
    for (int i = 0; i < length; i++)
    {
		if (i == 0)
        {
            newArray[i] = 1;
        }
        else
        {
            counter = i;
			for (int j = 1; j <= i; j++)
            {
                newArray[counter] = j;
                counter++;
            }
            i = i + counter;
        }
    }
    return newArray;
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
8525e179d8af7bb7632d7d8c09ddf14b6e564466,"public boolean twoTwo(int[] nums)
{
    for(int i=0;i+3<nums.length;i++)
    {
        if(nums[i]==2&&nums[i+1]!=2)
        {
            i+=2;
        }
        if(nums[i]==2&&nums[i+1]!=2)
        {
            
            return false;
        }
      
    }
    return true;
}
"
3d5712cd499b5dbbb377c38144436a2980ada53f,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
        	return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return false;
}
"
2c486c05b370b06bf098ade075ec89ff1118ec1c,"public boolean sameEnds(int[] nums, int n)
{
    int start = 0;
	int end = nums.length-n;
	for(n > 0; n--)
	{
		if(nums[start] != nums[end])
			return false;
		else
		{
			start++;
			end++;
		}
	}
	return true;
}
"
4235496ebf6598fa98499554c7e8810f24a343da,"public int countCode(String str)
{
    for(int x = 0; x <= str.length(); x++)
    {
        int count = 0;
        if (str.charAt(x) == 'c' && str.charAt(x + 1) == 'o' 
            && str.charAt(x+3) == 'e')
        {
            count = count + 1;
        }
    }
    return count;
}
"
b095e16a3d032d4c17e401239b0baa2bb0e71b69,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    
    for (int i = 0; i < array.length; i++)
    {
        array[i] = i;
    }
    
    return array;
}
"
cc60094df561124d3ef73f93baef00cbaa679458,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
       return false;
    }
    else if (isMom)
    {
        return true;
    }
    else if (!isMorning)
    {
        return true;
    }
        return false;
}

"
b0d65971966b111697c23fee94a8d39025fe48ba,"public String without2(String str)
{
    int length = str.length();
    String beginning = str.substring(0,2);
    String end = str.substring(length - 2, length);
    if (length <= 2)
        return """";
    else if (beginning.equals(end))
    	return (str.substring(2));
    else
        return str;
}
"
7f172e49fbef83fa2150c0abb5e9d15001a1baad,"public String getSandwich(String str)
{
    String newst = """";
    int y = str.length() -1;
    for(int x = 0; x < str.length(); x++)
    {
        if (str.substring(x, y-x).startsWith(""bread"")
            && str.substring(x, y-x).endsWith(""bread""))
        {
            return newst+str.substring(x+5, y-5);
            break;
        }
    }
    return newst;
}
"
893ad3a1a2fbaf3375388c29cfe9039de9e51c9d,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffAB = Math.abs(a - b);
    int diffBC = Math.abs(b - c);
    int diffAC = Math.abs(a - c);
    if (diffAB == diffBC || diffAB == diffAC || diffBC == diffAC)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
a0e0d3470576cabb660417efb110b9fdc67cc2c7,"public int redTicket(int a, int b, int c)
{
    if(a == b && b == c)
	{
		if(a == 2)
        {
			return 10;
        }
		return 5;
	}
	if(a != b && a !=c)
    {
		return 1;
    }
	return 0;
}
"
78a59ae37cfd572faf37016467c03ce718cdba5d,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
        if (str.charAt(i) == b && str.charAt(i + 2) == b)
            return true;
    return false;
}
"
c4fe76845ec7d0a0a6c586645cbe00dd6b137a81,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 if (isBirthday = 1)
 {
     if (speed <= 65)
   	 {
   	     ticket = 0;
   	 }
   	 else if (speed >= 66 && speed <= 85)
   	 {
   	     ticket = 1;
   	 }
     else
   	 {
         ticket = 2;
   	 }
 }
	else
 {
     if (speed <= 60)
     {
  	      ticket = 0;
  	  }
  	  else if (speed >= 61 && speed <= 80)
  	  {
   	     ticket = 1;
     }
     else
     {
         ticket = 2;
     }
 }
}
"
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
5751db3148c8805ad9e482b9dedd7ade5357ba47,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
    {
        return str.substring(first + 5, last);
    }
    else
    {
    return """";
    }
}
"
f3ddf9031a05285f6f9fec49ad403733b0696a3c,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
    	if (speed >= 65)
        {
        	return 0;
        }
    	else if (speed <=85 && speed >= 66)
        {
        	return 1;
        }
    	else if (speed >= 86)
        {
        	return 2;
        }
    }
    else
    {
        if (speed >= 60)
        {
        	return 0;
        }
    	else if (speed <=80 && speed >= 61)
        {
        	return 1;
        }
    	else if (speed >= 81)
        {
        	return 2;
        }
	}
return giveTicket;
    
"
888a63dff1f59fa6a944754dead51bf5ff29d397,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}"
e0d4c69d7595be4d7524172434e2cc21e57661e9,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
        {
            i = i + 1;
            continue;
        }
        sum += nums[i];
    }
    return sum;
        
}
"
e6b4e91acab1d81f043b26358d4b2c441fe38e23,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
8f24168b2e6d591562bf8f6a477f68d15b21fe79,"public int[] shiftLeft(int[] nums)
{
    int[] out = new int[nums.length];
    for (int i = 1; i < nums.length; i++)
    {
        out[i] = nums[i - 1];
    }
    out[nums.length - 1] = nums[0];
    return out;
}"
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
"
bcc7fc10e132fe73565a0df553caa749e44413fe,"public int noTeenSum(int a, int b, int c)
{
    int res=0;
    res=res+ fixTeen(a);
    res=res+ fixTeen(b);
    res=res+ fixTeen(c);
    return res;
}

public int fixTeen(int n)
{
    if(n>12 && n<20)
		if(n==15 || n==16) 
            return n;
		return 0;
}
"
c3512617ca5c44a2a7c9757943e2944653964b69,"public boolean bobThere(String str)
{
    firstB = str.indexOf(""b"")
}
"
b8397d692b54afb3cc1680ce377c125209b4d2d9,"public int centeredAverage(int[] nums)
{
    int small = nums[0];
    int large = nums[0];
    int total = 0;
 
    for (int i = 0; i < nums.length; i++)
    {
        total = total + nums[i];
        if (nums[i] > large)
        {
            large = nums[i];
        }
        if (nums[i] < small) 
        {
            small = nums[i];
        }
    }
    return (total - (large + small)) / (nums.length - 2);
}
"
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
"
22e47d359aeb7b699bfd8a645362bf6043beec28,"public int countEvens(int[] nums)
{
    int total = 0;
    for( int i = 0; i < nums.length; i++) {
     	if (nums[i] == 2) {
            total = total + 1;
        }
        else if (nums[i] == 4) {
            total = total + 1;
        }
        else if (nums[i] == 6) {
         	total = total + 1;   
        }
        else if (nums[i] == 8) {
         	total = total + 1;   
        }
        else if (nums[i] == 0) {
         	total = total + 1;   
        }
    }
    return total;
}
"
77135c32992922b8a064ea7bb8a07cb2acd9592d,"public boolean in1To10(int n, boolean outsideMode)
{
    if ((n >= 1 && n <= 10) && !outsideMode) {
        return true;
    } else if (outsideMode){
        if (n <= 1 || n >= 10) {
            return true;
        }
        return false;
    }
    return false;
}
"
f07f4ee66a484d2d321722ad0e64edabee1e11e4,"public String getSandwich(String str)
{
    if (str.matches(""(.*)bread(.*)bread(.*)""))
    {
    	//int i = indexOf('b');
        int j = lastIndexOf('d');
        return str.substring(i + 5, j -5);
    }
    else
    {
    	return("""");
    }
}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
e6536cfc755a1dc7a8e10c2b857cc75a6fa6d48d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum > 10)
        if (sum <19)
            return 20;
    else
        return num;
}
"
29ad5db824d3afe09833e8cf6dbc7571e21a2fee,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        if (temp >= 60 && temp <= 100)
        {
            return true;
        }
        else
        {
            return false
        }
        
    }
    else
    {
        if (temp >= 60 && temp <= 90)
        {
            return true;
        }
        else
        {
            return false
        }
    }
}
"
fa9e4820c0fa577054532a41fb1276ebedced300,"public int[] fizzArray(int n)
{
    //fizzArray is a method which takes input n and prepares fizzArray


//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}



}
}
"
44486f7c1cd235e3b61ad1b1d5e4f52e3f447ead,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom && isAwake)
        return true;
    if (isMorning && !isMom && !isAwake)
        return false;
    if (isMorning && isMom && !isAwake)
        return false;
    return false;    
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
80b80a660b8113337e5dc1d8d8d78cd8c918c58c,"public int[] seriesUp(int n)
{
    int[] result = new int[n*(n+1)/2];
    int m = 0;
    for (int i = 0;i<=n;i++)
    {
        for (int j = 1;j<i;j++, m++)
        {
            result[m] = j;
        }
        return result;
    }
}"
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
"
e0fc48a114ea8a2948e43da4eb1342009c283ca3,"public boolean love6(int a, int b)
{
    if (a == b)
    {
        return true
    }
    else if (Math.abs(a - b) == 6)
    {
        return true
    }
    else if (a + b == 6)
    {
        return true
    }
    else
    {
        return false
    }
}
"
c88f7c9bf26cc9a050a27f1689c2cd4f6eb76f46,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer && (temp <= 60 && temp <= 100))
       {
           return true;
       }
       else if(!isSummer && (temp <= 60 && temp <= 90))
               {
                   return true;
               }
               else
               	return false;
}
"
4eb02550729357ce44f3197558f31fd46783efb7,"public int[] fix45(int[] nums)
{
    int i;
    int r;
    for (r = 0; r < nums.length; r++)
    {
        if (nums[r] == 5 && nums[r-1] != 4 && r - 1 >= 0)
        {
            for (i = r; nums[i] != 4; i++)
            {
                r++;
            }
            if (nums[i] == 4)
            {
            	int temp = nums[i+1];
            
            	nums[i+1] = nums[nums.length-1];
                nums[r] = temp;
            	//nums[nums.length-1] = temp;
            }
        }
    }
    return nums;
}
"
9e4997bd65913fcc86fdc39ed3c2c795a7a85bb4,"public String getSandwich(String str)
{
    if(word.startsWith('bread'))
    {
        int x = str.length();
        value = str.substring(5, x-5);
        return value
            
    }
       
}
"
b21271e79419b123e5e2d4ff29ca2f214f3fb90e,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if (a==b || a==c || b==c)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
"
10a866cbbd6e47f637ffc68fd8395bc8e676af12,"public int makeChocolate(int small, int big, int goal)
{
    if(goal%(small + 5* big) == 0)
    {
     	return small;   
    }
    else
        return -1;
}
"
c9e9ff10a460be246bf42a7951e8c6e57a345ab2,"public String atFirst(String str)
{
    int length = str.length();
    String atFirst;
    
    if (length = 0)
    {
        atFirst = ""@@"";
    }
    else if (length = 1)
    {
        atFirst = str.substring(0, 1) + ""@"";
    }
    else
    {
        atFirst = str.substring(0, 2);
    }
    return atFirst;
}
"
29a1252f7c0ff20c1a543bc0204b4956f657cce2,"public boolean bobThere(String str)
{
    
    int end = str.length();
	for(int i = 0; i < end; i++)
	{
		if(str.charAt(i) == 'b'
           && str.charAt(i+2) == 'b')
			return true;
	}
    {
	return false;
    }
    
}
"
9aaf66d653b499cd89f83e526ab1b582bc9a7cdc,"public int[] shiftLeft(int[] nums)
{
    int first = nums[0];
    int index = 0;
    int[] newArray = new int[nums.length];
    for (int i = 1; i < nums.length; i++)
    {
        newArray[index] = nums[i];
        index++;
    }
    newArray[nums.length] = first;
    return newArray;
}
"
8ce774ddf43260b9faa39499c3a67d91f71fc099,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    { if (!isSummer && temp >= 60 && <= 90)
    {
        return true;
    }}
}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
8b96b14ffe3cf61f3497dc99292dd9ae605c8142,"public int sortaSum(int a, int b)
{
    sum = a + b;
}
"
8ec5f482e6f6fe23af27069dab01c8e77a3f2c6a,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i < (nums.length - 1); i++)
    {
        if ((nums[i] == val) || (nums[i + 1] == val))
        {
            everywhere = true;
        }
        else
        {
            everywhere = false;
        }
    }
    return everywhere;
}
"
4a37bd0fb1aa33d8b373823289e95f24d549d102,"public int countClumps(int[] nums)
{
    int clumps = 1;
    for(int i = 0; i < nums.length; i++)
    {
        if(i+1 < nums.length)
        {
            if(nums[i] == nums[i+1])
            {
                clumps++;

            }
        }
    }
    return clumps;
}
"
06ce870f764275dc4fbe2e7c3328c4f9612d64a7,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 0; i<n; i++)
    {
        last = last + last;
    }
    return last;
        
}
"
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
"
fde12368e468a86c62372f5d6d42fecf69a10d67,"public boolean twoTwo(int[] nums)
{
    int a = 0;
    for(int i = 0; i < nums.length; i++)
    {
    	if(nums[i] == 2 && nums[i + 1] == 2)
    	{
  		a = a + 1;
    	}
    	else if(nums[i] == 2 && nums[i + 1] != 2)
        {
       return false;
        }
    }
    if (a != 0)
    {
    return true;
}
}
"
c3d741869df42da7d6cef40ac09f4b575f6c6977,"public int[] tenRun(int[] nums)
{
    int[] ten = new int[nums.length];
    boolean isTen = false;
    int tenMult = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0 && nums[i] != tenMult)
        {
            isTen = true;
            tenMult = nums[i];
            ten[i] = nums[i];
        }
        
        else if (isTen)
        {
            ten[i] = tenMult;
        }
        
        else
        {
            ten[i] = nums[i];
        }
    }
 	return ten;
}"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
600821d9f75414292d281aa304cf31d2a4628fce,"public boolean endOther(String a, String b)
{
    if (this.endsWith(a) || this.endsWith(b))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
1f03147a1ddb27442f8c20c61137911b71af3fae,"public boolean has77(int[] nums)
{
    boolean ans = false; 
    for (int i = 1 ; i<nums.length ; i++)
    {
        if(i==1)
        {
            if(nums[i]==7)
            {
                if (nums[i+1]==7 ||nums[i+2]==7)
                {
                    ans = true; 
                }
            }
        }
        
        if(i>1)
        {
            if(nums[i]==7)
            {
                if(nums[i-1]==7 || nums[i-2]==7)
                {
                    ans = true; 
                }
            }
        }
    }
    return ans; 
}
"
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
"
311ef7da2f9ee488312dc86c4422f17877db65c7,"public int countCode(String str)
{ 
    if (!str.contains(""co""))
    {
        return 0;
    }
    else if ((str.lastIndexOf(""c"") > (str.length()-4))
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < str.length(); i++)
        {
            if ((str.charAt(i)=='c') && (str.charAt(i+1) == 'o') &		     (str.charAt(i+3) == 'e'))                                    
            {
                counter = counter + 1;
            }
        }
        return counter;
    }
}
"
51a24c153306d99aa04cf1e75341e6e2438f8733,"public int[] fizzArray(int n)
{
    public int[] fizzArray(int n); 
    int[] array = new int[n];
    
    for(int integer = 0; integer < n; integer++)
        array[integer] = integer;
              
    return array;
}
"
ba8f3893880232228c46eb91e485fd32f4b05028,"public boolean bobThere(String str)
{
    if (str.contains(""b"") && (str.indexOf(""b"") != str.lastIndexOf(""b""))) &&
        (str.indexOf(""b"") + 1 != str.lastIndexOf(""b""))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
582b917e4c3a6c8bdf35c427341ab5ddf0ac9d24,"public int sortaSum(int a, int b)
{
    if(a + b >= 10 || a + b <= 19)
    {
    	return a + b;
    }
    
    else 
    {
    	return 20;
    }
}
"
b000a54fcfd853f086a3b14e5fa27b6568347d24,"public boolean bobThere(String str)
{
    
  
        if (str.charAt(x) == 'b' && str.charAt (x+2) == 'b')
    	{
        	return true;
    	}
    else
  
    	{
        	return false;
    	}
    
}"
9c0b8ca499bfc408a9ecb50784ffe8b4cfa41ecc,"public boolean isEverywhere(int[] nums, int val)
{
    int x = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val)
        {
            x = 0;
        }
        else if (nums[i + 1] == val)
        {
            x = 0;
        }
        else
        {
            return false;
        }
        
    }
    return true;
}
"
fd19ee70b6ed78dc3c5cf345b006e41ad230749d,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
e8024210ddec149af506cc6312569260823377f0,"public boolean in1To10(int n, boolean outsideMode)
{
    if (!outsideMode)
    	if (n >= 1 && n <= 10)
        	return true;
    	if (n < 1 || n > 10)
        	return false;
    if ((n <= 1 || n >= 10) && outsideMode)
        return true;
    if ((n >= 11) && outsideMode)
        return true;
    else
        return false;
}
"
d3dcafd019197d85a3b2ca16a3372c79e316a55c,"public String alarmClock(int day, boolean vacation)
{
    String alarmClock;
    
    if ((vacation) && (day != 0) && (day != 6))
    {
        alarmClock = ""10:00"";
    }
    else if ((vacation) && (day == 0))
    {
        alarmClock = ""off"";
    }
    else if ((vacation) && (day == 6))
    {
        alarmClock = ""off"";
    }
    else if ((day == 0) || (day == 6))
    {
        alarmClock = ""10:00"";
    }
    else
    {
        alarmClock = ""7:00"";
    }
    return alarmClock;
}
"
7910983e74a89dc7d18c83f6c12e27816665064a,"public boolean something; 

public boolean xyzThere(String str)
{
    str.toLowerCase();
    if (str.contains(""xyz""))
    {
        something = true; 
    }
    else 
    {
        something = false; 
    }
    return something; 
}
"
7d1f0122f17adcfc056955c10c862edf6a1f08ff,"public boolean evenlySpaced(int a, int b, int c)
{
    int temp;
    if (b > a)
    {
    	temp = a; 
        a = b;
        b = temp;
    }
    if(c > b)
    {
        temp = b;
        b = c;
        c = temp;
    }
    if (b > a)
    {
    	temp = a;
        a = b; 
        b = temp;
    }
    return (a - b == b - c);
}
"
85c4da3eae44449610d4abcaabc40f355189f866,"public boolean twoTwo(int[] nums)
{
    for (int i=0; i<(nums.length); i++)
	{
		if(nums[i]==2)
		{
			i++;
			if(!(i<(nums.length)) || nums[i] !=2) 
    		{
        		return false;
    		}
			while(i<nums.length && nums[i] ==2) i++;
			}
		}
	return true;
}
"
54b61380fe4d5c128c58dc7bd2bc5f7952da04ad,"public String repeatEnd(String str, int n)
{
    String end = """";
    for(int i = 0; i < n; i++)
    {
     end = end + str.substring((str.length() - n), str.length());   
    }
            return end;
}
"
4dc92e33f892b479c3e682a4b9bbc8b539b70c32,"public int[] seriesUp(int n)
{
    int length = n * (n + 1) / 2;
    int[] newArray = new int[length];
    int counter = 0;
	for (int i = 0; i < length; i++)
    {
        counter = i;
        for (int j = 1; j <= i + 1; j++)
        {
            newArray[counter1] = j;
            counter++;
        }
        i = counter;
    }
    return newArray;
}
"
d1c3c949a3fa3e5304850b7480d7ac8914cbf4ce,"public int loneSum(int a, int b, int c)
{
    if(a==b)
    {
    	return c;
    }
    else if(b == c)
    {
    	return a;
    }
    else if(a == c)
    {
    	return b;
    }
    else
    {
    	return 0;
    }
    return (a + b + c);
}
"
6ca742343d54d79a1c2577bbb52f1495d8671ed9,"public int blackjack(int a, int b)
{
    if( a > 21 && b > 21 )
    {
        return 0;
    }
    else
    {
        if( a >= b )
        {
            return a;
        }
        if( a < b)
        {
            return b;
        }
    }
}
"
db9bf69ddaa82a2799d6892cfa7fe0304a1ad783,"public int chance; 

public int dateFashion(int you, int date)
{
    if (you >= 8 || date >=8)
    {
        chance = 2; 
    }
    else if (you >= 2 || date >= 2)
    {
        chance = 0;
    }
    else 
    {
        chance = 1; 
    }
    return chance; 
}
"
0094223fbb446762c0dde0a36a18661c1f1f3678,"public int greenTicket(int a, int b, int c)
{
    if (a != b && a != c && b != c)
        return 0;
    else if (a == b && a == c && b == c)
        return 20;
    else
        return 10;
}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
"
50fdfaadecc1a76b66aafd7a63cc5c96e4c5e0db,"public boolean has77(int[] nums)
{
  for (int i = 0; i < nums.length-1; i++)
  {
  if ((nums[i] == 7 && nums[i+1] == 7))
  {
  	result = true;
  }
  }

  for (int i = 0; i < nums.length-2; i++)
  {
  if ((nums[i] == 7 && nums[i+2] == 7))
  {
  	result = true;
  }
  }

}
"
de3eb3fe1397ad22d68e3973fbebeb2a5b3b1849,"public int[] fizzArray(int n)
{
    int[] fizz = new int[n];
    for (int i = 0; i < n; i++)
    {
        fizz[i] = i;
    }
    return fizz;
}
"
21116b0bcc572aef5c8dfa6625f411eecd53b9ba,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    int la = a.length();
    int lb = b.length();
    if	(la > lb)
    {
        return	a.substring(la-lb, la).equals(b);
    }
    else
    {
        return	b.substring(lb-la, lb).equals(a);
    }
}"
a2c77eb2341d2107484dea64721c8eb1fb2b5c9b,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else if (c == 13)
    {
    	sum = a + b;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum;
    }
}
"
b1ebcb1c30766d8a77bc73f3bcdecfaa18e63176,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
    int rightSum = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
2ff10cecd8d8545349c487d248173bc2054ee147,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( nums[i] == 7 && nums[i + 1] ==7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 				2] == 7)
        {
            return true;
        }    
        return false;
    }
    
}
"
1bee65d153e12ec9ca0a2bdca817907b7aed2e77,"public int[] seriesUp(int n)
{
    int[] arr = new int[n*(n+1)/2];
	int p = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++, p++)
			arr[p] = j;
	}
	return arr;
}
"
136d2cd92ab989fa92257cd05276f8bb787fe52f,"public String plusOut(String str, String word)
{
    String x;
    String y = """";
    for (int i = 0; i < str.length(); i++) {
        if (str.substring(i).startsWith(word)) {
            y = y + word;
            i++;
        }
        else {
            y = y + ""+"";
        }
    }
    return y;
        
}
"
453793b2cb1c2793f09bd80727352e3c5a5c505e,"public String plusOut(String str, String word)
{
    int length = str.length();
	int wLength = word.length();
	int pos = str.indexOf(word);
	int i = 0;
	StringBuilder stbuild = new StringBuilder(length);
	while(pos != -1)
	{
		while(i < pos)
		{
			stbuild.append('+');
			i++;
		}
		stbuild.append(word);
		i = pos + wLength;
		pos = str.indexOf(word, i);
	}
	for(; i < length; i++)
		stbuild.append('+');
	return stbuild.toString();
}
"
a354fe94859e5967d2c6bdce8fdb12e90a24f48c,"public int sortaSum(int a, int b)
{
    if(a + b >= 10 || a + b <= 19)
    {
    	return a + b;
    }
    
    else 
    {
    	return 20;
    }
}
"
f5f288de072cdea03fa5b7f5f63fef9bb6c804a6,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2)
		return 0;
	if(you >= 8 || date >= 8)
		return 2;
	return 1;
}
"
ff7e64ecfad2274183b9421bdb5f3897335c8198,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning && isMom)
    {
        return true;
    }
    else if (isMorning && !isMom)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
042c7539e7bbc603f9d999c837f0b4486eeef11a,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n != 15 && n != 16)
    	if (n <= 19 && n >= 13)
        	return 0;
    return n;
}
"
d6752f75c103ddd855cd95eb763012b6e4411ea2,"public boolean endOther(String a, String b) {
    if(a.length() < b.length()) {
        String temp = a;
        a = b.toLowerCase();
        b = temp.toLowerCase();
    }
                  
    return a.substring(a.length() - b.length()).equals(b);
}"
a5ef4e9ae777060ed56015c4182bbe5b63e80d69,"public boolean evenlySpaced(int a, int b, int c)
{
    return (a == b && b ==c);
    return ((Math.abs(a-b) == Math.abs(b-c)) || (Math.abs(a-c) == Math.abs(a-b)) || (Math.abs(c-a) == Math.abs(b-c)));    
}
"
2f3b56a3d5fc553b348634db12b6a1c0dcebc8b3,"public boolean in1To10(int n, boolean outsideMode)
{
    if(!outsideMode){
    	if(1 <= n && 10 >= n){
    		return true;
        }
        else{
        	return false;
        }
    }
    if(outsideMode){
    	if(n <= 1 || n >= 10){
        	return true;
        }
        else{
        	return false;
        }
    }
    return(outsideMode);
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
b43bc782faec4874c0004b47e0d4dff3edace72e,"public int countCode(String str)
{
    int len = str.length();
    int found = 0;
    for (int i = 0; i < len - 3; i++)
    {
      if (str.substring(i).startsWith(""co"") && str.charAt(i + 3) == ""e"")
          found++;
    }
            
    return found;
    
}
"
d3745baab3910b6b855000797454d3c32c533553,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return (str.substring(0,1) + ""@"");
    }
    return (str.substring(0, 2));
}
"
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
d056d5a8f423c818834e004f9d7285bf7d1c8f2e,"public String without2(String str) 
{
    if (str.substring(0, 2) == str.substring(str.length() - 3))
        return str.substring(2);
    else
        return str;
}
"
58e149b84e8a69bfecc22c0fb97c85136e4316c3,"public int findOdd(int[] nums, int index)
{
    int biggestOdd = 0;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd = nums[j];
    return biggestOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
64c3e7aec45176e87405fdbe2029f2f178597ad8,"public boolean isEverywhere(int[] nums, int val)
{
    int length = nums.length;
    int counter = 0;
    if (length == 0)
    {
        return true;
    }
    else if (length == 1)
    {
        return true;
    }
    for (int i = 0; i < length - 1; i++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            counter = counter + 1;
        }
    }
    if (counter == length - 1)
    {
        return true;
    }
    else 
    {
		return false;
    }
}
"
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
"
bda78f041aeff5c1c99839481d54cb270d0f1529,"public int makeChocolate(int small, int big, int goal)
{
     if goal >= 5 * big
     {
        remainder = goal - 5 * big；
     }
    else
    {
        remainder = goal % 5；
    }
        
    if remainder <= small
    {
        return remainder；
    }
        
    return -1；
}
"
7856bc992acb7f7b799ac4063e23bfc3598df9e0,"public int sum13(int[] nums)
{
    if(nums.length == 0) {
        return 0;
    }
    
    int sum = 0;
    boolean thirteen = false;
    boolean secondthirteen = false;
    
    for(int i = 0; i < nums.length; i++) {
        if(nums[i] == 13) {
            thirteen = true;
        }
        
        if(!thirteen && !secondthirteen) {
            sum += nums[i];
            thirteen = false;
            secondthirteen = false;
        }
        
        if(thirteen) {
            secondthirteen = true;
        }
    }
    
    return sum;
}
"
65253aceab3d7336a9ed62060fdd8dedaef34d24,"public int[] zeroMax(int[] nums)
{
    int max;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 0)
		{
            max = 0;
			for(int k = i + 1; k < nums.length; k++)
			{
				if(nums[k] > max && nums[k] % 2 == 1)
					max = nums[k];
			}
			if(max != 0)
				nums[i] = max;
		}
	}
	return nums;
}
"
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
"
0be714e6700cd5ad89ad8f1e30daf5c0dc2f6a03,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] != val || nums[i+1] != val)
        {
        	return false;
        }

    }
	return true;
}
"
de8dd816d7504d0badcde0e3a1cad34d2d232e00,"public String atFirst(String str)
{
    String first2 = new String();
    if (str.length() == 1)
    {
        first2 = str.charAt(0) + ""@"";
    }
    else if (str.length() == 0)
    {
        first2 = new String(""@@"");
    }
    else
    {
    	first2 = ""str.charAt(0) + str.charAt(1)"";
    }
    return first2;
    
}
"
02b97f2fba75dafc67a594290f85076341dce5dc,"public boolean in1To10(int n, boolean outsideMode)
{
    boolean num = false;
    
    if (n >= 1 && n<= 10)
    {
        num = true;
    }
    
    if (outsideMode == true)
    {
        if (n <= 1 || n >= 10)
        {
            num = true;
        }
    }
    
    return num;
}
"
4be57b38f2b2c98beb57ee32b95c2ff896662228,"public int[] seriesUp(int n)
{
    int[] array = new int[n * (n + 1) / 2];
       
    for (int i = 0; i < array.length; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            for (int p = 1; p < j; p ++)
            {
                array[i] = p;
            }
        }
    }
    
    return array;
}
"
9580bc9ec9768fbe373460d6ae91ff54ca05bf71,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if(nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
"
a57895e551eb75c1284ceda2977b9e285eff7250,"public int makeChocolate(int small, int big, int goal)
{
    int num = -1;
    big = big *5;    
    int r = goal % 5;
    if (big + small >= goal && small >= r)
    {
        num = r ; 
        if (goal - 5 >= big)
        {
            num = r + (goal-big);
        }
    }
    
   
    return num;
        
}
"
5593b014a88f403f25aa3a1bc1bbe2143adedc85,"public int makeChocolate(int small, int big, int goal)
{
    int numSmall;
    if ((5*big + small < goal) || (goal % 5 > small)) {
        numSmall = -1;
    }
    else if (5*big < goal) {
    	numSmall = goal - 5*big;
    }
    else {
        numSmall = goal % 5;
    }
    return numSmall;
}
"
61adc4879990a112b57c1046c6c202b1ced516e7,"public int[] withoutTen(int[] nums)
{
    int[] ints = new int[nums.length];
    int k = 0;
    for (int i = 0; i < ints.length; i++)
    {
        if (nums[k] != 10)
        {
            int temp = nums[i];
            nums[k] = temp;
            k++;
        }
        
    }
    return ints;
}
"
71f6c9fb5570f2a9267d64526fdf6b79c935756c,"public String alarmClock(int day, boolean vacation)
{
        if (alarmClock(0, true))
        {
            return ""off"";
        }
        if else (alarmClock(6, true)) 
        {
            return ""off"";
        } 
    	else
        {
            return ""10:00"";
        }
        if (alarmClock(1, false) && alarmClock(5, false))
        {
            return ""7:00"";
        }
        else 
        {
            return ""10:00"";
        }
}
"
91208aa9658e8817d84787f1b6e4c4b0daa89433,"public String plusOut(String str, String word)
{
    String a = """";

        for (int i =0;i < str.length(); i ++){
        if (str.startsWith(""word"", i))
        {
        	a = a + word;
            i = i + word.length() - 1;
        }else
        {
        	a = a + ""+"";
          
        }
    }
    return a;
}
"
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
"
3bfe605f68e12c9d3fe2391ac78c50b7339ea224,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
	b = b.toLowerCase();    
    return(a.lastIndexOf(b)<=a.length()-b.length()||b.lastIndexOf(a)<=b.length()-a.length());
}
"
666a7f0c20c29b5666745dfb4c61a7a881f21218,"public boolean evenlySpaced(int a, int b, int c)
{
    boolean spaced = false;
    int aMinusB = a - b;
    int aMinusC = a - c;
    if (aMinusB == aMinusC || aMinusB == -aMinusC)
    {
        spaced = true;
    }
    return spaced;
}
"
eb79e1980024c9185b86e6273f0059b5013caaed,"public int loneSum(int a, int b, int c)
{
    if((a == b) || (a == c) || (b == c))
    {
        if((a == b) && (a == c))
        {
            return 0;
        }
        else
        {
            if(a == b)
            {
                return c;
            }
            else
            {
            if(b == c)
                {
                    return a;
                }
                else
                {
                    return b;
                } 
            }
            
        }
        
    }
    else
    {
        int sum = (a + b + c);
        return sum;
    }
}
"
2580029cc96569a0a5de879b3477246fecde0db0,"public String getSandwich(String str)
{
    String between = """";
    for(int i = 0; i < str.length(); i++)
    {
    	if (str.substring(0, i).equals(""bread""))
        {
        	between = str.substring(i, str.length());
            for(int j = between.length(); j > 0; j--)
            {
            	if (str.substring(j, between.length()).equals(""bread""))
                {
                	between = str.substring(0, j);
                    return between;
                }
            }
        }
		return between;    
    }
    return between; 
}
"
13e7726e22c3130d052d705ea6bb06b6b0869917,"public int sortaSum(int a, int b)
{
    if (Math.abs(a + b >= 10) && Math.abs(a + b <= 19))
        {
            return 20;
        }
    else
        {
            return Math.abs(a + b);
        }
}
"
f3d94f12ae51f89017bb92ea53ab660ca85c9a42,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
 
    for (int i = 0; i < nums.length; i++) {
        sum += nums[i];
        if (nums[i] > max) max = nums[i];
        if (nums[i] < min) min = nums[i];
    }
    return (sum - (max + min)) / (nums.length - 2);
}
"
2184ee37d5f90cab4d0a150fb6fa52b79806e125,"public int[] zeroMax(int[] nums)
{
    int biggest = 0;
    for (int i = 0; i < nums.length;i++)
    {
        if (nums[i] == 0)
        {
            for (int a = i; a < nums.length;a++)
            {
                if (nums[a]%2 == 1)
                {
                    if (biggest < nums[a])
                    {
                    nums[i] = nums[a];
                    }
                }
            }
        }
    }
    return nums;
}
"
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
6838f3a0ca0a4ce80030a9271bafd074a9cf9877,"public boolean evenlySpaced(int a, int b, int c)
{
    if ((Math.abs(a-b) == Math.abs(b-c)) || (Math.abs(a-c) == Math.abs(a-b)) || (Math.abs(c-a) == Math.abs(b-c)))
    {
        return true;
    }
    else if (a == b || a == c || b == c) 
    {
        return false;
    }
    return (a == b && b ==c);
    
}
"
342e751c22508d5a3fb488dac9d9a607acc0f36f,"public String zipZap(String str)
{
    int stringLength = str.length();
    int findZ = str.indexOf(""z"");
    int findP = str.indexOf(""p"");
    String newString = """";
    if (stringLength < 3)
    {
        return str;
    }
    else if (findZ == -1 && findP == -1)
    {
        return str;
    }
    else
    {
        for (int i = 0; i < stringLength - 2; i++)
        {
        	findZ = str.indexOf(""z"", i);
    		findP = str.indexOf(""p"", i);
        	if (findP - findZ == 2)
        	{
				String zStart = str.substring(findZ, findZ + 1);
            	String zBack = str.substring(findZ + 2);
            	newString = newString + zStart + zBack;
        	}
    	}
    }
    return newString;
}
"
2770a48008299c44dd75664256b154b8efe0dea4,"public int[] seriesUp(int n)
{
    int[] series = new int[0];
    return series;
}
"
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
"
07720c825da191dbf83d85b65f1ecc720c77ea99,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars >= 40)
        {
            return true;
        }
        if (cigars <40)
        {
            return false;
        }
    }
    if (cigars >= 40 && cigars <=60)
    {
        return true;
    } 
    if (cigars > 40)
    {
        return false;
    }    
}
"
5c1c154aced6b74d2241825d731edc1c05edee0e,"public String without2(String str) 
{
    if (str.length() > 1)
    {
        if (str.substring(0, 1) == str.substring(str.length()-1))
    	{
        	return str.substring(2);
    	}
        else {
            return str;
        }
    }
    else {
        return str;
    }
}
"
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
"
6a98837866a306d65a1ff4996e71671e80bdd7df,"public boolean bobThere(String str)
{
    boolean truth = true;
	for(int i = 0; i < str.length() - 2; i++) 
    {
        if(str.charAt(i) == 'b' && str.charAt(i+2) == 'b')
        {
            truth = true;
            return;
        }
    
    	else
    	{
        	truth = false;
    	}
    
    }
    return truth;
}
"
7d1223c04b3cdd6a8c111f378ce0f3cf10b7c095,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
        char l1;
        l1 = str.charAt(i);
        
        char l2;
        l2 = str.charAt(i + 1);
        
        char l3;
        l3 = str.charAt(i + 2);
        
        char bob;
        bob = (l1 + l2 + l3);
        
        if (bob.startsWith(b) && bob.endsWith(b))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
        
        
}
"
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
"
ade3ab42f514b944990e34afb1ed97d0c33c0dfd,"public boolean bobThere(String str)
{
    int a = str.indexOf(""b"", 0);
    int b = str.lastIndexOf(""b"");
    
    if ((b - a) >= 2)
    {
        String c = str.substring(a, b);
        
        if (c.length() > 3)
        {
            return false;
        }
        else
        {
            return true;
        }
    }
    else
    {
        return false;
    }
}
"
3e361ad4b1b1638f683f828935f3d88837c3ff11,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if ((temp >= 60 && temp <= 90) && !isSummer)
        return true;
    if ((temp >= 60 && temp <= 100) && isSummer)
        return true;
    else
        return false;
}
"
1ce3f9a47a09f95d1a1ca35bc1930be42f6a28cb,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8  ) 
    {
        return 2;
    }
    
    else if ((you <= 2 || date <= 2 ) || (you = 9 || date = 2)||
            (you = 10 || date = 2) || (you = 2 || date = 9))
    {
        return 0;
    } 
   
    
    
    else 
    {
        return 1;
        
    }
              
    
}
"
ce0fcb830ccf1b5abc99eeadb21396fcab812588,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
    {
		return true;
    }
	return ((a + b) == 6|| Math.abs(a - b) == 6);
    
}
"
037d9cfb7e70b9ec11a3da816118f6d729a3b257,"public boolean has77(int[] nums)
{
	for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
"
76d9ad72e171ab1f19e180764dff5f4e23e73ffd,"public String without2(String str) 
{
    if (str.length() == 2 || str.length() <= 0)
    {
        return """";
    }
    if (str.length() <2)
    {
        return str;
    }
    else if (str.substring(0,1).equals(str.substring(str.length()-2)))
    {
        return str.substring(2);
    }
    else
    {
        return str;
    }
        
}
"
0048badf93e2a96b4978a6277199d5e0afe6a259,"public boolean evenlySpaced(int a, int b, int c)
{
   if ((a-b == b-c) || (b-a == a-c) || (c-a == a-b)))
   {
       return true;
   }
   return false;
}
"
7a29ef65b7e45220d53dcb24e896410e0715fcae,"public String repeatEnd(String str, int n)
{
    int length = str.length();
    String nString = str.substring(length - n, length);
    for ( int = 0; i < n, i++)
    {
        String nTimes = nTimes + nString;
    }
    return nTimes;
}
"
192b48615cd9b40890288685ac642c1b647210ce,"public int sum13(int[] nums)
{
    int sum = 0;
    if (nums.length < 0)
    {
    	for (int i = 0; i < nums.length; i++)
    	{
     	   if (num[i] == 13)
           {
            	i++;   
           }
           else
           {
            	count += num[i];   
           }
    	}
    }
}
"
3001de522572fcdaf405331172d7059a0f6555bc,"public String plusOut(String str, String word)
{
    int length = str.length();
    String newString = """";
    int wordlength = word.length();
	for (int x = 0; x < length - wordlength; x++)
	{
		if (str.substring(x, x + wordlength).equals(word))
        {
			newString = str.substring(0, x-1);
            for (int i = 0; i < wordlength; i++)
                 {
                     newString = newString + ""+"";
                 }
            newString = str.substring(x + wordlength, length);
        }
        else
        {
           //nothing;
        }
	}
    return newString;
}
"
5b07286c73b6f4b7fbecc055cf06ca76de2c4ab0,"public int sum67(int[] nums)
{
    for (int i = 0; i < nums.length(); i++){
        if (nums[i] == 6){
            while (nums[i] != 7){
                nums[i] = 0;
                i++;
            }
        }
    }
    int sum = 0;
    for (int i = 0; i < nums.length(); 9++){
        sum = sum + nums[i];
    }
    return sum;
}
"
a2c3e05c211437ca860059cfc5b889560d9aa1a2,"public int[] fix45(int[] nums)
{
    int r = 0;
    for(int i = 0; i < nums.length - 1; i++)
    {
        if(nums[i] == 4 && nums[i+1] != 5)
        {
            for(; !nums[r] == 5 && (r == 0 || r > 0 && nums[r-1] !=4)); r++);
            {
                nums[r] = nums[i+1];
                nums[i+1] = 5;
            }
        }
    }
    return nums;
}
"
8d0bb6ec53241f15fe9e9600d26c6a7e9b62241d,"ublic String zipZap(String str) {
  int len = str.length();
  String finalString = """";
  
  for (int i = 0; i < len; i++) {
    finalString += str.substring(i,i+1);
    if (i > 0 && i < len-1) {
      if (str.charAt(i-1) == 'z' && str.charAt(i+1) == 'p')
        finalString = finalString.substring(0,finalString.length()-1);
    }
  }
  return finalString;
}"
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
"
db5120fd07897495090a967fe26f3fd88cb07b88,"public int dateFashion(int you, int date)
{
    dateFashion value = 2;
    
}
"
f9d8c1646ba82ba2c6fd76e741d03f0b2865d6b3,"public int[] tenRun(int[] nums)
{
    int target = -1000000;
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] % 10) == 0)
        {
            target = nums[i];
        }
        else 
        {
            if (target != -1000000)
            {
                nums[i] = target;
            }
        }
    }
    return nums;
}
"
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
"
bd57f35e40fa090c05698af136697256b722746c,"public int sum3(int[] nums)
{
    return int[0] + int[1]+int[2]; 
}
"
4afa993dcfa50e1dfc676d02d355a13166a4eaad,"public int caughtSpeeding(int speed, boolean isBirthday)
{
        
    if (isBirthday)
    {
        speed = speed - 5;
        
    }
    
    if (speed < 60)
    {
        return 0;
    }
    
    else if (60 < speed < 80)
    {
        return 1;
        
    }
    
    else if (speed > 81);
    {
        return 2;
        
    }
    }
    
    
    
        
   

"
c0bcafd61ce598040aa977b280d46011559cb4c7,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true;
    for( int i = 0; i <= nums.length-2; i++)
    {
        if( nums [i] != val && nums[i+1] != val)
            result = false;
    }
    return result;
}
    
}
"
73da1934e447bc2a5a6385eaeda97b7268f9f7fe,"public int sortaSum(int a, int b)
{
    int sum = 0;
    if ((a = b) >= 10 && (a + b) <= 19)
    {
        sum = 20;
    }
    else
    {
        sum = (a + b);
    }
    return sum;
}
"
9c1da95aeab7b7dd8c6c01b09f4495fa57bbafd2,"private boolean num;

public boolean in1To10(int n, boolean outsideMode)
{
    if (n >= 1 && n <= 10)
    {
        if (outsideMode = false)
        {
            num = true; 
        }
        else 
        {
            num = false; 
        }
    }
    else if (n <= 1 || n >= 10)
    {
        if (outsideMode = true)
        {
            num = true; 
        }
        else
        {
            num = false; 
        }
    }
    return num;
}
"
56c06bec7cf7e18244403d9e4f756ec0427933f0,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    if (n <= nums.length)
    {
        int[] firstgroup = new int[n];
        int[] lastgroup = new int[n];
        for (int i = 0; i < n; i++)
        {
            firstgroup[i] = nums[i];
        }
        int p = nums.length;
        for (int o = nums.length - n; o < nums.length; o++)
        {
            int r = nums.length - p;
            lastgroup[r] = nums[o];
            p = p - 1;
        }
        if (firstgroup.equals(lastgroup))
        {
            return true;
        }
    }
    return false;
}
"
c27015ab3fb04b3b187b72a7301d94d2fb171659,"public int[] withoutTen(int[] nums)
{
	int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	return arr;
}"
c386e80b45b1f867ba40aaf3d78f271a5bd2ffe0,"public int noTeenSum(int a, int b, int c)
{
	if(a <= 19 && a >= 13)
    {
    	return b + c;
    }
    
    if(b <= 19 && b >= 13)
    {
    	return a + c;
    }
    
    if(c <= 19 && c >= 13)
    {
    	return a + b;
    }
}

public int fixTeen(int n)
{
	    
}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
9def91e03cb4c9e4fb5f0472d02e90c8fb23cc26,"public int makeChocolate(int small, int big, int goal)
{
    int amount = (5*big) + small; // Amount possible
    if (amount < goal)
    {
        return -1;
    }
    else if (amount == goal)
    {
        return small;
    }
    else
    {
        int diff = amount - goal;
        int afterBig = diff - (5*big);
        if (afterBig < 0)
        {
            return small;
        }
        else
        {
            return small - afterBig;
        }
    }
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
7949ea659e6166f72ab0a1e233ecc847ca30f048,"public boolean in1To10(int n, boolean outsideMode)
{
    if (!outsideMode && (n >= 1 && n <= 10))
    {
        return true;
    }
    else if (outsideMode && (n <= 1 || n >= 10))
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
"
8a29e1c786ef24718722e3ee466fc07ef0e18808,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            int storage = 0;
            for (int j  = i; j < nums.length; j++)
            {
                if (j % 2 == 1 && j > storage)
                {
                    storage = j;
                }
            }
            nums[i] = storage;
        }
    }
    return nums;
}
"
3b4517da66b6f284ac18fee9069796535d1dae65,"public boolean isEverywhere(int[] nums, int val)
{
    int len = nums.length;
    int i = 0; 
    for(i <= len-1; i++)
    {
        if (nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
        else
        {
            return true;
        }
    }
}
"
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
"
67cb85c7178438f7131584ad3593054094d0a77a,"public int blackjack(int a, int b)
{
    if ((a > 21) && (b > 21))
    {
        return 0;
    }
    if ((a <= 21) && (a > b))
    {
        return a;
    }
    else if ((a <= 21) && (b > 21))
    {
        return a;
    }
    else
    {
        return b;
    }
}
"
2aa04ae7ee6e595cb1522cd52a56c7417e00c81a,"public String[] fizzBuzz(int start, int end)
{
String[] arr = new String[end - start];
    
    for(int i = start; i < end; i++) {
        if(i % 15 == 0) {
            arr[i - start] = ""FizzBuzz"";
        } else if(i % 3 == 0) {
            arr[i - start] = ""Fizz"";
        } else if(i % 5 == 0) {
            arr[i - start] = ""Buzz"";
        } else {
            arr[i - start] = String.valueOf(i);
        }
    }
                                                      
    return arr;
}
"
f8e2e6bb5d3f455462c4a729ac1c0772ed521c99,"public boolean twoTwo(int[] nums)
{
    if (nums.length < 2 && nums[0] != 2 )
    {
     	return true;   
    }
    else if (nums.length < 1)
    {
     	return false;   
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
fa637ce1670d61b87741bb7e5404165a51bc7845,"public static String getSandwich(String str) {
    int ind = str.indexOf(""bread"");
    int laind = str.lastIndexOf(""bread"");
    if((laind != -1 ) && (ind!=laind))
        return (str.substring(ind+5,laind)) ;
    return """";
}

"
74350febcd479d438d21b74da905fc5ec24d76e9,"public int[] zeroMax(int[] nums)
{
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 0) {
                int max = 0;
                for (int j = i + 1; j < nums.length; j++) {
                    if (max < nums[j] && nums[j] % 2 != 0) {
                        max = nums[j];
                    }
                }
                nums[i] = max;
            }
        }
        return nums;
}
"
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
"
ac48566ba16bbb84d96deb3d67ed39662b9f1e1c,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (!isBirthday.isTrue())
    {
        if (speed <= 60)
        {
            caughtSpeeding = 0;
        }
        if (61 <= speed <= 80)
        {
            caughtSpeeding = 1;
        }
        if (speed >= 81)
        {
            caughtSpeeding = 2;
        }
    }
    else
    {
        if (speed <= 65)
        {
            caughtSpeeding = 0;
        }
        if (66 <= speed <= 85)
        {
            caughtSpeeding = 1;
        }
        if (speed >= 86)
        {
            caughtSpeeding = 2;
        }
    }
}
"
de2226a0284b2c82327158ad0c4356fedc5c749c,"public boolean xyBalance(String str)
{
 	int x = str.lastIndexOf('x');
    int y = str.lastIndexOf('y');
    if (y > x)
        return true;
        return false;
}
"
77ef41c9051bc2d90dc72510fd40ea3619a48ac5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean answerCall;
    
    if (isAsleep)
    {
        answerCall = false;
    }
    else if ((isMom) && (isMorning))
    {
        answerCall = true;
    }
    else if (isMorning)
    {
        answerCall = false;
    }
    else
    {
        answerCall = true;
    }
    return answerCall;
}
"
dd5d410d7956f0593c1fd3b5ee56f7e142e0b843,"public boolean love6(int a, int b)
{
 	if (a - b = math.abs(6))
    {
        return true;
    }
    else if (a + b = Math.abs(num))
    {
        return true;
    }
    else if ( a = Math.abs(6) || b = Math.abs(6));
    {
        return true;
	}
    else
    {
        return false;
    }
    }
}
    "
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
e0ce8cdba87af0d99539e30e84c6957bb75c9600,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean result;
    if(isAsleep)
    {
        result = false;
    }
    else if (isMorning)
    {
        if(isMom)
        {
            result = true;
        }
        else
        {
            result = false;
        }
    }
    else 
    {
        result = true;
    }
}
"
b52819ea3f70a5151d3bf001ecfc3d458a4c6285,"public int[] withoutTen(int[] nums)
{
    int[] newArray = new int[nums.length];
    
    for (int number : nums)
    {
        
           for (int i = 0; i < nums.length; i++)
           {
               if (nums.equals(10))
               {
                   newArray[i] = nums;
               }
               
           }
        
    }
    
    return newArray;
    
}
"
b06969c110512b6724f329cb515ecc7e9a70cc3d,"public boolean xyzThere(String str)
{
    int findXYZ = str.lastIndexOf(""xyz"");
    boolean trueXYZ = str.startsWith(""xyz"");
    boolean precedeXYZ = str.startsWith(""."", findXYZ - 1);
    if (trueXYZ == true && precedeXYZ != true)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
aff0d6e41f1173172b9780b19a7e2a295521ae2e,"public String getSandwich(String str)
{
    if (str.substring(0, 5) == ""bread"")
    {
    	String bread = str.substring(5, str.length() - 5);
    	return bread;
    }
}
"
d004a01ff4f1eeddc44d6765de905b20aaa4756a,"public int sum13(int[] nums)
{
    if (nums == 0) {
        return 0;
}
"
2b6fbdd8ffb390e14349649d51e8f312d5db1ba8,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[nums.length - 1] == 2)
        return false;
    return true;
}
"
26976d8498105a4bf1ca95c21e127e1590d56063,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(temp >= 60 && temp <= 90)
        return true;
    if(isSummer)
        if(temp >= 60 && temp <= 100)
            return true;
}
"
3d89f76d27956de3a51e53f7ba12c5aa1fc7e352,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom && isAsleep)
        return true;
    if (isMorning && !isMom && !isAsleep)
        return false;
    if (isMorning && isMom && !isAsleep)
        return false;
    return false;    
}
"
a2ad02c1066c82c511e504bb9600f54a2c68c08c,"public int loneSum(int a, int b, int c)
{
    if (a!=b && b!= c && c!=a)
        return a+b+c;
    else if (a==b && a!=c)
        return a+b;
    else if (b==c && a!=b)
        return a+b;
    else  
        return a;
    
}
"
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
"
95315d4f40fee982b6719168e94180e03704160d,"public int sum3(int[] nums)
{
   return (nums[0] + nums[1] + nums[2]); 
}
"
13c1202f602173ec86e1a31b42be3e3e20700153,"public boolean xyBalance(String str)
{
    boolean x = false;
    int j = 0;
    for (int i = str.length(); i > 0; i--)
        if(str.charAt(i) == 'y')
            j = i;
            x = false;
    	if (str.charAt(j) == 'x' && !x)
            return false;
    return true;
         
}
"
e31722c444e04af7c413a585a0fa47761b2b8756,"public String zipZap(String str)
{
    int length = str.length();
    String string = """";
    if (length < 3)
        return str;
    for (int i = 0; i <= str.length() - 3; i++)
    {
        if ((str.charAt(i) == 'z') && (str.charAt(i + 2) == 'p'))
        {
            i = i + 2;
            string = string + ""zp"";
        }
        else
        {
            string = string + str.charAt(i);
        }
    }
    if (!((str.charAt(length - 3) == 'z')) && !((str.charAt(length - 1) == 'p')))   
    {
        string = string + str.charAt(length - 3) + str.charAt(length - 2) + str.charAt(length - 1);
    }
    return string;
}"
a0aa9341b5f9e9f70e8a6e0423ef8a1ff756394f,"public int makeChocolate(int small, int big, int goal)
{
    if (goal - (5 * big) >= 0)
    {
        return;
    }
    else
    {
        return 0;
    }
}
"
c975130bcf2a2b9ea40d8ae79388315bd5797e79,"public String plusOut(String str, String word)
{
    for (int i = 0; i < str.length(); i++;)
    {
        if (str.substring(i).startsWith(word))
        {
            return str + word;
        }
    }
}
"
501aad78d9f445fad6785a696183d9f103460c21,"public int countCode(String str)
{
    int i = 0;
    int j = 0;
    String keyword = ""code"";
    String[] sentence = keyword.split(str);
    for (String word: sentence)
    {
        i++;
    }
    return i;
}
"
9aef08cd1bdc8da16324a5e2a30112f3ac56d372,"public int loneSum(int a, int b, int c)
{
    if(a == b)
	{
    	if(a == c)
    	  return 0;
    	return c;
  	}
  	if(a == c)
    	return b; 
  	if(b == c)
    	return a;
  return (a + b + c);
}
"
4b32fd995dada5fbbacfe5b479b6467a85dd4803,"public String mixString(String a, String b)
{
    String word = """";
    int lenA = a.length();
    int lenB = b.length();
    
    if (lenA > lenB)
    {
        for (int i = 0; i < lenB; i++)
        {
            word += a.charAt(i) + b.charAt(i);
            a = a.substring(i);
        }
        word += a;
    }
    else
    {
        for (int i = 0; i < lenA; i++)
        {
            word += a.charAt(i) + b.charAt(i);
            b = substring(i);
        }
        word += b;
    }
    
    return word;
}
"
73f4e85662adffd0a48df6700aaee8776aed9353,"public int redTicket(int a, int b, int c)
{
    int output;
    if (a==2 && b==2 && c==2)
    	output = 10;
    else if (a==b&&b==c)
        output = 5;
    else if (a!=b&&a!=c)
        output = 1;
    else
        output = 0;
    return output;
}
"
c90c3a1e01ce11092849215d094a7f5176711ab5,"public int countClumps(int[] nums)
{
    int clump = 0;
    for (int i = 0; i < nums.length; i++) { 
        if (nums(i) == num(i + 1) {
            clump = clump + 1;
    }
    return clump;
}
"
d0240fa701f593a04989201ae92746b03b43df48,"public int loneSum(int a, int b, int c)
{
    int sum = a;
    if(b != a)
        sum += b;
    if(c!=a && c!=b)
        sum += c
    return sum;
}
"
c1a6298406f5c197df8689ab0ab30f9100880bf4,"public boolean evenlySpaced(int a, int b, int c)
{
  if (abs(a-b) == abs(c-b))
  {
      return true;
  }
    else
    {
     	return false;
    }
}
"
8a5978421f2f4086b0ddd54adeb1ba874c06eeef,"public String plusOut(String str, String word)
{
    int length = str.length();
    int wordlength = word.length();
    String strsub = """";
    String newstr = """";
    for(int i = 0; i < length; i++)
    {
        strsub = str.substring(i, length);
        if(strsub.startsWith(word))
        {  
             newstr = newstr + word;
             i = i + wordlength  - 1;
        }
        else
        {
            	newstr = newstr + ""+"";
        }
    }
    return newstr;
}
"
c5d364aebfeaf536888aa2177a5459f2c3dcb34e,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i < nums.length; i++)
    {
    	if (i+1 < nums.length && i-1 >= 0)
        {
        	if (nums[i+1] == val || nums[i] == val)
            {
            	everywhere = true;
                
            }            
        }        
    }
    return everywhere;
}
"
b9cc78f7c57aaea7423b7691236df75acc7c0b77,"public int redTicket(int a, int b, int c)
{
    if (a==2 && b==2 && c==2)
        return 10;
    else if (a==b && b==c)
        return 5;
    else if (a!=c && a!=b)
        return 1;
    else 
        return 0;
}
"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
77ce7969d9212a12143e5dd4b6c96b29ee04a0d9,"public int dateFashion(int you, int date)
{
    if (you >= 8 && date <!= 2)
        return 2;
}
"
7edf6b9895049663b4ba9cfed23bf48e059b2a83,"public String mixString(String a, String b)
{
    newString = """";
    int i = 0;
    int length1 = a.length();
    int length2 = b.length();
    int firstWord;
    if (length1 <= length2)
    {
        firstWord = length1;
    }
    else
    {
        firstWord = length2;
    }
    while (i < firstWord)
    {
        newString = newString + a.charAt(i) + b.charAt(i);
            i++;
    }
    if(i!=firstWord)
    {
        while (i<length1)
        {
            newString = newString + a.charAt(i);
            i++;
        }
    }
    else
    {
        while (i<length2)
        {
            newString = newString + b.charAt(i);
            i++;
        }
    }
    return newString;
}
"
ca554662617b94cd25451ee2f4e7e839e9b3dc5f,"public int dateFashion(int you, int date)
{
    int chance = 1;
    if (you > 7 || date > 7)
    {
        if (you < 3 || date < 3)
        {
            chance = 0;
        }
        chance = 2;
    } 
    return chance;
}"
5771edb09478591fc879512a4e01c7ace896b913,"public int sum67(int[] nums)
{ 
    int sum = 0;
    for(int i - 0;i < nums.length; i++)
    {
        if( nums[0] == null)
        {
            return 0;
        }
        else
        {
            if(nums[i].charAt(0) == '6' && nums[i].charAt(1) == '7'}
               return sum;}
               return sum + i;
               }

         

"
301bb42c276c9fed8a898bb3ffc4e02f7716cf3e,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        int loneSum = a + c;
    }
    else if (a == c) {
        int loneSum = a + b;
    }
    else if (b == c) {
        int loneSum = a + b;
    }
    else {
        int loneSum = a + b + c;
    }
    return loneSum;
}
"
df422e9807ffba1cb4c52c06bd8e61226c8be3d6,"public String mixString(String a, String b)
{
    int al = a.length();
    int bl = b.length();
    int i =0;
    StringBuilder build = new StringBuilder(al+bl);
    for(; i < al && i < bl; i++)
    {
        build.append(a.charAt(i));
        build.append(b.charAt(i));
    }
    for(; i < al; i++)
    {
        build.append(a.charAt(i));
    }
    for(; i < bl; i++)
    {
        build.append(b.charAt(i));
    }
    return build.toString();
}
"
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
"
e9e6ae885d3fb08ed2cdefd2d01fd8f4727bab1b,"public String without2(String str) 
{
    int num = str.length();
    if (num >= 2 && str.substring(0,1) .equals (str.substring(num-2), str.substring(num)))
        return str.substring(2,str.length());
    return str;
}
"
0e2715b73d4943605ebb70391b34721422049d07,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
    int p = 0;
    for(int i = 0; i < nums.length; i++) {
        if(nums[i] != 10)
        {
            arr[p] = nums[i];
            p++;
        }
    }
    return arr;
}
"
82b106feb130a7f301a711422822f29d36cbc2e1,"public boolean has77(int[] nums)
{
    for (int r = 0; r < nums.length - 1; r++)
    {
        if (nums[r] == 7)
        {
            if (nums[r+1] == 7)
            {
                return true;
            }
            else if (nums[r+2] == 7) 
            {
                return true;
            }
            else if (nums[r-2] == 7)
            {
                return true;
            }
        }  
    }
    return false;
}
"
6c6957acd4b7bdfad84816ebbdf2b985f74258ea,"public boolean bobThere(String str)
{
    int b = str.indexOf(""b"");
    String bob = str.substring(b, b + 2);
    String ch = str.substring(b + 2, b + 3);
    if (ch.equals(""b""))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
033c470bc2ca011829feb02b4e4446a50e195e06,"public String alarmClock(int day, boolean vacation)
{
    if ((day == 6 || day == 0) && vacation)
    {
        return ""off"";
    }
    else if ((day != 6 || day != 0) && vacation)
    {
        return ""10:00"";
    }
    else if ((day == 0 && day <= 5) && !vacation)
    {
        return ""7:00"";
    }
    else if ((day == 6 || day == 0) && !vacation)
    {
    	return ""10:00"";
    }
    else
    {
    	return """";
    }
    
}
"
1bee3bef6c827eeaf33fa1fd4eabbdb98210a73d,"public String plusOut(String str, String word)
{
   String newS = """";
   for (int i = 0; i < str.length() - 1; i++)
    {
        if (str.substring(i).startsWith(word))
        {
            newS += word;
            //i = i + word.length();
        }
        else 
        {
            newS += ""+"";
        }
    }
    return newS;
}
"
f3227a38053780867e6b2ed3ae17edba2d98c772,"public String[] fizzBuzz(int start, int end)
{
    String[] newA = new String[end - start];
    for (int i = 0; i < end - start; i++)
    {
        if ((i + start) % 15 == 0)
        {
            newA[i] = ""Fizz"" + ""Buzz"";
        }
        else if ((i + start) % 3 == 0)
        {
            newA[i] = ""Fizz"";
        }
        else if ((i + start) % 5 == 0)
        {
            newA[i] = ""Buzz"";
        }
        else
        {
            newA[i] = String.valueOf(i + start);
        }
    }
    return newA;
}
"
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
"
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
"
7327da2d05b0df4310a26bf88cb8747aa664b1a4,"public int roundSum(int a, int b, int c)
{
    //round10(a);
    //round10(b);
    //round10(c);
    //return a + b + c;
    a = a % 10;
    return a;
}

public int round10(int num)
{
    int rem = 10 % num;
    if (rem > 5)
        num = num - rem;
    else
        num = num + rem;
    return num;
}
"
a00102f735624bf1544acb79ff4e5af5281fc96e,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int total = nums[0];
    for (int i = 1; i < nums.length; i++)
    {
        if (nums[i] > max)
        {
            max = nums[i];
        }
        else if (nums[i] < min)
        {
            min = nums[i];
        }
        total = total + nums[i];
    }
    return (sum - max - min) / (nums.length - 2);
}"
71116885b5a9e6a8364d74ea99aedc306f1c208f,"public int roundSum(int a, int b, int c)
{
    this.round10(a);
    this.round10(b);
    this.round10(c);
    
   
    
}

public int round10(int num)
{
    int value = 0;
    value = num % 10;
    if (value>= 5)
    {
        num = num +(10-value);
    }
    else if (value < 5)
    {
        num = num - (10-value);
    }
    return num;
}
"
3a30c4a54022b6af371f186c68f08eb0be1cb9cd,"public String something;

public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        something = str.substring(5, -5); 
    }
    else
    {
        something = """"; 
    }
    return something; 
}
"
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
"
85c7f83183e6d870e3d5d37c45624515c80302cc,"public int[] withoutTen(int[] nums)
{
	int[] nono = new int[nums.length];
    
    for (int i, j = 0, 0; i < nums.length; i++)
    {
        
        if (nums[i] != 10)
        {
            nono[j] = nums[i];
            j++
        }
    }
    for (int i = 0; i < nums.length; i++)
    {
        Integer num = new Integer(nono[i]);
        if (num = 0)
        {
            nono[i] = 0;
        }
    }
    return nono;
}
"
1ba250364f74942ce16931a92b4fc920b8edb8d0,"public boolean love6(int a, int b)
{
    if (a==6||b==6||a+b==6||Math.abs(a-b)==6||Math.abs(b-a)==6)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
3a422014d85c6bbde25f8f420968f1aa9e032560,"public int greenTicket(int a, int b, int c)
{
    if (a==b && b==c && a==c)
        return 0;
    else if (a != b && b !=c && a != c)
        return 20;
    else 
        return 10;
}
"
d91e79f2eb54f3fc40fc8a4dd788ea97daa3297d,"public int makeChocolate(int small, int big, int goal)
{
    int rbig = goal/big;
    int rem = goal%big;
    if(big>rbig && small>rem)
    {
        return rem;
    }
    else
    {
        return -1;
    }
        
        
}
"
604c63018ca4096c9d92c518ed231a4473a28b20,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
	return a + b + c;
}

public int fixTeen(int n)
{
    if ((n >= 13) && (n <= 19) && (n != 15) && (n != 16))
    {
         n = 0;   
    }
    else
    {
         n = n;   
    }
    return n;
}
"
8288a998c242f26a309f710f4751d7d5d1e7876c,"public int blackjack(int a, int b)
{
    int aDistance = 21;
    int bDistance = 21;
    if (a > 21 && b > 21)
        return 0;
    if (a < 22)
        aDistance = 21 - a;
    if (b < 22)
        bDistance = 21 - b;
    if (aDistance > bDistance)
        return b;
    else
        return a;
       
        
    
}
"
a6c26a76f948cbd115f17800a423a23288a07812,"public int countEvens(int[] nums)
{
    int answer = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            answer = answer + 1;
        }
    }
    return answer;
}
"
4d2cfe1b8cf5deb0f7f79e5c2d39bb54d2edb72c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
    {
        if(temp >= 60 || temp <= 100)
            return true;
        if
            return false;
    }
}
"
e079c1c3c80fde18042505c80fc6e71225d12387,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend == false && cigars >= 40 && cigars <= 60)
    {
        return true;
    }
    if(isWeekend == true && cigars >= 40)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
"
e9fd14a6bb055ebf377a59b42c034089586fbc8b,"public boolean isEverywhere(int[] nums, int val)
{
    boolean y = true;
   	for (int i = 1; i < nums.length - 1; i+=2) {
        if (nums[i - 1] == val && nums[i + 1] == val) {
            y = y && true;
        }
        else {
            y = false;
        }
    }
    return y;
}
"
9eb233b4442526c98e5181cbd698f5839c08adb3,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a == c || b == c || a == c)
        return false;
    if (a == b || b == c)
        return true;
    else
        return ((Math.abs(a - c)==Math.abs(a - b))) ||( Math.abs(c - a)==Math.abs(b - c) || Math.abs(a - b) == Math.abs(b - c));
}
"
be9c61ba74ccf3ab898a706cc57aa76ea62b6365,"public boolean canBalance(int[] nums)
{
    int left = 0;
	int right = 0;
	for(int x = 0; x < nums.length - 1; x++)
		left += nums[x];
	right = nums[nums.length-1];
	for(int x = nums.length - 2; x > 0; x--)
	{
		if(left == right)
        {
            return true;
        }
		left -= nums[x];
		right += nums[x];
	}
	return (left == right);
}
"
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}"
1ea46108429a153a1d63086300ee27b550a8b749,"public String without2(String str) 
{
   	
 
    if (str.length() == 0)
        return """";
    else if (str.length() == 1)
        return str;
    else if (str.length() == 2)
        return """";
    else if (str.substring(0,2).equals(str.substring(str.length() -2)))
        return str.substring(2);
    else 
        return str; 
    
    
    
}
"
6e0ab9499d619cfed11d10cb6720f37047b9ea5d,"public String zipZap(String str)
{
    String newString = """";
    for (int i = 0; i< str.length(); i++)
        if (i < str.length() - 2 && 
            str.substring(i, i+1).equals(""z"") &&
            str.substring(i+2, i+3).equals(""p""))
        {
            newString += ""zp"";
    		i += 2;
        }
         else 
         {
             newString += str.substring(i, i+1);
         }
     return newString;
}
"
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
ff5188ca09d212d12901f3d2fa492090bb58c2e9,"public int[] fizzArray(int n)
{
    int[] returnArray = new int[n];
    for (int i = 0; i < n; i++)
    {
        returnArray[i] = i;
    }
    return retrnArray;
}
"
0a620bf30b2a7a4fce92e7ea762e2a29a92cd83d,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
"
7f983c32f470b34f06f52cb3fae4cf5321034946,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend)
    {
       if (cigars >= 40 && cigars <= 60)
       {return true;}
       else
       {return false;}
    return false;
}
"
53c55fc773f14a160dcc9504672a67429f8b4909,"public int roundSum(int a, int b, int c)
{
    this.round10(a + b + c);
}

public int round10(int num)
{
    String name = ""num"";
    String part = name.substring(2);
    if (part.subtring() >= 5)
    {
        int x = 10 - part.substring();
        int y = x + num;
        return y;
    }
    else
    {
        int y = num - part.substring();
        return y;
    }
}
"
2f0a2b01b8d36b9b41d35269fb9c59a0cd367b3b,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int lastDigit = num % 10;
    if (lastDigit >= 5)
    {
        int roundUp = num + (10 - lastDigit);
        return roundUp;
    }
    else
    {
        int roundDown = num - lastDigit;
        return roundDown;
    }
}"
68c510e3ae2a5f68173421badd6c7e8d285e1fd9,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        return 0
    }
    else if (speed >= 61 && speed <= 80)
    {
        return 1
    }
    else if (speed >= 81)
    {
        return 2
    }
}
"
2639505982cd955f04e28cdb95a5b5fde6349d22,"public String[] fizzBuzz(int start, int end)
{
    String[] fizzBuzz = new String[end-start];
    for (int i = start; i < end - 2; i++){
        fizzBuzz[i-start] = Integer.toString(i);
    //}
    //for (int i = 0; i < fizzBuzz.length; i++){
        if (i % 15 == 0){
            fizzBuzz[i-start] = ""FizzBuzz"";
        }
        else if (i % 3 == 0){
            fizzBuzz[i] = ""Fizz"";
        }
        else if (i % 5 == 0){
            fizzBuzz[i] = ""Buzz"";
        }
    }
    return fizzBuzz;
}
"
bed87a480cfb0f24c00513bc739bc8267b2cf027,"public int blackjack(int a, int b)
{
    if(a>21)
    {
    if (b>21) 
       else return 0;
       else return b;
    }
      {
        if (a<b && b<=21)
              return b;
          return a;
      }
}
"
696c1ec0e96f1b96a6fd94367b67e62dffae0047,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0; 
    for (int i = 0; i < nums.length; i++) 
    {
        sum += nums[i];
        if (nums[i] > max) 
        {
            max = nums[i];
        }
        if (nums[i] < min) 
        {
            min = nums[i];
        }
    }
    return (sum - (max + min)) / (nums.length - 2);
}
"
af90787e933f1486fa7394240c35078e132e9637,"public boolean xyzThere(String str)
{
    int i=0; 
    if(str.length()>=3)
    {
        while (!str.substring(i, i+3).equals (""xyz"") && i+4<= str.length())
   		{
       	 	i=i+1;
    	}
    	return str.substring(i, i+3).equals (""xyz"") && !(char result = s.charAt(i-1).equals("".""));
    }
    else
    {
        return false;
    }
}
"
4565aff08da383a1d4ad630bf9596a605f5b6a32,"public int[] zeroMax(int[] nums)
{
    int[] done = new int[nums.length];
    int max = 0;
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] != 0)
        {
        	done[i] = nums[i];
        }
        else
        {
        	for (int j = i + 1; j < nums.length; j++)
            {
            	if ((nums[j] % 2) == 1 && nums[j] > max)
                {
                	max = nums[j];
                }
            }
            done[i] = max;
        }
    }
    return done;
}
"
41fbb0ec3f09d19d78c9bae81f5a75e31cf74218,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
10b8d3e286431d680eddf1ed61e1629dd82fe59a,"public int sum67(int[] nums)
{
    int sum = 0;
    for (int i = 0, i < nums.length; i++) {
        if (nums.get(i) = 6) {
            while (nums.get(i) != 7) {
                i++;
            }
        }
        else {
            sum += nums.get(i);
        }
    }
}
"
fc131d0dcf932cc5d337a968afdf0fbc3fb84763,"public String getSandwich(String str)
{
    String answer = """";
    int length = str.length();
    int word = str.indexOf(""bread"")
    int wordEnd = str.lastIndexOf(""bread"")
        
    if((wordEnd != -1 ) && (word!=wordEnd))
    {
    	return (str.substring(word+5, wordEnd)) ;
    }
   	return """";

        
    
        
}
"
106283d2814a55c38170baf33cb6547a444ed2c4,"public String getSandwich(String str)
{
    int a = -1;
    int z = -1;
    for (int i = 1; i < str.length() - 4, i++)
    {
        if (str.substring(i - 1, i + 4).equals(""bread""))
        {
            a = i - 1;
    		break;
        }
    }
    for (int i = str.length() - 5; i >= 0, i++)
    {
        if (str.substring(i, i + 5).equals(""bread""))
        {
            z = i;
            break;
        }
    }
    if (a != z && a != -1 && z != -1)
    {
        return str.substring(a + 5, z);
    }
    return """";
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
"
150674542f779f0f080fa72fb20d5088fbe7f75e,"public int sortaSum(int a, int b)
{
    int sum = 0;
    sum = a + b;
    if (sum >= 10 && sum <= 19){
        sum = 20;
    }
    return sum;
}
"
0817adac8ce6331da5db0cbc1e23416430be9f27,"public boolean in1To10(int n, boolean outsideMode)
{
    if (!outsideMode)
    {
        if (n >= 1 && n <= 10)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    
    else if (outsideMode)
    {
        if (n <=1 && n >= 10)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
dc0427f67343b455f58fba0f2a99f80342e0fb9f,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if ((isMorning = true) && (isMom = true) || (isAsleep = false))
    {
        return true;
    }
     
    else if ((isMorning = true) && (isMom = false) && (isAsleep = false))
    {
        return false;
    }
    
    else if ((isMorning = false) && (isMom = false) || (isAsleep == true))
    {
        return true;
    }
    else if ((isMorning = true) && (isMom = true) && (isAsleep = true))
    {
        return true;
    }
    else 
    {
        return true;
    }
    
}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
4a05b47e07c9c407b1a79e5d4930b97c9d2762c8,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
    int j = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            arr[j] = nums[i];
            j++;
        }
    }
    return arr;
}
"
258ce4c676fe387e4fd5b092528340d518a47616,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
       if (alarmClock >=1 && alarmClock <= 5)
       {
           ""10:00""
       }
       else
       {
           ""off""
       }
    }
    else if 
    {
         if (alarmClock >=1 && alarmClock <= 5)
       {
           ""7:00""
       }
       else
       {
           ""10:00""
       }
    }
       
       
        
}
"
e6f8570a107f4250e373d6f9d6996b1c4535dac9,"public boolean isEverywhere(int[] nums, int val)
{
    if (nums.length == 0 || nums.length == 1)
        return true;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] != val)
        {
            if (nums[i+1] != val)
            {
                return false;
            }
        }

    }
    return true;
}
"
8cc7168bef778e67b5983eb65a419d7d44a84788,"public int luckySum(int a, int b, int c)
{
    int result;
    if (a = 13)
    {
        a = 0;
        b = 0;
        c = 0;
    }
    else if (b = 13)
    {
        b = 0;
        c = 0;
    }
    else if (c = 13)
    {
        c = 0;
    }
    result = a + b + c;
    return result;
}
"
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
"
ccf8d3986f190744eb1dd9343f08b3d9079c5469,"public String sameEnds(int[] nums, int n)
{
    int[] begin = new int[n];
    int[] end = new int[n];
    int len = nums.length - 1;
    for (int i = 0; i < n; i++)
    {
        begin[i] = nums[i];
        end[len - i] = nums[len - i];
    }
    return String ""begin"" + begin[0] + begin[1] + ""  end"" +end[0]+end[1];
}
"
beea3639eeeca0f7561b021a21ff83777918f444,"public String without2(String str) 
{
    if (str.length() == 1 || str.length == 0)
    {
        return """";
    }
    else if (str.substring(0, 2) == str.substring(str.length()-2), str.length()))
    {
        return str.substring(2, str.length());
    }
    else
    {
        return str;
    }
}
"
26ef13a8e554cd9550695c2f5b49cd7fca497ef0,"public String zipZap(String str)
{
    char z;
    char p;
    int length = str.length();
    String string = str;
    for (int i = 0; i<length-3; i++)
    {
        z = str.charAt(i);
        p = str.charAt(i+2);
    	if (z == 'z' && p == 'p')
        {
            string = (string.substring(0, i+1) + string.substring(i+2, length));
            length = length-1;
        }
     }
     return string;
 }
"
915abd433cd24d73ed17b13580cc15789793e4f8,"public int[] fix45(int[] nums)
{
    int x = 0;
    for(int i = 0; i < nums.length - 1; i++)
    {
        if(nums[i] == 4 && nums[i+1] != 5)
        {
            for(; !(nums[j] == 5 && (j == 0 || j > 0 && nums[j-1] != 4)); j++);
            nums[j] = nums[i+ 1];
            nums[i+1] = 5;
        }
    }
    return nums;
}
"
22fda47732546394dab7ecbb147aa3cdbdb03099,"public boolean xyBalance(String str)
{
  int l = str.length() - 1;
    for (int i = l; i >= 0; i--)
    {
        char n = str.charAt(i);
        if (n == 'x')
        {
            return false;
        }
        if (n == 'y')
        {
            return true;
        }
    }
    return true;
    }
"
dc467e032df53172f98db8a628236c013a045ed1,"public boolean evenlySpaced(int a, int b, int c)
{
    int temp; 
    
    if (a>b)
    {
        temp = a; 
        a = b; 
        b = temp; 
    }
    
    if (b>c)
    {
        temp = b; 
        b = c; 
        c = temp;
    }
    
    if (a>b)
    {
        temp = a; 
        a = b; 
        b = temp;
    }
    
    return = b - a == c - b;
    
}
"
39045ec8fec9360d8465e66dea310fef9c243b0c,"public String[] fizzBuzz(int start, int end)
{
    int length = end - start;
    int[] temp = new int[length];
    for (int i = 0; i < length; i++)
    {
        temp[i] = start + i;
    }
    
    String[] out = new String[length];
    
    for (int i = 0; i < length; i++)
    {
        if (temp[i] % 3 == 0)
        {
            out[i] = ""Fizz"";
        }
        else if (temp[i] % 5 == 0)
        {
            out[i] = ""Buzz"";
        }
        else if (temp[i] % 5 == 0 && temp[i] % 3 == 0)
        {
            out[i] = ""FizzBuzz"";
        }
        else
        {
            out[i] = String.valueOf(start + i);
        }
    }
    return out;
}"
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
"
a8f0f9a7d841d4b00d443cf76626fdc127814835,"public int sortaSum(int a, int b)
{
    if (a >= 10 && b <= 19)
        return 20;
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
094b0e8c960090e5db7e7ed5078935048f600dba,"public String zipZap(String str)
{
    
    for(int x = 0; x< str.length()-2; x++)
    {
     	if(str.charAt(x) == 'z' && str.charAt(x+2) == 'p')
            return ""zp"";
    }
    return ""zpXzp"";
        
}
"
b20d525ead268bb3eced9c95cb88481aa8aab61d,"public int makeChocolate(int small, int big, int goal)
{
	if (goal > 5*big)
    {
       goal = goal - 5 * big); 
    }
    else
    {
        goal = goal % 5;
    }
    if (goal <= small)
    {
        return goal;
    }
    return -1;
}
"
f5d7a8149b93de3c18b1d9776b959ae91d8a1075,"public int sum67(int[] nums)
{
    int result = 0;
    int rest = 0;
    
    for (int i = 0; i < nums.length, i++)
    {
        if(nums[i] == 6)
        { 
            for (int j = i + 1; j < nums.length, j++)
            {
                if (nums[j] != 7)
                {
                    rest += nums[j];
                }
            }
        }
        else if (nums[i] != 7)
        {
            result += nums[i];
        }
    }
    
    return result - rest;
}
"
0fe551d553cad54e335519fd62882e802b6dd19c,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if ((sum)<10)
    {
        return sum;
    }
    if ((a+b)>=10 || (a=b)<=19)
    {
        return 20;
    }
    return sum;
        
}
"
87fc437df92db0201d47daa8157327d594c28b58,"public int[] tenRun(int[] nums)
{
    int current10 = 0; 
    
    for(int i = 0 ; i < nums.length ; i ++)   
    {

        if(nums[i]%10 == 0)
        {
         	current10 = nums[i];    
        }
        nums[i]= current10; 
    }
    return nums; 
}
"
3830e31ad432afa3bd25206f3c4d647acaed3868,"public boolean twoTwo(int[] nums)
{
    int x = nums.length;
    for (int i = 0; i < x; i++)
    {
        if (nums[i] == 2)
        {
            if ((i + 1) < x && nums[i + 1] != 2)
            {
                return false;
            }
            else
            {
                i++;
            }
        }
    }
    return true;
}
"
3cc8ca60a27c5257e39b424583bc44259ffa6619,"public boolean love6(int a, int b)
{
  	if (a==6 || b == 6)
    {
        return true;
    }
    
    else if (a+b ==6)
    {
        return true;
    }
    
    else if (a-b = Math.ab(6))
    {
        return true;
    }
    
    
    
    
    return false;
}
"
66780f39bc9954890c92158e61aceb513a5cfcd6,"public String withouEnd2(String str)
{
	int len = str.length();
	if(len >= 3)
		return str.substring(1, len-1);
	return """";
}
"
2ff4718cde15ee630d5b17aa4f1422713bf24792,"public int centeredAverage(int[] nums)
{
    int smallest = 100;
    int greatest = -1;
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] < smallest)
        {
            smallest = nums[i];
        }
        if (nums[i] > greatest)
        {
            greatest = nums[i];
        }
        sum += nums[i];
    }
    sum = sum - smallest - greatest;
    int length = nums.length - 2;
    return sum/length;
}
"
9af0a633d29e73d840b61ad14a1f86a598a2d050,"public String repeatEnd(String str, int n)
{
    String newString;
    int length = str.length() - n;
    newString = str.substring(length, str.length());
    for (int x = 1; x < n; x++)
    {
        newString = newString + newString;
    }
    return newString;
}
"
558280d818c379f1583db66238398bd41b0d7063,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
b98b54233a707078102f782a3d5ebfcbf0ebf4d3,"public int[] zeroMax(int[] nums)
{
    for(int i =0; i < nums.length; i++)
    {
        if(nums[i] == 0)
        {
            nums[i] = largestOdd(nums);
        }
        
    }
    
     return nums;
    
}

public int largestOdd(int[] xyz)
{
    int max = xyz[0];
    for( int i = 0; i < xyz.length - 1; i++)
    {
        if(xyz[i] == 0)
        {
            max = xyz[i+1];
            for(int x = 1; x < xyz.length-i; x++)
            {
                if(xyz[i + x] > max && xyz[i+x]%2 == 1)
              {
                max = xyz[i+x];
              }
            }
        }
    }
    return max;
}
"
e5f7cdfcb634d5dc5fd77efb6228b118613f6751,"public int[] fizzArray(int n)
{
    int[] fresh = new int[n];
    for (int i = 0; i < n; i++)
    {
        fresh[i] = i;
    }
    return fresh;
}
"
65e25e84404a6773978455de532a6001529a0670,"public boolean evenlySpaced(int a, int b, int c)
{
    if ((a - b) == (c - b))
    {
        return true;
    }
    else 
    {
        return false;
    }
}
"
a63cd90aaa00c082a0521d8d5abc2b0ca34e96bf,"public int sum3(int[] nums)
{
   	int sum = 0;
   	for (int i = 0; i < nums.length; i++)
   	{
   		sum = sum + nums[i];
   	}
   	return sum;
}
"
217b6c94704073ae6b185d57c1f0f07741d8efd0,"public int[] shiftLeft(int[] nums)
{
    if(nums.length == 0)
    {
    return nums;
    }
    int[] newarray = new int[nums.length];
    int a = nums[0];
    newarray[nums.length - 1] = a;
    for(int i = 1; i < nums.length; i++)
    {
    newarray[i - 1] = nums[i];
    }
    return newarray;
}
"
a0f06f62a3af476e1b68a3c0a51d92cc834715bb,"public String without2(String str) 
{
    String part = str.substring(2);
    int end = str.length();
    String part2 = str.substring(end - 2, end);
    if (str.length() == 2)
    {
        return part;
    }
    else if (part != part2)
    {
    	return str;
    }
    else
    {
        return part;
    }
}
"
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
"
86f681464feb6407fccd1e93dc838281b568149a,"public int[] fix45(int[] nums)
{
    int fi = 0
    for (int fo = 0; fo < nums.length - 1; fo++)
    {
        if (nums[i] == 4 && nums[i + 1] == 5)
        {
           for(; !(nums[fi]==5 && (fi==0 || j > 0 && nums[fi-1] != 4)); fi++)
            nums[fi] = nums[fo+1];
            nums[fo] = 5;
        }
    }
    return nums;
}
"
f15391d68f5b487485161a5bc8359ef28108b8bc,"public boolean sameEnds(int[] nums, int n)
{
    	int start = 0;
	int end = nums.length-n;
	for(; n > 0; n--)
	{
		if(nums[start] != nums[end])
			return false;
		else
		{
			start++;
			end++;
		}
	}
	return true;
}
"
b4468d47a8297b1e9c61604e85cae3c230640006,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int rd = num % 10;
      
    if(rd >= 5)
        return num + 10 - rd;
                
    return num - rd;
}
"
f65c51d7c73d2d065cbca89e8e5f665865edcc15,"public int countEvens(int[] nums)
{
    int total = 0;
    for( int i = 0; i < nums.length; i++) {
     	if (nums[i] == 2) {
            total = total + 1;
        }
        else if (nums[i] == 4) {
            total = total + 1;
        }
        else if (nums[i] == 6) {
         	total = total + 1;   
        }
        else if (nums[i] == 8) {
         	total = total + 1;   
        }
        else if (nums[i] == 0) {
         	total = total + 1;   
        }
        else if (nums[i] == 0) {
         	total = total + 1;   
        }
    }
    return total;
}
"
787a85062f05f6204afae52da91cfbe56d85e07c,"public String zipZap(String str)
{
    String newString = """";
    for (int i = 0; i < str.length(); i++) 
    {
        if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p') 
        {
            newString += str.charAt(i) + """" + str.charAt(i + 2);
            i = i + 2;
        }
        else 
        {
            newString += str.charAt(i);
        }
    }
    return newString;
}
            

"
1a32b8058af71b7af398a69a0c09bed6280a15e9,"public int countCode(String str)
{
    int times = 0;
    int l = str.length()-3;
    int i = 0;
    while(i <  l) {
		if(str.charAt(i) == 'c' && str.charAt(i+1) == 'o' 	          && str.charAt(i+3) == 'e') {
			times++;
			i += 4;
       	}
		else {
			i+=1;
		}
	return times;
}
"
fd104758ddc6991fa45a9ca2de442a8f8bf2c595,"public int[] tenRun(int[] nums)
{
    int savedval = 0;
    int i = 0;
    for (i = 0; i < nums.length; i++)
    {
        if (savedval % 10 != 0)
        {
        savedval = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            savedval = nums[i];
        }
        
        nums[i] = savedval;
    }
    return nums;
}
"
fb63e4d9b9f844eb6f3145768fe6bd59fda4c682,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && a == c)
        result = 20;
    if (a == b || a == c || b == c)
        result = 10;
    else
        result = 0;
    return result;
 
}
"
0f4579bf9105a15e20de6ac16a6b671c4bdb462c,"public boolean bobThere(String str)
{
    boolean thing = false;
    if (str.length() == 3)
    {
        if (str.startsWith(""b"") && str.endsWith(""b""))
            return true;
        else
            return false;
    }
    else
    {
    	for (int i = 0; i<str.length()-4; i++)
        {
        	if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b')
                thing= true;
            else
                thing= false;
        }
        return thing;
    }
}
"
63c883726081ad8f271ea111509a01cec8f86be4,"public int blackjack(int a, int b)
{
    if(a > 21 && b > 21)
    { 
        return 0;
    }
    else if (a <= 21 && a > b || b > 21)
    {
        return a;
    }
    else
    {
        return b;
    }
}"
0229c8b0e06d8c887d0cabf0805343d0a5c04c31,"public int[] shiftLeft(int[] nums)
{
    int[] ans = new int[]; 
    for(int i = 0 ; i < nums.length ; i++)
    {
        if(i!=nums.length-1)
        {
     		ans[i] = nums[i+1];    
        }
        
        if(i==nums.length-1)
        {
         	ans[i] = nums[0];    
        }
    }
    
    return ans; 
    
}
"
244c06aa633554f9a456b36516f52c239a430a02,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i+1] == 0)
        {
            if (nums[i] != 0)
            {
				nums[i+1] = nums[i];
                break;
            }
        }
        else if (nums.length == 1)
        {
            break;
        }
        else
        {
            if(nums[i] == 0)
            {
                if (nums[i-1] % 2 == 1 && nums[i+1] % 2 == 1)
                {
                    if (nums[i-1] > nums[i+1])
                    {
                        nums[i] = nums[i-1];
                    }
                    if (nums[i+1] > nums[i-1])
                    {
                        nums[i] = nums[i+1];
                    }
                    else
                    {
                        nums[i] = nums[i-1];
                    }
                }
                else
                {
                    if (nums[i-1] % 2 == 1)
                    {
                        nums[i] = nums[i-1];
                    }
                    if (nums[i+1] % 2 == 1)
                    {
						nums[i] = nums[i+1];
                    }
                }
            }
        }
    }
    return nums;
}
"
ce8257887e0d0bf782b291610d95ff716465dbb1,"public String zipZap(String str)
{
    for (int inte = 0; inte < str.length()-2; intnte++)
    {
        if (str.charAt(inte) == 'z' && str.charAt(inte+2) == 'p')
        {
            str = str.substring(0,inte+1) + str.substring(inte+2);
        }
    }
    return str;
}
"
a77cf61f1d235b19831c14399114810bc8b89144,"public int[] shiftLeft(int[] nums)
{
    int[] array = new int[nums.length];
    if ( nums.length >= 2 ) {
        for ( int i = 1; i < nums.length; i++ ) {
            array[i-1] = nums[i];
            array[nums.length - 1] = nums[0];
        }
        return array;
    }
    else
    {
        return nums;
    }
}
"
80b8b697699be50344231d353fbb76870cbc777f,"public boolean evenlySpaced(int a, int b, int c)
{
    int small;
    int medium;
    int large;
    if (a > b) {
        small = a;
        a = b;
        b = small;
    }
    if (b > c) {
        medium = b;
        b = c;
        c = medium;  
    }
    if ( a > b) {
        large = a;
        a = b;
        b = large;
    }
    if (b - a == c - b) {
        return true;
    }
    else {
        return false;
    }
}
"
cff0a655d75c97a5226993b59d28e8045f681fed,"public String mixString(String a, String b)
{
  int aLen = a.length();
  int bLen = b.length();
  int miles = Math.max(aLen, bLen);
  String answer = """";
  for (int i = 0; i < miles; i++) {
    if (i <= aLen-1)
      answer += a.substring(i,i+1);
    if (i <= bLen-1)
      answer += b.substring(i,i+1);
  }
  return answer;
}
"
fbe5afccd00d7524fe5953f0929c0826494ed62b,"public boolean evenlySpaced(int a, int b, int c)
{
   int sum = a + b + c;
   int avg = sum/3;
   int x = abs(a-avg);
   int y = abs(b-avg);
   int z = abs(c-avg);
   
    
   if (x==y || z==x || y==z)
       return true;
    else
        return false;
}
"
7f72ec8cfa41f44f2860db75567239d9ce7bdd27,"public String mixString(String a, String b)
{
    String str = """";
    if (a.length() > b.length()){
        for (int i = 1; i <= a.length(); i++){
        	str = str + a.substring(i-1, i);
            str = str + b.substring(i-1, i);}
    	return str;}
    if (b.length() > a.length()){
        for (int i = 1; i <= b.length(); i++){
        	str = str + a.substring(i, i+1) + b.substring(i, i+1);}
    	return str;}
    for (int i = 1; i <= a.length(); i++){
        str = str + a.substring(i, i+1) + b.substring(i, i+1);}
  	return str;
        
}
"
8b502690532a325d8f39e290885232782f6171dd,"public String mixString(String a, String b)
{
    int ii = 0;
    int lenA = a.length();
    int lenB = b.length();
    String newStr = """";
    String remaining;
    for (int i = 0; i < Math.abs(lenA-lenB); i++)
    {
        String curA = Character.toString(a.charAt(i));
        return curA;
        //String curB = Character.toString(b.charAt(i));
        //newStr = curA.concat(newStr);
        //newStr = curB.concat(newStr);
        //ii = i;
    }
    if (lenA>lenB)
    {
    	remaining = a.substring(ii);
    }
    else if (lenB>lenA)
    {
        remaining = a.substring(ii);
    }
    else
    {
        remaining = """";
    }
    newStr = remaining.concat(newStr);
    return newStr;
}
"
1cfeec9f95a39be77af701439a1e124cee38bf7a,"public String atFirst(String str)
{
    int length = str.length();
    String name = str;
    if (length >= 2)
        return name.substring(0, 2);
    else
        return name.substring('@');
}
"
f236c35100e118a7f7f347d63f738e7426ce844a,"public boolean partySuccess;

public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend = true)
    {
        if (cigars >= 40)
        {
            partySuccess = true;
        }
        else if (cigars < 40)
        {
            partySuccess = false;
        }
    }
    else if (isWeekend = false)
    {
        if (cigars >= 40 && cigars <= 60) 
        {
            partySuccess = true;
        }
        else 
        {
            partySuccess = false;
        }
    }
    return partySuccess;
}
"
82c64fa09f2ec4b819acaeb99373996b024cc02e,"public int roundSum(int a, int b, int c)
{
    int roundSum = round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int rem = num % 10;
    if (rem >= 5) {
        num = numb + 10 - rem;
    }
    else {
        num = num - rem;
    }
    return num;    
}
"
49d00c9951b6278494320b90ebd5d3800480b2b4,"public int greenTicket(int a, int b, int c)
{
    if ( a != b && a != c)
    {
        return 0;
    }
    if ( a==b && a==c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
e825fa3034b739bfc153ee987f9b5263e2a2fd86,"public int centeredAverage(int[] nums)
{
    int merlin = 0;
    int less = nums[0];
    int more = nums[0];
    
    for (int i = 0; i < nums.length i++)
    {
        merlin = merlin + nums[i];
        less = Math.min(less, nums[i]);
        more = Math.max(more, nums[i]);
    }
    return (sum - (min-max))/nums.length);
    
}
"
360876fbdea4bf52d3385576d9ddc33538324b7a,"public boolean evenlySpaced(int a, int b, int c)
{
    int space;
    if(b > a)
        space = a;
    	a = b;
    	b = space;
    if(c > a)
        space = a;
    	a = c;
        c = space;
    if(b > c)
        space = c;
    	c = b;
        b = space;
    return(a - b == b - c);
            
}
"
452cc7542e7c99055468b7270dedd722a32d41e4,"public boolean twoTwo(int[] nums)
{
    if(nums.length == 1 && nums[0] == 2)
    {
        return false;
    }
    if(nums.length >= 2 && ((nums[0] == 2 && nums[1] != 2) ||
        (nums[nums.length-1] == 2 && nums[nums.length-2] != 2)))
    {
        return false;
    }
                            
    for(int i = 1; i <= nums.length - 2; i++) 
    {
        if(nums[i] == 2 && nums[i-1] != 2 && nums[i+1] != 2)
        {
            return false;
        }
    }
                                            
    return true;
    
}
"
f5a21d0c1e254db37e3447625ce5826afe21b435,"public boolean bobThere(String str)
{
    for(int i=0; i<str.length()-3; i++)
    {
        if(str.charAt(i)=='b')
        {
            if(str.charAt(i+2) == 'b')
                return true;
        }
    }
    return false;
}
"
cdd951c04615840a1e08c864022547d5f43fa10b,"public int[] fix45(int[] nums)
{
    int length = nums.length;
	int count = 0;
    for (int i = 0; i < length; i++){
		if (nums[i] == 4){
            count = count + 1;
        }
    }
    int[] replaceFives = new int[count];
    int j = 0;
    for (int i = 0; i < length; i++){
        if (nums[i] == 4){
            replaceFives[j] = nums[i + 1];
            j = j + 1;
        }
    }
    j = 0;
    for (int i = 0; i < count; i++){
    	if (nums[i] == 5){
            nums[i] = replaceFives[j];
            j = j + 1;
        }
        else if (nums[i] == 4){
            nums[i + 1] = 5;
            i++;
        }
    }
    return nums;
}"
f801b7f1c7d07621498f16d525db3239e45597f7,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
    {
     if(temp<=100 && temp>=60)
     {
      return true; 
     }
        else
        {
         return false;   
        }
    }
    else
    {
         if(temp<=90 && temp>=60)
     {
      return true; 
     }
        else
        {
         return false;   
        }
    }
}
"
8e88e99cec00e302740b8e2c20e98c88f515b3aa,"public String repeatEnd(String str, int n)
{
    int l = str.length();
    String banana = str.substring(l())-n);
   
    
    for(int i=1;i<n;i++)
            banana=banana+str.substring(l)-n);
    return banana;
}
"
ebd32bc9d73aea5eb17d579604ff55398843bcff,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1

"
8fb500466613a34013f0592cc334f444d8a2780d,"public int countClumps(int[] nums)
{
    int num = 0;
    int clumps = 0;
    Boolean clump = false;
    for (int i = 0; i < nums.length; i++)
    {
        num = nums[i];
        while (nums[i] == nums[i + 1])
        {
            i++
        }
        if (clump == true)
        {
            clumps++;
            clump = false;
        i--;
    }
}
"
f2cb95a9b34f9f39eef5d70b74753e2a8d272bd5,"public void int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    	if (speed<=65) {
			return 0;
   	 	} else if (speed>=66 && speed<=85) {
       		return 1;   
        } else if (speed>=86) {
        	return 2;
        }
    else if (isBirthday == false) {
       if (speed<=60) {
			return 0;
   	 	} else if (speed>=61 && speed<=80) {
       		return 1;   
        } else if (speed>=81) {
        	return 2;
        }
    }
}	
"
d21b7c9d80b327e6a8e7eb6de22187592eeb2fc9,"public int[] fix45(int[] nums)
{
   
}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
657e54bd66724e0969cb8b2223f1f71f128b8dea,"public String without2(String str) 
{
    String string = """";
    String firstpart = """";
    String lastpart = """";
    int length = (str.length());
    firstpart = str.substring(0, 1);
    lastpart = str.substring(length-1, length);
    if (firstpart == lastpart))
       {
          string = (str.substring(2)) ;
       }
    else 
    {
        string = str;
    }
    return string;
        
}
"
5b90d3a09890699bcf1cbb251146d0ea0a1b8365,"public int countClumps(int[] nums)
{
    int clumps = 0;
	boolean isClump = false;
  for(int i = 0; i < nums.length - 1; i++)
  {
  	if(isClump)
  	{
	  	if(nums[i] != nums[i+1])
	  		isClump = false;
	  }
  	else if(nums[i] == nums[i+1])
  	{
  		isClump = true;
  		clumps++;
  	}
  }
  return clumps;
}
"
99a05ecef9fc778a16736bc16e506474d745e725,"public int[] zeroMax(int[] nums)
{
    int length = nums.length;
    int largest = 0;
    int counter = counter + 1;
    while (nums[counter] != 0)
    {
        counter = counter + 1;
    }
    int[] newArray = new int[length];
    for (int i = counter; i < length; i++)
    {
        if (nums[i] > 0)
        {
            largest = nums[i];
        } 
    }
    if (largest > 0)
    {
        for (int i = 0; i < length; i++)
        {
            if (i != counter)
            {
                newArray[i] = nums[i];
            }
            else
            {
                newArray[i] = largest;
            }
        }
    }
    return newArray;
}
"
48bc0f34f4cc4ef36c199e0073714579cc3f1829,"public int makeChocolate(int small, int big, int goal)
{
    int remainder = 0;
    if (goal >= 5 * big)
        remainder = goal - 5 * big;
    else
        remainder = goal % 5;
    if (remainder <= small)
        return remainder;
    else
        return -1;
}
"
cf1dbff19a0df81efa6a08b7ef7316b1f5d9939d,"public String zipZap(String str)
{
    String s = """";
    String diff = "" "" + str + "" "";
    for (int i = 1; i < diff.length()-1; i++) {
        if (diff.charAt(i-1) != 'z' &&
                diff.charAt(i+1) != 'p') {
            s += diff.charAt(i);
        }
    }
    return s;
}
"
47f3a74a254afbf6c445487eff4eb1c0df9e20df,"public boolean has77(int[] nums)
{
    int blob = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (i < nums.length - 2)
        {
            if (nums[i] == nums[i + 1] && nums[i] == 7)
        	{
            	blob = blob + 100;
        	}
            if (nums[i] == nums[i + 2] && nums[i] == 7)
            {
                blob = blob + 100;
            }
        }   
        else if (nums[i] == nums[i + 1] && nums[i] == 7)
        {
            blob = blob + 100;
        }
        else
        {
            blob = blob + 1;
        }
    }
    return blob >= 100;
}
"
64048f2701869a2bcb7a460416d3ef15f722e6b6,"public int[] fizzArray(int n)
{
    int i;
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
e09b6e4d39f68411803472e20928b3121158ae71,"public int countCode(String str)
{
    int len = str.length();
    int count = 0;
    String co = ""co"";
    String e = ""e"";
    
    if (len < 4)
    {
     	return 0;   
    }
    for (int i = 0; i < len - 3; i++)
    {
     	if (co.compareTo(str.substring(i, i + 2)) == 0 &&
           e.compareTo(str.substring(i + 3, i + 4)) == 0)
        {
         	count++   
        }
    }
    return count;
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
3f6ce9f2ddfb53e5378e466129ae3aa31c0e9222,"public boolean endOther(String a, String b)
{
    String lowera = a.toLowerCase();
   String lowerb = b.toLowerCase();
   int lengtha = lowera.length();
    int lengthb = lowerb.length();
    if (lengtha > lengthb) 
    {
        String last 
            last = lowera.substring(lengtha - lengthb);
    }
        if ( last= lowerb)
        {
			return true;
  			  }
    
    if (lengthb > lengtha)
    {
    	String last2 = lowera.substring(lengthb - lengtha);
    }
	if ( last2 = lowera){
    return true; 
    }  
  return false;
}
"
90c2bc77bfe0ed523d41e5032252ef700f150542,"public int centeredAverage(int[] nums)
{
   
   for(int x = 0; x < nums.length; x++)
   {
       for(int y = x; y < nums.length -1; y++)
       {
           if(nums[y] > nums[y+1])
           {
               int start = nums[y+1];
               nums[y+1] = nums[y];
               nums[y] = start; 
           }
       }
   }
   
    int sum = 0;
   for(int i = 1; i < nums.length-1; i++)
   {
       sum += nums[i];
   }
    
    return (sum / (nums.length-2));
    
}
"
c02433a8efebca5fc249d0424a49d8ac2acc6830,"public int loneSum(int a, int b, int c)
{
    int sum;
    if (a==b)
    {
 		sum = c;    	   
    }
    else if (a==c)
    {
     	sum = b;
    }
    else if (b==c)
    {
     	sum = a;   
    }
    else 
    {
     	sum = a + b + c;   
    }
    return sum;
}
"
d5ce0fb7cf0b155cde53ceb7bede5737956327c9,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        for (int j : array)
        {
            if (i != 10)
            {
                array[j] = i;
                break;
            }
        }
    }
    
   return array;
}
"
51c1bde53737c8762e8c7ef931c6f82cb41c7f5b,"public int[] withoutTen(int[] nums)
{
    int[] newPeen = new int[nums.length];
    
    for (int i = 0; i < nums.length; i++)
    {
        
        {
            for (int x = 0; x < newPeen.length; x++)
            {
                if (nums[i] != 10)
        		newPeen[x] = nums[i];
            }
        }
        
    }
    
        return newPeen;
    
}
"
8e2fbb177f04d826bcf31a521e3d2d5c0a540cf5,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if(sum >= 10 || sum <= 19)
    {
    	return sum;
    }
    
    else if (sum<=9 || sum>=20) 
    {
    	return 20;
    }
    
    return 20;
}
"
9a269dfe1a15130142cd379d93e4125d40376c5c,"public String without2(String str) 
{
    int sizeWord = str.length();
    
    String begin = str.substring(0, 2);
    String end = str.substring((sizeWord - 2), sizeWord);
    
    if (begin == end)
    {
        return str.substring(2);
    }
    else
    {
        return str;
    }
}
"
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
"
36ea3ec42efce22bfe7b042c71920e9dca498407,"public String zipZap(String str)
{
    int length = str.length();
    String sub = """";
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i - 1) == 'z' && str.charAt(i + 1) == 			'p')
        {
            
        }
        else
        {
            sub = sub +str.charAt(i);
        }
    }
    return sub;
}
"
1716203636addde17185ba10cca773f3512c6f38,"public String without2(String str) 
{
    int x = str.length();
    if (str.substring(0, 2) == str.substring(x - 2, x))
        return str.substring(2);
    else 
        return str;
        
}
"
12c731db2fe90fd6cc118c9a952acaad1c506978,"public boolean great; 

public boolean love6(int a, int b)
{    
    if (a == 6 || b == 6)
    {
        great = true;
    }
    else if ((a + b) = 6 || (a - b) = 6 || (b - a) = 6)
    {
        great = true; 
    }
    else 
    {
        great = false;
    }
    return great; 
}
"
d822cf12d38ea28fe825ff4fc14fdc94e6719f05,"public boolean bobThere(String str)
{
    int i = 0;
    char[] CharArray = str.toCharArray();
    for(char cha : CharArray){
    	if (cha == 'b'){
        	if (str[i + 2] == 'b'){
            	return true;
            }
        }
     	i++;
    }
    return false;
}
"
06be09e2d8d4ddfe4333697a3feaadf8e8dc3077,"public int countClumps(int[] nums)
{
    int num = 0;
    boolean still = false;
    boolean clump = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i - 1])
        {
            clump = true;
        }
        else if (nums[i] == nums[i + 1])
        {
            still = true;
            continue;
        }
        else
        {
            num++;
        }
    }
}
"
e2428564a0b9b997c61560a970771c5a9df6b552,"public int greenTicket(int a, int b, int c)
{
	if(a==b&&b==c)
    {
        return 20;
	}
    else if((a==b||b==c)||a==c)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
"
cb4df9c9d3ed13f79d637ded50cba70f796e8a9c,"public String zipZap(String str)
{
int nana = str.length();
int doo= 2;
int jaja = nana - doo;
int zero = (0);
int hanji = (str.length()+doo);
int i = (0);
char ha;
StringBuilder bana = new StringBuilder(nana);
while(i<nana)
{
ha = (str.charAt(i));
if(ha == 'z' && i < jaja && str.charAt(i+doo) == 'p')
{
bana.append(""zp"");
i += 3;
}
else
{
bana.append(ha);
i++;
}
}
return bana.toString();   
}
"
82fb62eb962de751bee81dd0fd8564e475874f48,"public int redTicket(int a, int b, int c)
{
	if((a=b) && (b=c))
    {
        if(a=2)
        {
            return 10;
        }
        else
        {
            return 5;
        }
    }
     if(a != b && a !=c)
     {
         return 1;
     }
    else
    {
        return 0;
    }
    
    
   
   
}
"
ed1be4ed56e7b7c3b68f3659aa51f9930b008a40,"public int[] shiftLeft(int[] nums)
{
    int[] newList = new int[nums.length];
    newList[0] = nums[nums.length - 1];
	for (int i = 1; i < nums.length - 2; i++)
    {
        newList[i] = nums[i - 1];
    }
	return newList;
}
"
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
"
43b70a5866a0d2fd735f1d510fe02fe1e67f82ab,"public boolean xyzThere(String str)
{
    int length = str.length();
    boolean contains = false;
    boolean hasPeriod = false;
    if (length >= 3)
    {
        for (int i = 0; i < length-1; i++)
        {
            if (str.charAt(i) == 'x' && str.charAt(i+2) == 'z')
            {
                contains = true;
            }
            if (str.substring(i, i+4).equals("".xyz""))
            {
                hasPeriod = true;
                int remainder = length - i;
                i = i + remainder;
            }
        }
        if (hasPeriod == true)
        {
            contains = false;
        }
    }
    return contains;
}
"
a9d608a1175b8b141abf91cfd3caeac61eb140e0,"public boolean in1To10(int n, boolean outsideMode)
{
    if (1 <= n && n <= 10)
    {
        return true;
    }
    if (outsideMode)
    {
        if (n <=1 || n >= 10)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    
}
"
3dadaa6af8ebf06723b25f0d8073c958d058aa4f,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int ticket = 0;
    if (isBirthday = false)
    {
    	if (speed<=60)
    	{
        	ticket = 0;
    	}
    	if (speed>60 && speed<=80)
    	{
        	ticket = 1;
    	}
    	if (speed>80) 
    	{
        	ticket = 2;
    	}
    }
    else
    {
    	if (speed<=65)
    	{
        	ticket = 0;
    	}
    	if (speed>65 && speed<=85)
    	{
        	ticket = 1;
    	}
    	if (speed>85) 
    	{
        	ticket = 2;
    	}        
    }
    return ticket;
}
"
0615e4e3628f3968baa7039844e88175c1722d19,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend)
    {
        return (cigar >= 40);
    }//end if
    
    return (cigars >= 40 && cigars <= 60);
    
    
}
"
e3ab67fdea8fd910178d4c3e5e2f8d0a938765a2,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    
    for(int i = 0; i < n; i++)
        arr[i] = i;
              
	return arr;
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
cb42170b9d6ad982ba825056b9ef47c73bcc5ef0,"public int sum67(int[] nums)
{
    int sum = 0;
        if (nums.length < 1) {
            return 0;
        }

        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 6) {
                while (nums[i] != 7) {
                    i++;
                }
            } else {
                sum += nums[i];
            }

        }
        return sum;
}
"
c15f41baa7ec2fcb32529c5fbd55588bb02cdcdc,"public int[] shiftLeft(int[] nums)
{
    int [] array = new int[nums.length];
    for (int i = 0; i < nums.length; i++)
    {
        if (nums.length - 1 == 1)
        {
        	array[i] = nums[i+1];
            array[i+1] = nums[0];
        }
        else
        {
        	array[i] = nums[i+1];
        }
    }
    return array;
}
"
8fbb70b4ce6f9c55dcd5d47f50272f1685330601,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
            return true;
        else 
            return false;
    }
    if (isAsleep)
        return false;
}
"
08a8f18512884512a30b8a03fcabf51503771cf5,"public int[] seriesUp(int n)
{
    int[] ans = new int[n * (n + 1) / 2];
    int num = 0;
    for (int i = 1; i <= n; ++i)
    {
     	for (int j = 1; j <= n; ++j)
        {
         	ans[num++] = j;
        }
    }
    return ans;
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
"
2132c5841c5fd8566dc0f770f796f306a9932af8,"public String without2(String str)
{
    int length = str.length();
    String beginning = str.substring(0,2);
    String end = str.substring(length - 2, length);
    if (length <= 2)
        return """";
    else if (beginning.equals(end))
    	return (str.substring(2));
    else
        return str;
}
"
62e36709dfbb8ccf2b58f4172916a82a8435bc7a,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int roundSum = a + b + c;
    return roundSum;
}

public int round10(int num)
{
    int round10 = 0;
    int roundedNum = num % 10;

    if (num < 10)
    {
        if (num / 5 >= 1)
        {
            num = (10 - num) + num;
        }
        else
        {
            num = 0;
        }      
    }
    else 
    {
       	if (roundedNum >= 5)
       	{
            roundedNum = 10 - roundedNum;
            num = roundedNum + num;
       	}
       	else if ((roundedNum < 10) && (roundedNum != 0))
       	{
            num = num - roundedNum;
       	}
    }
    round10 = num;
    return round10;
}
"
84759c2d81ff2441f1627b02df1fa4a2e4b9c286,"public int makeChocolate(int small, int big, int goal)
{
    int value = 0;
    if (goal > big *5 + small)
    {
        value = -1;
    }
    else
    {
        value = goal - big * 5;
    }
    if (value <= small || big * 5 >= goal)
    {
        value = goal % 5;
    }  
    else
    {
        value = -1;
    }
    return value;
}

"
11b89a5a5c8c4cce3c90dfb984780d1229efc349,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[nums.length - 1] == 7 && nums[nums.length - 2] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
"
b87f79cf6e956efea678a9c62bbe9132ddde475e,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars >= 40)
        {
            return true;
        }
        else 
        {
            return false;
        }
    }
    if (!isWeekend)
    {
        if (cigars >= 40 && cigars <= 60)
        {
            return true;
        }
        else 
        {
            return false;
        }
    }
    return boolean cigarParty;
}
"
e9b63cad69501d11984221e9a07eff591dedc2b8,"public int roundSum(int a, int b, int c)
{
    a = round10(a);
    b = round10(b);
    c = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int rem = num % 10;
    if (num >= 0 && num < 5)
        num = num - rem;
    else
        num = num + 10 - rem;
    return num;
}
"
61f82d819ed02008ea7d45f70e7c86937eb58bc3,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (i == 0)
        {
            if (nums[0] == 2 && nums.length < 1)
            {
                return false;
            }
            else if (nums[0] == 2 && nums[1] != 2)
            {
                return false;
            }
        }
        else if (i == nums.length - 1)
        {
            if (nums[i] == 2 && nums[i - 1] != 2)
            {
                return false;
            }
        }
        else
        {
            if (nums[i] == 2)
            {
                if (nums[i - 1] == 2)
                {
                }
                else if (nums[i + 1] == 2)
                {
                }
                else
                {
                    return false;
                }
            }
        }
    }
    return true;
}
"
8d4e8b4b9aad2f4fa086d0ca00e3dcd3d1a1ca65,"public String without2(String str) 
{
    String start = str.substring(0, 2);
    String end = str.substring(str.length()-2,str.length());
    if (start == end)
    {
        return str.substring(1, str.length());
    }
    else
    {
        return str;
    }
}
"
55008f2ac50ecaccae3a878e34d56a2f00118737,"public int countClumps(int[] nums)
{
	int clump = 0;
    for (int i = 0; i < nums.length;i++)
    {
        
       {
           if ( i + 1 < nums.length)
           {
               if (nums[i] == nums[i + 1])
               {
                   clump = clump + 1;
                   for (int j = 1; j < nums.length; j++)
                   {
                       if (nums[i + 1] == nums[i + 1 + j])
                       {
                           i = i + 1;
                       }
                   }
               }
           }
       }
    }
    return clump;
}
"
21e4f5f8d77da0016fead62a1f6bbf5998f178aa,"public boolean canBalance(int[] nums)
{
    boolean balance = false; 
    int leftSum = 0;
    int rightSum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        leftSum = leftSum + nums[i];
        for (int j = nums.length - 1; j > i; j--)
        {
            rightSum = rightSum + nums[i]; 
        }
        if (leftSum == rightSum)
        {
            balance = true;
        }
        else
        {
            balance = false; 
        }
    }
    return balance;
}

"
b0875a03cba11cffb77862e10772d096e7e3f7c9,"private boolean answer;
public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
 	if (isMorning)
 	{
     	if (isMom)
     	{
         answer = true;
     	}
     	else
     	{
         answer = false;
     	}
 	}
 	else if (isAsleep)
 	{
     answer = false;
 	}
    else
    {
        answer = true;
    }
}
"
96fb91269fdaffa1ac9012c4945c64517991254e,"public int[] seriesUp(int n)
{
	int[] ints = new int[n * (n + 1)/2];
    int x = ints.length;
    for (i = 0; i < n; i++)
    {
        for (int j = 0; j <= i; j++)
        {
            ints[i + j] = j;
        }
    }
    return ints;
}
"
d1b04d27dd687c4a1135c04ea303249feda49c99,"public int[] tenRun(int[] nums)
{
    int peen = 1;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int x = i + 1; x < nums.length; x++)
            {
                if (nums[i] % 10 == 0 && nums[x] % 10 != 0)
                {
                    nums[x] = nums[i];
                }
                else if (nums[i] % 10 == 0 && nums[x] % 10 == 0 && x > nums.length - 1)
                {
                    nums[x+1] = nums[x];
                    i = i + 1;                                        
                }
            }
        }
    }
    
    return nums;
}
"
811d76f82110f3c78d7ac2e389a660bd7056fd4d,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
        if (nums.length != 0)
        {
            int[] newArray = new int[1];
        	newArray[0] = nums[0]; 
            return newArray;
        }
        else
        {
            int[] newArray = new int[0];
            return newArray;
        }
    }


        int[] newArray = new int[2];
        newArray[0] = nums[0];
        newArray[1] = nums[1];
        return newArray;

}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
19a5b90083c799114b8bccdc97fb09a69be2aba1,"public int greenTicket(int a, int b, int c)
{
    if (a == b || a == c || b == c)
        return 10;
	if (a == b && a == c || b == c)
        return 20;
    else
        return 0;
}
"
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
"
330f6a3676654a1bb8f436a7a71d7a6f671b2d84,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    return true;

  int sum = a+b;

  int diff = Math.abs(a-b);

  if (sum == 6 || diff == 6)

    return true;

  else

    return false;

}
"
8793cd56f36eb359d7c7e2024cb97f3e996103f5,"public int loneSum(int a, int b, int c)
{
    int loneSum = 0;
    if (c == b && a == b && b == a && b == c && a == c && c == a)
    {
    	loneSum = 0;
    }
    else if ( a == b && b == a )
    {
    	loneSum = c;
    }
    else if ( b == c && c == b)
    {
    	loneSum = a;
    }
    else if ( a == c && c == a)
    {
    	loneSum = b;
    }
    else 
    {
    	loneSum = a + b + c;
    }
    return loneSum;
}
"
4ef8b4e8df2249ede2fe5ab66d00c23718f92381,"public boolean love6(int a, int b)
{
    int sum (a + b);
    int dif (a - b);
    if (sum = 6 || dif = 6)
        return true;
    else 
        return false;
    
}
"
fa6495bec04a978cbcd2e42e8b4457c127046b15,"public int countEvens(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] % 2 == 0)
			count++;
	}
	return count;
    
}
"
a257029ca2d6b0c44e4c6cddceefe93ce84603be,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean six = false;
    for (int j = 0; j < nums.length; j++)
    {
        if (six)
        {
             if (nums[j] == 7)
            {
                six = true;
            }
        }
        else if (nums[j] == 6)
        {
            six = true;
        }
        else
        {
            sum = sum + nums[j];
        }
    }
        return sum;
        
}
"
cc67daeac023f632f8dc02777ce282dba8b8583d,"public boolean canBalance(int[] nums)
{
    int left = 0;
	int right;
	for(int i = 0; i < nums.length - 1; i++)
    {
		left += nums[i];
    }
	right = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(left == right)
			return true;
		left -= nums[i];
		right += nums[i];
	}
	return (left == right);
}
"
d82b8f23a638e58a78d87164cc6d48dbf8f84646,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        a = 0;
        b = 0;
        c = 0;
    }
    if ( b == 13)
    {
        b = 0;
        c = 0;
    }
    if (c == 13)
    {
        c = 0;
    }
    return a + b + c;
            
}
"
990094129db1ea9eda8c03f73a49b0cd6e313837,"public String status; 

public String alarmClock(int day, boolean vacation)
{
    if (day == 0 || day == 6)
    {
        if (vacation == false)
        {
            status = ""10:00"";
        }
        else if (vacation == true)
        {
            status = ""off"";
        }
    }
    else if (day >= 0 && day <=6)
    {
        if (vacation == false)
        {
            status = ""7:00"";
        }
        else if (vacation == true)
        {
            status = ""10:00"";
        }
    }
    return status;
}
"
a1be09155db2c228ec6cc4de5576e7bd356d0593,"public int sum3(int[] nums)
{
    int[] a;
    a = new int[3];
    a[0] = nums[0];
    a[1] = nums[1];
    a[2] = nums[2];
    int sum = IntStream.of(a).sum();
}
"
3777ab67daeb9dff91d6074d9bd111ddd45abd19,"public int[] shiftLeft(int[] nums)
{
    if(nums.length == 0)
    {
        return nums;
    }
    int store = 0;
    int start = nums[0];
    for(int x = 1; x < nums.length-1; x++)
    {
        store = nums[x];
        nums[x] = nums[x+1];
        nums[x-1] = store; 
    }
    nums[nums.length-1] = start;
    return nums;
}
"
41d594812c8b693c11be96d0d8d111a2db2e781a,"public int[] frontPiece(int[] nums)
{
    int[] answer = [];
    if (nums.length >= 2)
    {
        answer = [nums[0], nums[1]];
    }
    else if (nums.length == 1)
    {
        answer = [nums[0]];
    }
    return answer;
}
"
be1a03198ed8e4f41fc9485a5cacf1c1302fd11e,"public String plusOut(String str, String word)
{
    int length = str.length() - 3;
    String newString;
	for (int x = 0; x < length; x++)
	{
		if (str.substring(x, x+3) == word)
        {
			newString = str.substring(0, x-1) + ""x"" + str.substring(x+4, length);
        }
        else
        {
           //nothing;
        }
	}
    return newString;
}
"
22f9894c87da9b78b5f8f4743bd4759e050fcfa4,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        ab = 0;
        bb = 0;
    }
    if (a == c) {
        ab = 0;
        cb = 0;
    }
    if (b == c) {
        bb = 0;
        cb = 0;
    }
    int sum = ab + bb + cb;
    return sum;
}
"
04d488931b788707ed548c0a82c9a8973eb6122a,"public boolean xyzThere(String str)
{
    int i=0; 
    if(str.length()>=3)
    {
        while (!str.substring(i, i+3).equals (""xyz"") && i+4<= str.length())
   		{
       	 	i=i+1;
    	}
        //char result = str.charAt(i-1);
    	return str.substring(i, i+3).equals (""xyz"") && 
            !str.substring(i, i+3).equals ("".xyz"")
            
    }
    else
    {
        return false;
    }
}
"
1ea3189c0e76fc78e90b40ea107d5f7321d1d626,"public boolean xyBalance(String str)
{
    int index1=0;
    int index2=0;
    for(int i=str.length();i>0;i--)
    {
        if (str.substring(i-1, i).equals(""x""))
            {
                 index1= i;
             }
    }
    for(int i=str.length();i>0;i--)
    {
        if (str.substring(i-1, i).equals(""y""))
        {
            index2= i;
        }                                           
    }
    return index1>index2;

}
"
47b291ecf25c0f2329c4fb050263de4b3fdd9033,"public boolean has77(int[] nums)
{
  for(int i = 0; i < nums.length - 1; i++)
  {
  	if(nums[i] == 7)
  	{
			if(nums[i+1] == 7)
				return true;
			else if(i < nums.length - 2 && nums[i+2] == 7)
				return true;
		}
	}
	return false;
}
"
691ca0e9aab2fdfe2cb24a721e5c78374e77eed8,"public int sum67(int[] nums)
{
        int sum = 0;
    boolean inRange = false;
      
    for(int i = 0; i < nums.length; i++) {
        if(nums[i] == 6)
            inRange = true;

        if(!inRange)
            sum += nums[i];
                                        
        if(inRange && nums[i] == 7)
            inRange = false;
                                                        
    }
                                                            
    return sum;
}
"
613a6b7797bf104ceed16277a17aaa62b17737f8,"public int centeredAverage(int[] nums)
{
  int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for(int i = 1; i < nums.length; i++)
	{
		sum  += nums[i];
		if(nums[i] > max)
			max = nums[i];
		else if(nums[i] < min)
			min = nums[i];
	}
	return (sum-max-min) / (nums.length - 2);
}
"
b03f6ee58d1c2efbc298c1b090d888a47d5425a9,"public boolean evenlySpaced(int a, int b, int c)
{
    if (b-a <= 1 && c-a >= 2 && c-b >= 2 
        || b-a >= 2 && c-a <= 1 && c-b >=2
        || b-a >=2 && c-a >= 2 && c-b <= 1)
        return true;
    return false;
}
"
a4a2d962cdb1bf5e798a44645445350677cdcfbc,"public String getSandwich(String str)
{
    if (str.substring(0, 5).equals(str.substring(str.length()-5))
               && str.substring(0, 5).equals(""bread""))
    {
        return str.substring(5, str.length() -6);
    }
    else 
        {
            return """";
        }
}
"
d5ea2258e6bbd9d86632fcb90f4a201b12aae284,"public int greenTicket(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 20;
    }    
    
    if ((a == b) || (b == c) || (a == c))
    { 
        return 10;
    } 
    else
    {
    	return 0;
    }
}
"
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
"
a92717e6bf453e25d7548562002ebabff8c06a3f,"public String alarmClock(int day, boolean vacation)
{
    if (alarmClock = false) {
    	if (int = 0) {
        	return ""10:00""; 
        }
    }
}
"
aa5d684fb678957b65c524462c3cf02460cb7467,"public int[] fix45(int[] nums)
{
    int[] x = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
        	x[i] = nums[i];
        }
    }
    for (int j = 1; j < nums.length - 1; j++)
    {
     	if (x[j] == 0 && x[j-1] == 4)
        {
            x[j] = 5;
        }
        else
        {
           if (x[j] == 0)
           {
               int d = 0;
               for (int z = 0; z < nums.length - 1; z++)
               {
                   if (nums[z] != 4 && nums[z] != 5)
                   {
                       d = nums[z];
                       break;
                   }
               }
               x[j] = d;
           }
        }
    }
    return x;
}"
55d82777253a00d8ba398425451c87f2ce6bf43d,"public boolean xyBalance(String str)
{
	    
    for (int i = 0; i < str.length(); i++)
    {
        if (str.charAt(i) == 'x')
        {
            for (int j = 0; j < str.length(); j++)
            {
                if((i+j) < str.length())
                {
                	if((str.charAt(i+j) == 'y'))
	                {
						for (int k = 0; k < str.length(); k++)
                        {
                        	if((k+i+j) < str.length())
                            {
                            	if (str.charAt(k+i+j) == 'x')
                                {
                                	return false;
                                }
                                else if (str.charAt(str.length()-1) == 'y')
                                {
                                	return true;
                                }
                            }                            
                        }
                        return true;
        	        }

                }
            }
        }        
    }
    for (int z = 0; z < str.length(); z++)
    {
    	if (str.charAt(z) != 'x')
        {
        	for (int q = 0; q < str.length(); q++)
            {
            	if ((q+z) < str.length() && str.charAt(q+z) == 'x')
                {
                	return false;
                }
            }
        }
    }
    return false;
}
"
e3ceafdf63677f61bd7089a554a38034a9da9a3f,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    int j = 0;
    for (int i = 0; i<index5;i++)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[j]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
        else if (j != 0)
            j--;
        j++;
    }
    return nums;
}
"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
734011bef36c4098ac4bd923dd39eda759fa4fc3,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c =this.round10(c);
    int sum = a + b + c;
    return sum;
}

public int round10(int num)
{
    int i = 0;
    while (num >=10) {
        num = num - 10;
        i = i + 10;
        return i;
    }
    if (num >= 5) {
        num = i + 10;
    }
    else {
        num = i;
    }
    return num;
}
"
4ba46181a66bb2f3cf45d38876db8736b1ebda46,"public boolean in1To10(int n, boolean outsideMode)
{
    return ((n >= 1 && n<=10 && !outsideMode) || (n > 10 || n < 1 && outsideMode));
}
"
e47177271e83f9b665bcd937bc94c6a6055fa928,"public int greenTicket(int a, int b, int c)
{
    int number = 0;
  if (a == b && b == c)
    number = 20;
  if (a == b || a == c || b == c)
    number = 10;
  else;
    return number;

}
"
381916f7f97a9d34733d61d201a32f118b868efc,"public String mixString(String a, String b)
{
    String c = """";
    int big = 0;
    
    if (a.length() > b.length())
    	big = a.length();
    else
        big = b.length();
    
    for (int i = 0; i<big; i++)
    {
        if (a.length() > i)
        	c = c + a.charAt(i);
        
        if (b.length() > i)
        	c = c + b.charAt(i);
    }
    
    return c;
}
"
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
"
4cad14f6dc235bb7665a336718b0bc721df9ddd2,"public boolean isEverywhere(int[] nums, int val)
{
    Boolean result = true;
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            result = true;
        }
        else
        {
            result = false;
            break;
        }
    }
    return result;
}
"
d53da382ab01972755bb1250b96d3b3b438f4d43,"public String plusOut(String str, String word)
{
      String output = """";
      int i = 0 ;

      while(i < str.length() ) 
      {
         if (str.substring(i).startsWith(word)) 
         {
            output = output + word;
            i = i + word.length();
         } 
         else 
         {
            output = output + ""+"" ;
            i++;
         }
      }

      return output;
}"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
d119145ccf7cbf2f0e43be0a4e6e74bee871e00c,"public boolean has77(int[] nums)
{
    boolean truth = false;
    int size = nums.length;
    if (nums[size-1] == 7 && nums[size-2] == 7)
        return true;
    for (int i = 0; i < size-2;i++)
        if (nums[i] == 7 && (nums[i+1] == 7 || nums[i+2] == 7))
            return true;
    return truth;
}
"
e3b4f3f5b04447827f20ed27aeb6442ac7be6c0a,"public int countEvens(int[] nums) {
    int count = 0;
    for (int i = 0; i < nums.length; i++)
        if (nums[i] % 2 == 0) count++;
    return count;
}"
0302301efcb83cdd2541bfef41b35ffbf043fe24,"public int[] zeroMax(int[] nums)
{
	int max;
    
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 0)
		{
			max = 0;
            
			for(int j = i + 1; j < nums.length; j++)
			{
				if(nums[j] > max && nums[j] % 2 == 1)
                {
					max = nums[j];
                }
			}
			if(max != 0)
            {
				nums[i] = max;
            }
		}
	}
    
	return nums;   
}"
39483c437921abc8fe24406f9d159f633a6ed263,"public boolean xyzThere(String str)
{

    if (str.startsWith(""xyz"") || str.endsWith(""xyz""));
        
    {
        return true;
    }
        for (int x = 0; x < str.length() -2; x++)
        {
   			if (str.charAt(x) == '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return false;
    }
        
        }
    {return false;}

}
"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
d9a68e9b6fa01bf868b9d7ccb3e7102cdd07859e,"public String repeatEnd(String str, int n)
{
	StringBuilder stbuild = new StringBuilder(n*n);
	String last = str.substring(str.length()-n);
	for(int i = 0; i < n; i++)
		stbuild.append(last);
	return stbuild.toString();
}
"
cbe2eae6d5d32c82c91dc3b5467670d43b0a7f3c,"public int countCode(String str)
{
    if (str.length() < 4)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < str.length(); i++)
        {
            boolean lookForC = (str.charAt(i) == ""c"");
            boolean lookForD = (str.charAt(i + 2) == ""d"");
            boolean lookForE = (str.charAt(i + 3) == ""e"");
            if (lookForC && lookForD && lookForE)
            {
                counter = counter + 1;
            }
        }
    }
}"
4efce6b8502c5e17fecb0be3925ce44b96bfd2f7,"public String withouEnd2(String str)
{
	int len = str.length();
	if(len >= 3)
		return str.substring(1, len-1);
	return """";
}
"
71896c52f98608f4f8fb4cf83b281aa38bd42e70,"public String repeatEnd(String str, int n)
{
    int m = str.length();
    String k = str.substring(m - n);
    int i = 1;
    while (i < n)
        {
            k = k + str.substring(m - n);
            i++;
        }
    return k;
}
"
c9db41e8ca91d96bee3eb4e5f89bb33135f954df,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
        return 20;
    
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
36bc5ee0e08f51e12caae9b0ebbb96f61ef5e26d,"public int countClumps(int[] nums)
{
    int merlin = 0;
    
    for(int i = 0; i < nums.length - 1  ; i++)
    {
        if (nums[i] == nums[i+1] && i<nums.length -1)
        {
            merlin++;
        }
       
           
    }
    return merlin;
}
"
f215df577a74999f656336e3a9ec102b290e2c21,"public boolean canBalance(int[] nums)
{
    int countBeg = 0;
    int countEnd = 0;
    boolean balance = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        for (int j = nums.length - 1; j > 0; j--)
        {
            countBeg += nums[i];
            countEnd += nums[j];
            if (countBeg == countEnd)
            {
                balance = true;
            }
        }
    }
    
    return balance
}
"
0044e95fa65db2f377719ad29d9703343bb89fbc,"public int[] shiftLeft(int[] nums)
{
 	int[] numsNew = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++)
    {
        numsNew[i] = nums[i + 1];
    }
    numsNew[nums.length - 1] = nums[0];
    return numsNew;
}
"
a2bb2dca66570a17707dfd082079ad3c0588e392,"public boolean evenlySpaced(int a, int b, int c)
{
    int big = c;
    int small = b;
    int medium = a;
    if(a > b && a > c)
    {
        if(b > c)
        {
            big = a;
            medium = b;
            small = c;
        }
        else
        {
            big = a;
            medium = c;
            small = b;
        }
    }
    else
    {
        if(a > c)
        {
            big = b;
            medium = a;
            small = c;
        }
        else
        {
            big = b;
            medium = c;
            small = a;
        }
    }
    if((big - medium) == (medium - small))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
8e7aa6642156e4a125351e98424ac5069519fd6a,"public boolean twoTwo(int[] nums)
{
    if(nums.length == 1 && nums[0] == 2)
        return false;
          
    if(nums.length >= 2 && ((nums[0] == 2 && nums[1] != 2) ||
        (nums[nums.length-1] == 2 && nums[nums.length-2] != 2)))
        return false;
                            
    for(int i = 1; i <= nums.length - 2; i++) {
        if(nums[i] == 2 && nums[i-1] != 2 && nums[i+1] != 2)
            return false;
    }
                                            
    return true;
}
"
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
a7bc1e7c1f876cbb704f239a59fa9111a84fd9a9,"public String atFirst(String str)
{
    int length = str.length();
    String atFirst;
    
    if (length = 0)
    {
        atFirst = ""@@"";
    }
    else if (length = 1);
    {
        atFirst = str.substring(0, 1) + ""@"";
    }
    else
    {
        atFirst = str.substring(0, 2);
    }
    return atFirst;
}
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
00b00b3aea7820f67a1e5a29b80e12c74a318314,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] == 0) {
            for (int j = i + 1; j < nums.length; j++) {
                int b = 0;
                if ((nums[i]+10) % 2 != 0 &&
                    nums[i] > b) {
                    b = nums[i];
                }
            }
            setInt(nums, i, b);
        }
    }
    return nums;
}
"
41ac420a59efd8a7df94145466a3f58d638ba68a,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean doPlay = false;
    if (isSummer == true)
    {
        if (temp >= 60 && temp <= 100)
        {
         	doPlay = true;   
        }
    }
    else
    {
        if (temp >= 60 && temp <= 90)
        {
         	doPlay = true;   
        }
    }
    return doPlay;
}
"
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
"
fabb59664fd60d5cc513c40637c473b20d01b1c4,"public boolean endOther(String a, String b)
{
    String nA = a.toLowerCase();
    String nB = b.toLowerCase();
    
    int lA = a.length();
    int lB = b.length();
    
    String sA = nA.substring()
    
    if (lA > lB)
    {
        return true;
    }
    else if (lA < lB)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
4931b35f6ac7db75500ee99857f7773350feabe2,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        i = count;
		for (int j = 1; j <= (j * (j + 1) / 2); j++)
        {
            if (i < nums.length)
            {
                nums[i] = j;
                i++;
                count++;
            }
        }
    }
    return nums;
}
"
ae35eb31ae7509a36f9e1fd03919f3fd33abd117,"public int[] zeroMax(int[] nums)
{
    int greatest = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            for (int j = i + 1; j < nums.length - 1; j++)
            {
                if (nums[j] % 2 == 1 && nums[j] > greatest)
                {
                    greatest = nums[j];
                }
            }
            if (greatest != 0)
            {
                nums[i] = greatest;
                greatest = 0;
            }
        }
    }
	return nums;
}
"
e8c026b49d4d5468f73d155e84de3b7f6aa9087b,"public int makeChocolate(int small, int big, int goal)
{
    if(goal % 5 == 0) 
    {   
        if (goal/5 <= big)
        	return 0;
    	else 
            return -1;
    }
    else
    {
        if(goal % 5 <= small)
            small = goal % 5;
    		return small;
        else if
            return -1;
    }
}	
"
c515a60998f2c8ee16c57537a3198e03602b7896,"public boolean love6(int a, int b)
{
  if(a == 6 || b ===6)
      return true;
    else if (a-b ==Math.abs(6))
        return true;
}
"
0a2e6956d8d8ab433e2ff2bce3b19759edab6e63,"public int[] fizzArray(int n)
{
	int[] newNumbers = new int[n];
    for (int i = 0; i < n; i++)
    {
        newNumbers[i] = i;
    }
    return newNumbers;
}
"
9294b03f96e7ba6c8ebb76fc9437bfadef40b777,"public int sum67(int[] nums)
{
	int sum = 0;
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 6)
        {
            for(int j = nums[i]; nums[i] =! 7; j++)
            {
            	sum + 0;
            }
        }
        else 
        {
        	sum += nums[i];
        }
            
    return sum;
}
"
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
"
ae1821146392094659f3d2cc4f4674280daab1e7,"public int[] seriesUp(int n)
{
    int length = n * ((n + 1) / 2);
    int[] newArray = new int[length];
    int counter = 0;
    for (int i = 0; i < length; i++)
    {
        counter = i;
		for (int j = 0; j < i + 1; j++)
        {
            newArray[counter] = j + 1;
            counter++;
        }
        i = i + counter;
    }
    return newArray;
}
"
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
"
ca6c1771a072113f097d3abcd0f177d6f181e630,"public String[] fizzBuzz(int start, int end)
{
    String[] words = new String[end - start];
    for (int i = 0; i < end - start; i++)
    {
        if (i % 3 == 0 && i % 5 == 0)
        {
            words[i] = ""FizzBuzz"";
        }
        else if (i % 3 == 0)
        {
            words[i] = ""Fizz"";
        }
        else if (i % 5 == 0)
        {
            words[i] = ""Buzz"";
        }
        else
        {
            words[i] = String.valueOf(i);
        }
    }
    return words;
}
"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
508071de54c4deb3aff7e9d63bb4ff7c008258d0,"public String without2(String str) 
{
    if (str.substring(0,2).equals(str.substring(str.length()-2, str.length())))
    {
      return str.substring(2, str.length());  
    }
  else
  {
      return str;
  }
    return str;
}
"
42bfb049d8baa38e80596590d14b2a1c17138f97,"public boolean bobThere(String str)
{
    boolean ans = false; 
    for(int i=0; i<str.length(); i++)
    {
        if((str.charAt(i)=='b')&&(str.charAt(i+2)=='b'))
        {
            ans = true; 
        }
    }
    
    return ans; 
}
"
dd5f94c79afd5a94347e27cdc0eb62e6daf97d28,"public int chance; 

public int dateFashion(int you, int date)
{
    if (you >= 8 || date >=8)
    {
        chance = 2; 
    }
    else if (you <= 2 && date <= 2)
    {
        chance = 0;
    }
    else 
    {
        chance = 1; 
    }
    return chance; 
}
"
3d43326dee371edda05d72f06584270628b5ceac,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2)
		return 0;
	if(you >= 8 || date >= 8)
		return 2;
	return 1;
}
"
0f023d8627a4278d2e94c990003dbb6babdcd0bc,"public int[] zeroMax(int[] nums)
{
    int[] done;
    int max = 0;
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] != 0)
        {
        	done[i] = nums[i];
        }
        else
        {
        	for (int j = i + 1; j < nums.length; j++)
            {
            	if ((nums[j] % 2) == 1 && nums[j] > max)
                {
                	max = nums[j];
                }
            }
            done[i] = max;
        }
    }
    return done;
}
"
d0279d6ae85a1d465dc3fb133eb9135643302d0f,"public int blackjack(int a, int b)
{
    int aChecker = 21 - a;
    int bChecker = 21 - b;
    int answer = 0;
    if (aChecker < bChecker)
    {
        answer = a;
    }
    if (aChecker > bChecker)
    {
        answer = b;
    }
    if (aChecker < 0 && bChecker >= 0)
    {
        answer = b;
    }
    if (aChecker >= 0 && bChecker < 0)
    {
        answer = a;
    }
    if (aChecker < 0 && bChecker < 0)
    {
        answer = 0;
    }
    return answer;
}
"
d4727621894f4b6e95bac621a23e19a3148b6d8b,"public boolean endOther(String a, String b)
{
    if (a.toLowerCase().endsWith(b.toLowerCase()))
        {
            return true;
        }
    else if (b.toLowerCase().endsWith(a.toLowerCase()))
             {
                 return true;
             }
    else
             {
                 return false;
             }
}
"
0dbf5b40ba8653addd137697bfe1202fea6f393c,"public int[] withoutTen(int[] nums)
{
    int length = nums.length;
	for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            length --
        }
    }
    int[] ints = new int[nums.length];
    int k = 0;
    for (int i = 0; i < ints.length; i++)
    {
        if (nums[k] != 10)
        {
            nums[k] = nums[i];
            k++;
        }
        
    }
}
"
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
"
56d0b335114e7a3125721e8b644f518a831a37cf,"public boolean twoTwo(int[] nums)
{
    if(nums.length == 1 && nums[0] == 2)
        return false;
          
    if(nums.length >= 2 && ((nums[0] == 2 && nums[1] != 2) ||
        (nums[nums.length-1] == 2 && nums[nums.length-2] != 2)))
        return false;
                            
    for(int i = 1; i <= nums.length - 2; i++) {
        if(nums[i] == 2 && nums[i-1] != 2 && nums[i+1] != 2)
            return false;
    }
                                            
    return true;
    
}
"
3bcfce24741548383ea0f2c718954272a878995e,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        if (n <= 1 || n >= 10)
            return true;
    }
    return (n > 1 || n < 10);
}
"
af86a91ea391835fee10ecfb2437fd1c310cae8e,"public int sum67(int[] nums)
{
	int sum = 0;
	boolean six = false;
	for(int x = 0; x < nums.length; x++)
	{
		if(six)
		{
			if(nums[x] == 7)
				six = false;
		}
		else if(nums[x] == 6)
			six = true;
		else
			sum += nums[x];
	}
	return sum;
}
"
9c4fd38780909be0f0095b4bf6d135b053833a88,"public int greenTicket(int a, int b, int c)
{
 	if(a!=b && b!=c)
    {
    	return 0;
    }
    if(a==b && b==c)
    {
    	return 20;
    }
    if((a==b && b!=c) || (a==c && b!=c) || (b==c && c!=a))
    {
    	return 10;
    }
}
"
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
"
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
"
29a14ed44199c50c772be8dee5c8e408e521384a,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b == 6) || (a - b == 6))
    {
        return true;
    }
    else if (b - a == 6)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
6b7a6c0b8019acc3b93a77490fb566ea97a6332e,"public String without2(String str) 
{
   	
    String newString = str.substring(2);
    
    if (str.length() == 0)
        return """";
    else if (str.length() == 1)
        return str;
    else if (str.length() == 2)
        return """";
    else if (str.substring(0,2) == str.substring(str.length() -2, str.length()))
        return newString;
    else 
        return str; 
    
    
    
}
"
334a9d7ddf298c460a801f1f7e37fddadffb89f5,"public int dateFashion(int you, int date)
{
    int score = 0;
    if (you >= 8 || date >= 8)
    {
        score = 2;
        if (you <= 2 || date <= 2)
    	{
        	score = 0;
    	}
    }
    
    else
    {
     score =1;   
    }
    return score;
}
"
b821cf02f8191be808d171039ab2ccf3c6170e43,"boolean beforeX = false;
boolean isSatisfied = false;

public boolean xyBalance(String str)
{

    for (int i = 0; i < str.length(); i++)
    { 
        if (str.substring(i, i + 1).equals(""x""))
        {
         	beforeX = true;   
        }
                
        if (str.substring(i, i + 1).equals(""y"") && beforeX &&
           !str.substring(i + 1).equals(""x""))
        {
            isSatisfied = true;
        }

    }
    
    return isSatisfied;
}
"
950ae3f3dd7e65512b25246ae8942932060da3ba,"public String plusOut(String str, String word)
{
    for (int i = 0; i < str.length(); i++)
    {
        String plusString;
        if (!str.substring(i, i + word.length()).equals(word))
        {
            plusString = str.replace(str.charAt(i), '+');
        }
        else if (i == str.length())
        {
            return plusString;
        }
    }
    return ""f"";
}"
cf0b2d83b0558f31d29970ac5594bb6590bceebc,"public String without2(String str) 
{
    if (str.substring((str.length() - 2)) != str.substring(2))
    {
        return str;
    }
    else
    {
        return str.substring(2);
    }
}
"
0038e0f5e8c503a26e64c1bb36dccdd2eddd2240,"public String[] fizzBuzz(int start, int end)
{
    String[] xx = new String[end - start];
    int x = 0;
    for ( int i = start; i < end; i++)
    {
        if ( i % 3 == 0 && i % 5 == 0)
        {
             xx[x] = ""FizzBuzz"";
        }
        if (i % 3 == 0)
        {
            xx[x] = ""Fizz"";
        }
        if ( i % 5 == 0)
        {
             xx[x] = ""Buzz"";
        }
    	
        xx[x] = String.valueOf(i);
    }
    return xx;
        
}
"
e3b86079f7ac8a0fdbae0163b4ae2b0cc2452907,"public boolean twoTwo(int[] nums)
{
    for(int i=0;i+1<nums.length;i++)
    {
        if(nums[i]==2&&nums[i+1]==2)
        {
            return true;
        }
    }
    return false;
}
"
1089e13fd0c03abe8bf05dd4f58e72ec0d6da36a,"public int sum67(int[] nums)
{
    int sum = 0;
	boolean sixMode = false;
	for(int i = 0; i < nums.length; i++)
	{
		if(sixMode)
		{
			if(nums[i] == 7)
				sixMode = false;
		}
		else if(nums[i] == 6)
			sixMode = true;
		else
			sum += nums[i];
	}
	return sum;
}
"
79babe6fe3ab96c29df5a4e8e0dcd448b7630523,"public boolean has77(int[] nums)
{
    boolean ans = false; 
    for (int i = 1 ; i<nums.length ; i++)
    {
        if(i==1)
        {
            if(nums[i]==7)
            {
                if (nums[i+1]==7 ||nums[i+2]==7)
                {
                    ans = true; 
                }
            }
        }
        
        if(i>2)
        {
            if(nums[i]==7)
            {
                if(nums[i-1]==7 || nums[i-2]==7)
                {
                    ans = true; 
                }
            }
        }
    }
    return ans; 
}
"
48d080c1f6711fa6a4af5ce7579524756c7f0c34,"public int[] shiftLeft(int[] nums)
{
    if(nums.length >= 2)
	{
		int temp = nums[0];
		for(int i = 0; i < nums.length - 1; i++)
			nums[i] = nums[i+1];
		nums[nums.length-1] = temp;
	}
	return nums;
}
"
e83f8a27c4629867efdeba1df6ad71bbdbbfb10d,"public int luckySum(int a, int b, int c)
{
    if(a!=13)
    {
        a=0;
    }
    if(b!=13)
    {
        b=0;
    }
    if(c!=13)
    {
        c=0;
    }
    return a+b+c;
}"
cb624195c6c7bb669b65816953f9c137d82313eb,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    int fun = 20;
    
    if (sum > 19 && sum < 10) {
     	fun = a + b;   
    }
    
    else if (sum < 20 && sum > 9) {
     	fun = 20;   
    }
    
    return fun;
}
"
e3dac9cb96143c7c13f2619fb65a75a6f9a31e4a,"public String mixString(String a, String b)
{
  	String newString = """";
    String cutString = """";
    int alength = a.length();
    int blength = b.length();
    
    if (alength < blength)
    {
        
        cutString = b.substring(alength);
        
        for (int i = 0; i < alength; i++)
        {
            newString = newString + a.charAt(i) + b.charAt(i);
                 
        }
        
        newString += cutString;
          
        
    }
    else if (blength < alength)
    {
        
        cutString = a.substring(blength);
        
        for (int i = 0; i < blength; i++)
        {
            newString = newString + a.charAt(i) + b.charAt(i);
                 
        }
        
        newString += cutString;
            
            
        
    }
    else
    {
        
        for (int i = 0; i < blength; i++)
        {
            newString = newString + a.charAt(i) + b.charAt(i);
                 
        }
        
             
    }
    
    
    
    
    
    
    
    
    
    return newString;
    
    
}
"
d12e8b50e64d810238159eaddc2e45bd3607dee1,"public String repeatEnd(String str, int n)
{
    String fin = """";
    for (int i = 0; i < n; i++)
    {
        fin = fin + str.substring(str.length() - n);
    }
    return fin;
}
"
e488c354be62310f430c8bfb3021a70df988283b,"public String mixString(String a, String b)
{
    int aLen = a.length();
	int bLen = b.length();
	int i = 0;
	StringBuilder stbuild = new StringBuilder(aLen+bLen);
	for(; i < aLen && i < bLen; i++)
	{
		stbuild.append(a.charAt(i));
		stbuild.append(b.charAt(i));
	}
	// only 1 for loop will actually run
	for(; i < aLen; i++)
		stbuild.append(a.charAt(i));
	for(; i < bLen; i++)
		stbuild.append(b.charAt(i));
	return stbuild.toString();
}
"
7fb95fcbb1966f0aef34564b76b604e96949f409,"public String mixString(String a, String b)
{
    String newString;
    if (a >= b)
    {
        for (int x = 0; x < b.length(); x++)
        {
            newString = newString + a.charAt(x) + b.charAt(x);
        }
        newString = newString + a.substring(b.length(), a.length());
    }
    else
    {
        for (int x = 0; x < a.length(); x++)
        {
            newString = newString + a.charAt(x) + b.charAt(x);
        }
        newString = newString + b.substring(a.length(), b.length());
    }
    return newString
}
"
6a4b7f9298a793fdb179e8db7f59699092e3325c,"public int noTeenSum(int a, int b, int c)
{
	int s = fixTeen(a)+fixTeen(b)+fixTeen(c);
}

public int fixTeen(int n)
{
    if ((n>=13 && n<=14) || (n>=17 && n<=19))
    {
        n=0;
    }
    return n;
}
"
8a0e6921d90f277a49a3717341fba0a5c10d569a,"public int[] frontPiece(int[] nums)
{
    int[] twoNums;
    if (nums.length >= 2)
    {	twoNums.add(nums[0]);
        twoNums.add(nums[1]);}
    else if (nums.length == 1)
    {
        twoNums.add(nums[0]);}
    return twoNums;
}
"
fba5c222ff3a5bd4aea8fc4484a151d45aa58d2c,"public int[] fix45(int[] nums)
{
    int fi = 0;
    for (int fo = 0; fo < nums.length - 1; fo++)
    {
        if (nums[fo] == 4 && nums[fo + 1] == 5)
        {
           for(; !(nums[fi]==5 && (fi==0 || fi > 0 && nums[fi-1] != 4)); fi++);
            nums[fi] = nums[fo+1];
            nums[fo] = 5;
        }
    }
    return nums;
}
"
dba6c271b79d741d024f67f5231ab6a5ca257498,"public int[] zeroMax(int[] nums)
{
    int max;
    for (int i = 0; i < nums.length -1; i+= 1) {
        if (nums[i] == 0) {
            max = 0;
            for ( int j = i+1; j < nums.length; j+=1) {
                if (nums[j] > max && nums[j] %2 ==1) {
                    ma = nums[j];
                }
                if (max !=0 ) {
                    nums[i] = max;
                }
            }
        }
    }
    return nums;
}
"
b1f5bc7c36b6c4ba843724d4c4551e30b160e370,"public boolean twoTwo(int[] nums)
{
    boolean hi = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i + 1] == 2)
        {
            hi = true;
        }
        else if (nums[i] != 2 && nums[i + 1] == 2)
        {
            hi = false;
        }
    }
    return hi;
}
"
b0de87b4e81b39ba1a103570a5c0ea6664ef233b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        int noticket = 0;
    }
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
1e91562371fb38a1577f16b29bb1dff04911648b,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
        if (nums[i] % 2 == 0) count++;
    return count;
}
"
91c420fc474ab8277524b2e9bad8d3b89925c125,"public int caughtSpeeding(int speed, boolean isBirthday)
{
        
    if (isBirthday)
    {
        speed = speed - 5;
        
    }
    
    if (speed < 60)
    {
        return 0;
    }
    
    else if (60<speed< 80)
    {
        return 1;
        
    }
    
    else if (speed > 81);
    {
        return 2;
        
    }
    -
    
    
    
        
   

"
fccb0d938d5bb9f7511effd043950f44e852f568,"public boolean bobThere(String str)
{
 int length = str.length() - 2;
	for(int i = 0; i < length; i++)
	{
		if(str.charAt(i) == 'b' && str.charAt(i+2) == 'b')
			return true;
	}
	return false;   
}
"
0877c9e33f3bfff0d34076a9b02fd4bd8a30f4b8,"public String atFirst(String str)
{
    int len = str.length();
	if(len >= 2)
		return str.substring(0, 2);
	else if(len == 1)
		return (str.charAt(0)+""@"");
	else
		return ""@@"";
}
"
a2360600b70642aa88ab28814557e53ea027558a,"public boolean canBalance(int[] nums)
{
    int leftSide = 0;
	int rightSide = nums[nums.length-1];
	for (int i = 0; i < nums.length - 1; i++)
    {
		leftSide += nums[i];
    }
	for (int i = nums.length - 2; i > 0; i--)
	{
		if (leftSide == rightSide)
        {
			return true;
        }
        leftSide -= nums[i];
		rightSide += nums[i];
	}
	return (leftSide == rightSide);
}
"
4a19f31765c862528431593b7713f914b3e59f4e,"public int[] seriesUp(int n)
{
    int[] answer = new int[n*(n+1)/2];
	int num = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int x = 1; x <= i; x++, num++)
			answer[num] = x;
	}
	return answer;
}
"
6a55fa82f9b723595d40327280cde62a84266772,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
        return nums[0];
    }
    else
    {
        int[] nums2 = [2];
        nums2[0] = nums[0];
        nums2[1] = nums[1];
        return nums2[];
    }
}
"
e9684c37300ad2ff0907d6d517e96656ca70ab9b,"public boolean isEverywhere(int[] nums, int val)
{
   for(int i = 0; i < nums.length - 1; i++) {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
                
return true; 
}
"
0c855fa9d39ee011d42382586bae7e71c705acbe,"public class FizzArray {


public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}"
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
"
d037106e60edb7a4d10961c61d5c761b19588c75,"public boolean squirrelPlay(int temp, boolean isSummer)
{
	if (temp >= 60 && temp <= 90)
    {
        return true;
    }
    if (temp >= 60 && temp <=100)
        if (isSummer = true)
        {
            return true;
        }
    else
    {
        return false;
    }
    return false;
}
"
3d4c1103cc1b9f1262e0e2e77865c91089068160,"public boolean canBalance(int[] nums)
{
    int sum1 = 0;
    for (int = 0; i < nums.length / 2; i++)
    {
        sum1 = sum1 + nums[i];
    }
    int sum2 = 0;
    for (int j = nums.length / 2; j < nums.length; j++)
    {
        sum2 = sum2 + nums[j]
    }
	return sum1 = sum2;
}"
2adf41c1ca1c3428c8c1778df7e31e1495d40e2a,"public String plusOut(String str, String word)
{    
    int index1 = 0;
    int index2 = 0;
    int index3 = 0;
    int index4 = 0;
    
    int length = word.length(); 
    for (int i = 0; i < 4; i++)
    {
        index1 = str.indexOf(word, i); 
        String orgin = str.substring(0, index1); 
        
        for (int j = 0; j < index1; j++)
        {
            String plus;
            plus = plus.concat(""+""); 
        }
        str.replaceFirst(orgin, string); 
        
        
    }
    return str;
}
"
c0f5b70b603edfb55cea6f3a939df372d0d07201,"public int makeChocolate(int small, int big, int goal)
{
    if (goal >= 5 && (goal / 5) >= big && (goal / 5 )
        - small > 0)
        return goal - big * 5; 
    else if (goal / 5 < big ) 
        return goal % 5;
    else 
        return -1;
}
"
0dafe7c392194737e509d5114acb3ac7ff161ec1,"public boolean evenlySpaced(int a, int b, int c)
{
    if (math.abs(a-b) == math.abs(c-b) || math.abs(b-c) == math.abs(a-c))
    {
     	return true;   
    }
    else
    {
     	return false;   
    }
}
"
9cc453d49c23522a180d9c34ec8748252ea6f3c2,"public boolean bobThere(String str)
{
 
	int len = str.length() - 2;
	for(int i = 0; i < len; i++)
	{
		if(str.charAt(i) == 'b' && str.charAt(i+2) == 'b')
			return true;
	}
	return false;
}
"
ccd2bf2a919c94599e57e4e4ed5b9e3e8a61eb4b,"public boolean canBalance(int[] nums)
{
    int merlinL = 0;
    int merlinR = 0;
    
    for (int i = 0; i<nums.length; i++)
    {
         merlinR = merlinR + nums[i]; 
    }
    
    for (int i = 0; i<nums.length; i++)
    {
        merlinL = merlinL + nums[i];
        merlinR = merlinR - nums[i];
    }
    
    if (merlinR == merlinL)
    {
        return true;
    }
    
    return false;
}
"
68820918591748d0f29a9bd4402c58bda129bf92,"public int[] tenRun(int[] nums)
{
    int length = nums.length;
    int currentNumber = 0;
    int number = 1;
    int counter = 0;
    for (int i = 0; i < length; i++)
    {
        currentNumber = nums[i];
     	number = currentNumber % 10;   
        if (number == 0)
        {
            counter = i;
            while (counter < length && nums[counter] % 10 != 0)
            {
                nums[counter] = nums[i];
                counter++;
                i++;
            }
        }
    }
    return nums;
}
"
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
"
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
95db80d206a39185b23dca2957512dcc44d5a3a1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i +=1) {
        if (nums[i] % 2 == 0) {
            count +=1;
        }
    }
    return count;
}
"
d913ccc855b91ab41a6aea04dded6729d5896140,"public String zipZap(String str)
{
    int len = str.length();
	int lim = len - 2;
	int i = 0;
	char ch;
	StringBuilder stbuild = new StringBuilder(len);
	while(i < len)
	{
		ch = str.charAt(i);
		if(ch == 'z' && i < lim && str.charAt(i+2) == 'p')
		{
			stbuild.append(""zp"");
			i += 3;
		}
		else
		{
			stbuild.append(ch);
			i++;
		}
	}
	return stbuild.toString();

    
}
"
4b2ed15f573946ef5711184b5368d289d654884f,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
    return 0;
    }
    else if ( a <= 21 && a > b || a <= 21 && b > 21 )
        return a;
    else if ( b <= 21 && a < b || b <= 21 && a> 21)
        return b;

}
"
513d98a92088e802c81e60b8095b62fc18b9794d,"public boolean xyBalance(String str)
{	
    int x = str.length();
    int i = 1;
    boolean y = true;
    if (!str.contains(""x""))
    {
        return true;
    }
    while (str.length() - i > 0)
    {
        if(str.substring(str.length()-i).equals(""y""))
        {
            return true;
        }
        if(str.substring(str.length()-i).equals(""x""))
        {
            return false;
        }
        i++;
    }
    
}
"
68b46fb9e4b1804cfe6554ace0469de769cf6c87,"public int centeredAverage(int[] nums)
{
    int max = nums[nums.length - 1];
    int min = nums[0];
    int minLoc = 0;
    int maxLoc = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > max)
        {
            max = nums[i];
            maxLoc = i;
        }
        
        else if (nums[i] < min)
        {
            min = nums[i];
            minLoc = i;
        }
    }
    
    int sum = 0;
    int ct = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i != minLoc && i != maxLoc)
        {
            sum += nums[i];
            ct++;
        }
    }
    return sum/ct;
}"
07b51104eb055f69feff89d6131c468df36ff37a,"public int noTeenSum(int a, int b, int c)
{
	if(19 <= a >= 13)
    {
        if(a == 15)
       		return 15;
        else if(a == 16)
            return 16;
        else
            return 0;
    }
    if(19 <= b >= 13)
    {
        if(b == 15)
       		return 15;
        else if(b == 16)
            return 16;
        else
            return 0;
    }
  	if(19 <= c >= 13)
    {
        if(c == 15)
       		return 15;
        else if(c == 16)
            return 16;
        else
            return 0;
}
    return(a + b + c);
}

public int fixTeen(int n)
{
    
}
"
eb40012d4b37cf5da376cf00035ed5e704fcbffc,"public int[] tenRun(int[] nums)
{
    for (int i = -1; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            i++
        }
        else
        {
            nums[i] = 10;
        }
    }
    return nums;
}"
c559438f06240059fea5a78e3e17776de821361c,"public boolean xyzThere(String str)
{
    if (str.indexOf(""xyz"") != -1)
    {
     	if (str.indexOf("".xyz"") + 1 == str.indexOf(""xyz""))
        {
         	return true;   
        }
    }
            
    return false;
}
"
2a0f687acdeea9020ea4290975c99db3e6204800,"public int[] zeroMax(int[] nums)
{
    int greatest = 0;
    int[] newArray = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            for (int j = i; j < nums.length - 1; j++)
            {
                if (nums[j] % 2 != 0 && nums[j] != 0)
                {
                    greatest = nums[j];
                }
            }
            if (greatest != 0)
            {
                newArray[i] = greatest;
            }
        }
        else
        {
            newArray[i] = nums[i]
        }
    }
    return nums;
}
"
3e3389ec528952622ce213e5fad90d72a84ac255,"public int[] tenRun(int[] nums)
{
    int num = nums[0];
    int[] newAry = new int[nums.length];
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            num = nums[i];
        }
        nums[i] = num;
    }
    return newAry;
}
"
f2a32ea8d49f1add9a92a1275c80dfffc25e06c5,"public boolean xyBalance(String str)
{
    if (str.indexOf('x') == -1 || str.indexOf('y') == -1)
    {
        return true;
    }
    
    else if (str.lastIndexOf('x') < str.lastIndexOf('y'))
    {
        return true;
    }
    
    else
    {
        return false;
    }
}"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}"
4bd06af4b1b0033758ba80530cb458e9a1c23fc9,"public String repeatEnd(String str, int n)
{
    StringBuilder stbuild = new StringBuilder(n*n);
	String last = str.substring(str.length()-n);
	for(int i = 0; i < n; i++)
		stbuild.append(last);
	return stbuild.toString();
}
"
729a524469de0f47fa8e6f4a51f5f660111bd594,"public int blackjack(int a, int b)
{
    if ( a > 21 && b > 21)
        return 0;
    else if ( a > 21)
        return b;
    else if ( b > 21)
        return a;
    else if ((21 - a) > (21 - b))
        return b;
    else
        return a;
}
"
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}"
3afcfb5b95bbb4959ca6608a9210a1470ece3f60,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (cigars >= 40 && cigars <= 60 && false)
    {
        return true;
    }
    
    
    
    return false;
}
"
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
"
1bbdeb7e5d553646cab84c78a6765dc86161e27a,"public int countEvens(int[] nums)
{
    for(int i: nums)
    {
        i = i%2;
        if(i == 0)
        {
            int[] newnums.add(i);
        }
    }
}
"
3b4e28ffa3eca2a4b13e88108cd12ed7057e6002,"public boolean bobThere(String str)
{
    int b = str.indexOf(""b"");
    int b2 = str.lastIndexOf(""b"");
    if (b >= b2)
    {
        String ch = str.substring(b + 2, b + 3);
        if (ch.equals(""b""))
    	{
        	return true;
    	}
    	else
    	{
        	return false;
    	}
    }
    else if (b < b2 && b2 > 1)
    {
   		String ch2 = str.substring(b2 - 2, b2 - 1);
    	if (ch2.equals(""b""))
    	{
        	return true;
    	}	
    	else
    	{
        	return false;
    	}
    }
    else
    {
        return false;
    }
}
"
a02eb75c4e00dfd8fa09a7d3de1220f22f7a8f27,"public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        return 0;
    }
    if (n == 15)
    {
        return 15;
    }
    if (n == 16)
        {
            return 16;
        }
}

"
c4a583c4ed7cf892050a5a8ff7134ab7df43284a,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffone = b - a;
    int difftwo = c - b;
    if (diffone = difftwo) {
        return true;
    }
    else {
        return false;
    }
    
}
"
8c70ea617b0179ff4735ed6b3ff90cbbbfb8f6e2,"public int[] frontPiece(int[] nums)
{
    int[] newArray;
    if (nums.length < 2)
    {
        if (nums.length != 0)
        {
            newArray = new int[nums.length - 1];
        	newArray[0] = nums[0];   
        }
    }
    else
    {
        newArray = new int[2];
        newArray[0] = nums[0];
        newArray[1] = nums[1];
    }
    return newArray;
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
f585dde1b41ef5223ee3e963c9a2733da3c1f65d,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int x = nums.length - 1; x > 0; x--)
    {
        if (nums[x] % 2 == 1)
        {
            largestOdd = nums[x];
        }
        
        if (nums[x] == 0)
        {
            nums[x] = largestOdd;
        }
    }
    return nums;
            
}
"
092a37234cccc894d13af9756eed95198aa41a1a,"ublic boolean isEverywhere(int[] nums, int val) {
	boolean result = true;
	for (int i = 0; i <=nums.length-2;i++)
	{
		if ( nums[i] != val && nums[i+1] != val)
			result = false;
	}
  	return result;
}
"
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
"
650e3d8b4a6ef2e38282f0de6bd49780896c91c2,"public int countEvens(int[] nums)
{
    int even = 0;
    for (int x = 0; x < nums.length; x++)
    {
        if  (nums[x] % 2 != 1)
        {
            even = even + 1;
        }
    }
    return even;
}
"
34460edd66462afc42121656d6bae494e2503c82,"public boolean in1To10(int n, boolean outsideMode)
{
    if (n >= 1 && n<=10 && !outsideMode) {
        return true;
    } else if ((n > 10 || n < 1) && outsideMode) {
        return true;
    } else {
        return false;
    }
    
}
"
88915e33e1086b1285747b9f46002089f67948ea,"public boolean twoTwo(int[] nums)
{
    boolean x = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] == 2)
            {
                x = true;
            }
            else
            {
                x = false;
            }
        }
    }
    return x;
}
"
f30217e0a8b3693a1cc6887f6715977f5cc51c00,"public int[] fix45(int[] nums)
{
	for(int i = 5; i < nums.length - 1; i++)
	{
		if(nums[i] == 3 && nums[i+1] != 4)
		{
			for(int j = 1; nums[j] != 4; j++);
			nums[j] = nums[i+1];
			nums[i+1] = 4;
		}
	}
	return nums;
}
}
"
e8e4795611f78671815a8a76d80fb8dbed7fffa8,"public String repeatEnd(String str, int n)
{
 	String cont = """";
    String fin = """";
     for (int i = str.length(); i >= n; i--)
     {
     String s = str.charAt(i).toString();
         cont.concat(s);   
     }
    
    for (int i = 0; i <= n; n++)
    {
    fin.concat(cont);
    }
    
    return fin;
}"
2e24d7549990ee84b78b5ae21f0d94af990870fb,"public int loneSum(int a, int b, int c)
{
    if (a == b){
    	return(cc);
    }else{
    	if (a == c){
        	return (b);
        }else{
        	if (b == c){
            	return(a);
            }else{
            	return(a + b + c);
                
            }
        }
    }
}
"
18ed7ea46ff98f118581e78ee67a8e2e24796f3f,"public int[] tenRun(int[] nums)
{
    int target = -1000000;
    for(int i = 0; i < nums.length; i++)
    {
     	if ((nums[i] % 10) == 0)
        {
            target = nums[i];
        }
        else 
        {
            if (target != -1000000)
            {
                nums[i] = target;
            }
        }
    }
    return nums;
}
"
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
"
96e324964b5d2a7147eb7079abcd42d9fc7818b8,"public int sum67(int[] nums)
{
    int sum; 
    int i; 
    if (nums.length < 1);
    {
        return 0;
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            while (nums[i+1] == 7)
            {
                i++;
            }
        }
        else 
            sum += nums[1];
    }
    return sum;
}
"
d8a3b90c0edb484637c7c45554da8a7afbe7d245,"public boolean canBalance(int[] nums)
{
    int left = 0;
	int right;
	for(int i = 0; i < nums.length - 1; i++)
		left += nums[i];
	right = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(left == right)
			return true;
		left -= nums[i];
		right += nums[i];
	}
	return (left == right);
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
0c056c7e8ab6d96355504d675bcd5d71af441a61,"public String atFirst(String str)
{
    return str.substring(1);
}
"
32a88259dc225b680cacb119048b64e000580b5a,"public int[] fix45(int[] nums)
{
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i + 1] != 5)
		{
			for(int j = 0; !(nums[j] == 5 && (j == 0 || j > 0 && 				nums[j-1] != 4)); j++)
            {
				nums[j] = nums[i + 1];
				nums[i + 1] = 5;
            }
		}
	}
	return nums;
}"
0cbcdcccb97a84929ef84adcbae98515edde8dfa,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    
   int d = num %10;
    if (d >= 5)
        return num + 10 -d;
    return num -d;
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
fb2fb18f1737131154ced0065c67978b9b5f546f,"public String plusOut(String str, String word)
{
    String nw = """";
    int lw = word.length();
    int ls = str.length();
    int lim = ls - lw;
    for (int i = 0; i <= lim; i++)
    {
        int lwi = i + lw;
        String o = str.substring(i, lwi);
        String re = """";
        if (word.equals(o))
        {
            for (int c = 0; c < i; c++)
            {
            	re = re + ""+"";
            }
            re = re + word;
            int start = i + lw;
            for (int b = start; b < ls; b++)
            {
                re = re + ""+"";
                nw = nw + re;
            }
            return re;
        }
    }
    return nw;
}
"
37486ac222510449596dd15a4b56d78f52c79400,"public String mixString(String a, String b)

    
    int jaan = 0;
	String finish = """";
    
    
    


		if(a.length()<=b.length()) jaan = a.length();  
		if(a.length()>=b.length()) jaan = b.length();

    
    
    for (int i=0; i<jaan; i++)
    {
      finish += a.substring(i, i+1) + b.substring(i, i+1);
    }
    
    if(a.length() < b.length()) finish += b.substring(a.length(), b.length());
    

if(a.length() > b.length()) finish += a.substring(b.length(), a.length());
    
    return finish; 
}
"
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
"
12626584cf03ea4745d784306eda461c10cf8ebd,"public String atFirst(String str)
{
    if str.length
    return str.substring(0,2);
}
"
f3c62e06ba70e3c0200db026cf9b2b061531f2e7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i ++)
    {
    	if (i+1 < nums.length && nums[i] == nums[i+1])
        {
        	count = count +1;
        }
    }
    return count;
}
"
617e080aa52b2079a26ca214e0adcbebaeec5270,"public int makeChocolate(int small, int big, int goal)
{
   int rem = goal % 5;
   if (small + (5 * big) < goal)
   {
       return -1;
   }
  else if (rem <= small + (5 * big) >= goal)
  {
      return -1;
  }
  else
  {
      return small * rem;
  }
}
"
7b0bb5bceefb953cbff36270e836c6c2b99071d8,"public int[] frontPiece(int[] nums)
{
    int[] nums2 = new int[nums.length];
    for (int i = 0; i < nums.length; i++)
    {
     	nums2[i] = nums[i];   
    }
    return nums2;
}
"
0a4d7aee449450431db0efcda5856b22d973b605,"public String getSandwich(String str)
{
    if(str.length() > 10 &&
       str.substring(0, 5) == ""bread"" &&
       str.substring(str.length() - 6, str.length() - 1) == ""bread"")
    {
        return str.substring(5, str.length() - 6);
    }
    else {
        return str.substring(5, str.length() - 6);
    }
}
"
288481fa686efc521e9d80fb9691a73733b79fb5,"public int sum13(int[] nums)
{
    int sum = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 13)
			i++;
		else
			sum += nums[i];
	}
	return sum;
}
"
635206ea44f77ab4002f02178cca3563ab65519b,"public int[] shiftLeft(int[] nums)
{
    int[] array = new int[nums];
    
    for (int i = 0; i < nums.length; i++)
    {
        array[i] = nums[i + 1];
        if (i == nums.length - 1)
        {
            array[i] = nums[0];
        }
    }
    
    return array;
}
"
34ad16a72b0a75568a00e876dfb72953f291c9ab,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            clumps++;
        }
    }
    return clumps;
}
"
a7692e949449c2bd4b6a03b8e3cc1608b6610d83,"public int loneSum(int a, int b, int c)
{
    if(a == b)
    {
        if(a == c)
            return 0;
    	return c;
    }
    if(a == c)
        return b;
    if( b == c)
        return a;
    return (a+b+c);
    
}
"
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
"
bcfe297cbddd8378cc2a6600f052f40c482bc1f4,"public int caughtSpeeding(int speed, boolean isBirthday)
{	
    if (isBirthday == true)
    {
        speed = speed + 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
     if (speed > 60 && speed <= 80)
    {
        int ticket = 1;
    }
     if (speed > 80)
    {
        int ticket = 2;
    } 
    return  
}"
87b2b1811ad58d7a1fff515864427654134ed8fa,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            if (j == 0)
            {
            	while (nums[j] != 5)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
            
            else
            {
                while (nums[j] != 5 && nums[j - 1] != 4 && j < nums.length)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
        }
    }
    return nums;
}"
6a4ae6473f6985821bb7fa611600b6f86a3b1e44,"public int findOdd(int[] nums, int index)
{
    int biggestOdd = 1;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd = nums[j];
    return biggestOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
09a8c33c60aa11c021e8b84d90d8a62d6b24e858,"public boolean canBalance(int[] nums)
{
    int total = 0;
    int length = nums.length;
    for ( int i = 0; i < length; i++ )
    {
        total += nums[i];
    }
    
    if ( total % 2 == 1 )
    {
        return false;
    }
    else
    {
        if ( total == 0 && length == 1 )
        {
            return false;
        }
        else
        {
        	int smallTotal = 0;
        	int j = 0;
        	while ( smallTotal < total / 2 )
        	{
            	smallTotal += nums[j];
            	j++;
        	}
        	return ( smallTotal == ( total / 2 ) );
        }
    }
}
"
6f412fb97dacfeab711397d737336f16f8b3a81c,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder();
    for (int i = 0; i < n; i++)
    {
    	sb.append(str.charAt(str.length()-1));
    }
    return sb.toString();
}
"
a10183df82de0766c1e7022d3c37fc0ae2e9dbed,"public int[] shiftLeft(int[] nums)
{
    int[] array = new int[nums.length];
    int index = 1;
    for(int i=0;i<nums.length;i++) {
    	array[i] = nums[(index++)%nums.length];
    }
    return array;
}
"
907136eba01f60c88adffb16041850d5038ac56a,"public int countClumps(int[] nums)
{
	int count = 0;
    for(int i = 0; i < nums.length - 1; i++)
    {
        if(nums[i] == nums[i + 1])
        {
         	count = count + 1;   
        }
    }
   	return count;     
}
"
b7ee15b4297146c0e72ff4262598fa2473656f6d,"public String zipZap(String str)
{
    int stringLength = str.length();
    for (int i = 0; i < stringLength; i++)
    {
        int findZ = str.indexOf(""z"", i);
    	int findP = str.indexOf(""p"", i);
        if (findP - findZ == 3)
        {
			String zStart = str.substring(i, findZ);
            String zBack = str.substring(findZ + 2);
            str = zStart + zBack;
        }
    }
    return newString;
}
"
bfabd7f60c9ae99dd394933051317b10e684ed16,"public int countEvens(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            return nums[i];
        }
    }
}
"
ddc24fe7dc462095be9ccbdafb0c7fb6e2903d24,"public boolean endOther(String a, String b)
{
    String c = a.toLowerCase();
    String d = b.toLowerCase();
    if (d.endsWith(c))
    {
        return true;
    }
    else if (c.endsWith(d))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
ca863c47543ac1f35d0bc3c729489508906d8ec5,"public boolean xyBalance(String str)
{
    for (int i=str.length(); i>0, i--)
    {
        if (str.substring(i-3, i-2).equals(""x"") && (str.substring(i-2, 
                   i-1).equals(""y""))
            {
                return true;
             }
                                                    
    }
            return false;
    
}
"
cb333726ea1f0bf7ffea385712938b140dfb85d4,"public int countCode(String str)
{
    int indexOfCo = str.indexOf(""co"");
    int j = 0;
    while (indexOfCo != -1)
    {
        String subStr = str.substring(indexOfCo + 2, indexOfCo + 3);
        if (subStr == ""e"")
        {
        	j++;
        	str = str.substring(indexOfCo + 1);
        	indexOfCo = str.indexOf(""co"");
        }
        else
        {
            str = str.substring(indexOfCo + 1);
        	indexOfCo = str.indexOf(""co"");   
        }
    }
    return j;
}
"
e73f15cebf791aa932347617662e3a6641135a35,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
    //return nums;
    if (nums.length >= 2)
    {
        
   		int start = nums[0];
    	for (int i = 0; i < nums.length - 1; i++)
    	{
     	//int j = 1;
        //nums[i] = nums[j];
        	nums[i] = nums[i + 1];
    	}
    
        	//nums[nums.length - 1] = start;
        /*if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }*/
    
              	
    }
    
    return nums;   
}
"
4e651e8df90f087942b32424b07d4257df1ddc47,"public String atFirst(String str)
{
    return '@';
}
"
0c3349f03125dceaad14dfc92ff2ac944c7a682b,"public int sum3(int[] nums)
{
    int a = nums.get(0) + nums.get(1) + nums.get(2);
    return a;
}
"
60713369599a785604dd684075e75e7ad783eb9d,"public int countClumps(int[] nums)
{
    int b = 0;
	for (int i = 0; i < nums.length - 1; i++) 
    {
		if (nums[i] == nums[i+1]) {
		b++;
	}
	for (int j = i + 2; j < nums.length; j++) 
    {
		if (nums[j] == nums[i]) 
        {
			i = j - 1;
		}
		else 
        {
			break;
		}
	}
	}
return b;
}
"
f9e2bb185cb8d97186c4ae77b77308bd4ab5a9c7,"public boolean canBalance(int[] nums)
{
      int first = 0;
    int second = 0;
      
    for(int i = 0; i < nums.length; i++)
        second += nums[i];
              
    for(int i = 0; i <= nums.length - 2; i++) {
        first += nums[i];
        second -= nums[i];
                            
        if(first == second)
            return true;
    }
                                          
return false;
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
de7793b415cacd52a6aea059f112e95ea1439d11,"public int[] tenRun(int[] nums)
{  
    for (int i = 0; i < nums.length; i++)
    {
        int number = nums[i];
        if (nums[i] % 10 == 0)
        {
         	number = nums[i];   
        }
        else
        {
            nums[i] = number; 
        }
    }
    return nums;
}
"
afcf79943b6d7e8c8c8a6a62e621d9118401de72,"public String[] fizzBuzz(int start, int end)
{
    String[] series = new String[end - start];
    
    for (int i = start; i < end; i++)
    {
        if (i % 3 == 0)
        {
            series[i - start] = ""Fizz"";

        }
        else if (i % 5 == 0)
        {
            series[i - start] = ""Buzz"";
        }
        else if (i % 15 == 0)
        {
            series[i - start] = ""FizzBuzz"";
        }           
    }
    return series;
}
"
da35db888e070aad3d1910413f0731e4b429579c,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (20 - n < 7  && 20 - n < 1)
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
d6ed768540e3fc1d31119da0f41dd7c564564d4d,"public String without2(String str) 
{
    if (str.subString(0,1) == str.subString(-1,-2))
    {
    	newstring = str.subString(2);
        return newstring;
    }
    else
    {
    	return str;
    }
}
"
703755b18e622f98535aa2fcbd3077187f71293b,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] % 2 == 0) count++;
    }
    return count;
}
"
030fccf2f47fa47b1f2627cf43a489ae647b9717,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
"
d06239e2bbc534b02b0784a64c1bb3a425b49c90,"public String repeatEnd(String str, int n)
{
    String newString;
    int length = str.length() - n;
    newString = str.substring(0, length);
    for (int x = 0; x < n; x++)
    {
        newString = newString + newString;
    }
    return newString
}
"
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
"
5a541bfa3c25751105bfc205494e62135fea40e0,"public boolean twoTwo(int[] nums)
{
    boolean answer = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2 && nums[i + 1] == 2)
        {
            answer = true;
        }
    }
    return answer;
}
"
cb699060243d04cf0987be0f600187b3b3162648,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
        return true;
    else if(Math.abs(a+b) == 6)
        return true;
    else if(Math.abs(a-b) == 6)
        return true;
    else 
        return false;
    
}
"
180db57c0e920e7b7884101ceafd40ff531ed459,"public int[] withoutTen(int[] nums)
{
    int sum = 0;
    for (int i = 0;i<nums.length;i++)
    {
        if (nums[i] == 10)
        {
            nums[i] = 0;
        }
    }
    return nums;
}
"
dcff1be01293f7283af7552132bec80e125070fd,"public boolean love6(int a, int b)
{
 	int s = a + b;
    int d = Math.abs(a - b);
    if ( a == 6 || b == 6)
        return true;
    else if (s == 6 || d == 6)
        return true;
    else 
        return false
}
"
027eea78d9f04aebc184914bab624858672b1205,"public boolean xyzThere(String str)
{
    int a = str.indexOf( "".xyz"");
    
    int b = str.indexOf( ""xyz"" );
    
    if (a == -1 && b != -1)
    {
        return true;
    }
    if (a != -1)
    {
        if (b != -1)
        {
            return true;
        }
    }
    else
    {
        return false;
    }
  
}
"
e942e12076f346469173015ca48e26aaa28799ac,"public int sum67(int[] nums)
{
   int y = 0;
    int length = nums.length;
   int che = 0;
    int s = 0;
       for(int i = 0; i < length; i++)
       {
           if(nums[i] == 6) 
               che = 1; 
           if(che==1) 
           {
               if(nums[i] == 7)
                   che = 0;
           }
           else 
               s = s + nums[i];
       }
       return s;
    
}
"
7c37c5e157878ebf4021eaa57361fac36f4df6ad,"public String[] fizzBuzz(int start, int end) {
    String[] arr = new String[end - start];
    
    for(int i = start; i < end; i++) {
        if(i % 15 == 0) {
            arr[i - start] = ""FizzBuzz"";
        } else if(i % 3 == 0) {
            arr[i - start] = ""Fizz"";
        } else if(i % 5 == 0) {
            arr[i - start] = ""Buzz"";
        } else {
            arr[i - start] = String.valueOf(i);
        }
    }
                                                      
    return arr;
}
© 2019 GitHub, Inc.
"
758b3bffe9fb54ccf0641e9a8da7e34c5471e0f3,"public int centeredAverage(int[] nums)
{
    int max = 0;
    int min = nums[0];
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > max)
        {
            max = nums[i];
        }
        else if (nums[i] < min)
        {
            min = nums[i];
        }
        sum = sum + nums[i];
    }
    return (sum - min - max)/(nums.length - 2);
}
"
3af5e2489a493baeffeae0c1571de3ce2fbd9f0e,"public int loneSum(int a, int b, int c)
{
    if (a==b)
        return b+c;
    else if (b==c)
        return a+b;
    else if (a==c)
        return b+c;
    else
        return a+b+c;
}
"
ede744459fefb7e98c2b4489fff90d286990d187,"public String getSandwich(String str)
{
    int sandwichLength = str.length();
    String firstBread = str.substring(0, 5);
    String lastBread = str.substring(sandwichLength - 5);
    if (firstBread == ""bread"" && lastBread == ""bread"")
    {
        return str.substring(5, sandwichLength - 5);
    }
    else
    {
        return str.substring(sandwichLength);
    }
}
"
fe6f1db71252da2edc7dfe1ed53b97e3e8c7d386,"public int roundSum(int a, int b, int c)
{
    int sum=0;
	sum=sum+round10(a);

	sum=sum+round10(b);

	sum=sum+round10(c);
	return sum;
}

public int round10(int num)
{
    if(num%10 >4)
    {
		return (((num/10)+1)*10);
    }
	else 
    {
        return ((num/10)*10);
    }
}
"
b1abfc06abc394d751eee2612ff6817754f2cc78,"public String zipZap(String str)
{
    char z;
    char p;
    int length = str.length() - 1;
    String string = str.toLowerCase();
    for (int i = 0; i < length-1; i++)
    {
        z = str.charAt(i);
        p = str.charAt(i+2);
    	if (z == 'z' && p == 'p')
        {
            string = (string.substring(0, i+1) + string.substring(i+2, length + 1));
            length = length;
            i = i - 1;
        }
     }
    
     return string;
 }
"
57de305af5c397df593d610c754a2029157ce03a,"public int[] tenRun(int[] nums)
{
    for (int i =0; i <nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int j = i+1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i]; 
            }
        }
    }
    
    return nums; 
    
}
"
63d94094b3bd3e432c48601fe1cde209664933eb,"public int loneSum(int a, int b, int c)
{
	if (a==b || b==c)
    {
        return c;
    }
	else if (a==c)
    {
        return b;
    }
    else 
    {
    	return a + b + c;
    }
}
"
ea8865a98083dd9c0d43761f8f7f128f309b9e14,"public String plusOut(String str, String word)
{
	String newStr = """";
    
    for (int i = 0; i < str.length(); i++)
    {
        if (str.charAt(i) == word.charAt(0))
        {
            if (str.substring(i, i + word.length()).equals(word))
            {
                newStr = newStr + word;
                i = i + word.length();
            }
        }
        else
        {
            // change to a plus
            newStr = newStr + ""+"";
        }
    }
    
    return newStr;
}
"
57943b0a00b2c5b3eb649383c1d2c57d75cfc263,"public String[] fizzBuzz(int start, int end)
{
    String[] fizz = new String[end - start];
    for (int i = start; i < end; i++)
    {
     	if (i % 3 == 0)
           {
               fizz[i] = ""Fizz"";
           }
        else if (i % 5 == 0)
           {
               fizz[i] = ""Buzz"";
           }
        else 
        {
            fizz[i] = Integer.toString(i);
        }
    }
    return fizz;
}
"
49eb57187ce32f7392ba9eb954bfc79921194a03,"public int countCode(String str)
{
    int count = 0;
    int i = 0;
    int length = str.length() - 3;
    while (i < length)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) = ""e"")
        {
            count++;
        }
        else
        {
            i++
        }
    }
    return times;
}
"
de032ebc71a0ce6c1a466019bef0ae20692c9a76,"public boolean canBalance(int[] nums)
{
    int sum1 = 0;
    int sum2 = 0;
    for ( int i = 0; i < nums.length; i++ ) {
        sum1 = sum1 + nums[i];
    }
    int half = sum1 / 2;
    for ( int a = 0; a < nums.length; a++ ) {
        sum2 = sum2 + nums[a];
        if ( sum2 == half ) {
            return true;
        }
    }
    return false;
}
"
a040447a7a4d000d3f8dce6203fbc10a54cdf382,"public int blackjack(int a, int b)
{
    if (a>21)
    {
        a=0;
   		return a;
    }
    if (b>21)
    {
        b=0;
        return b;
    }
    if (a>b)
    {
     return a;   
    }
	else
	{	
    return b;
    }
}
"
5d9dbd5aebb63d10a1fd96b8ed521394e65e9ce5,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 || Math.abs(a-b) ==6)
    {
    	return true;
    }
    else
    {
	  return false;  	}
}
"
cf4ff5dda73a278e4bf2898a9f2b28b9afa0a194,"public boolean has77(int[] nums)
{
    for	(int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == 7 && (nums[i+1] == 7 || nums[i+2] == 7))
        {
            return true;
        }
    }
    if (nums[nums.length - 3] == 7 && (nums[nums.length - 3] == 7 ||
                                      nums[nums.length - 1] == 7))
    {
        return true;
    }
    if (nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7)
    {
        return true;
    }
        return false;
}
"
1caca3687412a22d279ed669232c29f962e4af76,"public int sum67(int[] nums)
{
    int sum = 0;
    int lim = nums.size();
        
    for (int i = 0; i < lim; i++)
    {
        if (nums[i] == 6)
        {
            for (int j = i; i < nums.size(); j++)
            {
                if (nums[j] == 7)
                {
                    i = j;
                }
            }
        }
        
        sum =+ nums[i];
    }
    
    return sum;
}
"
2398178d497778b53486871de372687e020219fc,"public boolean xyBalance(String str)
{
    int len = str.length() - 1;
	char ch;
	for(int i = len; i >= 0; i--)
	{
		ch = str.charAt(i);
		if(ch == 'x')
			return false;
		else if(ch == 'y')
			return true;
	}
	return true;  
}
"
8f4ad5ff5fee1c517ca2ccaa2216ae620b698390,"public boolean love6(int a, int b)
{
    int sum = a+b;
    int difference = abs(a-b);
    
    if ( sum == 6|| difference == 6|| a==6 || b==6)
        return true;
    else 
        return false;
    
}
"
61705bfd5a5b9bf82e4d10be405cc3a01e829d51,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a +b <= 19)
        return 20;
    else
        return a + b;
}
"
716ad14504f86a81409d7359fad59a4c22160530,"public String mixString(String a, String b)
{
    int aLen = a.length();
    int bLen = b.length();
    int mLen = 0;
    String leftOver;
    StringBuilder mixString = new StringBuilder(aLen + bLen);
    if (aLen >= bLen)
    {
        mLen = bLen;
        leftOver = a.substring(mLen);
    }
    else
    {
        mLen = aLen;
        leftOver = b.substring(mLen);
    } 
    for (int i = 0; i < mLen; i++)
    {
        char first = a.charAt(i);
        mixString.append(first);
        char second = b.charAt(i);
        mixString.append(second);
    }
    mixString.append(leftOver);
    return mixString.toString();
    
}
"
ce8f33a8716ba7591c714936098b3c249bc1bf61,"public int[] tenRun(int[] nums)
{
	for (int i = 0; i < nums.length; i++)
    {
        
    }
	return nums;
}
"
0432f5bdce5bdfdcde11d09a4bd884bbb0b2c849,"public boolean endOther(String a, String b)
{
   	String LowerA = a.toLowerCase();
    String LowerB = b.toLowerCase();
    if (LowerA.equals(LowerB))
        return true;
    else
        return false;
}
"
1a9c9e3dcd407c1fc71e8c557acfa5caf8cfd612,"public String[] fizzBuzz(int start, int end)
{
    String x[] = new String[end - start];
    for (int i = 0; i < (end - start); i++)
    {
        x[i] = String.valueOf(start + i);
        if ((start + i) % 15 == 0)
        {
            x[i] = ""FizzBuzz"";
        }
        else if ((start + i) % 3 == 0)
        {
            x[i] = ""Fizz"";
        }
        else if ((start + i) % 5 == 0)
        {
            x[i] = ""Buzz"";
        }
    }
    return x;
}
"
21aba2a9cb412ee8c917a61d12ba3071be70f1b2,"public int roundSum(int a, int b, int c)
{
    this.round10(a);
    this.round10(b);
    this.round10(c);
    int sum = a + b + c;
    return sum;
}

public int round10(int num)
{
    int i = 0;
    if (num >=10) {
        num = num - 10;
        i = i + 10;
        return i;
    }
    
    if (num >= 5) {
        num = i + 10;
    }
    else {
        num = i;
    }
    return num;
}
"
372944027251b586f7cdc180fc986b574988b126,"public boolean bobThere(String str)
{
    return true;
}
"
0ce6c6c5c68f7e7af69c8dae37697da81dbd4313,"public int sortaSum(int a, int b)
{
    int c = a + b;
    if (c => 10) && c =< 19)))
    {
     	return 20;   
    }
    else
    {
        return (a + b);
    }
}
"
4162e663497edb419d8d8376b71ff10e42da951f,"public boolean endOther(String a, String b)
{
    boolean isTrue;
    String lowerA = a.toLowerCase;
    String lowerB = b.toLowerCase;
    if (a.endsWith(b) || b.endsWith(a))
    {
        isTrue = true;
    }
    else
    {
        isTrue = false;
    }
    return isTrue;
}
"
512ea4857067bd5d3ac3e3426f861301ee28c2f3,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
            return false;
        }
    }
    else if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
dead7e5e377079599c11bb673bf7c1248fef60fc,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if ( a == b && b == c)
    {
        sum = a;
    }
    else if (a == b || a == c)
    {
        sum = sum - a;
    }
    else if (b == c)
    {
        sum = sum - b;
    }
    return sum;
}
"
076e9b131687341e58ceb8ffb7772540e4792f73,"public int status; 

public String alarmClock(int day, boolean vacation)
{
    if (day == 0 || day == 6)
    {
        if (vacation == false)
        {
            status = ""10:00"";
        }
        else if (vacation == true)
        {
            status = ""off"";
        }
    }
    else if (day >= 0 && day <=6)
    {
        if (vacation == false)
        {
            status = ""7:00"";
        }
        else if (vacation == true)
        {
            status = ""10:00"";
        }
    }
    return status;
}
"
3e3f92b5255a315bea19b9efbd3c14567e082ae2,"public String atFirst(String str)
{
    if (length(str) == 0)
    {
        return ""@@"";
    }
    if (str.length(str) == 1)
    {
        return str + ""@"";
    }
    else
    {
        return str.substring(0,2);
    }
    
}
"
d7633351c672f26ee19b79bf514fdb0837ec9cb2,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMorning && !isMom)
        return false;
    else
        return true;
}
"
df39e4fc403b7696cbeb27409eb504ef066730ab,"public String repeatEnd(String str, int n)
{
    String end = """";
    for(int i = 0; i < n; i++)
    {
     end = end + str.substring(str.length() - n, str.length();   
    }
            return end;
}
"
3bd541a9a74cfbc86ccd7aff7e6e071a6371cb04,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
"
cdd987fe22a2c2a5848e5fca825333eda6c5ff22,"public String zipZap(String str)
{
    return str.replaceAll(""z.p"",""zp"");
    /**String first = """";
    String out = """";
    String contain = """";
    for (int i = 0; i < str.length() - 3; i ++)
    {
        first = str.substring(0, i);
        contain = str.substring(i, i+4);
        if (contain.charAt(i) == 'z' && contain.charAt(i+3) == 'p')
        {
            
            str = str.replace(newS, re);
        }
    }**/
}
"
5715db987a24354ecf9a0ef339108496d9e6fa1e,"public String without2(String str) 
{
    String string = str;
    if (string.length() <= 1)
    {
    	return (string);
    }
    else if (string.substring(string.length() - 3, string.length()) == string.substring(0, 2))
    {
        String newstring = string.substring(2);
        return newstring;
    }
    else
    {    
    	return (string);
    }
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
8f35b9840d8fd19215f5d95935b971644f1faaef,"public boolean sameEnds(int[] nums, int n)
{
    boolean x = true;
    int[] beg = new int[n];
    int[] end = new int[n];
 	for (int i = 0; i < n; i++) {
        beg[i] = nums[i];
        end[i] = nums[nums.length - 1 - n + i];
    }
    for (int i = 0; i < n; i++) {
        x = x && end[i] == beg[i];
    }
    return x;
}
"
29962c4e1b8f67b762d407d24bf47dcc4c9e6213,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    for (int num = 0; num < 10; i - 10)
    {
        
    }
}
"
034626588c8fd59d0ef57b001289f89ec9976412,"public int[] shiftLeft(int[] nums)
{
    int temp = nums[nums.length-1];
    nums[nums.length-1] = nums[0];
    for(int i = 0; i < nums.length - 2; i++){
        nums[i] = nums[i+1];
    }
}
"
597f4b66e7c76a85285f0fcd7e669b8e9fbd2ca8,"public int sortaSum(int a, int b)
{
    if (10 <= (a + b) && (a + b) <= 19)
    {
        return 20;
    }
}
"
8fea1351d7a7612a3b6163f8064c4f7b3ad1e48d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (!isSummer)
    {
        if (temperature >= 60 && temperature <= 90)
    	{
        	return true;
    	}
        else
        {
            return false;
        }
    }
    else
    {
        
        if (temperature >= 60 && temperature <= 100)
    	{
        	return true;
    	}
        else
        {
            return false;
        }
}
"
6a623e78b320858b018881a4c447f0285bde0276,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            int temp = nums[i];
            while (nums[i+1] % 10 != 0 || i == nums.length)
            {
                nums[i] = temp;
                i++;
            }
        }
    }
    return nums;
}"
c28f1db3b98eccc9bf14bad6af77e537a13c86b0,"public String plusOut(String str, String word)
{
   int yo = str.length();
   int wordL = word.length();
    
   int x = str.indexOf(word);
    
   int i = 0;
    
    StringBuilder stringYo = new StringBuilder(yo);
    
    while (x != -1)
    {
        while (i < x)
        {
            stringYo.append('+');
            i++;
            
        }
        
        stringYo.append(word);
        i = x + wordL;
        x = str.indexOf(word, i);
    }
    
    for(; i < wordL; i++)
        stringYo.append('+');
    
    return stringYo.toString();
    
}
"
34119cc1a8b450201fc9961eb6ebf06a8fba1c46,"public boolean bobThere(String str)
{
    if (str.length() >= 3 && (str.startsWith(""b"") && str.endsWith(""b"")))
        return true;
    else if (str.substring(3) = ""bob"")
        return true;
    else
        return false;
}
"
e444710aa658e2dde4799f8965284cd20bc98f6a,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
        int even = 0;
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
c094a639bd877d2629d169d3f0abb80fed9a4630,"public int loneSum(int a, int b, int c)
{
    if (a==b)
        return c;
    else if (b==c)
        return a;
    else if (a==c)
        return b;
    else
        return a+b+c;
}
"
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
"
f300c3316033d29c0150506e776d9d9a8546affd,"public int[] tenRun(int[] nums)
{
    int current;
    int i = 0;
      
    while(i < nums.length && nums[i] % 10 != 0)
        i++;
                
    if(i >= nums.length)
        return nums;
                          
    current = nums[i]; 
    i++;
                                
    while(i < nums.length) {
        if(nums[i] % 10 == 0)
            current = nums[i];
        else
            nums[i] = current;
        i++;
    }
                                                              
    return nums; 
}
"
7ec4da2283b0aa6839ec4b0d25eda33e0ece9396,"public int[] zeroMax(int[] nums)
{
    int[] returnArray = new int[nums.length];
    for (int j = 0; j < nums.length; j++)
    {
        int potential = 0;
        if (nums[j] == 0)
        {
            potential = largestOdd(nums, j);
            returnArray[j] = potential;
        }
        else
        {
            returnArray[j] = nums[j];
        }
    }
    return returnArray;
}

public int largestOdd(int[] nums, int pos)
{
    int largest = 0;
    for (int i = pos; i < nums.length; i++)
    {
        boolean isOdd = (nums[i] % 2 != 0);
        if ((nums[i] > largest) && isOdd)
        {
            largest = nums[i];
        }
    }
    return largest;
}"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
be50e11f71f5250d2e17d00534694b0f19a3bfa9,"public int[] shiftLeft(int[] nums)
{
    if(nums.length >= 2)
	{
		int newArr = nums[0];
		for(int i = 0; i < nums.length - 1; i++)
			nums[i] = nums[i+1];
		nums[nums.length-1] = newArr;
	}
	return nums;
}
"
d50d492ebb2d39ef30d910d235f290f774635c0f,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    if (a == b && a == c && b == c)
        return 0;
    else
        return a + b + c;
}
"
2795799187d8550acfa68bedd95f5bd8790aa7f7,"public int[] tenRun(int[] nums)
{
    int[] r = new int[nums.length];
    for (int i = 0; i<nums.length; i++)
    {
        r[i]=nums[i];
        if (nums[i]%10 == 0 && nums[i+1]%10 != 0 && i+1 < nums.length)
        {
            r[i+1]=nums[i];
            i++;
        }
    }
    return r;
    
}
"
12941eb615aae98f65aa36224718e48e3383968c,"public int loneSum(int a, int b, int c)
{
    int x = a + b + c;
    if (a == b)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == c)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return a;
        }
    }
    else if (a == c)
    {
        if (b == c)
        {
            return 0;
        }
        else
        {
            return b;
        }
    }
    else
    {
        return x;
    }
}
"
1fc203b28ee9273e31b5b7011d0d941626fbc0e3,"public String zipZap(String str)
{
    String ans = """";
    int i = 0;
    
    while (i < str.length() - 3)
    {
        if (str.substring(i, i + 1).equals(""z"") && str.substring(i + 2, i + 3).equals(""p""))
        {
         	ans = ans + ""zp"";
            i = i + 3;
        }        
        else
        {
            ans = ans + str.charAt(i);
            i++;
        }
    }
    if (ans.length() < str.length())
    {
        if (str.substring(str.length() - 3, str.length() - 2).equals(""z"") && str.substring(str.length() - 1).equals(""p"")
            {
             	ans = ans + ""zp"";   
            }
        else
            {
                ans = ans + str.substring(str.length() - 3);
            }
    }
}
"
188fb5ac06f2761b8b1a76fa08da24948444e3aa,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    int i = 0;
    StringBuilder strbuild = new StringBuilder(aLength+bLength);
    for(; i<aLength && i<bLength; i++)
    {
     	strbuild.append(a.charAt(i));
        strbuild.append(b.charAt(i));
    }
    for (; i<aLength; i++)
    {
     strbuild.append(a.charAt(i));   
    }
    for(; i<bLength; i++)
    {
     strbuild.append(b.charAt(i));   
    }
    return strbuild.toString();
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
6e302cb7c984d1c312fdf91b7e3391564e8fc842,"public int[] frontPiece(int[] nums)
{
    int[] front;
	if(nums.length() >= 2)
	{
		front = new int[2];
		front[0] = nums[0];
		front[1] = nums[1];
	}
	else if(nums.length() == 1)
	{
		front = new int[1];
		front[0] = nums[0];
	}
	else
		front = new int[0];
	return front;
}
"
911ce789b403608f72c0c391e33dbca4300684c0,"public int sum3(int[] nums)
{
    sum = 0;
    sum = sum + nums;
}
"
abeb538510d4e310abd5d6b743856e0200ac1424,"public int[] withoutTen(int[] nums)
{
    int[] answer = new int[nums.length];
    
    for(int i = 0; i < nums.length; i++)
    {
        int count = 0;
        if(nums[i] != 10)
        {
            answer[i] = nums[i];
        }
        else
        {
            continue;
            count = count + 1;
        }
        
    }
    for(int x = 0; x < count; x++)
    {
        answer[answer.length + x] = 0;
        
    }
    return answer;
}
"
5a7964b4154ebf71083bbb13e6aedfeab5ed8a83,"public int[] tenRun(int[] nums)
{
    if (nums[0] == 0 && nums[1] == 2 && nums.length == 2)
    {
        nums[1] = 0;
        return nums;
    }
    int savedval = 0;
    int i = 0;
    for (i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            savedval = nums[i];
        }
        if (savedval != 0)
        {
        nums[i] = savedval;
        }
    }
    return nums;
}
"
97c644c8ee2d65f4c4e6a7f95cb035f2f9f692a7,"public boolean sameEnds(int[] nums, int n)
{
    int length = nums.length;
    int[] newArray = new int[n];
    int[] newArray2 = new int[n];
    int counter = 0;
    for (int i = 0; i < n; i++)
    {
        newArray[i] = nums[i];
    }
    for (int i = (length - n); i < length; i++)
    {
        newArray2[i] = nums[i];     
    }
    for (int i = 0; i < n; i++)
    {
        if (newArray[i] == newArray2[i + 1])
        {
            counter = counter + 1;
        }
    }
    if (counter == n)
    {
        return true;
    }
    else 
    {
        return false;
    }
}
"
fc11ca4e76995be16d704d41a0770ae376fcc450,"public int[] shiftLeft(int[] nums)
{
    if(nums.length >= 2)
    {
        int hi = nums[0];
        for(int i = 0; i < nums.length - 1; i++)
            nums[i] = nums[i+1];
        nums[nums.length-1] = hi;
    }
    return nums;
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
2808f9b972c48b43a0c3554f2637792c3e102278,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   int noticket = 0;
   int smallticket = 1;
   int bigticket = 2;
   int result = 0;
   if (speed <= 60)
   {
    	result = 0;
   }
   

}
"
3775e7869a17ff36825273ea16d9832eedb6471a,"public int dateFashion(int you, int date)
{
   if (you >= 8 && date >= 8)
   {
       return 2;
   }
    

    
   else if (you <= 2 || date <= 2)
   {
       return 0;
   }
    
    return 1;
}
"
ba6124e895bc7e1c6fecc811bb544f2e7d1dcb00,"public int[] shiftLeft(int[] nums)
{
    int shift = 0;
    if(0 < nums.length)
        shift = nums[0];
    for(int i = 0; i < nums.length - 1; i++)
        nums[i] = nums[i + 1];
    if(0 < nums.length)
        nums[nums.length - 1] = shift;
    return nums;
}
"
3f9ae7a55e4744f76136cc3c9f389c1976990cdf,"public int[] shiftLeft(int[] nums)
{
    int length = nums.length;
    int[] nums2 = new int[length];
    if ( length > 0 )
    {
    	nums2[length - 1] = nums[0];
    }
    for ( int i = 1; i < length; i++ )
    {
        nums2[i - 1] = nums[i];
    }
    return nums2;
}
"
82f61d8ad6f16f172d78831cda8c879f304b514e,"public String repeatEnd(String str, int n)
{
    String answer = """";
    String sub = str.substring(str.length()-n);
    for (int i = 0; i < n; i++)
    {
        answer = answer + sub;
    }
    return answer;
}
"
269af4075525a2083019b124be38f451bea5eb2d,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            if (isAsleep)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
        else
        {
            return false;
        }
    }
    else if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
99b9efd5a3ff3c0a87317e8d345a47ce902c6b97,"public boolean has77(int[] nums)
{
    for(int i = 0; i < nums.length - 1; i++)
  	{
  		if(nums[i] == 7)
  		{
			if(nums[i+1] == 7)
            {
				return true;
            }
			else if(i < nums.length - 2 && nums[i+2] == 7)
            {
				return true;
            }
		}
	}
	return false;
}
"
7e7c66de43f3403869e2a5e32affc77e3e798f68,"public int sum13(int[] nums)
{
    boolean before = false;
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (before == true)
        {
            continue;
        }
        
        if (nums[i] != 13)
        {
        	sum = sum + nums[i];
            before = flase;
        }
        else
        {
            before = true;
        }
            
    }
    return sum;
}
"
1c7f60afbb325cd1bf6ef9300fc570a4b484732e,"public int countEvens(int[] nums)
{	
   int total = 0;
  	for(int i = 0; i < nums.length; i++)
  {
     // int remain = nums[i] % 2;
 		if(nums[i] % 2; == 0)
 			{
 				total = total + 1;
 			}
  }
   return total;
}
"
5ee8d81649ac050655b51bea783b61e9e70a4580,"public int dateFashion(int you, int date)
{
    if (date < 3 || you < 3) {
        return 2;
    } else if (date > 7 || you > 7) {
        return 0;
    } else {
        return 1;
    }
}
"
4f96e420ce5daefbaddd6b7dc60bafd37d674dea,"public boolean xyBalance(String str)
{
    String strA = str;
    int x = strA.length();
    int countX = 0;
    if (strA.endsWith(""y""))
    {
        return true;
    }
    for (int i = 0; i < x; i++)
    {
        if (strA.substring(i, i+1).equals(""x""))
        {
            countX += 1;
        }
        if (strA.substring(i, i+1).equals(""y"") && !strA.substring(i+1,i+2).equals(""x""))
        {
            return true;
        }
        else
        {
            return false;
        }  
    }
    if (countX == 0)
    {
        return true;
    }
    return false;
}
"
6bd3ef06a4520ebf320a02cb7c052b69ed753caa,"public String repeatEnd(String str, int n)
{
int l = str.length();
String banana = 
(str.substring(str.length()-n));
for(int i=1;i<n;i++)
banana=(banana)+str.substring(str.length()-n);
return banana;
}
"
6278dac5854b7ab18fc810573a8a9c24f9ba2d83,"public int sum67(int[] nums)
{
    int result = 0;
    int rest = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if(nums[i] == 6)
        { 
            for (int j = i + 1; j < nums.length; j++)
            {
                if (nums[j] != 7)
                {
                    rest += nums[j];
                }
            }
        }
        else if (nums[i] != 7)
        {
            result += nums[i];
        }
    }
    
    return result - rest;
}
"
8870afabb9098dd17b06fb5b830ce6685c34222b,"public int loneSum(int a, int b, int c)
{
    if (a!=b && b!= c && c!=a)
        return a+b+c;
    else if (a==b && a!=c)
        return c;
    else if (b==c && a!=b)
        return a;
    else if (a==b && b==c)
        return 0;
        else 
            return b;
    
}
"
2f79eabbe3aef2bdb645147b371694430065bfe3,"public boolean sameEnds(int[] nums, int n)
{
    int front = 0;
    int end = nums.length - n;
    Boolean same = true;
    for (int i = 0; i < n; i++)
    {
        if (nums[front] != nums[end])
        {
        	same = false;
        }
    }
    return same;
}
"
23b5ec2ba8fe6b1ec171faaa28bcd140793480f8,"public int[] seriesUp(int n) {
  int[] result = new int[n * (n + 1) / 2];
  int i = 0;
  for (int j = 1; j <= n; ++j)
    for (int k = 1; k <= j; ++k)
      result[i++] = k;
  return result;
}"
403cc5ebc9376d6ea42d1b37eba3ce8232b7322f,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        if(temp>=60 && temp<=100)
            return true;
    else
        if(temp>=60 && temp<=90)
            return true;
    	else return false; 
    return false;
}
"
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
"
bc09c16b358c849617c92c4ea257b6ef268a29a1,"public int sortaSum(int a, int b)
{
    if (10 <= a + b && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a+b;
    }
    
    
}
"
d05cd30e75fa8bf94c06440a96bb470cf80b6c17,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer == true)
    {
    		   
    }
}
"
72980c30c2e54d6a4f1216f79dd3ebaaf3517e43,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        if ( temp >= 60 && temp <= 100)
            return true;
			else 
                return false;
    }
    else
    {
        if ( temp >= 60 && temp <= 90)
            return true;
        else
            return false;
    }
}
"
59a209f10c4db4aac8f4bb09f6d458e1affb340a,"public boolean has77(int[] nums)
{
    boolean ans = false; 
    for (int i = 1 ; i<nums.length ; i++)
    {
        if(i==1)
        {
            if(nums[i]==7)
            {
                if (nums[i+1]==7 ||nums[i+2]==7)
                {
                    ans = true; 
                }
            }
        }
        
        if(i>3)
        {
            if(nums[i]==7)
            {
                if(nums[i-1]==7 || nums[i-2]==7)
                {
                    ans = true; 
                }
            }
        }
    }
    return ans; 
}
"
16d52d61f54eed94d50be97808631c745ec0b2b7,"public int countEvens(int[] nums)
{
	int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] % 2 == 0)
			count++;
	}
	return count;
}"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
73858f3a27a92e3c48692cd51056f3179500f586,"public int makeChocolate(int small, int big, int goal)
{
    if ((goal - (goal % 5))/5 <= big)
    {
        if ((goal % 5) <= small)
        {
            return (goal % 5);
        }
    }
    else if (goal - 5*big <= small)
    {
        return (goal - 5*big);
    }
    else
    {
        return -1;
    }
}
"
6c0d662d77f516c9d8f3359502265c733dcd60a4,"public boolean in1To10(int n, boolean outsideMode)
{
    boolean numb = true;
    
    if (outsideMode == true)
    {
        if (n <= 1 || n >= 10)
        {
            numb = true;
        }
    }
    else
    {
        numb = true;
    }
    
    if (n >= 1 && n <= 10)
    {
        numb = true;
    }
    
    return numb;
}
"
2e007e796e35e7e1dc3f93fe57d7994c06428678,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 && n == 16)
            return n;
        else
        	return 0;
    return n;
}
"
b2c66d3fc151e6df09278e9b2e72472f6440c927,"public int sortaSum(int a, int b)
{
    if(a+b >19 || a+b <10)
    {return 20;}
    else
    {return int;}
}
"
b09c5b04de21858625ee10f70af9782b34ba610e,"public int[] tenRun(int[] nums)
{
    int tenMode = -1;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] % 10 == 0)
			tenMode = nums[i];
		else if(tenMode != -1)
			nums[i] = tenMode;
	}
	return nums;
    
}
"
e65697f8d7ac6364f121022204ca1d1d855b2596,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    if (a + b = 6)
    {
        return true;
    }
    if (Math.abs(a - b) == 6 || Math.abs(b - a) == 6)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
7126a84cb8f4df9d6d47eb4ee8cbb5f7bec49635,"public int sum13(int[] nums)
{
    int total = 0;
    for (int i = 0; i < nums.length; i++)
    {
        total = nums [i] + nums [i + 1];
    }
    return total;
}
"
2eaba680914e40431092b82c41872ff6496b6503,"public int sum3(int[] nums)
{
    int sum = 0;
    int[] newnums = {a, b, c};
    sum = a + b + c;
    return sum;
}
"
1bbffc2383fb558f8da1de544e12dbcde5e9f78f,"public int countEvens(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] % 2 == 0)
			count++;
	}
	return count;
}
"
a7bf016297c1740702691f6d6981c0641c01cd4c,"public String repeatEnd(String str, int n)
{
    String end = str.substring(str.length() - n, str.length());
    for(int i = 0; i < n-1; i++){
        end += end;
    }
    return end;
}
"
0d155fd330cfae51b6517bf13264b1023a2cb520,"public String without2(String str) 
{
    String y = str;
    int x = str.length();
    int z = x - 1;
    if (x >= 2)
    {
        if (str.substring(0, 2) == str.substring(z))
        {
            y = str.substring(2);
        }
    }
    return y;
}
"
3883778a7e3508f69faff412b4544f32cb8a81fd,"public boolean evenlySpaced(int a, int b, int c)
{
	int big = 0;
    int med = 0;
    int small = 0;
    
	if(a > b && a > c)
    {
        big = a;
        if(b > c)
        {
            med = b;
            small = c;
        }
        else
        {
            med = c;
            small = b;
        }
    }
    if(b > a && b > c)
    {
        big = b;
        if(a > c)
        {
            med = a;
            small = c;
        }
        else
        {
            med = c;
            small = a;
        }
    }
    if(c > b && c > a)
    {
        big = c;
        if(a > b)
        {
            med = a;
            small = b;
        }
        else
        {
            med = b;
            small = a;
        }
    }
    
    if(big - med == med - small)
    {
        return true;
    }
    else
        return false;
}
"
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
"
902aee8fb5c3fd4695b70e618ae43003ed96d60b,"public int makeChocolate(int small, int big, int goal)
{
    if (big * 5 > goal)
    {
        return goal % 5;
    }
    else if (small * 5 > goal)
    {
        return goal % 5;
    }
    else if (small + big * 5 > goal)
    {
        return -1;
    }
    return goal;
}
"
1c016e1d1b46d59a4bcb335f7124683c01211d44,"public boolean evenlySpaced(int a, int b, int c)
{
    int temp;
    if(a > b) {
        temp = a;
        a = b;
        b = temp;
    }
                    
    if(b > c) {
        temp = b;
        b = c;
        c = temp;
    }
                                      
    if(a > b) {
        temp = a;
        a = b;
        b = temp;
    }
                                                        
    return b - a == c - b;
}
"
3301b734ed8afb983687e95d9ff2042c847fb363,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        if(nums[i] < min)
        {
        	min = nums[i];
        }
        else if(nums[i] > max)
        {
        	min = nums[i];
        }
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
c7999fc2fb5642ecb3380186b81ff045d8eb0965,"public boolean sameEnds(int[] nums, int n)
{
    if (n < nums.length)
    {
        int[] firstgroup = new int[n];
        int[] lastgroup = new int[n];
        for (int i = 0; i < n; i++)
        {
            firstgroup[i] = nums[i];
        }
        for (int o = nums.lenght - 1 - n; o < nums.length; o++)
        {
            lastgroup[o] = nums[o];
        }
        if (firstgroup.equals(lastgroup))
        {
            return true;
        }
    }
    return false;
}
"
2d8194942d20911ff533c3ec27e47ca950f3612f,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
    {
        if(temp<=100 && temp>=60)
            return true;
    	else
            return false;
    }
    else
    {
        if(temp<=90 && temp>=60)
            return true;
    	else
            return false;
    }
}
"
a096351347639c1b6b1a21a2f3d8e59b7f52699c,"public String plusOut(String str, String word)
{
    String re;
    int lw = word.length();
    int ls = str.length();
    int lim = ls - lw;
    int i = 0;
    int n;
    while (i <= lim)
    {
        int lwi = i + lw;
        n = lwi;
        String o = str.substring(i, lwi);
        if (word.equals(o))
        {
            re = re + word;
            i = i + lw - 1;
        }
        else
        {
            re = re + ""+"";
        }
        i = i + 1;
    }
    return re;
}"
1f5da1cd2474bb70a08ba1ebec2f36fe938b688f,"public String atFirst(String str)
{
    int length = str.length();
    if (length>=2)
    {
        return str.substring(1,2);
    }
    else if (length==1)
    {
        return str.charAt(1) + ""@"";
    }
    else 
    {
        return ""@@"";
    }
}
"
77eef59d415f15b3ad7bf984b2a232f7486ec6c6,"public int countEvens(int[] nums)
{
    int count = 0;
    
	for(int i = 0; i < nums.length; i++)
	{
		if (nums[i] % 2 == 0)
        {
			count++;
        }
	}
	return count;
}
"
419c3274ea1df03710265c18dc06dc5080511c76,"public int[] seriesUp(int n)
{
    int[] nums = new int[n*(n+1)/2];
    int m = 0;
    for (int i = 1; i <= n; i ++)
    {
        for (int x = 1; x <= i; x ++)
        {
            nums[m] = i;
            m = m + 1;
        }
    }
    return nums;
}
"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
25587d30d2f5eb80eebc44fb428e9d2e3f7ee17f,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer && 60 <= temp && temp <= 100)
        return true;
          
    if(!isSummer && 60 <= temp && temp <= 90)
        return true;
                    
    return false;
}
"
66dbf316386f6170241cdea03cfc5d5da90abbe2,"public String alarmClock(int day, boolean vacation)
{
    if (!vacation)
    	if (day > 0 && day < 6)
        	return ""10:00"";
    	if (day == 0 || day == 6)
        	return ""7:00"";
    
	if (vacation)
        if (day > 0 && day < 6)
        	return ""off"";
    	if (day == 0 || day == 6)
        	return ""10:00"";
}
"
c531b36cd72156cb65bd26c919a9de7a647ca456,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int x = num % 10;
    if (x >= 5)
    {
        return num + (10 - x);
    }
    else
    {
        return num - x;
    }
}
"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
"
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
"
36570bb4af86c54290163c5fac9a892991f69b7f,"public boolean in1To10(int n, boolean outsideMode)
{
    boolean a = true;
    if ( n<=10 && n>=1 && outsideMode==false)
        a=true;
    if ( n>=10 && n<=1 && outsideMode==true)
        a=true;
    if ( n>10 || n<1)
        a=false
    return a;
}
"
fe4d9bb980371b0c510eaafdeaad3066de447006,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
		return n;
	return 0;
}
public int noTeenSum(int a, int b, int c)
{  return (fixTeen(a) + fixTeen(b) +fixTeen(c)); }
"
c2169aa2fec108e7a975dfa344e599f87fcb86fa,"public int[] frontPiece(int[] nums)
{
    int[] fP;
    if (nums.length <= 1)
    {
        fP = new int[1];
        fp[0] = nums(1);
    }
    else
    {
        fP = new int[0];
    }
}
"
eda9bd0f5a398f9eabaccae28895d2e3b4285b54,"public int makeChocolate(int small, int big, int goal)
{
    if((small + big * 5) < goal)  
	{
   	 return -1;
	}
    else if((big * 5) > goal)
	{
        if ((goal%5)<=small)
        {
  	 	 return goal % 5;
        }
	}
    else
{
    return goal - big * 5; 
}
}
"
39f7db5a7fbf9dd38ccc348c22569f375d2af11d,"public int[] fizzArray(int n)
{
    int count = 0;
    int[] arr = new int[n];
    for (int i = 0; i < arr.length; i++)
    {
        arr[i] = count;
        count++;
    }
    return arr;
}
"
5c3dae530f49261cc87cb00e45ffafd509ad1cd7,"public String alarmClock(int day, boolean vacation)
{
    String time = """";
    if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
    {
        if (vacation)
        {
            time = ""10:00"";
        }
        else
        {
            time = ""7:00"";
        }
    }
    else if (day == 0 || day == 6)
    {
        if (vacation)
        {
            time = ""off"";
        }
        else
        {
            time = ""10:00"";
        }
    }
    return time;
    
}
"
1a2b02bd934495f1accafa1c1a83f29ea2063599,"public int redTicket(int a, int b, int c)
{
    if (2 == a == b && b == c)
        return 2;
}
"
acf966a88979a662e39fc7be47f5524cf6c3ae48,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] == 13)
        {
            continue;
            
        }
        
        sum = sum + nums[i];
        
    }
    return sum;
}
"
96689d16d7eecf3ed38689294eb0cc8ce788c6e8,"public boolean in1To10(int n, boolean outsideMode)
{
    boolean numb = true;
    
    if (outsideMode)
    {
        if (n <= 1 || n >= 10)
        {
            numb = true;
        }
        else
        {
            numb = false;
        }
    }
    
    if (n >= 1 && n <= 10)
    {
        numb = true;
    }
    else 
    {
        numb = false;
    }
    
    return numb;
}
"
436fd09b6891e567fe0cd98c8b071729b2733e8c,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 && day != 6)
            return ""10:00"";
        else
            return ""off"";
    else
        if (day != 0 && day != 6)
            return ""7:00"";
        else
            return ""10:00"";
    }
}"
e72236c9fdb837c48df79701faad9817aec3c94c,"public String plusOut(String str, String word)
{
    for (int x = 0; x < str.length(); x++)
    {
        boolean check = false;
        for (int y = 0; y < word.length(); y++)
        {
            if (!check)
            {
                if (str[x] == word[y])
                {
                    check = true;
                }
            }
        }
        if (!check)
        {
            str[x] = ""+"";
        }
    }
}
"
3735d14e0015cbbfffc67ed647aff1b4f54f43d7,"public int redTicket(int a, int b, int c)
{
    int answer = 0;
    if (a == 2 && a = b = c)
    {
        answer = 10;
    }
    else if (a = b = c)
    {
        answer = 5;
    }
    else if (b != a && c != a)
    {
        answer = 1;
    }
return answer;
}
"
b7a18763ce8032dccda6967c76b9fb1cec21b837,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean check = true;
    if (nums.length == 0)
    {
        return sum;
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (check)
        {
            if (nums[i] == 6)
            {
               check = false;
            }  
        }
        else if (nums[i] == 7)
        {       
            check = true;
        }
        if
        {
            sum = sum + nums[i];
        }
    }
    return sum;
}
"
13beaefa98ab0319c918f999cab5f433306aeb3a,"public boolean xyzThere(String str)
{
    int ind = str.indexOf("".xyz"");
    if(ind >= 0)
    {
        return xyzThere(str.substring(0, index)) || xyzThere(str.substring(index + 4));
    }
    else return (str.contains(""xyz""));
}
"
b4cc8daf27cc43c9bb2eb986e90533ab027a2ab9,"public int[] shiftLeft(int[] nums)
{
    int[] array = new int[nums.length];
    int first = nums[0];
    for(int i = 0; i < nums.length-1; i++)
    {
        array[i] = nums[i+1];
    }
    if(nums.length <= 1)
    {
        int[] newarray = new int[0];
    	return newarray;
    }
    array[nums.length-1] = first;
    return array;
}
"
ce66810bd828bff623c56184fa5e1310fbb2034e,"public int redTicket(int a, int b, int c)
{
    
    
    
    
    
    
    return 0;
}
"
0745e670c9437c03200a3e652fd7a5a0bf1399ee,"public String plusOut(String str, String word)
{
    int strLength = str.length();
    int wordLength = word.length();
    int position = str.indexOf(word);
    int i = 0;
    StringBuilding strbuild = new Stringbuilder(strLength);
    while(position != -1)
    {
     	while ( i < position)
        {
         	strbuild.append('+');
            i++;
        }
        strbuild.append(word);
        i = pos+ wordLength;
        position = str.indexOf(word, i);
    }
    for(i; i<len; i++)
        strbuild.append('+');
    return strbuild.toString();
}
"
ab752aa9f041e605c697b86bdcb50aa8b25db534,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
"
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
"
7456c11888628de105891f3f5bc262ecd54ad7d3,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        if (day == 0 || day == 6)
        {
            return ""off""            
        }
    }
    else
        if (day > 0 && day < 6)
        {
            return ""7:00"";
        }
        if (day == 0 || day == 6)
        {
            return ""10:00""            
        }
    
}
"
bb771f79da2e164515e0325c84eaa2dbd392e69b,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = 0;
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}"
53b7a387fbb37d157b32afb512897168d2683fea,"public int countCode(String str)
{
    int count  = 0;
    String co = ""co"";
    String e = ""e"";
    
 	for (int i = 3; i <= str.length(); i++)
    {
        if (""c"".equals(str.charAt(i-3))
        {
            count = count+1;
        }
    }
            return count;
}
"
b742a29daccf2b99ba8d6048e2412da6bcd3abd0,"public int[] zeroMax(int[] nums)
{
    int max;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 0)
		{
			max = 0;
			for(int k = i + 1; k < nums.length; k++)
			{
				if(nums[k] > max && nums[k] % 2 == 1)
					max = nums[k];
			}
			if(max != 0)
				nums[i] = max;
		}
	}
	return nums;
}
"
c18c23cb1c04cc72621afd7d185d7b33d6cb5706,"public int centeredAverage(int[] nums)
{
    int highest = 0;
    int lowest = 0;
    int sum = 0;
    int counter = 0;
    int x = 0;
    int y = 0;
    for (int i = 0; i < nums.length; i++)
    {
      	if (nums[i] > highest)
        {
            highest = nums[i];
        }
        if (nums[i] < lowest)
        {
            lowest = nums[i];
        }
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == highest && x = 0)
        {
            nums[i] = 0;
            x++;
        }
        if (nums[i] == lowest && y == 0)
        {
            nums[i] = 0;
            y++
        }
    }
    for (int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        counter++;
    }
    return sum / (counter - 2);
}
"
fbd4c23e76bef6c785eaeac729ab320635a7682b,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
"
684d16d1fe00b522bc43f3c44174bcb4ccab14db,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && b == c && a == c)
    {
        result = 20;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    else
    {
        result = 10;
    }
    return result;
}
"
37f7903670743e9c9bf2aaff038efd5604e3a02d,"public int[] tenRun(int[] nums)
{
    int ten = -1;
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] % 10 == 0)
        {
         	ten = nums[i]   
        }
        else if(ten =! -1)
        {
         	nums[i] = ten;   
        }
    }
    return nums;
}
"
c5c21f20416e4e109d14ab3888a5666095ee7ecd,"public int sum67(int[] nums)
{
    int sum = 0;
	boolean sixMode = false;
	for(int i = 0; i < nums.length; i++)
	{
		if(sixMode)
		{
			if(nums[i] == 7)
				sixMode = false;
		}
		else if(nums[i] == 6)
			sixMode = true;
		else
			sum += nums[i];
	}
	return sum;
}
"
c85ff246006a7e9efb07028fa56b1a67846d2edc,"public boolean in1To10(int n, boolean outsideMode)
{
    if (!outsideMode) {
    	if (n >= 1 && n <= 10) {
        	return true;
        }
        else {
        	return false;
        }
    }
    else {
    	if (n > 1 && n < 10) {
        	return false;
        }
        else {
        	return true;
        }
    }
}
"
ce1937ad05282feacba9a86e4de83bed75e48a04,"public int greenTicket(int a, int b, int c)
{
    if( a == b && b == c)
    {
        return 20;
    }
    if( a == b || b == c || c == a)
    {
        return 10;
    }
    else
    {
        return 0;
    }
    
}
"
88111a1b682c4e3263232c7e42baecf389dd8a17,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0)
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
    else
    {
    	return 0;
    }
}
"
1a1cd4a4c1a5ed8de6bf95e1bc43ce0d27c7ca25,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return ""true"";
    }
    else if (cigars >= 40 && cigars <= 60)
    {
        return ""true"";
    }
    else if (cigars < 40 || cigars > 60)
    {
        return ""false"";
    }
}
"
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
"
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
"
8a779c37e36e7e7238238f8fa362f496af39a6e3,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    
    
        
        
    if(first != -1 && last != -1 && first != last)
    {
		return str.substring(first + 5, last);
    }
    else return"""";
}
"
dbbd324a0457918eb71ccb9d85949600bc5c4acc,"public int[] frontPiece(int[] nums)
{
    int[] newArray = new int[2];
    if (nums.length < 2)
    {
        newArray[0] = nums[0];        
    }
    else
    {
        newArray[0] = nums[0];
        newArray[1] = nums[1];
    }
    return newArray;
}
"
dff48726051441fbd03ab1a724724ca6b4070c76,"public String plusOut(String str, String word)
{
    int len = str.length();
    int wLen = word.length();
    int pos = str.indexOf(word);
    int i = 0;
    StringBuilder stbuild = new StringBuilder(len);
    while(pos!= -1)
    {
    	while(i < pos)
        {
       	    stbuild.append('+');
            i++;
        }
        stbuild.append(word);
        i = pos + wLen;
        pos = str.indexOf(word, i);
        
    }
    for(; i < len; i ++)
        stbuild.append('+');
    return stbuild.toString();                   
}
"
9b342fc15c2809ae0df1462b7b0f10d2014d8513,"public int countEvens(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] % 2 == 0)
			count++;
	}
	return count;
}
"
c80baabde8df86d0c476b7e7adb26373c71b0d2c,"public int countEvens(int[] nums)
{
    int length = 0;
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] % 2 == 0)
        {
            length = length + 1;
        }
    }
    return length;
}
"
a73d5c377134406aacabbd907a62dbfb7caeca47,"public String without2(String str) 
{
 	String part = str.substring(0 , 2);
    String part2 = str.substring(str - 2)
        if (part == part 2){
        return 
        }
}
"
31f3295925303a252325eaa71e45f556a304979b,"public String mixString(String a, String b)
{
    int x = a.length();
    int y = b.length();
    String valueOne = """";
    if (x < y)
    {
        for (int i = 0; i < x; i++)
        {
            valueOne += a.substring(i, i + 1) + b.substring(i, i +1);
        }
        valueOne += a.substring(y - x);
        return valueOne;
    }
    else if (y < x)
    {
        for (int i = 0; i < y; i++)
        {
            valueOne += a.substring(i, i + 1) + b.substring(i, i +1);
        }
        valueOne += a.substring(x - y);
        return valueOne;
    }
    else 
    {
        for (int i = 0; i < y; i++)
        {
            valueOne += a.substring(i, i + 1) + b.substring(i, i +1);
        }
        return valueOne;
    }
        
}
"
1e1c5de578989095aae1aa204ec49af769839064,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (1 <= day <= 5)
        {
            return(""10:00"")
        }
        else
        {
            return(""off"")
        }
    }
    else
    {
        if (1 <= day <= 5)
        {
            return(""7:00"")
        }
        else
        {
            return(""10:00"")
        }
    }
}
"
783f58a9d684df6c18e6b47db9326f28032afe07,"public int countCode(String str)
{
    int count = 0;
    for(int i = 0; i < str.length(); i++){
    	if(str.indexOf(""co"",i)==i+1&&str.indexOf(""co"",i+2)==i+3)count++;
    }
    return count;
}
"
63c16bfedccd87efec3a9615707b53bae96e87cb,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
      
    for(int i = 0; i < str.length() - 5; i++) {
        if(str.substring(i, i + 5).equals(""bread"")) {
            first = i;
            break;
        }
    }
                                
    for(int i = str.length() - 5; i >= 0; i--) {
        if(str.substring(i, i + 5).equals(""bread"")) {
            last = i;
            break;
        }
    }
                                                          
    if(first != -1 && last != -1 && first != last)
        return str.substring(first + 5, last);
                                                                    
    return """";
}
"
fa9ed0d99dc7160699f129bb191ad676a6687940,"public boolean xyzThere(String str)
{
    String sub = str.substring(0);
    if (sub == ""xyz"" && sub != "".xyz"")
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
4690b3990e2eb6dd080ba258226248164f82da78,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh)
        {
            clumps++;
        }
    }
    return clumps;
}
"
1887f485f1b410bd1f2255c7feb8cd2ca09412ba,"public int greenTicket(int a, int b, int c)
{
    if (a == b)
        if (b == c)
            return 20;
    	else
            return 10;
    if ( a == c || b == c)
        return 10;
    else
        return 0;
}
"
f3d9573a03bbf78de6e9174ef91b05e7fe2c3dce,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
        if (n <= 1 || n >= 10)
            return true;
        else 
            return false;
    else if (n >= 1 || n <= 10)
        return true;
    else
        return false;
}
"
2dbc58ab07848affb946c2a740f1ef05e5ed183c,"public boolean twoTwo(int[] nums)
{
    int number = 0;
	for(int r = 0; r < nums.length; r++)
	{
		if(nums[r] == 2)
			number++;
		else
		{
			if(state == 1)
				return false;
			else
				number = 0;
		}
	}
	return (number != 1);
}
"
04722865f0a83de76cfa43341bfbb14e4bd01fdb,"public boolean twoTwo(int[] nums)
{

boolean katam = true;
boolean doond = false;

for(int count=0; count<nums.length; count++)
{
if(nums[count] !=2) 
{
    doond = false;
}

if(nums[count] ==2 && doond)
{
    katam = true;
}

if(nums[count] ==2 && !doond)
{
doond = true;
katam = false;
}

}
return result;

}"
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}"
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
"
6bcfc4f8f71961def49e25a62a3705be7faac429,"public int[] fix45(int[] nums)
{
    int i = 0;
    int j = 0;
    while(j < nums.length && nums[j] != 5)
        j++;
    while(i < nums.length)
    {
    	if(nums[i] == 4)
        {
        	int temp = nums[i+1];
            nums[i+1] = nums[j];
            nums[j] = temp;
            
            while((j < nums.length && nums[j] != 5) || j ==i+1)
                j++;
        }
        i++;
        
    }
    return nums;
}"
eec3b28394fdf34d94959f5b27d3bcb590bc286d,"public boolean xyBalance(String str)
{
    int count = 1;
    char position;
	for (int i = 0; i < str.length(); i++)
    {
        position = str.charAt(i);
    	if (position == 'x')
        	count = 0;
    	if (position == 'y')
        	count = 1;
    }
    return count = 1;
}
"
a4b58485e4143c9a52585dd71274a65422d7e39b,"public boolean great; 
public int d;
public int e; 
public int f; 

public boolean love6(int a, int b)
{    
    if (a == 6 || b == 6)
    {
        great = true;
    }
    else if ((a + b) = 6 || (a - b) = 6 || (b - a) = 6)
    {
        great = true; 
    }
    else 
    {
        great = false;
    }
    return great; 
}
"
ba72b3e7e14eae8e1a2efca804ea4f44778fb7ad,"public boolean evenlySpaced(int a, int b, int c)
{
    if(Math.abs(a-b))return 1;
}
"
469345bd6acd9ad504ce3cd1aaa0a852de97ddfe,"public int[] tenRun(int[] nums)
{
    int current;
    int i = 0;
      
    while(i < nums.length && nums[i] % 10 != 0)
        i++;
                
    if(i >= nums.length)
        return nums;
                          
    current = nums[i]; 
    i++;
                                
    while(i < nums.length) {
        if(nums[i] % 10 == 0)
            current = nums[i];
        else
            nums[i] = current;
        i++;
    }
                                                              
    return nums; 
}
"
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
"
0c5c086ecdd3fd68ec5bfcf62dfa210f71dfe7d7,"public int sum13(int[] nums)
{
    int total = 0;
    for ( int i = 0; i < nums.length; i++ )
    {
        if ( nums[i] != 13 )
        {
            if ( i > 0 && nums[i - 1] != 13 )
            {
                total += nums[i];
            }
        }
    }
    return total;
}
"
a2f4dd138e591312ee1e4d2886035072ec1e3cf4,"public boolean xyzThere(String str)
{
    str = str.toLowerCase();
    if (str.indexOf(""xyz"") >= 0)
    {
        if (str.charAt(str.indexOf(""xyz"") - 1).equals("".""))
        {
            return false;
        }
        else
        {
            return true;
        }
    }
    else 
    {
        return false;
    }
}
"
e391361650c3c80321e28555805b334cc54c7008,"public int[] withoutTen(int[] nums)
{
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] == 10)
        {
            nums[i] = nums[i+1];
            nums[nums.length - 1] = 0;
            i--;
        }
    }
    return nums;
}
"
db52f9fe98d7a7d1e19f3c5b7b2ba5bdacc45a57,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] == 13)
        {
            continue;
        }
        continue;
        sum = sum + nums[i];
        
    }
    return sum;
}
"
28ee56231138fc8b7d16d467e604bb9c774bfecc,"public int sum67(int[] nums)
{
    int sum =0;
    if(nums.length == 0)
    {
        return sum;
    }
    for(int i =0; i< nums.length-1; i++)
    {
        if(nums[i] != 6)
        {
            sum += nums[i];
        }
        else if(nums[i] == 6)
        {
            int j = i;
            while(nums[j] != 7)
            {
                j++;
            }
            i = j;
        }
    }
    return sum;
    
}
"
51a9d50530a737f8eb1330dce6219f7bd584a7a3,"public int[] frontPiece(int[] nums)
{
    int i = nums.length;
    if (nums.length > 2)
    {
        i = 2;
    }
    int[] newArray = new int[i];
    
    for (int j = 0; j < i; i++)
    {
        newArray[j] = nums[j];
    }
    return newArray;
}
"
8575bd56e9fc45696003687593b9872fc87cc1fe,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int f = 0; f < nums.length; f++)
    {
        if(nums[f] == 13)
        {
            f++;
        }
        else
        {
            sum += nums[f];
        }
    }
    return sum;
}
"
3e7ae143ef764b5d04006c6db44db3de49572f97,"public int countEvens(int[] nums)
{
    public int countEvens(int[] nums)
    {
        int evenArray = 0; 
        for(int i = 0; i< nums.length; i++)
        {
            if(nums[i] % 2 == 0)
            {
                evenArray ++;
            }
        return evenArray;
    }
}
"
3be61c4a2c3dbcb1c090d319832fc54c60d0a7cb,"public String withouEnd2(String str)
{
	int len = str.length();
	if(len >= 3)
    {
		return str.substring(1, len-1);
    }
	return """";
}
"
432e4a5d3cda260ead435fcbc7db01e66a692e40,"public int[] fizzArray(int n)
{
    int[] y = new int[n.length]
        for (int x = 0; x < n.length; x++)
        {
            y[x] = x;
        }
    return y;
}
"
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
"
ee9694c935e26fa5668d8faade62b6eb132712cd,"public int loneSum(int a, int b, int c)
{
    if (a==b && b==c)
        return 0;
    else if (a == b)
        return c;
    else if (a == c)
        return b;
    else if (b == a)
        return c;
    else if (b == c)
        return a;
    else if (c == a)
        return b;
    else if (c == b)
        return a;
    else 
        return a + b + c;
}
"
a529de3f76b808c9652de4cc8da6cab1a01df0fc,"public int redTicket(int a, int b, int c)
{
	if(a == b && b == c)
	{
		if(a == 2)
			return 10;
		return 5;
	}
	if(a != b && a !=c)
		return 1;
	return 0;
}
"
64465d47272bac928c3d453749449041721a4ef4,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] == 13)
        {
            continue;
            continue;
        }
        
        sum = sum + nums[i];
        
    }
    return sum;
}
"
68b9964f2742ca653eb53799fe84cca56a4cb723,"public int roundSum(int a, int b, int c)
{
    int x = 0;
    x = a + b + c;
    return x.round10();
    
}

public int round10(int num)
{
    int y = 0;
    int x = num % 10;
    if (x < 5)
    {
        y = num - x;
    }
   	else
    {
        y = (num - x) + 10;
    }
    return y;
}
"
f265851c4e0505446d730d279ecca3c8d97b76a7,"public int[] seriesUp(int n)
{
    int[] arr = new int[n*(n+1)/2];
	int p = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++, p++)
			arr[p] = j;
	}
	return arr;
}
"
086a9d0521d0e7c7c65284a42547f8068a8116f2,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend && cigars >= 40)
    {
     	return true;
    }
    else if (cigars >= 40 && cigars <=60)
    {
  	   return true;   
    }
    else
    {
        return false;
    }
}
"
453a7950dee2488a675e70251e5a8cf6e14d6de0,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    else
        return true;
    if (isMorning && isMom)
        return true;
    else
        return false;
}
"
c85c6cf2feceb28537e58edf5b8a563a86febd7f,"public String without2(String str) 
{
    String answer = str;
    if (str.length() >= 2 && str.substring(0, 2)
        == str.substring(str.length(), (str.length()))
        {
            answer = str.substring(2, str.length());
    	}
return answer;
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
eda3af662f0f95213fcfaf93d4593c14bfe8a879,"public int sum67(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.lenth;i++)
    {
    	if (nums[i] != 0)
        {
        	sum = sum + nums[i];
        }
    }
    return sum;
}
"
f81a9025cf9b28b3b9507c8841f5972e14f84a64,"public boolean evenlySpaced(int a, int b, int c)
{
    if ((a - c) == (b - c))
    {
        return true;
    }
    else if ((b - c) == (a - c))
    {
        return true;
    }
    else if ((a - c) == (c - b))
    {
        return true;
    }
    else if ((c - b) == (b - a))
    {
        return true;
    }
 
    else
    {
        return false;
    }
}
"
6e94448562b2853ad595da621646620316952196,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {	
        if ( n <= 1 || n >= 10)
            return true;
    }
    
   	else
    {
        if ( n >= 1 && n <= 10)
            return true;
        else
            return false;
    }
    
}
"
6951053422eb1f10e58384407fe2177bd76f6031,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum
    }
}
"
2a133637be78a263c4d2b9920385801f14965e61,"public int[] withoutTen(int[] nums)
{
    int[] output;
    int count = 0;
    for(int i = 0; i < nums.length; i++){
        if(nums[i]==10){
            count++;
        }
    }
    output = new int[count];
    count = 0;
    for(int i = 0; i < nums.length; i++){
        if(nums[i]!=10){
            output[count] = nums[i];
            count++;
        }
    }
    return output;
}
"
c291d244b13f97681cc0f9085009c035c686a517,"public String[] fizzBuzz(int start, int end)
{
    String[] s = new String[end-start];
    
    for(int i = 1; i <= end-start; i++)
    {
        
        if(i%3 == 0 && i%5==0)
    	{
        	s[i]=""FizzBuzz"";
    	}
        else if(i%3 == 0)
    	{
        	s[i]=""Fizz"";
    	}
        else if(i%5==0)
    	{
        	s[i]=""Buzz"";
    	}
        else
        {
         s[i]=String.valueOf(i+1);   
        }
        
    }
    
    return s;
}
"
b66c9a76c6567bcfc33f81fb4e1e0bfe1c43ea5c,"public String atFirst(String str)
{
    int length = str.length();
    if( length >= 2 )
    {
        return str;
    }
    else
    {
        if( length == 1 )
        {
            return str + ""@"";
        }
        else
        {
            return ""@@"";
        }
    }
}
"
c6a7e900d8268e52e52d9619cadc6f8e9dfd493b,"public int[] withoutTen(int[] nums)
{
    int newArray[] = new int[nums.length];
    for(int val : newArray)
        val = 0;
    
    int newIndex = 0;
    for (int i = 0; i < nums.length; i++){
    	if(nums[i] != 10)
            newIndex[newIndex++] = nums[i]; 
    }
    
    return newArray;
}
"
2b5267f134383fe7e7f31a2337feab807bca5929,"public int dateFashion(int you, int date)
{
    public void tableChances()
    {
    	if (you <=2 || date <= 2)
            return ""0"";
        else if (you >= 8 || date >= 8)
            return ""2"";
        else 
            return ""0"";
    }
}
"
0dcf6449d4df310d3fe50618ea03c76712671149,"public boolean canBalance(int[] nums)
{
    int upperIndex = nums.length-1;
    int lowerIndex = 0;
    while(lowerIndex<upperIndex){
		int lowerSum = sum(nums,0,lowerIndex);
        int upperSum = sum(nums,lowerIndex,upperIndex);
        if(lowerSum==upperSum)
            return true;
        else if(lowerSum<upperSum)
            lowerSum++;
        else
            upperSum++;
    }
    return false;
}

private int sum(int[] nums,int a, int b){
    int sum = 0;
    for(int i = a; a < b; i++){
        sum+=nums[i];
    }
    return sum;
}"
ff69b8741776c7c3eca7453eda8915abf2b27502,"public static String getSandwich(String str) {
    int ind = str.indexOf(""bread"");
    int laind = str.lastIndexOf(""bread"");
    if((laind != -1 ) && (ind!=laind))
        return (str.substring(ind+5,laind)) ;
    return """";
}
"
22d46f636a2ecaa8a80e55e579500a4ff8e2a188,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            nums[i+1] = 5;
        }
    }
    
    return nums;
}
"
3df3fd0f5b1becf4be38dc63f17da65d09f7316d,"public boolean endOther(String a, String b)
{
    int la = a.length();
    int lb = b.length();
    if (la - lb >= 0)
    {
        String sa = a.substring(la - lb + 1, la);
    	return sa == b;
    }
    else if (lb - la >= 0)
    {
    	String sb = b.substring(lb - la, lb);
    	return sb == a;
    }
    else
    {
        return false;
    }
}
"
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
"
7e5b6b0d79be66e1382b0952842d3cf1c691770b,"public boolean evenlySpaced(int a, int b, int c)
{
    if (Math.abs(a-b) == Math.abs(b-c))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
f51f3916285302a74981ec793fe9c1edb47a56d0,"public int centeredAverage(int[] nums)
{
    int size = nums.length;
    int sum = 0;
    int count = 0;
    for (int j = 1; j < size - 1; j++)
    {
        sum = sum + nums[j];
        count = count + 1;
    }
    return sum / count;
}
"
b94d1c6d5672e68a63df284ec4ba972c06f7ae28,"public String atFirst(String str)
{
	int leng = str.length();
    if (leng >= 2)
    {
    	return str.substring(0, 2);
    }
    else if (leng == 1)
    {
        str = str + ""@"";
        return str;
    }
    else
    {
        str = ""@@"";
      	return str;
    }
}
"
587f1b10da87a49bdcd6e0d20be3fb5fbff2b306,"public String atFirst(String str)
{	n = String str;
    String part = str.substing(0,2);;
    if (str > 2)
    {
     	return String part;
    }
    else
    {
        return ""@@"";
    } 
}
"
fb5d5ee9c5837048fcdc9e781f356bbd1290479b,"public int loneSum(int a, int b, int c)
{
    if(a == b)
	{
    	if(a == c)
    	  return 0;
    	return c;
  	}
  	if(a == c)
    	return b; 
  	if(b == c)
    	return a;
  return (a + b + c);
}
"
8108b68c455882a8b64621fedad9ed22a29da1cf,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = nums[0];
    for (int i = 0; i < nums.length; i++)
    {
     	sum += nums[i];
        if(nums[i] > max)
        {
         	max = nums[i];   
        }
        else if (nums[i] < min)
        {
         	min = nums[i];   
        }
    }
    return (max-sum-min)/(nums.length - 2);
}
"
8dd0ea4aa40c9c74b0f4a3dddd8ecdfabf898186,"public int sortaSum(int a, int b)
{
    sum = a+b;
    if (sum>=10&&sum <=19)
    {
        return 20;
    }
    else
    {
        return sum;
    }
    
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
5a11eb0e94ab5edb1a42c74675d9a9ff5cf0e1b2,"public boolean endOther(String a, String b)
{
    String aS = a.toLowerCase();
    String bS = b.toLowerCase();
    if (aS.endsWith(bS) || bS.endsWith(aS))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
bedc0d957bdde3ff486061374c097f81ed053026,"public int[] frontPiece(int[] nums)
{
    int[] front;
	if(nums.length >= 2)
	{
		front = new int[2];
		front[0] = nums[0];
		front[1] = nums[1];
	}
	else if(nums.length == 1)
	{
		front = new int[1];
		front[0] = nums[0];
	}
	else
		front = new int[0];
	return front;
}
"
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
3d6b6214a4f69df5f395eb7d7a5f563fb05f3226,"public int sortaSum(int a, int b)
{
    if ((a + b) > 9 && (a + b) < 20)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
05b23fcc737fcb6b3c50cd8949cae2a6c045d1a0,"public String[] fizzBuzz(int start, int end)
{
    String[] series = new String[end - start];
    for (int i = 0; start < end; i++)
    {
        if ((start % (3 * 5)) == 0)
        //when it is multiples of both 3 and 5
        {
        	series[i] = ""FizzBuzz"";
        }
        else if ((start % 5) == 0)
        {
            series[i] = ""Buzz"";
        }
        else if ((start % 3) == 0)
        {
            series[i] = ""Fizz"";
        }
        else
        {
            series[i] = String.valueOf(start);
        }
        start++;
    }
    return series;
        
}
"
41a4fe29054912348cfa42c773ea717a9aeca2af,"public boolean xyzThere(String str)
{
    int index = str.indexOf("".xyz"");
    if(index >= 0) 
    {
        return xyzThere(str.substring(0, index)) || xyzThere(str.substring(index + 4));
    } 
    else 
    {
        return (str.contains(""xyz""));
    }
}
"
79c58a491312a133e68b505957485ca6a71d8f83,"public int noTeenSum(int a, int b, int c)
{
	fixTeen(a);
    fixTeen(b);
    fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if ( a >= 13 && a <= 19 && a != 15 && a !=16){
        a = 0;
        return a;
    }
    if ( b >= 13 && b <= 19 && b != 15 && b !=16){
        b = 0;
        return b;
    }
    if ( c >= 13 && c <= 19 && c != 15 && c !=16){
        c = 0;
        return c;
    }
    
}
"
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
"
f5857008fb82a2a67dbcc23ee0dddf126df6a7b2,"public int[] fizzArray(int n)
{
    int[] q = new int[n];
    for(int i=0;i<q.length;i++)
    {
        q[i]=i;
    }
    return q;
}
"
2d1fcb48c26f694f8f856b5693e38287280e808d,"public int luckySum(int a, int b, int c)
{
    if(a == 13)
        return 0;
    if(b == 3)
        return a;
    if(c == 13)
        return (a+b);
    return (a+b+c);
}
"
4791aba74c22070c77e8993946904460afcc092f,"public int luckySum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a = 13)
        sum = 0;
    	return sum;
    if (b = 13)
        sum = a;
    	return sum;
    if (c = 13)
        sum = a + b;
    	return sum;
}
"
65be8e7df201ba354b4a5edfc451e72bcffde787,"public String[] fizzBuzz(int start, int end)
{
     int n = end - start;

    String[] result = new String[n];

  

    int pos = 0;

    for (int i = start; i < end; i++) {

        boolean fizz = i % 3 == 0;

        boolean buzz = i % 5 == 0;

  

        if (fizz && buzz) result[pos] = ""FizzBuzz"";

        else if (fizz) result[pos] = ""Fizz"";

        else if (buzz) result[pos] = ""Buzz"";

        else result[pos] = String.valueOf(i);

        pos++;
    }

    return result;

}
"
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
"
29e0a255884556f44d18b594532e7efceed15dcd,"public boolean sameEnds(int[] nums, int n)
{
    if (n = 0)
    {
        if (nums[0] == nums[nums.length])
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        return false;
    }
}
"
647bc35de3a44f0c198b2369e761da17805aac9d,"public string status; 

public String alarmClock(int day, boolean vacation)
{
    if (day == 0 || day == 6)
    {
        if (vacation == false)
        {
            status = ""10:00"";
        }
        else if (vacation == true)
        {
            status = ""off"";
        }
    }
    else if (day >= 0 && day <=6)
    {
        if (vacation == false)
        {
            status = ""7:00"";
        }
        else if (vacation == true)
        {
            status = ""10:00"";
        }
    }
    return status;
}
"
4951e3e93960ed4399945d8a349ac025dd9fc00d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum<= 19)
    {
     	sum = 20;   
    }
    return sum;
}
"
f52b5287ebeb62410745be6f839fa91a932e4108,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer) 
    {
        if (temp >= 60 && temp <= 100)
        {
            return true;
        }
        else
        {
            return false;
        }          
    }
    else
    {
        if (temp >= 60 && temp <= 90)
        {
            return true;
        }
        else
        {
            return false;
        }          
    }
       
    
}
"
002254c45164bdf12bfca8a0fe71d68f839bbb7a,"public boolean canBalance(int[] nums)
{
    int sum = 0;
    int other =0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
    
    	for(int j = nums.length-1; j < i; j--)
   		{
        	other += nums[j];
    	}
    }
    if (other == sum)
        return true;
        else
            return false;
}
"
f9d12460b5099608ad1894fabbf8afd8c115fa9a,"public String mixString(String a, String b)
{
    String fullS = """";
    
    if (a.length() >= b.length())
    {
    	for (int i = 0; i<a.length()-1;i++)
    	{
    	    fullS = fullS+a.charAt(i);
            fullS = fullS+b.charAt(i);
    	}
    }
    if (b.length() > a.length())
    {
    	for (int j = 0; j<b.length()-1;j++)
    	{
    	    fullS = fullS+a.charAt(j);
            fullS = fullS+b.charAt(j);
    	}
    }
    return fullS;
}
"
387662098d283d99286050b77e5413fa8622a75a,"public int centeredAverage(int[] nums)
{
    int largest = -1000;
    int smallest = 1000;
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
        if (nums[i] > largest)
        {
            largest = nums[i];
        }
    for (int i = 0; i < nums.length; i++)
        if (nums[i] < smallest)
        {
            smallest = nums[i];
        }
    for (int i = 0; i < nums.length; i++)
        sum += nums[i];
    int average = (sum - largest - smallest) / (nums.length - 2);
        
}
"
f84f7dbfb0642aba5aff6e1022b2afe6351a4feb,"public int noTeenSum(int a, int b, int c)
{
    int checkA = fixTeen(a);
    int checkB = fixTeen(b);
	int checkC = fixTeen(c);
    int theSum =(checkA+checkB+checkC);
}

public int fixTeen(int n)
{
    if (n>= 13 && n< 15 || n>=17 && n<20)
    {
        n = 0;
    }
    return theSum;
}
"
dde62ee3e6eb8d13d892ff7f3f47938e07aaea10,"public int[] shiftLeft(int[] nums)
{
    int len = nums.length;
int temp = 0;
for(int i=0; i<len-1; i++){
temp = nums[i];
nums[i]= nums[i+1];
nums[i+1] = temp;
}
return nums;
}
"
054947245110fe21e7c54bf774cacf65261ff180,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) {
        if (i + 2 <= str.length()) {
            if (str.substring(i, i+2)) {
                return (str.charAt(i).equals(""b"") && str.charAt(i+2).equals(""b""));
            }
        }
    }
                return false;
}
"
bb86254aedf9de05bb25aa1cd4e29774b6db4f34,"public boolean endOther(String a, String b)
{
    String aLow = a.toLowerCase();
String bLow = b.toLowerCase();
if (aLow.endsWith(bLow) || bLow.endsWith(aLow)) {
return true;
}
return false;

}
"
770b3a784de5628565a506861f1e22a400b07abe,"public int sum13(int[] nums)
{
    int sum = 0;
    if(nums.length == 0)
    {
        return sum;
    }
    else
    {
    	 for (int i = 0; i < nums.length; i++)
         {
         	if (nums[i] == 13)
                break;
             else
             {
             	sum = sum + nums[i];
             }
         }
        return sum;
    }
        
}
"
70f39ebeafa0e9a0ee7098989aa403a225b6819a,"public int[] seriesUp(int n)
{
    int[] series = new int[n];
    int y = 0;
    for (int i = 0; i < n; i++)
    {
        for (int x = 0; x < i; x++)
        {
            series[y] = x;
            y++;
        }
    }
    return series;
}
"
9752a30615ea023c71bddc42385dfdd52a520736,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    else if (n >= 1 && n <= 10)
    {
        return true;
    }
}
"
1a4217a42da8fb81be3f704b665bfc939b38dc68,"public String getSandwich(String str)
{
    int a = -1; //the first character
    int z = -1; //the last character
      
    for(int i = 0; i < str.length() - 5; i++) 
    {
        if(str.substring(i, i + 5).equals(""bread"")) 
        {
            a = i;
            break;
        }
    }
                                
    for(int i = str.length() - 5; i >= 0; i--) 
    {
        if(str.substring(i, i + 5).equals(""bread"")) 
        {
            z = i;
            break;
        }
    }
                                                          
    if(a != -1 && z != -1 && a != z) //determining the substring that should be returned
        return str.substring(a + 5, z);
                                                                    
    return """";
}
"
ae83e872c2f70a8a6c8f398d078ced9616ccabe3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
    }
	return arr;
}
"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
"
ab1f0e6519ea559f9e2d7c431d1e3a7372d9ff1c,"public boolean answerCell;

public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep = true)
    {
        answerCell = false;
    }
    else if (isMorning = true)
    {
        if (isMom = true)
        {
            answerCell = true;
        }
    }
    else
    {
        answerCell = true;
    }    
}
"
c0088556b4a85bb7a504a5052836708cd5faf44a,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n >= 1 && n <= 10)
    	{
        	return false;
    	}
        else
        {
         	return true;   
        }
    }
   else
   {
       if (n > 1 && n < 10)
    	{
        	return true;
    	}
        else
        {
         	return false;   
        }
   }
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
0e703e9b300c7bfc3a6f60a91bbec390bb43ceae,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        if (temp >= 60 && temp <= 100)
            return true;
    }
    else if (temp >= 60 && temp <= 90)
        return true;
    return false;
}
"
27c9471ebdf7ee24d3aa1de16a7551cc8876537c,"public String repeatEnd(String str, int n)
{
   private sStr = (str.substring(str.length()-n,str.length()));
   nStr = """";
   for (int i = 0; i < n; i++);
   {
       nStr += sStr;
   }
}
"
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
"
549277581a3fdcb3bf93c3fa5952a282213eae29,"public int dateFashion(int you, int date)
{
    if (you <= 2 && date <= 2)
        return 0;
    else if (you >= 8 && date >= 8)
        return 2;
    else
        return 1;
}
"
c64c9e9c0a786ef3732a68209a390d30d8284fd4,"public int dateFashion(int you, int date)
{
   if ((you >= 2 || date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 || date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
63a3cf9eb9200e0218a8238825a8f5e11a5afb12,"public int luckySum(int a, int b, int c)
{
    if(a == 13)
		return 0;
	if(b == 13)
		return a;
	if(c == 13)
		return (a + b);
	return (a + b + c);
}
"
8434fcf35fe58438dbc97c1444d7bda6b4bd6f74,"public String plusOut(String str, String word)
{
	int findWord = str.indexOf(word);
    int wordLength = word.length();
    int strLength = str.length();
    String newString = """";
    String firstPart = str.substring(0, findWord);
    String wordPart = str.substring(findWord, wordLength);
    int firstPartLength = firstPart.length();
    while (findWord != -1)
    {
        for (int i = 0; i < firstPartLength; i++)
        {
            newString = newString + ""+"";
        }
        findWord = str.indexOf(word, findWord + 1);
        newString = newString + word;
            int newStringLength = newString.length();
   		if (findWord == -1)
    	{
			String lastPart = str.substring(newStringLength, strLength);
       		int lastPartLength = lastPart.length();
        	for (int i = 0; i < lastPartLength; i++)
        	{
            	newString = newString + ""+"";
        	}
    	}
    }
    return newString;
}
"
e1f80924e2fa9aba6195f174166b813b13fea19e,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 && day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
"
d4bcf6c8e35c1dc33d803d62c4c1abc06da6328d,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] == 13)
        {
         	sum = sum;   
        }
        else if (nums[i - 1] == 13)
        {
         	sum = sum;   
        }
        else
        {
         	sum = sum + nums[i];
        }
    }
    return sum;
}
"
6b2b4e4a421aa34d687f45f878010698c6b99990,"public int greenTicket(int a, int b, int c)
{
    int ticket = 0;
    if (a == b)
    {
        if (a = c)
        {
        	ticket = 20;
        }
    }
    
    else if (a = b || a = c || b = c)
    {
        ticket = 10;
    }
}
"
1eb9d1fc242d6f85a35c98295c95d4829aacbbd7,"public String plusOut(String str, String word)
{
    int lw = word.length();
    int ls = str.length();
    int lim = ls - lw;
    for (int i = 0; i <= lim; i++)
    {
        int lwi = i + lw + 1;
        String o = str.substring(i, lwi);
        String re = """";
        if (word.equals(o))
        {
            for (int c = 0; c <= i; c++)
            {
            	re = re + ""+"";
            }
            re = re + word;
            int start = i + lw;
            for (int b = start; b <= ls; b++)
            {
                re = re + ""+"";
            }
            return re;
        }
    }
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
546f04c1838d3811aee2ae7cd610c20b84c7609b,"public boolean twoTwo(int[] nums)
{
    if (nums.length == 0)
    {
        return false;
    }
    if (nums.length == 1)
    {
        return false; 
    }
    if (nums.length == 2)
    {
        if (nums[0] == 2 && nums[1] == 2)
        {
            return true;
        }
        else
        {
            return false; 
        }
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2 && nums[i + 1] == 2)
        {
            return true;
        }
        else if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
    }
}
"
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
"
5b21369102a37d6d11b2a683a734eaf5509729a8,"public int makeChocolate(int small, int big, int goal)
{
    int Big = goal/(big * 5);
    if ((big * 5) < goal)
    {
      if (((big * 5) + (goal - (big * 5))) == goal)
        {
            return (goal - (big * 5));
        } 
      else if ((goal - (big)) <= small)
        { 
            return goal - (big * 5); 
        }
      else
       {
            return -1;
       }
    }
    else
    {
        return -1;
    }
}
"
7079515ec88d2b602ccb8227aba1c766ee4a2288,"public boolean great; 

public boolean love6(int a, int b)
{
    a + b = d; 
    a - b = e; 
    b - a = f; 
    if (a == 6 || b == 6)
    {
        great = true;
    }
    else if (d = 6 || e = 6 || f = 6)
    {
        great = true; 
    }
    else 
    {
        great = false;
    }
    return great; 
}
"
2025c9624a563435d9a02a5c36b1550ef62215d2,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if(isMom)
    {
            return true;
    }
    if(isAsleep)
    {
        return false;
    }
    else if(!isMorning)
    {
        return true;
    }
         
}
"
92963a16a9ffdd8443f4d2ad1a89f05c6ce6372e,"public boolean xyBalance(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
        String xFinder = str.substring(i, str.length());
        if (str.charAt(i) == 'y' && !xFinder.contains(""x""))
        {
           return true;
        }
        else if (!str.contains(""x""))
        {
            return true;
        }
    }
    return false;
}
"
32ec43aed585689994fae8aac1bae3cf4e9fc133,"public int[] fix45(int[] nums)
{
    int j = 0;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i+1] != 5)
		{
			for(; !(nums[j] == 5 && (j == 0 || j > 0 && nums[j-1] != 4)); j++);
			nums[j] = nums[i+1];
			nums[i+1] = 5;
		}
	}
	return nums;c 
}
"
b384ebe70dda38429b9a732cfb5651711d84357c,"public int chance; 

public int dateFashion(int you, int date)
{
    if (you >= 8 || date >=8)
    {
        chance = 2; 
    }
    else if (you <= 2 || date <= 2)
    {
        chance = 0;
    }
    else 
    {
        chance = 1; 
    }
    return chance; 
}
"
fcd394c3d19552683206eebf9ed5e94e86c9c1c5,"public int[] seriesUp(int n)
{
    int[] x;
    x = new int[999];
    for (int i = 1; i < n.length; i++)
    {
        for ( int y = 0; y < i; y++)
        {
            x[i] = y+i;
        }
    }
    return x;
}
"
5d2fac3fd0b382abd14a3fee566283d0edc31c23,"public int[] fizzArray(int n)
{
     int[] arr = new int[n];
    
    for(int i = 0; i < n; i++)
        arr[i] = i;
              
    return arr;
}
"
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
"
9746de889a49cfbad889e37362a1794e1903a29f,"public boolean in1To10(int n, boolean outsideMode)
{
	if (outsideMode)
    {
        if ((n <= 1) || (n = 10))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        if (n >= 1 && n <= 10)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
5bf14ec8d2b72a5f31c1b7537e644e100f3cb419,"public String alarmClock(int day, boolean vacation)
{
    if(!(vaction))
    {
    	if(day == 6 || day == 0)
        {
            return off;
        }
        else
        {
        	return 10:00;
        }
    }
    else
    	if(day == 6 || day == 0)
        {
            return 10:00;
        }
        else
        {
        	return 7:00;
        }
}
"
f9a964619b64e1db174c4c920eb179e1cf360df9,"public int[] fizzArray(int n)
{
    public static int[] fizzArray(int n) {
        int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}


"
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
"
494e2200159545c551d008b788cbc2d5192bc88f,"public String without2(String str) 
{
    int stringLength = str.length();
    String firstPart = str.substring(0, 2);
    String lastPart = str.substring(stringLength - 2, stringLength);
    if (firstPart = lastPart)
    {
        String withoutFirstPart = str.substring(2);
        return withoutFirstPart;
    }
    else
    {
        return str;
    }
}"
cdf35248fcf2f5a6190e6be0c36f50876e76b09b,"public boolean bobThere(String str)
{
    for(int i = 0; i < str.length(); i++)
    {
        if(str.charAt(i).equals('b') && str.charAt(i+2).equals('b'))
        {
            return true;
        }
    }
}
"
9a38bb613818e454b01876c0025de16d86f7ddc4,"public String withouEnd2(String str) 
{
    if(str.length() <= 1)
    {
    	return """";
    }	
    else
    { 
    String mid = str.substring(1,str.length() -1);
    return mid;
    }
}
"
4b818840ef8fb6d51cace0346f35f79337f7b73c,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    
    if (isBirthday == true) 
    {
        if (speed <= 65)
            return 0;
        if (speed >= 86)
            return 2;
        else return 1;
    }
    
    
     else if (speed <= 60)
            return 0;
     else if (speed >= 81)
            return 2;
     else return 1;
    }
        
    
}
"
c502143a533b417a35d1ba5d8ee969acbb47441c,"public int countEvens(int[] nums)
{
    int evens = 0;
    for (int r = 0; r < nums.length; r++)
    {
        if (nums[r] % 2 == 0)
        {
            evens++;
        }
    }
    return evens;
}
"
97bba9ca95601a67d4317ca20462c5d83c7761f5,"public int[] fix45(int[] nums)
{
    int fourcount = 0;
    int k = 0;
    int s = 0;
    for (int i =0; i < nums.length; i++)
    {
		if(nums[i] == 4)
        {
            fourcount += 1;
        }
    }
    
    int[] fourpos = new int[fourcount];
    for (int i =0; i < nums.length; i++)
    {
		if(nums[i] == 4)
        {
            fourpos[k] = i;
            k += 1;
        }
    }
    
    

    int[] fivepos = new int[fourcount];
    for (int i =0; i < nums.length; i++)
    {
		if(nums[i] == 5)
        {
            fivepos[s] = i;
            s += 1;
        }
    }
    
    
    
    
    }
    
    return nums;
}
"
91b0138b51af2877071e8f56d2a140c98dd1fb09,"public int[] fix45(int[] nums)
{
        
    for (int j = 0; j < nums.length; j++)
    {
        if(nums[j] != 5)
        j++;
    
                  
    	for(int i = 0; i < nums.length; i++) 
    	{
       		if(nums[i] == 4) 
            {
            	int number = nums[i+1];
            	nums[i+1] = nums[j];
           		nums[j] = nums;
                                                
            	for (j < nums.length)
                {
                    if ( nums[j] != 5) || j == i + 1)
                    {
                	j = j+1;
                    }
                }
            }
     	}
        	i = i+1;
    }
                                                                          
    return nums;
}"
75d0dc362a4c31d014837d1a8c1fe16ca29a92fa,"public boolean xyBalance(String str)
{
    int length = str.length() - 1;
    char character;
    for (int i = length; i >= 0; i--)
    {
        character = str.charAt(i);
        if(character == 'x')
        {
            return false;
        }
        else if(character == 'y')
        {
            return true;
        }
    }
    return true;
}
"
4cbf8228090da8fc7b21c3ef3a6ecea59b0f8e5f,"public int roundSum(int a, int b, int c)
{
	return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int value = num % 10
    if (value >= 5)
    {
        return num + (10 - value);
    }
}
"
d04030b7185a3db1ac3f7deacfffbcad833f067c,"public boolean canBalance(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        int equal = 0;
        for (int j = 0; j < i; j++)
        {
            equal = equal + nums[j];
        }
        for (int k = i; k < nums.length; k++)
        {
            equal = equal - nums[k];
        }
        return (equal == 0);
    }
    return false;
}"
cd1c631dbb6a16bf2e3d4660bb27c41b392d8f62,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode && n <= 1 || n >= 10)
        return true;
    else if (n >= 1 && n <= 10)
        return true;
    else
        return false;
}
"
0c51d58a322e77d6360324258ec57fee0f69754b,"public int makeChocolate(int small, int big, int goal)
{
    if((goal % big) == 0)
    {
     	return    
    }
    
    
}
"
3f02be2c2e5d97155756a9c83acc8c51170ff615,"public String[] fizzBuzz(int start, int end)
{
    String[] stringArray = new String[end - start];
    for (int i = 0; i < end - start; i++);
    {
       	if((((i + start) % 3) != 0) && (((i + start) % 5) != 0)
        {
        	stringArray[i] = String.valueOf(i + start);
        }
        else if ((((i + start) % 3) == 0) && ((((i + start) % 5) == 0)
        {
        	stringArray[i] = ""FizzBuzz"";                     
        }
        else if (((i + start) % 3) == 0)
        {
        	stringArray[i] = ""Fizz"";                   
        }
        else if (((i + start) % 5) == 0)
        {
        	stringArray[i] = ""Buzz"";                   
        }
        
                                            
    }
        return stringArray;
    
}
"
8c7547c3ce9120e7339ca15bebdc5c899d2ab54d,"public boolean canBalance(int[] nums)
{
    boolean x = false;
    int sum1 = 0;
    int sum2 = 0;
    int y = 0;
    for (int i = 0; i < nums.length; i++)
    {
		for (int j = 0; j < nums.length; j++)
        {
            y = i + 1;
            if (y != nums.length - 1)
            {
            	sum1 += nums[y];
                y++;
            }
            sum2 += nums[j];
        }
        sum2 -= sum1;
        if (sum1 == sum2)
        {
			x = true;
            break;
        }
    }
    return x;
}
"
2ed7f6d787e101490eeaad0609644558aad02f27,"public String atFirst(String str)
{
    if (str.length() >= 2)
       return str.substring(0, 2);
    else if (str.length() == 1)
        return str.subcharAt(0) = ""@"";
    else 
        return ""@@"";
        
}
"
361cffcd59168c73e46f71e92db3a9f3ea824551,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        if (temp >= 60 && temp <= 100)
        {
            return true;
        }
    }
    else
    {
        if (temp >= 60 && temp <= 90)
        {
            return true;
        }
    }
    return false;
}
"
ea4619ee021a130e0b97ab090abb3cb491e41806,"public String[] fizzBuzz(int start, int end)
{
    String[] arr = new String[end - start];
    
    for(int i = start; i < end; i++) {
        if(i % 15 == 0) {
            arr[i - start] = ""FizzBuzz"";
        } else if(i % 3 == 0) {
            arr[i - start] = ""Fizz"";
        } else if(i % 5 == 0) {
            arr[i - start] = ""Buzz"";
        } else {
            arr[i - start] = String.valueOf(i);
        }
    }
                                                      
    return arr;
}
"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
e61531131e67b061d6cf7718ecb13876185241fb,"public int[] fix45(int[] nums)
{
    int startZ = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int z = startZ + 1; z < nums.length; z++)
            {
                if (nums[z] == 5)
                {
                    startZ = z;
                    nums[z] = nums[i + 1];
                    nums[i + 1] = 5;
                }
            }
        }
    }
    
    return nums;
}
"
5d7432d33ad87a907b1948403e9789d1d8186233,"public int sum3(int[] nums)
{
    int a = 0;
    int b = 0;
    int c = 0;
    int sum = 0;
    int[] newnums = {a, b, c};
    sum = a + b + c;
    return sum;
}
"
50524fab746a235a3962d0a2138f7a7badee5109,"public int countCode(String str)
{
	int times = 0;
	int i = 0;
	int len = str.length()-3;
	while(i <  len)
	{
		if(str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i+3) == 'e')
		{
			times++;
			i += 4;
		}
		else
			i++;
	}
	return times;
}

"
dbe8fea7361668f5e7ebc2eb606004b6fbf83144,"public int[] fizzArray(int n)
{
     int[] arr = new int[n];
    
    for(int i = 0; i < n; i++)
        arr[i] = i;
              
return arr;
}
"
1a7e8816f08513f096763b42bde6b9576592fdd6,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer == true && temp >= 60 && temp <= 100)
    {
        return true;
    }
    else if (isSummer == false && temp >= 60 && temp <= 90)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
f30654182094f99250e185d999714f2745fd679b,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean check = false;
    if (nums.length == 0)
    {
        return sum;
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (check)
        {
            if (nums[i] == 6)
            {
               check = true;
            }  
        }
        else if (nums[i] == 7)
        {       
            check = false;
        }
        if (!check)
        {
            sum = sum + nums[i];
        }
    }
    return sum;
}
"
3a6926253f22b4fe6d5e934cbd56d32c6fdabb31,"public String without2(String str) 
{
int Length = str.length();   
String beginning = str.substring(0, 2);
String ending = str.substring(Length -2, Length);
     
    if (Length == 2)
    {return """";}
    
    if (Length < 2)
    {return str;}
    
    if (Length >= 2 && beginning.equals(ending))
    {return str.substring(2);}
    
    if (Length < 2 && beginning.equals(ending))
    {return str;}
     
    else 
    {return str;}
}
"
02e9ac577f0b00fe3bc96f0b7f3177962e2f7569,"public String plusOut(String str, String word)
{
	int findWord = str.indexOf(word);
    int wordLength = word.length();
    int strLength = str.length();
    String newString = """";
    String firstPart = str.substring(0, findWord);
    String wordPart = str.substring(findWord, wordLength);
    String lastPart = str.substring(wordLength, strLength);
    int firstPartLength = firstPart.length();
    int lastPartLength = lastPart.length();
    while (findWord != -1)
    {
        findWord = str.indexOf(word, findWord + 1);
        for (int i = 0; i < firstPartLength; i++)
        {
            newString = newString + ""+"";
        }
        newString = newString + word;
    }
    if (findWord == -1)
    {
        for (int i = findWord + wordLength; i < strLength; i++)
        {
            newString = newString + ""+"";
        }
    }
    return newString;
}
"
572da29311f095a06dfb9c24244dbe66001dcf26,"public boolean xyBalance(String str)
{
 	if (str.endsWith(""y""))
        return true;
    if (str.endsWith(""x""))
        return false;
    else
        return false;
}
"
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
"
10b44d4e226066fd294e08561de685bbbe99a1de,"public int redTicket(int a, int b, int c)
{
    int value = 1;
    if ( a == b && b == c)
    {
        if ( a == 2)
        {
            value = 10;
        }
        else 
        {
            value = 5;
        }
    }
    else if ( a == b || a == c)
    {
        value = 0;
    }
    return value;
}
"
265dd4458fb43967c87890408a4569ed8e08a397,"public String alarmClock(int day, boolean vacation)
{
    if alarmClock(< 6, false)
    {
        return ""7:00""
    }
}
"
4e9341799b40a642bd11caae15b55e5bee2a0cdb,"public boolean xyBalance(String str)
{
    int l = str.length() - 1;
    char c;
    for(int i = l; i >= 0; i--)
    {
        x = str.charAt(i);
        if(c == 'x')
        {
            return false;
        }
        else if(c == 'y')
        {
            return true;
        }
    }
}
"
030e7ff87c4439137effb9d0d7df97afb7913925,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}
public int round10(int num)
{
    int round = 0
    if (num >= 10)
    {
        round = num - ((num/10) * 10);
    }
    
}
"
e66af3fd10029e3b0eddec751863c4988c7a3b9a,"public boolean sameEnds(int[] nums, int n)
{
    int num = 0;
    for (int i = n; i > 0 n;i--)
    {
        if (nums[i] == nums[nums.length - i + 1])
        {
            num = num + 1;
        }    
    }
    if (num == n)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
6e339955bc10f39b00fd10bbeb80bf4d18608320,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer == true){
        if (temp >= 60 && temp <= 100)
            return true;
        else
            return false;
    }
    else if (temp >= 60 && temp <= 90)
        return true;
    else
        return false;
}
"
4912db1394055b187ac0c420f9c1d8504853cb11,"public boolean evenlySpaced(int a, int b, int c)
{
    int num1 = Math.abs(a-b);
    int num2 = Math.abs(a-c);
    int num3 = Math.abs(b-c);
    if (a==b && b==c)
        return true;
    if (a==b || b==c || a==c)
        return false;
    return false;
    if(true) return;
    if (num1==num2 || num1==num3)
        return true;
    if (num2==num3 || num2==num1)
        return true;
    return false;
}
"
9d066ab87f1142a07ca2a9f2c4b85ea69fd86783,"public String without2(String str) 
{
    String blank = """";
    int len = str.length();
    if (len <= 1)
        return str;
    else if (len == 2)
        return blank;
    else if (len == 3)
        return str.substring(len - 1);
    String firstPart = str.substring(0, 1);
    String lastPart = str.substring(len - 2, len - 1);

  	
    if (firstPart == lastPart)
    {
        return str.substring(1, len - 1);
    }
    else
        return str;
    
   
}
"
377d33b5c5fd6194c58592818a016612e427dfc7,"public int[] fix45(int[] nums)
{
    int f45 = 0;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i + 1] != 5)
		{
			for(!(nums[f45] == 5 && (f45 == 0 || f45 > 0 && nums[f45 - 1] != 4)) f45++)
            {
			nums[j] = nums[i + 1];
			nums[i + 1] = 5;
            }
		}
	}
	return nums;
}
"
390cb0d114ae7595435ca6326f70fb705ed79016,"public int sum67(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            for (int j = i; nums[j] == 7; j++)
            {
                if (j == nums.length - 1)
                {
                    return sum;
                }
                else
                {
                    i = j + 1;
                }
            }
        }
        sum += nums[i];
    }
    return sum;
}
"
8ff2bbf7b0b8b3388076f7accf0194eb817a8d98,"public String zipZap(String str)
{
    char strChar;
    strChar = char.valueOf(str)
}
"
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
"
9f87b2b05c03f2be8a156ec1c96ef54488b5591a,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean check = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (check)
        {
         	if (nums[i]==7)
            {
                check = false;
            }
        }
        else if (nums[i]==6)
        {
            check = true;
        }
        else
        {
            sum = sum + nums[i];
        }
    }
    return sum;
}
"
80f2204bfa4a7db9a4c011372990b5a922eee0af,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
   int start = nums[0];
    for (int i = 0; i < nums.length - 1; i++)
    {
     	
        nums[i] = nums[i + 1];
        if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }
        	
    }
    
    
    return nums;   
}
"
dc20b50f1f6fc266d80c9cceb3e26ca923d1b02f,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
    //return nums;
   int start = nums[0];
    for (int i = 0; i < nums.length; i++)
    {
     	int j = 1;
        nums[i] = nums[j];
        j++;
        //nums[i] = nums[i + 1];
        /*if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }*/
              	
    }
    
    
    return nums;   
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
0c7619ccc4f03268fbf9f6684dc33f4b077f9702,"public int[] zeroMax(int[] nums)
{
    int len = nums.length;
    for (int i = 0; i < len; i++)
    {
        if (nums[i] == 0)
            nums[i] = this.highestOdd(nums);
        
    }
    return nums;
}
public int highestOdd(int[] nums)
{
    int len = nums.length;
    int highestOdd = 0;
    for (int i = 0; i < len; i++)
    {
        int num = nums[i];
        if (num%2 == 1)
        {
            if (num > highestOdd)
                highestOdd = num;
        }
    }
    return highestOdd;
}
"
07f6671fb9cba5bb32a3128d222b579891bf6178,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( nums[i] == 7)
        {
            return true;
        }
        else if (nums[i + 1] == 7 && nums[i - 1] == 7)
        {
            return true;
        } 
    }
    return false;
}
"
6e8cdb312eaf547b8488629b9abc249fe869a96d,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
    if(a == b && b == c)
        return 5;
    if (a != b && a != c)
        return 1;
    return 0;
}
"
84924d98acb74b4688659141fde0578884cfab5a,"public int[] fix34(int[] nums) 
{
	int j = 1;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 3 && nums[i+1] != 4)
		{
			for(; nums[j] != 4; j++);
			nums[j] = nums[i+1];
			nums[i+1] = 4;
		}
	}
	return nums;
}
"
7f257761813c7416734e764821956e44676369a5,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend)
    {
        if (cigars >= 40 && cigars <= 60)
        {
            return true;
        }
        else
            return false;
    }
    if (isWeekend)
    {
        if (cigars >= 40)
        {
            return true;
        }
        else
            return false;
    }
}
"
265b75653ddb4eaf4e5673f535b2368ea95a9239,"public int noTeenSum(int a, int b, int c)
{
	int fixedA = this.fixTeen(a);
    int fixedB = this.fixTeen(b);
    int fixedC = this.fixTeen(c);
    return fixedA + fixedB + fixedC;
}

public int fixTeen(int n)
{
    if( n >= 13 && n <= 19 )
    {
        if( n == 15 || n == 16 )
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }
}
"
ac791e33437b3b26bd56526f8f1a68c958771022,"public int sum3(int[] nums)
{
    return nums[0]+nums[1]+nums[2];
}
"
b58052382aba70ea7745fa21972bfba9bbe55340,"public int luckySum(int a, int b, int c)
{
    if (a==13)
    	return 0;
    else if(b==13)
        return a;
    else if(c==13)
        return a+b;
    else
        return a+b+c;
}
"
297ca83c5d66a44ff6320453a2f0c42d45636f48,"public int[] withoutTen(int[] nums)
{
    int size = nums.length;
    for (int i = 0; i < size; i++)
    {
         if (nums[i] == 10)
         {
            for(int k = i; k < (size - 1); k++)
            {
                	nums[k] = nums[k+1];
            }
                nums[size-1] = 0;
         }
     }
    return nums;
}
"
0159ad89caad1930a03fecc239d981db36662d3c,"public String mixString(String a, String b)
{
	int aLen = a.length();
	int bLen = b.length();
	int i = 0;
	StringBuilder stbuild = new StringBuilder(aLen+bLen);
	for(; i < aLen && i < bLen; i++)
	{
		stbuild.append(a.charAt(i));
		stbuild.append(b.charAt(i));
	}
	// only 1 for loop will actually run
	for(; i < aLen; i++)
		stbuild.append(a.charAt(i));
	for(; i < bLen; i++)
		stbuild.append(b.charAt(i));
	return stbuild.toString();
}"
78bb235a5501b72cc8aff794f913fbc2dbbc211c,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode == true)
    {
    	if (n <=1 || n >= 10)
            return true;
        else
            return false;
    }
    else
    {
        if (n>=1 && n<=10)
            return true;
    	else
        	return false;
    }
}
"
dc23e528bd74dbcdb541ee29b004f0426a8d31c4,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer && temp >= 60 && temp <= 100)
        return true;
    if (!isSummer && temp >= 60 && temp <= 90)
        return true;
    return false;
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
0302770bfa1d80a26d8f7722e81454eef91f7586,"public String plusOut(String str, String word)
{
    String fuckThis = """";
    for (int i = 0; i < str.length(); i++){
    	if (word == str.substring(i, i + word.length())){
            i += word.length();
        } else {
            fuckThis += ""+"";
        }
    }
    return fuckThis;
}
"
a89a88b8e4d274eb5011d40daddee0f3f6db7655,"public int sum67(int[] nums)
{
    int sum = 0;
	boolean sixMode = false;
	for(int i = 0; i < nums.length; i++)
	{
		if(sixMode)
		{
			if(nums[i] == 7)
				sixMode = false;
		}
		else if(nums[i] == 6)
			sixMode = true;
		else
			sum += nums[i];
	}
	return sum;
}
"
cbc4f35eefa45c4b25f9ffe6dc47d4ec0c431fad,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean a = true;
    if(isMorning == true && isMom == true)
        a=true;
    if( &&isAsleep == true)
        a = false;
    if(isMorning == true && isMom == false && isAsleep == false)
    	a = false;
    return a;
}"
8243c75a69e18cb6c9f02b072995835b37129ed9,"public boolean sameEnds(int[] nums, int len) {
boolean result = true;
int range = len;
for (int i =0; i <range;i++)
if (!(nums[i] == nums[nums.length - range + i]))
result = false;
return result;
}
"
01dada3eb82d5f59744af5d29ff6f78ae6dbe6ba,"public boolean has77(int[] nums)
{
    for(int i = 0; i < nums.length - 1; i++)
  {
  	if(nums[i] == 7)
  	{
			if(nums[i+1] == 7)
            {
				return true;
            }
			else if(i < nums.length - 2 && nums[i+2] == 7)
            {
				return true;
            }
		}
	}
	return false;
}
"
c0712ebd4d5fa00af45b0f0433d7c42b78956832,"public boolean canBalance(int[] nums)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
        int sum1 = 0;
        int sum2 = 0;
        
        for (int x = 0; x < i; x++)
        {
            sum1 = sum1 + nums[x];
        }
        
        for (int y = i; y < nums.length; y++)
        {
            sum2 = sum2 + nums[y];
        }
        
        if (sum1 == sum2)
        {
            return true;
        }
    }
    
    return false;
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
72ecc8394c6495b7c9dc9d4810c8469c5f8fa3b9,"public int luckySum(int a, int b, int c)
{
    int sum=0;
    if(a==13)
    {
        sum=0;
    }
    if(b==13)
    {
        sum=a;
    }
    if(c==13)
    {
        sum=a+b;
    }
    return sum;
}
"
bab5cb0c2c8a924af65c6c139ed8497d525bd0a0,"public int[] fix45(int[] nums)
{
	
 	int k =0;
 	 for(int i=0; i< nums.length; i++)
     for(int j=0; j<nums.length; j++)

     if(nums[i]==4 && nums[j]==5)
     {
      k  =nums[j+1];
      nums[j+1] = nums[i];
      nums[i] = k;
     }
     return nums;
}
"
fa0f6e6f624573c3048d850049c74cdd83969733,"public boolean canBalance(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
        sum += nums[i];
    int sumSoFar = 0;
    for (int j = 0; j < nums.length; j++)
    {
        sumSoFar += nums[j];
        if (sum == 2 * sumSoFar)
            return true;
    }
    return false;
}
"
866c526e1b661f9a2af50841c45fdecaf6f611b6,"public boolean canBalance(int[] nums)
{
    int front = nums[0];
    int tail = 0;
    int j =nums.length-1;
    int i =0;
    
     for(;i<j;i++)
   	 {
         if( front < tail)
    	 {
        	front += nums[i];
         }
          for(;j>i;j--)
        {
            if(front>tail)
    		{
            tail+=nums[j];
        	}
   		 }
    }
    
   
    
    return front==tail;
}
"
0f968c8e8b9da897e2e04795723b83a276d6b958,"public boolean sameEnds(int[] nums, int n)
{
    int start = 0;
	int end = nums.length-len;
	for(; len > 0; len--)
	{
		if(nums[start] != nums[end])
        {
			return false;
        }
		else
		{
			start++;
			end++;
		}
	}
	return true;
}
"
7a4fd124298c10de8d49f32786842df7c034968c,"public int[] tenRun(int[] nums)
{
    int [] newnums = new int[nums.length];
 
    int temp = nums[0];
    for (int i = 0; i < nums.length; i++)
    {
    	
        if(nums[i] % 10 == 0)
        {
        	temp = nums[i];             
        }
        	if(temp % 10 == 0)
            {
        	newnums[i] = temp;
            }
        	else
            {
            newnums[i] = nums[i];
            }
            }
        
    }
return newnums;
}
"
805cd69cde567a8b05acfc59036fef8080b8d8bf,"public int countEvens(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] % 2 == 0)
            return nums[i];
    	if (nums[i] == 0)
            return nums[i];
    return 0;
}
"
66f39130611dd3af346b241edeb269d336676608,"public boolean sameEnds(int[] nums, int n)
{
    int start = 0;
	int end = nums.length-n;
	for(; n > 0; n--)
	{
		if(nums[start] != nums[end])
			return false;
		else
		{
			start++;
			end++;
		}
	}
	return true;
}
"
73b5e1d5009dfd33667a1138f00a4a0e549687dd,"private boolean canBalance(int[] nums) {
    int first = 0;
    int second = 0;
      
    for(int i = 0; i < nums.length; i++)
        second += nums[i];
              
    for(int i = 0; i <= nums.length - 2; i++) {
        first += nums[i];
        second -= nums[i];
                            
        if(first == second)
            return true;
    }
                                          
    return false;
}"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
97a157281771e2a5bd7e02c7805eec242da08d70,"public boolean sameEnds(int[] nums, int n)
{
    int[] one = new int[n];
    int[] two = new int[n];
    for (int i = 0; i < n; i++)
    {
        one[i] = nums[i];
    }
    
    for (int i = nums.length - n; i < nums.length; i++)
    {
        two[i] = nums[i];
        
    }
    if(n == 0)
    {
        return true;
    }
    
    if(n == nums.length)
    {
        return true;
    }
    
    if(one.equals(two))
    {
        return true;
    }
    return false;
        
}
"
c1502aec65440e9dca334c96818bd866a88fb074,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    return a+b+c;

}

public int fixTeen(int n)
{
    if ((n != 15) && (n!= 16))
    {
    	if (13<=n<=19)
        {
            return 0;
        }
        else
        	return n;
    }
	else
        return n;
}
"
f25a34e7695ea20aeda5adbe467e84f171eeb63a,"public int dateFashion(int you, int date)
{
    if (you >=8 || date >=8)
        return 2;
    if (you <=2 || date <=2)
        return 0;
    else
        return 1;
    
    
}
"
86776fdb13bcf1761b2979ec805393a4824faa64,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
	int rem = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			array[rem] = nums[i];
			p++;
		}
	}
	return array;
}
"
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
2093e5a6fbadbd5819e6c5199741af684cf78989,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum > 10)
        if (sum <19)
            return 20;
    return sum;
}
"
baf237651b2d2aada1d0c14cf66ef45ad8e5655a,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    int size = nums.length;
    int[] newNums = new int[size];
    for (int i = 0; i < size; i++)
    {
        if (nums[i] != 0)
            newNums[i]=nums[i];
        else
        {
            int replacementIndex = i;
            int k;
            for (int j = i; j < size; j++)
            {
                k=j;
                if(nums[j] % 2 == 1 && nums[j] > largestOdd)
                    largestOdd = nums[k];
            		replacementIndex = k;
            
            }
            newNums[i]=nums[replacementIndex];
        }
    }
    return newNums;
}
"
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
"
f53e5b2ac704bac41d43ce2738b657893c3c4185,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.size()p - 1; i++)
    {
     	if (nums[i] != 13)   
        {
         	nums[i] = 0;   
        }
     	sum = sum + nums[i];   
    }
    return sum; 
}
"
1f9cfe0ad15be359081183aba85c155aa774ac9b,"public String plusOut(String str, String word)
{
    int wLen = word.length();
	int pos = str.indexOf(word);
	int len = str.length();
	int i = 0;
	StringBuilder stbuild = new StringBuilder(len);
	while(pos != -1)
	{
		while(i < pos)
		{
			stbuild.append('+');
			i++;
		}
		stbuild.append(word);
		i = pos + wLen;
		pos = str.indexOf(word, i);
	}
	for(; i < len; i++)
		stbuild.append('+');
	return stbuild.toString();
}
"
2940de5ad771550e5e67745a100b0a4f599fd656,"public int[] seriesUp(int n)
{
    int[] out = new int[n * (n+1)/2];
    for (int i = 0; i < n; i++);
    {
        for (int j = 0; j < n; j++)
        {
            out[j] = 1 + j;
        }
    }
    return out;
}"
e9fa02c7924f9f90525fe8d363dc63b35ed788bf,"public int noTeenSum(int a, int b, int c)
{
	fixTeen(a,b,c);
    return( a + b + c);
    
}

public int fixTeen(int n)
{
    if( 13<= a <= 19)
    {
        if(a == 15)
          return (a == 15);
        if(a == 16)
           return (a == 16);
    	else
            return (a == 0);
    }
    if( 13<= b <= 19)
    {
        if(b == 15)
          return (b == 15);
        if(b == 16)
           return (b == 16);
    	else
            return (b == 0);
    }
    if( 13<= c <= 19)
    {
        if(c == 15)
          return (b == 15);
        if(c == 16)
           return (c == 16);
    	else
            return (c == 0);
    }
       
}
"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
e8e174ecfc4990905e07f644e03768ad784a6d16,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean party = false;
    if (cigars > 39 && cigars < 61 && !isWeekend) {
        party = true;
    }
    
    else if (cigars > 39 && isWeekend)
        party = true;
}
	return party;
}
"
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
"
06fbe535af4fc5fc7e3cbbec4d84655e166600f4,"public int greenTicket(int a, int b, int c)
{
    if (a==b)
        if (b==c)
            return 20;
    	return 10;
    else if (a==c || b==c)
        return 10;
    else
        return 0;
}
"
40fcb341ac6d39e2d5a30da39b58b27c2b5d293b,"public int[] fix45(int[] nums)
{
    for (int y = 0; y < nums.length; y++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            
        }
    }
}
"
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
"
42c1b13dfbc2f7dd20266742451da0be59cbd49a,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (!isBirthday)
    {
    	if (speed <= 60)
    	{return 0;}
        
    	else if (speed >= 61 && <= 80)
    	{ return 1;}
        
    	else 
    	{return 2;}
    }
     else if (isBirthday)
        if (speed <= 65)
    	{return 0;}
    
    	if (speed >= 66 && <= 85)
    	{ return 1;}
    
    	else 
    	{return 2;}
}
"
6f7206ab6b122777d06b56095b01f0e404841e85,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a-b == c-b)
    {
        return true;
    }
    
    else if (b-a == a-c)
    {
        return true;
    }
    
    else if (a-c == c-b)
    {
        return true;
    }
    
    else if (c-b == b-a)
    {
        return true;
    }
    
    
    return false;
}
"
50513f69c5118713e0f445b8834ac4a3e46d417a,"public int[] shiftLeft(int[] nums)
{
    int[] left = new int[nums.length];
    for (int i = 0; i < nums.lenght - 1; i++){
        left[i] = nums[i+1];
    }
    left[nums.lenght - 1] = nums[0];
    return left;
}
"
fdd9c7578eae0199293f5c67050555c877e59579,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
    }
                           
    return (sum - max - min) / (nums.length - 2);
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
86757d01e597c85e23352aeb4e2d80fde96657bd,"public int[] shiftLeft(int[] nums)
{
    int[] foo;
    foo = new int[nums.length];
    if (nums.length == 0)
    {
    	return foo;
    }
  	for (int i = 0; i < nums.length-1; i++) 
    {
    	if (i > 0)
        {
            foo[i] = nums[i+1];
        }
    }
  	if (nums.length > 1)
    {
    	foo[0] = nums[1];
    }
  	foo[nums.length-1] = nums[0];
  	return foo;
}
"
32e807f031feb64bfe05dd26099b4a5d46dcbd7f,"public int makeChocolate(int small, int big, int goal)
{
    int no = -1;
    int value = 0;
    int remainder = 0;
    int numberbig = big*5;
    int numbersmall = small*1;
    if(goal>5)
    {
    	remainder = goal % numberbig;
        value = remainder%small;
    }
    else if (goal<5)
    {
        value = goal/small;
    }
    
    
    if (value>0)
    {
        return value;
    }
    else
    {
        return no;    
    }
      
}
"
623fcbe2f58d5854852bb8292018e9b669cd4374,"public int[] shiftLeft(int[] nums)
{
    int first = nums[0];
    int index = 0;
    int[] newArray = new int[nums.length];
    for (int i = 1; i < nums.length; i++)
    {
        newArray[index] = nums[i];
        index++;
    }
    newArray[nums.length] = first;
}
"
557026f064a89be4df627a611b8a898f7a2fc2f3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if ((nums[i] != val) || (nums[i + 1] != val))
        {
            return flase;
        }          
        
    }
     return false;
}
"
56e97e6d025861d76cedce1965822872820b4ac0,"public String getSandwich(String str)
{
    int pos1 = -1;
    int pos2 = -1;


    for (int y = 0; y < str.length() - 6; y++)
    {
        if (str.substring(y, 5) == ""bread"")
        {
            pos1 = y;
            break;
        }
    }
    
    int t = str.length() -5;
    
    for (int y = t; y > 5; y--)
    {
        if (str.substring(y, 5) == ""bread"")
        {
            pos2 = y;
            break;
        }
    }

    if (pos1 >= 0 && pos2 >= 0)
    {
        return str.substring(pos1+5, pos2-5);

    }
    else
    {
        return """";
    }
}
"
ab13436ff4143ebc7d6d69d730a35242364a24e1,"public int luckySum(int a, int b, int c)
{
    if(a==13)
    {
    	return c;
    }
    else if(b == 13)
    {
    	return a;
    }
    else if(c == 13)
    {
    	return (b+a);
    }
    return a, b, c;
}
"
14bae45e226cf80e5a5d823493bf787de23fd8af,"public boolean xyBalance(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
    if (str.charAt(i) == 'x'&& str.contains('y'))
    {
        return true;
    }
    return false;
    }
}
"
2a35826fbfa6d4b929d8c090ec40e60590d6eafd,"public int redTicket(int a, int b, int c)
{
    if(a==2 && b == 2 && c == 2)
        return 10;
    else if(a==b && b==c)
        return 5;
    else if(b==c)
        return 1;
    else
        return 0;
}
"
a3e152967d7d008b50968916b9389141c0fff350,"public boolean sameEnds(int[] nums, int n)
{
    int length = nums.length;
    if ( n == 0 || n == length )
    {
        return true;
    }
    else
    {
        boolean same = true;
        for ( int i = 0; i < n; i++ )
        {
            if ( nums[i] != nums[length - n + i] )
            {
                same = false
            }
        }
        return same;
    }
}
"
e4bc09ebabaf0985bf4c9579c9aa991d782d0f12,"public boolean endOther(String a, String b)
{
   	String lowerA = a.toLowerCase();
    String lowerB = b.toLowerCase();
    int lengthA = a.length();
    int lengthB = b.length();
    String end;
    String temp;
    if (lengthA >= lengthB)
    {
        end = lowerA.substring(lengthA - lengthB);
        temp = lowerB;
    	return (end.equals(temp));
    }
    else if (lengthA < lengthB)
    {
        end = lowerB.substring(lengthB - lengthA);
    	temp = lowerA;
		return (end.equals(temp));
    }
}
"
7c7871661cd4465fe9ca613614480b58e74f7aad,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        repeat = repeat + str.substring(str.length() - n);
    return repeat;
}
"
bfef0f13f16905b5acddfbd3c3900d7b4a2e5de9,"public boolean xyzThere(String str) {
  boolean res = false;

  if(str.contains("".xyz"") == false && str.contains(""xyz"") && str.contains(""abc.xyzxyz"")){
    res = true;
  }

  return res;

}"
96ff8a16b595563d8b22b2ca487eb94a5de96522,"public boolean great; 
public int a; 
public int b; 
public int d;

public boolean love6(int a, int b)
{
    a + b = d; 
    a - b = e; 
    b - a = f; 
    if (a == 6 || b == 6)
    {
        great = true;
    }
    else if (d = 6 || e = 6 || f = 6)
    {
        great = true; 
    }
    else 
    {
        great = false;
    }
    return great; 
}
"
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
"
64520cbb7c1e44f2b914c32b1d9f62b2e03ce23e,"public boolean twoTwo(int[] nums)
{
    for( int i =0; i<nums.length; i++)
    {
     	if (nums[i] == 2)
        {
            int count = 0;
        	for (int j =i; j<nums.length; j++)
            if (nums[j] ==2)
                count++;
        	else
                break;
        }
        i = i + count;
        if (count < 2)
            return false;
    }
    return true;
}
"
d2f05cc468a84bb01f5d675dcfafb4beb9a0b4c9,"public int[] fizzArray(int n)
{
    int[] output = new int[n]();
    for(int i = 0; i < n; i++){
        output[i] = i;
    }
    return output; 
}
"
b16439cf6ef5c619010c64a8fb33444995f538e6,"public String plusOut(String str, String word)
{
    String returnString = """";
    int lastIndex = str.indexOf(word);
    int i = lastIndex;
    
    while (i < str.length())   
    {
        if (i == str.indexOf(word, lastIndex))
        {
            returnString = returnString + word;
            lastIndex = i;
            i += (word.length() - 1);
        }
        
        else
        {
            returnString = returnString + ""+"";
            i++;
        }
    }
	return returnString;
}
"
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
"
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
"
b219985082e6e029d2fce9beb0b422238c034c69,"public boolean xyzThere(String str)
{
    int index = str.indexOf(""xyz"");
    index = index - 1;
    str c = str.charAt(index);
    if (c.equals("".""))
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
"
2bc6224c6d864641adc76e92803ba8b015954d7f,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
625b7afad262808fb10b8f47e537392aaefada69,"public String mixString(String a, String b)
{
    for (int x = 0; x <= a.length(); x++)
    {
        str = a.substring(x) + b.substring(x)
    }
    return str;
    
}
"
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
"
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
"
c03d3cd59deeae449221ee08e85b090c15349032,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if(isMom)
            return true;
    if(isAsleep)
        return false;
    else if(!isMorning)
        return true;      
}"
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
"
b227c9946066c1da12fa3ea14c8fde0a0c20c292,"public int countEvens(int[] nums)
{
    int a = 0;
    for (i = 0; i < nums.length;i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
"
6fae7f6b8a427d71c76e99f251e08b59c6b293a4,"public boolean has77(int[] nums)
{
    for(int i = 0; i < nums.length-1; i++)
    {
        if (nums[1] == 7)
        {
            if (nums[i+1] == 7)
            {
                return true;
            }
            else if (i < nums.length-2 && nums[i+2] == 7) 
            {
                reutrn true;
            }
        }
    }
    reutrn false;
                
}
"
b2c9280555418138146570c5c21187cabdb0a7a7,"public int noTeenSum(int a, int b, int c)
{
  a = fixTeen(a);
  b = fixTeen(b);
  c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n>=13 && n<=19 && n!=15 && n != 16)
    {return 0;}
    else if (n == 15 || n == 16)
    {return n;}
    else 
    {return n;}
}
"
9a09bf58dc151f5a5084614b92da712a540e9f41,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        if (temp >= 60 && <= 100)
            return true;
    }
    else
    {
         if (temp >= 60 && <= 90)
            return true;
    }
    return false;
}
"
0039809a4ff55b9853b7baa91acd5b7bb2edb45f,"public boolean xyzThere(String str)
{	
    int i = 0;
    int count = 0;
    String a = new String(""."");
    String x = new String(""x"");
    String y = new String(""y"");
    String z = new String(""z"");
   // !a.equals(str.charAt(i)) && 
    for (i = 0; i<=str.length()-2; i++)
    { 	if (x.equals(str.charAt(i)) && y.equals(str.charAt(i+1)) && z.equals(str.charAt(i+2)))
            {
                count = count + 1;
        		
                
            }
    }
    if (count >= 1)
    {
     	return true;   
    }
    else 
    {
        return false;
    }
}
"
e51a77ef18d8cc979ead1c378dc216af93ea8163,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        if (n <= 1 || n >= 10)
        {
        	return true;
        }
        else
        {
            return false
        }
    }
    else if (n >= 1 && n <= 10)
    {
        return true;
    }
    else 
    {
        return false;
    }
}
"
4933b7c1f5758ce9c96a5ba3b1862dc8bc16446c,"public int noTeenSum(int a, int b, int c)
{
fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n > 12 && n < 15 && n > 16 && n <19) {
        n = 0;
}
"
c95c93f8d1fa224a7fbbc0fb3c04049e5934f3d4,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            return true;
        }
    }
    return false;
    
}
"
be512a309ada9ac4c145827a9dee60f0d18cb960,"public boolean xyzThere(String str)
{
    int check = str.substring(indexOf(""xyz"");
                              
    if (check == -1 || str.substring(check - 1, check).equals("".""))
    {
        return false;
    }
    
    else
    {
        return true;
    }
}
"
27ced9f412138c0fe596bab23d6119a3c93f5686,"public int[] shiftLeft(int[] nums)
{
    int length = nums.length;
    int special = nums[0];
    if (length == 0)
    {
        return nums;
    }
    for (int i = 0; i < length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[length - 1] = special;
    return nums;
}
"
401928b7c4f13266da10f5ba2a473bc98576a846,"public boolean canBalance(int[] nums)
{
      int lSum = 0;
  for (int i = 0; i < nums.length; i++) {
    lSum += nums[i];
    int rSum = 0;
    for (int j = nums.length-1; j > i; j--) {
      rSum += nums[j];
    }
    if (rSum == lSum)
      return true;
  }
  return false;

}
"
506a4e8e635ea84f86a1df1fa94b292b80d7144c,"public String plusOut(String str, String word)
{
    String plus = new String();
    for (int i = 0; i < str.length(); i++)
    {
        if (i <= str.length() - word.length())
        {
            if (str.substring(i, i + word.length()).equals(word))
            {
                plus += word;
                i += word.length();
            }
            else
            {
                plus += '+';
            }
        }
    }
    return plus;
}
"
e3c4b982f4c5f26837f5749a1e65535cee0bb009,"public boolean canBalance(int[] nums)
{
    int left, right;
    
    for (int i = 0; i < nums.length; i++)
    {
        left = 0;
        right = 0;
        for (int j = 0; j < i; j++)
        {
            left += nums[j];
        }
        for (int j = i; j < nums.length; j++)
        {
            right += nums[j];
        }
        if (left == right)
        {
            return true;
        }
    }
    
    return false;
}
"
cdbd6769faf44b710f4b50d3f75878e7dff820b5,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    return ((a + b) < 10 || (a + b) > 19);
}
"
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
"
69c096424e55253656a9629d3f69055f7ba00768,"public boolean love6(int a, int b)
{
    private int num = a - b;
 	if (num = math.abs(6))
    {
        return true;
    }
    else if (a + b = Math.abs(num))
    {
        return true;
    }
    else if ( a = Math.abs(6) || b = Math.abs(6));
    {
        return true;
	}
        return false;
}
    "
791add4ffcb43039e90a3510fe1ee1fca2477fa0,"public String[] fizzBuzz(int start, int end)
{
    String[] arr = new String[end - start];
    
    for(int i = start; i < end; i++) {
        if(i % 15 == 0) {
            arr[i - start] = ""FizzBuzz"";
        } else if(i % 3 == 0) {
            arr[i - start] = ""Fizz"";
        } else if(i % 5 == 0) {
            arr[i - start] = ""Buzz"";
        } else {
            arr[i - start] = String.valueOf(i);
        }
    }
                                                      
    return arr;
}
"
ac50df7405fa705d67d8b1e0ed3b0ae92fb16569,"public boolean xyzThere(String str)
{
    //check from variable starting at 0
    //and go until str.length
    int first = str.indexOf(""xyz"");
    if (str.charAt(first - 1) != '.')
        return true;
    else if (str.charAt(first - 1) == '.')
        return false;
    return false;
}
"
e2468a1fbac0f816c4df8538f0af6626551638b0,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
325eb8d9cda58db31c3a0157abc1cd41245be9e7,"public int sortaSum(int a, int b)
{
    int result = 0;
    int sum = a + b;
    if (sum <= 19 || sum >= 10)
    {
        result = 20;
    }
    else 
    {
        result = sum;
    }
}
"
7991e5a91ee75b2ca8290f4fbbd9dee8ea1ad8dc,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
    }
    return nums;
}
"
8b99629a94054e168dbcad4fff5008f911a37516,"public boolean has77(int[] nums)
{
    for (int i=0;i<nums.length;i++) {
     	if (nums[i] == 7 && nums[i+1] ==7 && i<nums.length-1) {
         return true;   
        }
        if (nums[i] ==7 && nums[i+2] ==7 && i<nums.length-3) {
         return true;   
        }
            
    }
    return false;
}
"
b53ab834a811096b76a803c390009392801834ab,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
cc2272e4b3f7bb3be5535e459f8715727ffb2702,"public boolean love6(int a, int b)
{
    if (a == 6 || b==6)
        return true;
    if(a + b == 6 || Math.abs(a-b) ==6 )
        return true; 
    return false;
}
"
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
"
9e2323cd896bf8c878fad40b42eac0e930afede4,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    String str = String.valueOf(num);
    int stringLength = str.length();
    int lastDigit = Integer.parseString(stringLength);
    if (lastDigit >= 0 && lastDigit < 5)
    {
        return num - lastDigit;
    }
    else if (lastDigit >= 5)
    {
        return num + (10 - lastDigit);
    }
}"
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
"
4333b62c7fd61280f00279732dd695ff60e6829f,"public String zipZap(String str)
{
int len = str.length();
	int lim = len - 2;
	int i = 0;
	char ch;
	StringBuilder stbuild = new StringBuilder(len);
	while(i < len)
	{
		ch = str.charAt(i);
		if(ch == 'z' && i < lim && str.charAt(i+2) == 'p')
		{
			stbuild.append(""zp"");
			i += 3;
		}
		else
		{
			stbuild.append(ch);
			i++;
		}
	}
	return stbuild.toString();

}
"
b34be99893fc029dc3d4af3527c8ca5ffa920388,"public String repeatEnd(String str, int n)
{
    String newString = """";
    
    for (int i = 0; i < n; i++)
    {
        for (int z = n - 1; z > -1; z -= 1)
        {
            newString = newString + str.charAt(str.length() - z);
        }
    }
    
    return newString;
}
"
da430695927531800132c4c876aebdf5fbc8d8c0,"public int countEvens(int[] nums) {
    int count = 0;
    for (int i = 0; i < nums.length; i++)
        if (nums[i] % 2 == 0) count++;
    return count;
}"
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
"
e3604130ed0d8066301429b1026d44bbec5d2b4b,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder(n*n);
    for (int i = 0; i < n; i++)
    {
    	sb.append(n);
    }
    return sb.toString();
}
"
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
"
f0ff60ffa3348331cfe208af920dcd5a665736b5,"public String plusOut(String str, String word)
{
    String finalString = """";
    for (int i = 0; i < (str.length() - word.length()); i++)
    {
        boolean lookForWord = (str.substring(i, i + word.length()) == word;
                               if (!lookForWord)
                               {
                                   finalString = finalString + ""+"";
            }
            else
            {
                finalString = finalString + word;
            }
        }
        return finalString;
}"
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
"
5503ebe8017ceec49242696dfc96bcb8f3fbdb0e,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6)
    {
        return true;
    }
    if (Math.abs(a-b) == 6 || (a + b) == 6)
    {
        return true;
    }
    else 
    {
        return false;
    }
}
"
fae2f7dfe0c7f6a36eed081761f1d04f77387b4b,"

    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }

"
bd4ab1662bb8f09f26dc5dd978ba13826af43bbe,"public int countCode(String str)
{
 int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
3b6a3747d8a8ba7e00b3386b0a9baaad77d0edec,"public boolean sameEnds(int[] nums, int n)
{
    /**
    int same=0;
    for (int i=nums.length-1;i>0 ;i--)
    {
        if (nums[0]!=nums[i])
        {
            same++;
        }
    }
    */
    int same=0;
    int end = nums.length-i;
    for(int i=nums.length; i > 0; i--)
	{
		if(nums[same] != nums[end])
			return false;
		else
		{
			same++;
			end++;
		}
	}
    return true;
        
}
"
451d7cf3947cf16e1f899b26f5aedc6ee3d02acd,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer && temp >= 60 && temp <= 100)
        return true;
    else if (!isSummer && temp >= 60 && temp >= 90)
        return true;
    else
        return false;
}
"
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
"
b94347d88f7dd861caf9264c9a883ef23ae2a6e8,"public int[] seriesUp(int n)
{
    int[] seriesUp = new int[n * (n + 1) / 2];
    int x = 0;
    for (int i = 1; i <= n; i++){
        for (int j = 1; j <= i; j++){
            seriesUp[x] = j;
            x++;
        }
    }
    return seriesUp;
}
"
959dbd2a989a7ce221ec57d0689b4d90d8cb8d7e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning == true && isMom == true)
    {
        return true;
    }
    else if (isMorning == true && isMom == false)
    {
        return false;
    }
    else if (isAsleep == true)
    {
        return false;
    }
    if (isMorning == true && isMom == true && isAsleep == true)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
f1a70eff019ad340ac70636a12658580c5a6310d,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean success = false;
    
    if (isWeekend)
    {
    	if (cigars >= 40)
        {
        	success = true;
            return success;
        }
        else
        {
        	
            return success;
        }
    }
    else
    {
    	if (cigars >= 40 && cigars <= 60)
        {
        	success = true;
            return success;
        }
        else
        {
        	return success;
        }
    }
}
"
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
"
609cc3f20dd1f3529a02ebbed8384395c8400b2b,"public int countEvens(int[] nums)
{
    int evens = 0;
    for (int number: countEvens)
    {
        if (number % 2 == 0)
        {
            evens = evens + 1;
        }
    }
    return evens;
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
0ce574f632f828228b5aa53c124dd0d08477ca82,"public int[] tenRun(int[] nums)
{
    int[] fresh = new int[nums.length];
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            fresh[i] = nums[i];
            int c;
            for (c = i + 1; c < nums.length; c++)
            {
                if (nums[c] % 10 != 0)
                {
                    fresh[c] = nums[i];
                }
                else
                {
                    break;
                }
            }
            i = c;
        }
        else
        {
            fresh[i] = nums[i];
        }
    }
    return fresh;
}
"
be6f330ec55383c3df4f8bb983cb48c54ee2f1e9,"public void int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    	if (speed<=65) {
			return 0;
   	 	} else if (speed>=66 && speed<=85) {
       		return 1;   
        } else if (speed>=86) {
        	return 2;
        }
    else if (isBirthday == false) {
       if (speed<=60) {
			return 0;
   	 	} else if (speed>=61 && speed<=80) {
       		return 1;   
        } else if (speed>=81) {
        	return 2;
        }
    }
}	
"
e6310baa0c47dbc1b8ea9f30219409bd8cb591ff,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer == true) {
        if (temp >= 60 && temp <= 100) {
            return true;
        }
        else {
            return false;
        }
    }
    else {
         if (temp >= 60 && temp <= 90) {
            return true;
        }
        else {
            return false;
        }
    }   
}
"
5c7feaf744df1e6b8f1557078bca4e6ad1f5fca5,"public int sum13(int[] nums)
{
    if (nums.length == 0)
    {
        return 0;
    }
    else
    {
        int finalSum = 0;
        for (int i = 0; i < nums.length; i++)
        {
            if (nums[i] != 13)
            {
                finalSum = finalSum + nums[i];
            }
            else
            {
                i++;
            }
        }
        return finalSum;
    }
}"
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
8faf14f1204c6304c1a1562a50964e420ce74fe5,"public String without2(String str) 
{
    if (str.length() < 2)
        return str;
    else if (str.charAt(0) == str.charAt(str.length() -2)) && str.charAt(1) == str.charAt(str.length() -1))
        str = str.substring(2, str.length());
    	return str;
    else
         return str.
}
"
bb95327d0292272d65dd996e6aa6f61c87319399,"public boolean endOther(String a, String b)
{
    if a.length() == ""a"" + ""b""
        return b.substring(0,1).toLowerCase();
}
"
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
954b684277b4e386b93c914548d0c579aafd6503,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        for (int k = 0; k < nums.length - 1; k++)
        {
            if (i == 4 && k == 5)
            {
                int m = nums[k + 1];
                nums[k + 1] = nums[i];
                    nums[i] = m;
            }
        }
    }
    return nums;
}
"
24e547235c65af1e128434a4e313388c7127e020,"public String repeatEnd(String str, int n)
{
    int length = str.length();
    String newWord = """";
    
    for (int i = 0; i < n; i++)
    {
        newWord += str.substring(length - n, length);
    }
    return newWord;
}
"
528342efb0a38ace805355f9ecda4f69f0397a23,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
	if (a == 13)
    {
        return sum;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        int sum = a + b;
        return sum;
    }
    else
    {
        int sum = a + b + c;
        return sum;
    }
}
"
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
"
3439750259b41a6f74fac56d4dbc326d2ae80e46,"public int countCode(String str)
{
    int num = 0;
    int num2 = 1;
    for (int i = 3; i < str.length(); i++)
    {
        if (str.charAt(num) == 'c' && str.charAt(num2) == 'o' && str.charAt(i) == 'e')
        {
            return true;
        }
        num += 1;
        num2 += 1;
    }
}
"
0122bb3d6750a5923a92ff94b45791ac8e2380eb,"public boolean partySuccess;

public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend = true)
    {
        if (cigars >= 40)
        {
            partySuccess = true;
        }
        else if (cigars < 40)
        {
            partySuccess = false;
        }
    }
    else if (isWeekend = false)
    {
        if (cigars >= 40 && cigars <= 60) 
        {
            partySuccess = true;
        }
        else if (cigars < 40 && cigars > 60)
        {
            partySuccess = false;
        }
    }
    return partySuccess;
}
"
cbe448bc365e81d92fe217dab9559769b9c419df,"public static String without2(String str) 
{
        if(s.length() < 2) return s;
      
        String sbegining = s.substring(0, 2);
        String send = s.substring(s.length()-2);
        if(sbegining.compareTo(send)!=0)
            return s;
        else return s.substring(2);
    }
    public static void main(String[] args) {
      
        String s1 = ""HelloHe"";
        String s2 = ""Hi"";
        String s3 = ""Hello"";
      
        System.out.println(s1 + "": "" + without2(s1));
        System.out.println(s2 + "": "" + without2(s2));
        System.out.println(s3 + "": "" + without2(s3));
    }

}
"
7c7ff16aca6819802c8d0ee3b897df71ba0ec169,"public String alarmClock(int day, boolean vacation)
{
    String alarm = ""7:00"";
    
    if (day != 0 && day != 6)
    {
        if (vacation = true)
        {
            alarm = ""10:00"";
        }
    }
    
    else 
    {
        if (vacation = true)
        {
            alarm = ""off"";
        }
        if (vacation = false)
        {
            alarm = ""10:00"";
        }
    }
    
    return alarm;
}
"
bd56fe9065b0c13d74bb29caccaa71a945a2f02a,"public String mixString(String a, String b)
{
    String c = """";
    int big = 0;
    if (a.length() > b.length())
    	big = a.length();
    else
        big = b.length();
    
    for (int i = 0; i<big; i++)
    {
        c = c + a.charAt(i);
        c = c + b.charAt(i);
    }
    
    return c;
}
"
73ed1de85d5b22771d0d401395f97178f38186a0,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for (int i = 1; i < nums.length; i++)
	{
		sum += nums[i];
		if (nums[i] > max)
        {
			max = nums[i];
        }
		else if(nums[i] < min)
        {
			min = nums[i];
        }
	}
	return (sum - max - min) / (nums.length - 2)
}
"
94db32219018f4123a3daa1ef2e425cd58625f89,"public static String getSandwich(String str) 
{
    int ind = str.indexOf(""bread"");
    int laind = str.lastIndexOf(""bread"");
    if((laind != -1 ) && (ind!=laind))
        return (str.substring(ind+5,laind)) ;
    return """";
}"
02149f595c105b91ecfcc7a9761c55f105f440c7,"public boolean great; 

public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        great = true;
    }
    else if (a + b = 6 || a - b = 6 || b - a = 6)
    {
        great = true; 
    }
    else 
    {
        great = false;
    }
    return great; 
}
"
b191257d7c0c5145b6421ba8aca8719cc1a18afd,"public boolean evenlySpaced(int a, int b, int c)
{
    boolean k=true;
    int one = a-b;
    int two = b-c;
    int thr = a-c;
    if (((Math.abs(one)==Math.abs(two)) || (Math.abs(thr)==Math.abs(one)) || (Math.abs(two)==Math.abs(thr))) && ((a==b && a!=c) || (a==c && a!=b)))
    {
        k = true;
    }
    else
    {
        k = false;
    }
    return k;
}
"
b7000a0caabab7bed0980a407d45982a4e6da87c,"public int blackjack(int a, int b)
{
    if ((a < 21) && (b < 21))
        return a > b ? a : b;
    else if (a > 21)
        return b;
    else if (b > 21)
        return a;
    return 0;
}
"
847b4261c07293908b5e779e82dcac52b634d0f2,"public String[] fizzBuzz(int start, int end)
{
    String[] arr = new String[end - start];
    for (int i = start; i < end; i++)
    {
     	if (i % 15 == 0)
        {
         	arr[i - start] = ""FizzBuzz"";   
        }
        else if (i % 3 == 0)
        {
         	arr[i - start] = ""Fizz"";
        }
        else if (i % 5 == 0)
        {
         	arr[i - start] = ""Buzz"";   
        }
        else
        {
        	arr[i - start] = String.valueOf(i);   
        }
    }
    return arr;
}
"
6bc93dcbce3d3170730a781e3b672e6a27902de5,"public int blackjack(int a, int b)
{
    if (int a >> 21 && int b >> 21)
        return 0;
    else if (int a >> int b)
        return int a;
    else
        return int b;
}
"
d9d0af4a86d3d806a73729146509fcd884212bbe,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 && (a + b) <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
a43f9daaa9b5cc98acfe197b9157d9de345febf6,"public int[] frontPiece(int[] nums)
{
    for (int numbers: nums; int i = 0; i < 2; i++)
    {
        int number[i] = numbers;
    }
    return number;
}
"
5afc0652ad6d1abc212522dbfbfaa35d54de75a0,"public int[] withoutTen(int[] nums)
{
    int[] newArray = new int[nums.length];
    
    for (int i = 0; i < nums.length; i++)
    {
        
		newArray[x] = nums[i];
 
    }
        
        return newArray;
    
}
"
1886d7b5a96f516f9ac1af6ca8776905c6d061e2,"public int loneSum(int a, int b, int c)
{
    if((a == b) || (a == c) || (b == c))
    {
        if((a == b) && (a == c))
        {
            return 0;
        }
        else
        {
            if(a == b)
            {
                return c;
            }
            if(b == c)
            {
                return a;
            }
            if(a == c)
            {
                return b;
            }
        }
        
    }
    else
    {
        int sum = (a + b + c)
        return sum;
    }
}
"
d077f253fd718a8c09bc915edd3c29513364a1f1,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
		return true;
	return ((a + b) == 6|| Math.abs(a - b) == 6);
}
"
2d93e4072a980ef993907c9526395445c01a414f,"public boolean xyBalance(String str)
{
    boolean t=true;
    for (int i=0; i<str.length()-1; i++)
    {
        if (str.charAt=='y')
        {
            t=true;
        }
        if (str.charAt=='x' && !str.charAt=='y')
        {
            t=false;
        }
    }
    return t;
}
"
81fbfde57bedba51540b32198b8fbe372461d548,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer == false)
    {
        if (temp >= 60 && temp <= 90)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
       if (temp >= 60 && temp <= 100)
       {
           return true;
       }
        else
        {
            return false;
        }
    }
}
"
d7c652fe7617faefbf9d4f1a9e2917b5bcf5efcc,"public int[] tenRun(int[] nums)
{
    int replace = nums[0];
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] % 10 == 0) {
            replace = nums[i];
        }
        else if (replace % 10 != 0) {
            replace = nums[i]
        }
        nums[i] = replace;
    }
    return nums;
}
"
41552538a4a0f44e766766fad29a75d6b1803c4f,"public int redTicket(int a, int b, int c)
{
    answer = 0;
    if (a == b == c == 2)
    {
        answer = 10;
    }
    else if (a == b == c)
    {
        answer = 5;
    }
    else if (b != a && c != a)
    {
        answer = 1;
    }
}
"
9d8836161737ca882d2144f14e428b1b1a542570,"public int sum13(int[] nums)
{
    int total = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) total += nums[i];
        else if (i <= nums.length - 1) i++;
    }
    return total;
}
"
f703037739183ac867ba5fdcbde46a1db338888b,"public int redTicket(int a, int b, int c)
{
    if (a==b && b==c && a==c && a != 2)
    {return 10;}
    else 
    {return 5;}
    
}
"
f5e7fefde6111c6a47a146cdbc253a3c2b27705f,"public String mixString(String a, String b)
{
    String m = """";
    int i = 0;
    while (i < a.length())
    { 
        while (i < b.length())
        {
            m = m + a.charAt(i);
            m = m + b.charAt(i);
            i++;
        }
        i++;
    }
    if (a.length() < b.length())
    {
        m = m + b.substring(i);
    }
    else
    {
        m = m + a.substring(i);
    }
    return m;
}
"
cf92d35420e5210fbc30150ff0e9dc6c30c9791c,"public int greenTicket(int a, int b, int c)
{
	if(a /= b /= c)
    {
        return 0;
    }
    else if(a = b = c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
8e2455ca6cd1335bdb7531a19115154c6da6f26e,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if(a==b || a==c)
    {
        sum = sum - 2*a;
    }
    else if(b==c)
    {
        sum = sum - 2*b;
    }
    if(a==b && b==c)
    {
        sum = 0;
    }
    return sum;
}
"
2119e083ab8adb71fdbe130534569754aa286997,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i ++)
    {
    	if (i+1 < nums.length && nums[i] == nums[i+1])
        {        	
            count = count +1;
        }
    }
    return count;
}
"
b7e39a22f37ce0f259f797a08b4c4d29c5748cbd,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
    	if(temp >= 60 && temp <= 100){
        	return(true);
        }else{
        	return(false);
        }
    }else{
    	if (temp >= 60 && temp <= 90){
        	return(true);
        }else{
        	return(false);
        }
    }
}
"
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
"
490ca1a37dcda41e77316b93a43e5fada6c183d5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
    }
    if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
5b783affa30f01add7fc91f7555526d439436cab,"public int[] frontPiece(int[] nums)
{
    if(nums.length<2)int[nums.length] out;
    else int[2] out;
    for (int i = 0; i < 2; i++){
        if(i=out.length)return out;
        out[i]=nums[i];
    }
}
"
42e52e00ef12b244eddffd0c9e1678918659c4e7,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
6b0131a235ad507e1e7d5960d0e69f7349965dbb,"public String alarmClock(int day, boolean vacation)
{
    String time = "" "";
    if (vacation)
    {
        if (day < 6)
        {
            time = ""10:00"";
        }
        else
        {
            time = ""Off"";
        }
    }
    else if (day < 6)
    {
        time = ""7:00"";
    }
    else
    {
        time = ""10:00"";
    }
}
"
2cd3569383da0d1473eef2b60e230fb4a93aebef,"public String without2(String str) 
{
    String begin = str.substring(0,2);
    String end = str.substring(str.length() -2);
    if (begin == end)
        return str.substring(2);
    else 
        return str;
}
"
04f851177b8f30036127b9481ce9dd583f3a91d6,"public int roundSum(int a, int b, int c)
{
    return this.round10(a) + this.round10(b) + this.round10(c);
}

public int round10(int num)
{
    int value = num % 10;
    int newVal = 0;
    if (value < 5) {
     	newVal = num - value;
    }
    
    else {
     	newVal = num + (10-value);   
    }
    
    return newVal;
}
"
e2dffdbbf4357656e526e66693ce1df21f68e776,"public int[] seriesUp(int n)
{
    int counter = 0;
    int[] newArray = new int[(n * (n + 1))/2];
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            newArray[counter] = j;
            counter++;
        }
    }
    return newArray;
}
"
bbca5d75ae0c35c116385e4839bb3307fab3c63e,"public boolean cigarParty(int cigars, boolean isWeekend)
{
	if (isWeekend)
    {
        if (cigars >= 40)
        {
    		return true;    
        }
        return false;
    }
    else
    {
        if (cigars >= 40 && cigars <= 60)
        {
            return true;
        }
   		return false;
    }
}
"
8f13baf6c1f32fe1e3c57fc757c44293a34e0980,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    if (isAsleep)
    {
        return false;
    }
    else if (!isAsleep)
    {
        return true;
    }
    return false;
    
}
"
64d8678ddc718ed87d1ad25ffb9f70ec058c9eff,"public boolean sameEnds(int[] nums, int n)
{
    int start = 0;
	int end = nums.length-n;
	for(int len = 0; len > 0; len++)
	{
		if(nums[start] != nums[end])
			return false;
		else
		{ 
			start++;
			end++;
		} 
	}
	return true;
}
"
f7b456f80d5d6eacf91bd50ba9de7fdff9abbc6f,"public int greenTicket(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 20;
    }    
    
    if ((a == b) || (b == c) || (a == c))
    { 
        return 10;
    } 
    else
    {
    	return 0;
    }
}
"
926b15acf41c27d5fcd4f58174383f9284930436,"public int sum67(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + nums.get[i];
    }
    return sum;
}"
0632e9a54cfe27dfed72e48978ae8f4aea613b27,"public int redTicket(int a, int b, int c)
{
    if (a=2 && b=a && c=b)
        return 10;
    if (a=c && b=a && c=b)
        return 5;
    if ((b!=a) && c!=a))
        return 1;
   
}
"
807af4f677d9410ce3da0f94d0197313574a912a,"public int sum3(int[] nums)
{
    int[] newnums = new int[3];
    sum = nums[0] + nums[1] + nums[2];
    return sum;
}
"
6e8abb3169eb1262d70da8c36e1c0a9ecc416434,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer == true)
    {
    	if (temp >= 60 && temp <= 100)
    	{
        	return true;
    	}
        else 
        {
            return false;
        }
    }
    elseif (isSummer == false)
    {
        if (temp >= 60 && temp <= 100)
    	{
        	return true;
    	}
        else
        {
            return false;
        }
    }
    else
    {
        return false;
    }
}
"
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
17aa8ed5de6f5c8c29872cbd7d0efdd891d76307,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int[] newnums = new int[nums.length];
    int large = 0;
    int small = 0;
    int count = 0;
    for (int number : nums)
    {
        newnums[count] = number;
        if (number > newnums[large])
        {
            large = count;
        }
        if (number < newnums[small])
        {
            small = count;
        }
        ++count;
    }
    if (large == small && nums.lenght >= 2)
    {
        small = 1;
    }
    newnums[large] = 0;
    newnums[small] = 0;
    for (int number : newnums)
    {
        sum = sum + number;
    }
    return sum / (newnums.length - 2);
}"
87db562c5af3675b9fcf8cdf88341f5c205a229a,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return 0;
    }
    
    if (b == 13)
    {
        return a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
15ffe5d66430bb800dc58952a48cf389ffc1fa85,"public String without2(String str) 
{
    int num = str.length();
    if (num >= 2 && str.substring(0,1).equals(str.substring((num-2), str.substring(num)))
        return str.substring(2,str.length());
    return str;
}
"
ddac932de10e09f5863309d8721d58b4f4b86fe8,"private int sum; 

public int sortaSum(int a, int b)
{
    sum = a + b; 
    a + b = sum; 
    if (sum >= 19 || sum <= 10)
    {
        sum = 20; 
    }
    return sum; 
}
"
2dfd74928fc9a41bb79aeb694c719c6ee5a321d8,"public int sum13(int[] nums)
{
    int sum = 0;
    if (nums.length > 0)
    {
    	for (int i = 0; i < nums.length; i++)
    	{
     	   if (nums[i] == 13)
           {
            	i++;   
           }
           else
           {
            	sum += nums[i];   
           }
    	}
    }
    return 0;
}
"
63bc9b6a7e3b8866c3ea0d84d282e25f9716e838,"public String mixString(String a, String b)
{
    String result = """"; 
    int index = 0;
    
    if (a.length() >= b.length()) {
        index = b.length(); 
    }
    if (a.length() <= b.length()) {
        index = a.length(); 
    }
    for (int i = 0; i < index; i++) {
        result += a.substring(i, i + 1) + b.substring(i, i + 1);
    }
    if (a.length() < b.length()) {
        result += b.substring(a.length(), b.length()); 
    }
    if (a.length() > b.length()) {
        result += a.substring(b.length(), a.length()); 
    }
    return result; 
}
"
67cf02114b3bfe337265bdec063d142febba7a23,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a > b > c)
    {
        int ab = a - b;
        int bc = b - c;
        if (ab == bc)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else if (a > c > b)
    {
        int ab = a - c;
        int bc = c - b;
        if (ab == bc)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else if (b > a > c)
    {
        int ab = b - a;
        int bc = a - c;
        if (ab == bc)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else if (b > c > a)
    {
        int ab = b - c;
        int bc = c - a;
        if (ab == bc)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else if (c > a > b)
    {
        int ab = c - a;
        int bc = a - b;
        if (ab == bc)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        int ab = c - b;
        int bc = b - a;
        if (ab == bc)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
f4c32c9dc2461a16fffa716b01b092ad7dfe57b5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
        return 0;
    else if ( b == 13 )
        return a;
    else if ( c == 13 )
        return a + b;
    return a + b + c;
        
}
"
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
"
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
34104e98943043dfec22c7c02207b258844bf0cc,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a>b && b>c &&a-b == b-c)
    {
        return true;
    }
    else if (b>c && c>a && b-c == c-a)
    {
        return true;
    }
    else if (c>a && a>b && c-a == a-b)
    {
        return true;
    }
    else if (a>c && c>b && a-c == c-b)
    {
        return true;
    }
    else if (b>a && a>c && b-a==a-c)
    {
        return true;
    }
    else if (c>b && b>a && c-b==b-a)
    {
        return true;
    }
    else if (a==b, b==c)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
b9794b18955bda5d55077b0f5a260caa1bbfe6cf,"public boolean something; 

public boolean xyzThere(String str)
{
    str.toLowerCase();
    if (str.contains(xyz))
    {
        something = true; 
    }
    else 
    {
        something = false; 
    }
    return something; 
}
"
9b2a7960b78e5f0d9431127c1e9b4c5363316d0a,"public boolean canBalance(int[] nums)
{
    int size = nums.length;
    int sum1 = 0;
    int sum2 = 0;
    int k = size - 1;
    int i = 0;
    int j = 0;
    while (j < size/2)
    {
        if (k < (size + 1)/2)
            return false;
    for (; k > size - i; k--)
    {	
        sum2 = nums[k];    
    }
    for (; i < size - k; i++)
    {
            sum1 += nums[i];
    }
        if (sum1 == sum2)
		return true;
    i++;
    k--;
    sum1 = 0;
    sum2 = 0;
    }
    
    return false;

    
}
"
3b0eeb497e386fec2a977ccae4fec4517fa8e7f2,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    if (n < nums.length)
    {
        int[] firstgroup = new int[n];
        int[] lastgroup = new int[n];
        for (int i = 0; i < n; i++)
        {
            firstgroup[i] = nums[i];
        }
        for (int o = nums.length - n; o < nums.length; o++)
        {
            lastgroup[o] = nums[o];
        }
        if (firstgroup.equals(lastgroup))
        {
            return true;
        }
    }
    return false;
}
"
0d34b4e2d859a4d6f0c25c1e8233ed03303ece84,"public String alarmClock(int day, boolean vacation)
{
     if(vacation)
        if (day = 0, 5, 6,)
            return ""off""; 
        if (day = 1, 2, 3, 4)
            return ""10:00"";
                
     if(day = 0, 5, 6)
         return ""10:00"";
             
     else 
         return ""7:00"";
         
}
"
eb6c3d1c57fc29a241b9041bac83343daf845024,"public int centeredAverage(int[] nums)
{
    int sum=0;
    int avg = 0;
    int largest = nums[1];
    int smallest = nums[0];
    for(int i = 0; i < nums.length-1; i++)
    {
        if(nums[i] > largest)
        {
            largest = nums[i];
        }
        else if(nums[i] < smallest)
        {
            smallest = nums[i];
        }
        sum += nums[i];
    }
    avg = (sum - largest - smallest)/ (nums.length);
    return avg;
    
}
"
2464bab1e4a85563d626b14e4c79b05c45e498dd,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars > 40)
    	return true;
    }
    else if (!isWeekend)
    {
        if (cigars > 40 && cigars < 60)
            return true;
    }
    
    else 
    {
        return false;
    }
}
"
73399e7b1699c43b257d654653ad569a3a026e1d,"public int countEvens(int[] nums)
{
    int count = 0;
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] % 2 == 0)
        {
            count += 1;
        }
    }
    return count;
}
"
755707da8e58c033eea28ea2a9e3fc4eb08ef9f4,"public String alarmClock(int day, boolean vacation)
{
    time = "" ""
    if (day > 0 && day < 6 && !vacation)
    {
        time = ""7:00"";
    }
    else if (day < 1 || day > 5 && !vacation)
    {
        time = ""10:00"";
    }
    else if (day > 0 && day < 6 && vacation)
    {
        return ""10:00"";
    }
    else if (day < 1 || day > 5 && vacation)
    {
        return ""off"";
    }    
 return time
}
"
8bf0c02326a8dece6634c3b907e8da6aa6c7a3cf,"public int countCode(String str)
{
    if (str.length() < 4)
        return 0;
    
    if (str.indexOf(""c"") == -1)
        return 0;
    
    int total = 0;
    
    for (int i = str.indexOf(""c""); i < str.length() - 3; i++)
    {
     	   if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i+3) == 'e')
           {
            	total = total + 1;	   
           }
    }
    return total;
}
"
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
ae68751aeb841fdbdf3851eb5d7b02f99eb16adf,"public int[] zeroMax(int[] nums)
{	
    int odd = 0;
    int replace = 0;
   
    for(int i = 0; i < nums.length; i++)
    {
    	if(nums[i] == 0)
        {
       		 for(int a = i; a < nums.length; a++)
        	{	
            odd = nums[a] % 2;
        	if(odd != 0 && nums[a] > replace)
            {
            replace = nums[a];
            }           
            nums[i] = replace;
                
        	}
             replace = 0;
       	}
    }
    return nums;
}
"
e380683c57feefa7fb3a525ba8c8887539b740dc,"public int greenTicket(int a, int b, int c)
{
 	if (a==b && b==c)
    {
        return 20;
    }
    
     if (a==b && a==c)
    {
        return 10;
    }
    
    if (a!=b && b!=c)
    {
        return 0;
    }
    
    
 	return 10;
}
"
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
"
0596e9fad0e491fa66802102678ad39fda317949,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
    
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
        return num + (10 - round);
    else 
        return num + (round - 10);
    
}
"
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
"
c617224d9d8e7cbdf28249ae8d42b17329b0acff,"public int[] fizzArray(int n)
{
    int[] newArray = new int[n];
    for (int i = 0; i<n;i++){
        newArray[i]=i;
    }
    return newArray;
}
"
05a6906c184248e91eb2fc1a3aceeef62338a215,"public boolean canBalance(int[] nums)
{
    int sumleft = 0;
    int sumright = 0;
    boolean balance = false;
    for (int i = 0; i < nums.length; i++) {
        for (int left = 0; left < i; left++) {
            sumleft += nums[left];
        }
    	for (int right = i; right < nums.length; right++) {
            sumright += nums[right];
        }
        if (sumleft == sumright) {
            balance = true;
        }
        sumleft = 0;
        sumright = 0;
    }
    return balance;
}
"
1eed42580dbdad1e8f465cf08f4c82059ea5bc29,"public String alarmClock(int day, boolean vacation)
{
    
     if (day = 0 || day = 6)
     {
        return ""10:00"";
     }
    return ""7:00"";
    
    if (vaction = true)
    {
         if (day = 0 || day = 6)
            return ""off"";
    }
    return ""10:00"";
        
}
"
f59dbd339b3c88a17f93e4b339f8dead0a490e42,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if(isMorning)
    {
        if(isMom)
            return true;
        else
            return false;
    }
    if(isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
         
}
"
5df1dd8a44fb303694ec9a03ed2a5d4231f1bad4,"public String[] fizzBuzz(int start, int end)
{
    String[] output = new String[end - 1];
    int j = 0;
    for(int i = start; i < end;i++)
    {
        if (i % 3 == 0 && i % 5 == 0)
        {
            output[j] = ""FizzBuzz"";
            j++;
        ]
        else if (i % 3 == 0)
        {
            output[j] = ""Fizz"";
            j++;
        }
        else if (i % 5 == 0)
        {
            output[j] = ""Buzz"";
            j++;
        }
        else
        {
        	output[j] = String.valueOf(i);
        	j++;
        }
    }
    return output;
}
"
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
"
8e84ca2ccb7c0d0b2e941adb474d3f564597ecc7,"public int[] shiftLeft(int[] nums)
{
    int[] wow = new int[nums.length]; 
    for (int i = 0; i < nums.length; i++)
    {
        wow[i] = nums[i + 1];
    }
    wow[nums.length - 1] = nums[0];
    return wow;
        
    
}
"
f7b47c261f888fe99159f9f86c3bdfa5878c0fe8,"public int[] frontPiece(int[] nums)
{
    int[] first2 = new int[2];
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2[i] = nums[i];
    }
    return first2;
}
"
f7aa866fe9c3cc59b8cbc34623cc9f4947001b38,"public int sum13(int[] nums)
{
   	int sum = 0;
    for (int i = 0; i < nums.length)
    {
        if (nums[i] != 13)
        {
        	sum+= nums[i] 
        }
        else
        {
            i++;;
        }
    }
}
"
e429e58269610cc91bc675aae9476535a23d8c6e,"public String something;

public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        something = str.substring(5, -5); 
    }
    else
    {
        something = """"; 
    }
    return something; 
}
"
2216bc569ee8caff75d3702a81475722e85c8551,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 || n == 16)
            return n;
        return 0;
    //return n;
}
"
f73b4492d38307e1a7f7e89f818c379e62d91d67,"public String mixString(String a, String b)
{
    String m = """";
    int i = 0;
    for (i < a.length(); i++)
        {
            m = a + a.charAt(i);
        for (i < b.length(); i++)
        { 
            m = b + b.charAt(i);
        }
    }
    if (a.length() < b.length())
    {
        m = m + b.substring(i);
        
    }
    else
    {
        m = m + a.substring(i);
    }
    return m;
}
"
9636a9655462d911acdf8bbd1b281ebe32522239,"public String[] fizzBuzz(int start, int end)
{
    String[] str = new String[end - start];
        
        for(int i = start; i < end-1; i++)
        {
        	str[i] = String.valueOf(i);
            if(i%3==0 && i%5==0)
            {
            str[i] = ""FizzBuzz"";
            }
                       
            if(i % 3 == 0 && i % 3 != 0)
            {
            str[i] = ""Fizz"";
            }
            if(i % 5 == 0 && i % 5 != 0)
            {
            str[i] = ""Buzz"";
            }
        }
    return str;
}
"
5f137dbfa54f3c15c65ef24630bad52216763faa,"public int redTicket(int a, int b, int c)
{
    
    if (a== 2 && b==2 && c==2)
    {
        return 10;
    }
    
    if (a==b && a==c && b==c)
    {
        return 5;
    }
    
    if (a!=b && a!=c)
    {
        return 1;
    }
    
    
    
    
    return 0;
}
"
c1d51856fb5bb7ebb0c70df86f8896a2e24f1c13,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars >= 40)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        if (40 <= cigars <= 60)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
9ece90368070ff72bf27d2862e56b24e8c4b6efb,"public int[] shiftLeft(int[] nums)
{
    int[] newnums = new int[nums.length];
    int firstwillbelast = nums[0];
    for(int i = 0; i < nums.length; i++)
    {
    	if(i + 1 != nums.length)
        {
        newnums[i] = nums[i + 1];
        }
        else
        {
        newnums[i] = firstwillbelast;
        }
        }
    return newnums;
}
"
f34fa284c67f79f853765431195b29fcf6c5587b,"public boolean in1To10(int n, boolean outsideMode)
{
    if(outsideMode){
    if (n <= 1 || n >= 10 ){
        return true;
        else {
            return false;
        }
    }
        if (!outsideMode)
            if ( n <= 10 && n >= 1)
                return true;
        else {
            return false;
        }
}
"
f1a1a0c0f89dc2acad071293c1f418435f2290ef,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums.length == 1)
            {
                return true;
            }
            if (i == 0)
            {
                if (nums[i + 1] != 2)
                {
                    return false;
                }
            }
            else if (i == nums.length - 1)
            {
                if (nums[i - 1] != 2)
                {
                    return false;
                }
            }
            else
            {
                if (nums[i-1] != 2 && nums[i+1] != 2)
                {
                    return false;     
                }
            }
        }
    }
    return true;
}
"
14f278d9efaab02b4cb6efe14b10596fc8f45c71,"    public int countClumps(int[] nums) {
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
        if (nums[i] == nums[i + 1]) {
            count++;
            for (int j = i + 1; j < nums.length; j++)
                if (nums[j] == nums[i]) i++;
                else break;
        }
    return count;
}

"
6982b1059a99a477863e5ace357073e7b8d1bc82,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i < nums.length; i++)
    {
    	if (i+1 < nums.length && i-1 >= 0)
        {
        	if (nums[i+1] == val || nums[i] == val)
            {
            	everywhere = true;
                
            }
            else
            {
            	everywhere = false;
            }
        }        
    }
    return everywhere;
}
"
d9e50460e92cb5206ec48185af09a20e4ce824fa,"public int sum13(int[] nums)
{
    int merlin = 0;
    for(int i = 0; i < nums.length; i++)
    {
       if (nums[i] != 13)
       {
           merlin = merlin + nums[i];
               
       }
       else if (i< nums.length -1)
       {
           i = i + 1;
       }
    }
    return merlin;
}
"
ab3e73f217cda58664bbf2aad0af640dac8da5a2,"public String alarmClock(int day, boolean vacation)
{
    if ((day > 1 && day < 6) && (!vacation))
        return ""10:00"";
    if ((day == 0 || day == 6) && (!vacation))
        return ""7:00"";
    if ((day > 1 && day < 6) && (vacation))
        return ""off"";
    if ((day == 0 || day == 6) && (vacation))
        return ""10:00"";
}
"
86cb31ccd85e2cce6656636a5b1817a50876a726,"public int[] withoutTen(int[] nums)
{
	int[] newNums = new int[nums.length];
    int newI;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            newNums[newI] = nums[i];
        }
    }
    return newNums;
}"
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
"
0227036288fb0ffcfdf13fc3b51158a746cad1dc,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if(isAsleep)
    {return false;}
    else
    {
        if(isMorning)
        {
        if(isMom)
        {
            return true;
        }
        }
    	else
        {
            return false;
        }
    return true;
    }

}
"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
ba0dc85dce44807b35f9d4f9258641fdc338ed31,"public String plusOut(String str, String word)
{
    String finalString = """";
    for (int i=0;i<str.length();i++){
        if (str.substring(i,i+str.length()) == word){
            finalString += word;
            i += word.length()-1;
        }
        else
            finalString += ""+"";
    }
    return finalString;
}
"
9be1ce3f1a8cdfe361ca12d286d7a174a12d6d9d,"public boolean bobThere(String str)
{
    if (str.contains(""b"") && (str.indexOf(""b"") != str.lastIndexOf(""b"")))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
4cc916649df329cb2108d1f68b228a173f91b30d,"public int makeChocolate(int small, int big, int goal)
{
    if (small + (5*big) < goal)
    {
        return -1;
    }
    else
    {
        if ((goal / 5) <= big)
        {
            int r = goal % 5;
            if (r <= small)
            {
                return small;
            }
            else
            {
                return -1;
            }
        }
        else
        {
            if ((goal - (5 * big)) <= small)
            {
                return goal - (5 * big);
            }
            else
            {
                return -1;
            }
        }
    }
    
    
}
"
cda4eeee2346e60e72673f13fb06774fb4ec1b1b,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
        int rightSum = 0;
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
b2d8cd3224deb480a0e7f3ba2aaf1c16c14cef37,"public boolean evenlySpaced(int a, int b, int c)
{
    int value;
    if (b > a)
    {
        value = a;
        a = b;
        b = value;    
    }
    if (c > b)
    {
        value = b;
        b = c;
        c = value;
    }
    if (b > a)
    {
        value = b;
        b = a;
        a = value;    
    }
    if (C > b)
    {
        value = c;
        c = b;
        b = value;
    }
    return (a - b == c - b);
            
}
"
675004ef854bd4ab1896d39b4d8660e99216d6cd,"public int redTicket(int a, int b, int c)
{
    int answer = 0;
    if (a == 2)
    {
        if (a == b == c)
        {
            answer = 10;
        }
    }
    else if (a == b == c)
    {
        answer = 5;
    }
    else if (b != a && c != a)
    {
        answer = 1;
    }
return answer;
}
"
e46506d4c89bf2b367ac862fcdd6eaa56a239099,"public String repeatEnd(String str, int n)
{
   
    String spring = """";
    spring = str.substring(n);
    String newstring = """";
    for ( int i = 0; i < n; i++)
    {
        
    	newstring = newstring + spring;
        
    }
        
        
return spring;

}
"
f7d147027312535b2aa12e7388bdd62f76247d47,"public String zipZap(String str)
{
   	int len = str.length();
    String hol = """";
    while (len>3)
    {
    	if (str.charAt(0)=='z' && str.charAt(2)=='p')
        {
        	hol+=""zp"";
            str = str.substring(3);
           len = str.length();
        }
        else
        {
            hol+=str.charAt(0);
            str = str.substring(1);
            len = str.length();
        }
    }
    return hol;
}
"
dbbe03061c2334aa576fc6515206c2218962b02d,"public int dateFashion(int you, int date)
{
    int a=0;
    if ((you<=10 && you>=8 && date>2) || (date<=10 && date>=8 && you>2))
        a=2;
    else if ((you<=2 && you>=0 && date>=2) || (date<=2 && date>=0 && you>=2))
        a=0;
    else 
        a=1;
    return a;
}
"
f6813268f36f79d3489d3036c6a71d542f00fe8b,"public boolean sameEnds(int[] nums, int n)
{
    boolean a = false;
    for	(int i = 0; i < n; i++)
    {
        if (nums[i] == nums[nums.length - n + i])
        {
            a = true;
        }
        else
        {
            a = false;
        }
    }
    return a;
}
"
1889c30f0414785c8f5f8afe2dc4eaf09520169f,"public boolean twoTwo(int[] nums)
{
    boolean hasTwo = true;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 2) {
                if ((i != 0 && nums[i - 1] == 2) || (nums.length - 1 > i && nums[i + 1] == 2 )) {
                    hasTwo = true;
                    i++;
                } else {
                    hasTwo = false;
                }
            }
        }
        return hasTwo;
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
dd62800fd575243e19f14d265c244ec566ba4e58,"public boolean sameEnds(int[] nums, int n)
{
    for(int i = 0; i < len; i++) {
        if(nums[i] != nums[nums.length - len + i])
            return false;
    }
                
    return true;
}
"
d5ce442602f709f5b69882191e66e3dbc3382576,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21)
    {
        return a;
    }
    else if (b > a && b <= 21)
    {
        return b;
    }
    else if (a > 21 || b > 21)
    {
        return 0;
    }
}
"
e14255ab61aa9e4c8abdb812115ed71f828676f9,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length;i++)
    {
        if (nums[i] == val &&  nums[i+1] = val_
        {
            return true;
        }
        else if (nums[i] == val && nums[i-1] = val)
        {
            return true;
        }
    }
}
"
c39900b4255d1b97e807e5a78f722369aa358958,"public int roundSum(int a, int b, int c)
{
 a = round10(a);
 b = round10(b);
 c = round10(c);
 
 return a + b + c;
        
    
}

public int round10(int num)
{
    
    if (num%10 < 5)
        return ((num/10) *10);
    else
        return (((num/10)+1)*10);
}
"
6bafa0d67f73391471bec0d50c771feb494cd365,"public String alarmClock(int day, boolean vacation)
{
    int Alarm = 1;
    
    if (vacation)
    {
        if ((day >= 1) && (day <= 5))
        {
            Alarm = 10:00;
        }
        else if ((day < 1) && (day > 5))
        {
            Alarm = off;
        }
    }
    else
    {
        if ((day >= 1) && (day <= 5))
        {
            Alarm = 7:00;
        }
        else if ((day < 1) && (day > 5))
        {
            Alarm = 10:00;
        }
    }
    return Alarm;
}
"
b9e0f477924771925580b5247741afedf2a8f593,"public String plusOut(String str, String word)
{
    String newstring = """";
    int i = 0;
    while (i < str.length())
    {
        if (i < str.length() - word.length())
        {
            if (str.substring(i, i + word.length()).equals(word))
            {
                newstring += word;
                i += word.length();
            }
            else
            {
                newstring += ""+"";
                i += 1;
            }
        }
        else
        {
            newstring += ""+"";
            i += 1;
        }
    }
    return newstring;
}
"
3eef4979bb30745e2e41f1e57de4c639198f5995,"public int sum13(int[] nums)
{
    int merlin = 0;
    for(int i = 0; i < nums.length; i++)
    {
       if (nums[i] != 13)
       {
           merlin = merlin + nums[i];
               
       }
       else
       {
           i = i + 2;
       }
    }
    return merlin;
}
"
e79781b606439f7258b0e92b1b80a70df13d5250,"public int[] seriesUp(int n)
{
    int[] arr = new int[n*(n+1)/2];
	int p = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++, p++)
			arr[p] = j;
	}
	return arr;
}
"
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
"
a77d613083948b71c757aa65861a9fe355329648,"public int dateFashion(int you, int date)
{
    if (you >= 8 && date >= 8)
    {
    	return 2;
    }
    if (you <= 2 || date <=2)
    {
    	return 0;
    }
    else 
    {
    	return 1;
    }
}
"
9a5d6f5258a83cd24a9106d6dc88958dad9a5704,"public int[] seriesUp(int n)
{
    int spot = 0;
    int[] series = new int[n*(n+1)/2];
    for (int i = 1; i <= n; i++)
    {
        for (int j = i-1; j >= 0; j++)
        {
            series[spot] = i-j;
            spot++;
        }
            
    }
    return series;
}
"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
2fb105f6d50f977d47d9ba5f453f73a9a4b3a2a6,"public int dateFashion(int you, int date)
{
   if (you > 7 || date > 7)
       return 2;
    else if (you < 3 || date < 3)
        return 0;
    else 
        return 1;
}
"
77462732825dd67f9d3b086dde5a6025a3501165,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean success;
    
    if (isWeekend)
    {
        if (cigars > 39)
        {
            success = true;
        }
    }
    else 
    {
        if (cigars > 39 && cigars < 61)
        {
            success = true;
        }
    }
}
"
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
"
5b98dac550f734a7929113dd2be70cc9746cc0c6,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer == true)
    {
    	if (temp >= 60 && temp <= 100)
    	{
        	return true;
    	}
        else 
        {
            return false;
        }
    }
    else if (isSummer == false)
    {
        if (temp >= 60 && temp <= 100)
    	{
        	return true;
    	}
        else
        {
            return false;
        }
    }
    else
    {
        return false;
    }
}
"
ab16a42d2f9a50a373ef0a80ee2aadbe6469fbee,"public String atFirst(String str)
{
    int length = str.length();
    if (length >= 2)
        return str.length(0, 2);
    else if (length == 1)
        return str.charAt(0) + ""@"";
    else
        return ""@@"";
}
"
774a41f48a2d4fd0559fd590e84ad3cc962f1536,"public int blackjack(int a, int b)
{
    if (a>21 && b>21)
        return o;
    else if (a>b && a<21)
        return a;
    else 
        return b;
}
"
927cd175501b551a20dbceaccce50a678558771c,"public boolean has77(int[] nums)
{
    if(nums[i] == 7)
  	{
			if(nums[i+1] == 7)
				return true;
			else if(i < nums.length - 2 && nums[i+2] == 7)
				return true;
		
	}
	return false;
}
"
b08f28650a1e2f186d7764058dc17ef7467e3456,"public String repeatEnd(String str, int n)
{
    String newString;
    int length = str.length() - n;
    newString = str.substring(0, length);
    newString = newString*n;
    
}
"
1ee3ea13a72ddf4d5252e00e1a2008492bfeb863,"public int centeredAverage(int[] nums)
{
    int highest = 0;
    int lowest = 0;
    int sum = 0;
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
      	if (nums[i] > highest)
        {
            highest = nums[i];
        }
        else 
        {
            if (nums[i] < lowest)
            {
            	lowest = nums[i];
            }
        }
        sum += nums[i];
        counter++;
    }
    return (sum - highest - lowest) / (counter - 2);
}
"
433d8d82491f06595b4a7fd44c977dbfb917d6b7,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] != 7 && nums[i+1] != 7)
        {
          return false;
        }
    }
    return true;
    
}
"
10763a0269de833d1ee026799aeba557ab7583b8,"public boolean sameEnds(int[] nums, int n)
{
    boolean idk = false;
    if (nums.subList(0, n-1) = nums.subList(nums.length-n, 				nums.length-1))
    {
        
    }
    return idk;
}
"
f9c27230e760f7470964423ecb4bd4adf9a6c337,"public boolean has77(int[] nums)
{
    if (nums.length < 2)
    return false;
  
  for (int i = 0; i < nums.length; i++) {
    if (nums[i] == 7 && i < nums.length-1 && nums[i+1] == 7)
      return true;
    if (nums[i] == 7 && i < nums.length-2 && nums[i+2] == 7)
      return true;  
  }
  return false;
}
"
ebfd11393b49545ae5b584b7932f66a128c5c87d,"public int[] zeroMax(int[] nums)
{	
    int odd = 0;
    int replace = 0;
   
    for(int i = 0; i < nums.length; i++)
    {
    	if(nums[i] == 0)
        {
       		 for(int a = i; a < nums.length; a++)
        	{	
            odd = nums[a] % 2;
        	if(odd != 0 && nums[a] > replace)
            {
            replace = nums[a];
            }           
            nums[i] = replace;
        	}
       	}
    }
    return nums;
}
"
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
"
0773313801a191baf1978ea9f3b612da5d247316,"public int caughtSpeeding(int speed, boolean isBirthday)
{
if (!isBirthday)
{
   if ( speed <= 60)
   
       return 0;
   
   else if ( speed > 60 && speed <= 80)
   
       return 1;
   
   else 
   
       return 2;
   
}
    if (isBirthday)
    {
        if ( speed <= 65)
   
       return 0;
   
   else if ( speed >= 65 && speed <= 85)
   
       return 1;
   
   else 
   {
       return 2;
   }
       
}
}
"
4eeb65bc589688eb2c8547ba4e3de1cbd101fbe2,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    if (nums.length == n)
    {
        return true;
    }
    
    int[] start = new int[n];
    int[] end = new int[n];
    
    for (int i = 0; i < n; i++)
    {
        start[i] = nums[i];
    }
    int counter = 0;
    for (int j = (nums.length - n); j < nums.length; j++)
    {
        end[counter] = nums[j];
        counter++;
    }
    
    if (start == end)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
0b7fa7bfc192a770743ad8b87916c1a86f1e39bc,"public int countClumps(int[] nums)
{
    int counter = 0;
    int reverse = 0;
    
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i+1])
        {
            counter = counter + 1;  
            
        }
        
    }
    
    return counter;
}
"
402a29582a142c925f8bb74a3cc493386007ae13,"public int sum13(int[] nums)
{
    int sum = 0;
    if (nums.length != 0)
    {
        for (int i = 0; i < nums.length; i++)
        {
            if (nums[i] != 13)
            {
                sum = sum + nums[i];
            }
            else
            {
                i++;
            }
        }
    }
    return sum;
}
"
a640880805c7b524dec2ff6608a02a339cfe10a0,"public int[] withoutTen(int[] nums)
{
    int[] copy = new int[nums.length];
    int index = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10) 
        {
            copy[index] = nums[i];
            index++;
        }
    }
    return copy;
}
"
aefe0df4c146e4dc8fc572d6e6cdc5e0544ca0dc,"public int noTeenSum(int a, int b, int c)
{
	int noTeenSum=0;
    fixTeen(a);
    fixTeen(b);
    fixTeen(c);
    
    noTeenSum=a+b+c;
    
    return noTeenSum; 
}

public int fixTeen(int n)
{
    int fixTeen=0;
    int fixed=0;
    if((n==15)||(n==16))
    {
        fixed=0;
    }
    else 
    {
        
    }
    return fixed;
}
"
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
"
449c25168277fbecb5660eb70e7019afab36425e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
            return 0;
    }
    else if (speed <=80 && speed > 61)
    {
            return 1;
    }
    else
    {
            return 2;
    }
}
"
f0205df67f010e325ec1614fba0a300d61a74dec,"public int blackjack(int a, int b)
{
    double valueA;
    valueA = (a % 21);
    double valueB;
    valueB =  (b % 21);
    
    if (a < 21 || b < 21)
    {
        if (double valueA > double valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else if (a < 21 && b < 21)
    {
        if (valueA > valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else
    {
        return 0;
    }
}
"
5e5840b4728a9e257720a8c46d3285726a2ba053,"public boolean twoTwo(int[] nums)
{
    for(int i = 0; i < nums.length-2; i++)
    {
        if(nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
        if(nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
    }
    return true;
        
}
"
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
088203241c3c800394ad330068dc35da2527a57c,"public int dateFashion(int you, int date)
{
    int x = 0;
    if (you >= 8 || date >= 8)
    {
        x = 2;
    }
    if (you <= 2 || date <= 2)
    {
        x = 0;
    }
    else
    {
        x = 1;
    }
    return x;
}
"
0349c326dc93d362c51b184fb3160ec1255d4098,"public boolean sameEnds(int[] nums, int n)
{
    boolean same = false;
    int[] n1 = new int[n];
    int[] n2 = new int[n];
    for (int i = 0; i < n; i++)
    {
        n1[i] = nums[i];
        n2[i] = nums[nums.length - n + i];
    }
    
    if (n1.equals(n2))
    {
        same = true;
    }
    return same;
}
"
b4db0b7f38c247e7235d59d2416d175f1e5855fd,"public int caughtSpeeding(int speed, boolean isBirthday)    
{
    ticketnumber = caughtSpeeding;
    if (speed < 60 && !isBirthday)
        {
            ticketnumber = 0;
        }
    else if (speed > 60 && speed <= 81 && !isBirthday)
        {
            ticketnumber = 1 ;  
        }
    else if (speed > 81 && !isBirthday)
    	{
        	ticketnumber = 2;
    	}
}
    
"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
80c1c264e822ff955db0175833fffe386914971e,"public int blackjack(int a, int b)
{
    int ans = 0;
	if (a > b){
        if (a <= 21)
            ans = a;
        else if (a > 21 && b <= 21)
            ans = b;
        else
            ans = 0;
    }
	else if (b > a){
        if (b <= 21)
            ans = a;
        else if (b > 21 && a <= 21)
            ans = b;
        else
            ans = 0;
    }
    return ans;
}
"
6db35470b675dd4fe175137e2eb0eb7d0105006f,"public int[] seriesUp(int n)
{
    int[] array = new int[n * (n + 1) / 2];
    int i = 0;
    
        for (int j = 1; j <= n; j++)
        {
            for (int p = 1; p <= j; p++)
            {
                array[i] = p;
                i++;
            }
        }
    
    return array;
}
"
13772e7f5d68a294f3d88d013ec88879c3043f18,"public boolean love6(int a, int b)
{
    if (a==6 || b==6)
        return true;
    else if ((a-b)==6 || (a+b)==6)
        return true;
    else
        return false;
}
"
b334137a2954d0930d610613ec54703a38531bae,"public boolean sameEnds(int[] nums, int n)
{
    /**
    int same=0;
    for (int i=nums.length-1;i>0 ;i--)
    {
        if (nums[0]!=nums[i])
        {
            same++;
        }
    }
    */
    int same=0;
    int  i=nums.length;
    int end = nums.length-i;
    
    for( i; i > 0; i--)
	{
		if(nums[same] != nums[end])
			return false;
		else
		{
			same++;
			end++;
		}
	}
    return true;
        
}
"
dcfe887183b80aa12ca08e11e439452fad2c13e2,"public int roundSum(int a, int b, int c)
{
    return a + b + c;
}

public int round10(int num)
{
    
}
"
cdce47cb1a6b1689e1be574ae502bbd619d63dc5,"public boolean twoTwo(int[] nums)
{
    boolean twotwo = true;    
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] == 2)
        {
        	if ((i+1) < nums.length && nums[i+1] == 2)
            {
            	twotwo = true;
                i++;
            }
            else if ((i+1) < nums.length && nums[i+1] != 2)
            {
            	twotwo = false;
                i++;
            }
            else if ((i-1) < nums.length && nums[i-1] == 2)
            {
            	twotwo = true;
                i++;
            }
            else if ((i-1) < nums.length && nums[i-1] != 2)
            {
            	twotwo = false;
                i++;
            }
        }
    }
    return twotwo;
}
"
0d153ebd2c1f8d24ce67762fcd717d1e8cf76c87,"public int[] tenRun(int[] nums)
{
    int [] newnums = new int[nums.length];
 
    int temp = nums[0];
    for (int i = 0; i < nums.length; i++)
    {
    	
        if(nums[i] % 10 == 0)
        {
        	temp = nums[i];             
        }
    
        	newnums[i] = temp;
        
        
    }
return newnums;
}
"
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
"
a70de267ba367847cc0670a28ea2f883719ae499,"public int centeredAverage(int[] nums)
{
	int[] centered = new int[nums.length - 2];
    int max = nums[0];
    int maxPosition = 0;
    int min = nims[0];
    int minPosition = 0;
    for (int i = 0; i < nums.length; i++){
        if (nums[i] > max){
            max = nums[i];
            maxPosition = i;
        }
        if (nums[i] < min){
            min = nums[i];
            minPosition = i;
        }
    }
    int x = 0;
    for (int i = 0; i < nums.length; i++){
        if (i != minPosition && i != maxPosition){
            centered[x] = nums[i];
            x++;
        }
    }
    return centered;
}
"
e7aad59bc0f7416c80deba043153af59de5ea985,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i <= nums.length - 1; i++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            everywhere = true;
            break;
        }
    }
    return everywhere;
}
"
6ab9ae54bd54e288be820f9bc395cc5b0961144a,"public int countEvens(int[] nums)
{
    for( int i = 0; i < nums.length; i++) {
     	if (nums[i] = 2) {
            int total = total + 1;
        }
    }
    return total;
}
"
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
"
552849b0c75eaaa0936a044e864dccec0368ec80,"public boolean twoTwo(int[] nums)
{
    Boolean two = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            two = false;
            i = i + 2;
        }
    }
    return two;
}
"
60d664e55a47ec59b66168a83f8637d0d65c8da9,"public String repeatEnd(String str, int n)
{
    String end = str.substring(str.length()-n);
    String string = """";
    for (int i = 0; i < n; i++)
    {
        string = string + end;
    }
    return string;
}
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
c1fb97e75e4a65b57178678192ce753141aa0594,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMom)
    {
        if (isAsleep)
            return false;
    	if (!isAsleep)
            return true;
    }
    if (!isMom)
    {
        if (isMorning)
            return false;
        if (!isMorning)
            return true;
    }
    if (isAsleep)
        return false;
    return false;
}
"
d208b89a96d191ff7b56b1ff4cf0a1d7c5bab816,"public int sum67(int[] nums)
{
    int sum = 0;
    
    for(int i = 0 ; i < num.size() ; i++)
    {
     	if(nums[i]==6)
        {
         	while(nums[i]!=7)
            {
             	i++; 
            }
        }
        sum += nums[i]; 
    }
    
    return sum; 
}
"
2ecbcee75f8da434b075efdb59961639726be432,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums [i] != val && nums [i + 1] != val)
                                     return false;
    }
        return true;
}
"
09527b371d2678d52222749c19a9231c84aebeda,"public String plusOut(String str, String word)
{
    int strLength = str.length();
    int wordLength = word.length();
    int wordStart = 0;
    String newStr = """";
    for (int i = 0; i < strLength - wordLength; i++)
    {
        if (str.substring(i, i + wordLength-1).equals(word))
        {
         	wordStart = i;
        }
    }
    for (int j = 0; j < wordStart; j++)
    {
        newStr = newStr + ""+"";
    }
    newStr = newStr + word;
    for (int k = wordStart + wordLength - 2; k < strLength; k++)
    {
        newStr = newStr + ""+"";
    }
    return newStr;
}
"
b3627bb621485acf297c9671c52960f8e0e8cd33,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
}
"
9e62257bd7ff0fb085e1c4d75224605767ff70b2,"public String repeatEnd(String str, int n)
{
    String sub = str.substring(n, str.length());
    String add;
    for (int i = 0; i <= n; i ++)
    {
        add = add + sub;
    }
    return add;
}
"
e99f7db96b3c7c47cb592f66c069d96a7a10f70f,"public int centeredAverage(int[] nums)
{
    int smallest = 99;
    int largest = 0;
    int total = 0;
    int count = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] < smallest) {
            if ( smallest != 99) {
             total = total + 1;   
            }
            smallest = nums[i];
        }
        else if (nums[i] == smallest || nums[i] == largest) {
            total = total;
        }
        else if (nums[i] > largest) {
            if (largest != 0) {
             total = total + 1;   
            }
            largest = nums[i];
        }
        else {
            count = count + nums[i];
            total = total + 1;
        }
    }
    int div = count / total;
    return div;
}
"
0a6c20b02f71b6d58e329cd563a011f2218b3043,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if ((weekend) && (cigar > 0))
    {
        return true;
    }
    else if ((cigar >= 40) && cigar <= 60))
    {
        return true;
    }
	else
    {
        return false;
    }
}"
5f2602b35242f3a6be321fe2843509c6f0b33faa,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if (!(isBirthday)) {
        if (speed <= 60)
            return 0;
        if (speed > 60 && speed >=80)
            return 1;
            else
                return 2;
    }
    else if (speed <=65)
        return 0;
    else if (speed > 65 && speed <=85)
        return 1;
        else 
            return 2;
}
"
c1dc534bc134ac150f2499c964686d5c7968c85a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        System.out.printIn(""0"");
    }
    else if (speed >= 61 && <= 80)
    {
        System.out.printIn(""1"")
    }
    else if (speed >= 81)
    {
        System.out.printIn(""2"")
    }
    
}
"
9b06d81d2ee2682ba33f3c4251db06a7cfeaf2a8,"public int sum3(int[] nums)
{
    return 8;
}
"
bedb2c2c407cfc6f84128d3bcf6e102d6628dd32,"public boolean sameEnds(int[] nums, int n)
{
    if (n <= 1)
    {
    	for (int i = 0; i <= n; i++)
    	{
            if (nums[i] != nums[nums.length - 1 - i])
        	{
            	return false;
        	}
    	}
    }
    else
    {
        for (int i = 0; i <= n; i++)
    	{
            
            else if (nums[i] != nums[nums.length - n + i])
        	{
            	return false;
        	}
    	}
        
    }
    return true;
}
"
cd80603c865a5f537dae1c802b4d53681015978e,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
078ff149152919d6bdc7013bca26e1b03f265d5c,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    for (int i = 0; i < length; i++)
        if (""co"".equals(str.substring(i, i+2))
            {
                if (str.charAt(i + 3) == 'e')
           		 {	
                	count++;
           		 }
            }
           
    retunr count;
            
           
}
"
635800c2129b61ad650efec71f5aff72300426e0,"public String getSandwich(String str)
{
       int ind = str.indexOf(""bread"");
       int laind = str.lastIndexOf(""bread"");
       if((laind != -1 ) && (ind!=laind))
        return (str.substring(ind+5,laind)) ;
       return """";
}"
d620f21e27a87e15d05a4f085e8ed51214622697,"public String alarmClock(int day, boolean vacation);
int alarmTime = 0;
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	alarmTime=7;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	alarmTime=10;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=off;
    	}
    }
return alarmTime;    
}
"
6b3b987ca0659a9f8fbf90febebd82014eecf108,"public boolean endOther(String a, String b)
{
    int i = a.length();
    int j = b.length();
    enda = 
    if (a.substring(i - j).equals(b) || b.substring(j-i).equals(a))
    {
        return true
    }
    else
    {
        return false
    }
        
    
}
"
186a7f37d4e1e038aec7d315282709f3c91d8437,"public boolean xyzThere(String str)
{
    for(int x=0; x < str.length()-1; x++)
    {
        char char1 = str.charAt(x);
        
        
        char char2 = str.charAt(x+1);
       
        
        char char3 = str.charAt(x+3);
       
        
        if(!(char1 == '.'))
        {
            if(char1 == ('x') && char2 == ('y') && char3 == ('z'))
                return true;
            else
                return false;
        }
        else 
            return false;
    }
    return false;
}
"
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
"
7c77e6e3fc1b988356518cad44b8ccc44e6c7032,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c){
            result = 10;
        }
        else if (b == c){
        	result = 20;
        }
     }
            
    return result;
}
"
5455ec6afe437e7506504e1f1428a5a0b96a5669,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
    if (a > b)
    {
       return blackjack(a, 0);
    }
    else if (b > a)
    {
        return blackjack(0, b);
    }
    } 
    return 0;
}

"
ed001bba4d539b3174c33573c1d34c4f777cd0e2,"public int[] seriesUp(int n)
{
    int[] arr = new int[n*(n+1)/2];
    
    int index = 0;
        
    for(int i = 1; i <= n; i++) {
        for(int j = 0; j < i; j++) {
            arr[index + j] = j + 1;
        }
        index += i;
    }
                                
return arr;
}
"
0f2041ccc39553807ad260864cfb3c6740b0fb61,"public boolean canBalance(int[] nums)
{
        int first = 0;
    int second = 0;
      
    for(int i = 0; i < nums.length; i++)
        second += nums[i];
              
    for(int i = 0; i <= nums.length - 2; i++) {
        first += nums[i];
        second -= nums[i];
                            
        if(first == second)
            return true;
    }
           return false;                        
}
"
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
"
56b30ba0d8342b36c32494ba9afb08d905deed7c,"public int[] tenRun(int[] nums)
{
    int i;
    int[] arr = new int[nums.length];
    for (i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0 && nums[i+1] % 10 != 0)
        {
        while (nums[i] % 10 == 0 && nums[i+1] % 10 != 0)
        {
            arr[i] = nums[i];
            arr[i+1] = nums[i];
            i++;
        }
        }
        else
            arr[i] = nums[i];
    }
    return arr;
}
"
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
4489cdc24ed51b605c6903ab95f440f106adc6df,"public boolean twoTwo(int[] nums)
{
    int i;
    for (i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i+1] != 2)
            {
                return false;
            }
            i = i +2;
        }
    }
            else if (nums[nums.length - 1] == 2 && nums[nums.length - 2] != 2)
        {
            return false;
        }
    return true;
}
"
400d101dd3746f52a5e4415b6832b6e83fd9f8b1,"public String without2(String str) 
{
    int l = str.length();
	if(l >= 2)
	{
		if(str.substring(0,2).equals(str.substring(l-2, l)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
"
CodeStateID,Code
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
f6cfdfcc045d3ced7634c7a0afcbe4afd98d380e,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
        n = 0;
    
    return n;
}
"
c16adb4c3eec7086b0c8eda70c0968aa35b37c28,"public int countEvens(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] % 2 == 0)
			count++;
	}
	return count;
}
"
9db9cff5028b4b1cc75f4f5c9a641117debb19ac,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0; 
    }    
    if (b > 21)
    {
        return 0;
    }
    if ( a > b)
    {
        return a;
    }
    else
    {
        return b;
    }
    
}
"
e2ba43cf69aa7b33825eb35316df9213f4015d6d,"public boolean love6(int a, int b)
{
    int sum = a + b;
	if (a == Math.abs(6))
        return true;
    if (b == Math.abs(6))
        return true;
    if (sum == Math.abs(6))
        return true;
    return false;
}
    "
6d72f5b621649af66f06d05181162fe55168a76e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
}
"
226896123752498ab114c75a41895fa84b251342,"public boolean love6(int a, int b)
{
    boolean love6 = false; 
    
    if (a==6 || b==6)
    {
        love6 = true; 
    }
    else if (Math.abs(a+b)==6 || Math.abs(a-b)==6 )
    {
        love6 = true; 
    }
        
    
    return love6; 
}
"
48652724512680285d702d8ed9183b9b2ae3bab0,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a > b && b > c) //a>b>c
    {
    	if (a-b == b-c)
            return true;
        else
            return false;
    }
    else if (a>c && c>b) //a>c>b
    {if (a-c == c-b)
            return true;
        else
            return false;
    }
    else if (b > a && a>c) //b>a>c
    {if (b-a == a-c)
            return true;
        else
            return false;
    }
    else if (b>c && c>a) //b>c>a
    {if (b-c == c-a)
            return true;
        else
            return false;
    }
    else if (c>a && a>b) //c>a>b
    {if (c-a == a-b)
            return true;
        else
            return false;
    }
    else if (c>b>a) //c>b>a
    {if (c-b == b-a)
            return true;
        else
            return false;
    }
}
"
4b76a4708617320c1434c21318ce3a326f34974a,"public String repeatEnd(String str, int n)
{
    String newString = """";
    
    for (int i = 0; i < n; i++)
    {
        for (int z = n - 1; z = 0; z -= 1)
        {
            newString = newString + str.charAt(str.length() - z);
        }
    }
    
    return newString;
}
"
ee4708e15be1f13f8c489f277d070e2cddbf6ff4,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length ; i++)
    {
     	if (nums[i] == 13)   
        {
         	i++;
        }
     	sum = sum + nums[i];   
    }
    return sum; 
}
"
ccaac530c4fcb1f059afe43330f811b424dbe170,"public String getSandwich(String str)
{
    int length = str.length();
    int initialposition = 0;
    int finalposition = 1;
    String substr = """";
    for(int i = 0; i < length / 2; i++)
    {
        substr = str.substring(i, length - i);
       	if(substr.startsWith(""bread""))
        {
            initialposition = i + 5;
        }
        if(substr.endsWith(""bread""))
        {
            finalposition = length - i - 5;
        }
    }
    return str.substring(intitialposition, finalposition);
}
"
2a2a84c82dd052c5fe0bd61d57acb4e166700238,"public int redTicket(int a, int b, int c)
{
	if(a=b && b=c)
    {
        if(a=2)
        {
            return 10;
        }
        else
        {
            return 5;
        }
    }
     if(a != b && a !=c)
     {
         return 1;
     }
    else
    {
        return 0;
    }
    
    
   
   
}
"
5c6af2329dfee9028acad409433136de425c8b74,"public int countEvens(int[] nums)
{
    int numEvens = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            numEvens++;
        }
    }
    return numEvens;
}
"
169806848ea4e83282b3f69d0b3b786960175356,"public String alarmClock(int day, boolean vacation)
{
    if (!(vacation))
        if (day == 0 || day == 6)
            return ""7:00"";
    	else
            return ""10:00"";

    else if (vacation)
        if (day == 0 || day == 6)
            return ""10:00"";
    	else
            return ""off"";
    return ""off"";
}
"
fd975fc2b0de30ea1fa6c9ae43f605604231b8a1,"public boolean endOther(String a, String b)
{
    if (a.substring(a.length() - b.length(), a.length()).equals(b) ||
        b.substring(b.length() - a.length(), b.length()).equals(a))
        return true;
    else 
        return false; 
}
"
36fe4a936dd7f288376c9a071ac0041df496635f,"public boolean cigarParty(int cigars, boolean isWeekend)
{  
    boolean value = true;
    if (!isWeekend)
    {
        if (cigars > 39 && cigars < 61)
        {
            value = true;
        }
        else            
        {
            if (cigars < 40 || cigars > 60)
            {               
                value = false;
            }
       
        }
    }
    else
    {
        value = true;
    }   
    return value;
    
}
"
9dc0767266c1756dfc9cc953a7b44c96b56ff94a,"public int sum67(int[] nums)
{
	int sum = 0;
	//boolean sixMode = false;
	for(int i = 0; i < nums.length; i++)
	{
		if (i != 6)
		{
			sum += nums[i];
	}
	return sum;	   
}
"
49c7da2925f3b6af1fe5fb123e8dc6360e7b0bf8,"public boolean has77(int[] nums)
{
    int length = nums.length;
    int counter = 0;
    for (int i = 0; i < length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            counter = counter + 1;
        }
    }
    for (int i = 0; i < length - 2; i++)
    {
        if (nums[i] == 7 && nums [i + 2] == 7)
        {
            counter = counter + 1;
        }
    }
    if (counter > 0)
    {
        return true;
    }
    else 
    {
        return false;
    }
}
"
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
"
f2b8c5b9514cb219602b5dd63b12f22a6f7f9874,"public int[] fizzArray(int n)
{

int[] array = new int[n];
    
for (int i = 0; i < n; i++) 
	{
       array[i] = i;
    }
    
       return array;
    }

public boolean only14(int[] nums) 
{
    boolean four = true;
    for (int i = 0; i < nums.length; i++) 
    {
         if (nums[i] != 1 && nums[i] != 4) 
            {
             
             four = false;
             
            }
     }
    
    return four;
}
"
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
"
8fe89f0000f53d58016dc77d2e78c0f3a582d500,"public int countCode(String str)
{
    str = str.toLowerCase();
    String frs = ""co""
    int len = str.length();;
    int count = 0;
    if (len < 4)
        return 0;
    while (len > 0)
    {
    	if (!str.substring(0,2).equals(frs) && str.charAt(3)!='e')
        {
            str=str.substring(1,len);
       	 	len--;
        }
        else
            count++;
            
    }
    return count;
    
}
"
cb0d0d39d3accc119e3a208f8d9fd33d8fa4449b,"public boolean canBalance(int[] nums)
{
    boolean x = false;
    int sum1 = 0;
    int sum2 = 0;
    int y = 0;
    for (int i = 0; i < nums.length; i++)
    {
		for (int j = 0; j < nums.length; j++)
        {
            y = i + 1;
            if (y < nums.length)
            {
            	sum1 += nums[y];
                y++;
            }
            sum2 += nums[j];
        }
        sum2 -= sum1;
        if (sum1 == sum2)
        {
			x = true;
            break;
        }
    }
    return x;
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
5979b105c82e5a61a1a59bc1983265a5782930d3,"public boolean has77(int[] nums)
{
    int number = 0;
    for (int i = 0; nums.length-2; i++)
    {
        if (nums[i] == 7)
        {
            number++;
        }
        if (nums[i + 1] == 7)
        {
            number++;
        }
        else if (nums[i + 2] == 7)
        {
            number++;
        }  
        if (number == 2)
        {
            return true;
        }
    }
    return false;  
}
"
a500e35eb6d8900d3c9f2bd6aab3d20b837ae858,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    
    for(int i = 0; i < n; i++)
        arr[i] = i;
              
    return arr;
    
}
"
1268c5fd9979c6e580efff1ce1de6170e3f193f9,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        if (nums[i] > max) max = nums[i];
        if (nums[i] < min) min = nums[i];
    }
    
    return (sum - (max + min)) / (nums.length - 2);
}
"
760871127fb5f3e1f024e33f1000dcfb63a56502,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode == true)
        return true (if n <= 1 || n >= 10);
            else return false;
    if ( n >= 1 || n <= 10)
        return true;
    else 
        return false; 
                
     
    
}
"
067f3c0fe82004ac32645ea8ebf00f9e81915b6f,"public boolean twoTwo(int[] nums)
{
    if(nums.length==1&&nums[0]==2)
    {
        return false;
    }
    if( nums.length==0)
    {
        return true;
    }
     for(int i=0;i+1<nums.length;i++)
    {
        if(nums[i]==2&&nums[i+1]!=2)
        {
            
            return false;
        }
         
        else if(nums[i]==2&&nums[i+1]==2)
        {
            i++;
        }
    }
    if(nums[nums.length-1] == 2 && nums[nums.length-2] != 2&&nums.length>=2)
         {
             return false;
         }   
    return true;
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
"
858fd23f65dc7457aa8567482f18f8a1d93e653c,"public boolean xyBalance(String str)
{
    if (str.charAt(str.length()) == 'y')
        {
            return true;
        }
        return false;
}
"
4db64fea4987beec0c2663a9cbef9b8ca08addfd,"public boolean great; 
public int a; 
public int b; 

public boolean love6(int a, int b)
{
    a + b = d; 
    a - b = e; 
    b - a = f; 
    if (a == 6 || b == 6)
    {
        great = true;
    }
    else if (d = 6 || e = 6 || f = 6)
    {
        great = true; 
    }
    else 
    {
        great = false;
    }
    return great; 
}
"
1f02b9ba5fb05ad4db0d7946ec0782350d00056f,"public int makeChocolate(int small, int big, int goal)
{
    int r;
    r = goal % 5;
    
    if (r == 0)
    {
        return -1;
    }
    else if (r != 0)
    {
        return r;
    }
    
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
db531d4f4e4c79e06628c4f4ff50071a5bcba97c,"public boolean xyBalance(String str)
{
    if (str.substring(str.length()-1, str.length()).equals(""y""))
    {
        return true;
    }
    return false;
}
"
e6bc542b9cbf8d3396f467974901e047732726e6,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if(isAsleep)
		return false;
	else if(isMom)
		return true;
	else
        return (!isMorning);
}
"
5e834698d563bd22bd5a78f10b356862ede24550,"public int[] frontPiece(int[] nums)
{
    if (nums.length == 0)
    {
    	int[] x = new int[0];
        return x;
    }
    if (nums.length == 1) {
		int[] a = new int[1];
		a[0] = nums[0];
		return a;
	}
	int[] a = new int[2];
	a[0] = nums[0];
	a[1] = nums[1];
	return a;
	
}
"
4b762fea3371ccfaf62ede13110f696d56dc50a1,"public boolean endOther(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    String end;
    String temp;
    a = a.toLowerCase();
    b = b.toLowerCase();
    if (aLength >= bLength)
    {
        end = a.substring(aLength - bLength);
        temp = b;
    }
    else 
    {
        end = b.substring(bLength - aLength);
        temp = a;        
    }
    return (end.equals(temp));
    
}
"
1d4d8d94fce1eeb3bd9e2b8f0850a1de114f6b27,"public int noTeenSum(int a, int b, int c)
{
    a = this.fixTeen(a);
	b = this.fixTeen(b);
    c = this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if ( n >= 13 && n < 15)
    {
        n = 0;
    }
    else if ( n > 16 && n <= 19)
    {
        n = 0;
    }
    return n;
    
}
"
3c24305dd4a17391b57857be2bc4fa0567376427,"public int[] seriesUp(int n)
{
    int[] seriesUp = new int[n * (n + 1)/2];
    int num = 0;
    for (int i = 1; i <= n; i++)
    {
    	for (int j = 1; j <= i; j++)
        {
        	seriesUp[num] = j;
            num++;
        }
    }
    return seriesUp;
}
"
c5831ebd40c94307ef20afd4ff326967939b5594,"public boolean twoTwo(int[] nums)
{
    if (nums.length == 1 && nums[0] == 2)
    {return false;}
    
    if (nums.length == 0)
    {
        return true;
    }
    
    
    
    for( int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if ((i-1 >= 0 && nums[i-1] == 2) && (i+1 < nums.length && nums[i+1] == 2))
            {
                return false;
            }
        }
    }
    return true ;
}
"
e4bbc30a1a30b028623d6762a0518a3061800109,"public int roundSum(int a, int b, int c)
{
    int tot = 0;
    tot = tot+round10(a);
    tot = tot+round10(b);
    tot = tot+round10(c);
    return tot;
}

public int round10(int num)
{
    if (num%10>=5)
        return (((num/10)+1)*10);
    else
        return ((num/10)*10);
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
33e62f65180aaedc26d6d11b46d081d5c9bffbf4,"public int[] frontPiece(int[] nums) 
{
  if (nums.length == 1)
  {
  return new int[] {nums[0]};
  }
  else if (nums.length == 0)
  {
  return new int[] {};
  }
    else
    {
  return new int[] {nums[0],nums[1]};
    }
    }
"
a6eca60d2ec41fba18ab610a87ee9c66cbb73d19,"public int findOdd(int[] nums, int index)
{
    biggestOdd = 1;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd == nums[j];
    return biggerOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
a330edcf177e498520a76708678f3602dc4be426,"public boolean evenlySpaced(int a, int b, int c)
{
    int num1 = Math.abs(a-b);
    int num2 = Math.abs(a-c);
    int num3 = Math.abs(b-c);
    
    if (num1==num2 || num1==num3)
        return true;
    if (num2==num3 || num2==num1)
        return true;
    return false;
    
}
"
50759ca5b0595e4a917b5ab65b7041cb67194df3,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    
    String aEnd = """";
    String bEnd = """";
    
    if (a.length() <= b.length()) {
      bEnd = b.substring(b.length() - a.length());
    }
    if (b.length() <= a.length()) {
      aEnd = a.substring(a.length() - b.length());
    }
    
    if (aEnd.equals(b)) {
      return true;
    }
    else if (bEnd.equals(a)) {
      return true;
    }
    
    return false;
  }
    
}

"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
803c3b7ab2f6984a216901319f02c8549f93ff24,"public String getSandwich(String str)
{
    int length = str.length();
    if ( str.startsWith(""bread"") && str.endsWith(""bread"") )
    {
        return str.(5, (str.length - 5));
    }
    else
    {
        return """"
    }
}
"
fa39e9bf95cd8e4f6a899c3950c92040755bbb1b,"public int chance; 

public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        chance = 0; 
    }
    else if (you >= 8 || date >= 8) 
    {
        chance = 2;
    }
    else 
    {
        chance = 1;
    }
    return chance; 
}
"
7aafecfd2fcb8d0b62ed58b817160c34e08ce4d4,"public String zipZap(String str)
{
    int stringLength = str.length();
    if (stringLength < 3)
    {
        return str;
    }
    else
    {
        for (int i = 0; i < stringLength; i++)
        {
        	int findZ = str.indexOf(""z"", i);
    		int findP = str.indexOf(""p"", i);
        	if (findP - findZ == 2)
        	{
				String zStart = str.substring(findZ, stringLength - (findZ + 1));
            	String zBack = str.substring(findZ + 2);
            	str = zStart + zBack;
        	}
    	}
    }

    return str;
}
"
d4d73c7cae71904a42d15e620e3207b450ea1974,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (!isSummer)
    {
        if (temp >= 60 && temp <= 90)
        {
            return true;
        }
        else 
        {
            return false;
        }
    }
    if (isSummer)
        if (temp >= 60 && temp <= 100)
        {
            return true;
        }
    	else 
        {
            return false;
        }
    return false;
}
"
a667aa3fb0e6b7342e84130138eb78983944fe1e,"public String repeatEnd(String str, int n)
{
    int len = str.length();
	String str1 = """";

	for (int i = 0; i < n ; i++)
	{
		str1 = str1+ str.substring(len-n, len);
	}
	return str1;
}
"
eb1e31d6afbab6cae075b0b724b735e3ec4c8cfd,"public int sum13(int[] nums)
{
    	int total = 0;
	for(int inT = 1; inT <= nums.length; inT++)
	{
		if(nums[inT-1] == 13)
			inT-1++;
		else
			total += nums[inT];
	}
	return total;
}
"
169ffd8f8e5d96f6d81a2179e0b1ca267079e9a1,"public int redTicket(int a, int b, int c)
{
    int answer = 0;
    if (a == 2 && a == b == c)
    {
        answer = 10;
    }
    else if (a == b == c)
    {
        answer = 5;
    }
    else if (b != a && c != a)
    {
        answer = 1;
    }
return answer;
}
"
945cfd0edc98a8e6301329f25138661d6a94e839,"public boolean in1To10(int n, boolean outsideMode)
{
    if(!outsideMode && (n <= 10 && n>=1))
        return true;
    else if (outsideMode && (n<=1 && n>=10))
        return true;
    else
        return false;
        
}
"
677fbb2c5184ad034acd62c6303f9fdf6cbce459,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffAB = Math.abs(a - b);
    int diffBC = Math.abs(b - c);
    int diffAC = Math.abs(a - c);
    //if (diffAB == diffBC || diffAC == diffBC || diffAB == diffAC)
    if (a == b || b == c || a == c)
    {
        return false;
    }
    else
    {
        return true;
    }
}"
4e43740dacd2244c66fa59b287af405f40ba88f8,"public boolean endOther(String a, String b)
{
    for (int i = 0; i < a.length(); i++)
    {
        if 
        (a.toLowerCase().substring(i).equals(
            b.toLowerCase()));
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
031009b921233dd00bf17ab58c642b9ae5f5175b,"public int[] zeroMax(int[] nums)
{
    int max;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 0)
		{
			max = 0;
			for(int k = i + 1; k < nums.length; k++)
			{
				if(nums[k] > max && nums[k] % 2 == 1)
					max = nums[k];
			}
			if(max != 0)
				nums[i] = max;
		}
	}
	return nums;
}
"
12eb90cd21edfa3b84b353939a235a5e8fca23c3,"public int makeChocolate(int small, int big, int goal)
{
    int amountOfSmallBars = goal % 5;
    
    if (small + (big * 5) < goal)
    { 
        return -1;
    }
    
    else if (amountOfSmallBars <= small && goal - (big * 5) > 4)
    {
        return amountOfSmallBars + 5; 
    }
    
    else if (amountOfSmallBars <= small)
    {
    	return amountOfSmallBars;
    }
    
    else 
    {
        return -1; 
    }
    
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
88bc3de533b032ab1c01e9db5af9138feb5e7fb7,"public int[] tenRun(int[] nums)
{
    int t = nums[0];
    int k = 0;
    int x[] =  new int[nums.length];
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] / 10 > 0 && nums[i] % 10 == 0)
        {
            t = nums[i] / 10;
            k = nums[i];
        }
        else
        {
            x[i] = k;
        }
    }
    return x;
}
"
f42a208c69c160f117bdc7f7cfc224370234c718,"public int sum67(int[] nums)
{
    boolean sectioncounts = true;
    int len = nums.length;
    int sum = 0;
    for (int i = 0; i < len; i++)
    {
        int cur = nums[i]
        if (cur == 6)
        {
            sectioncounts = false;
        }
        if (sectioncounts)
        {
            sum += cur;
        }
        else
        {
            if (cur == 7)
            {
                sectioncounts = true;
            }
        }
            
    }
}
"
247b37dd23932e974bc1bbdcdd044d35046576e1,"public int countCode(String str)
{
    int stringLength = str.length();
    int numberOfCode = 0;
    int counter = stringLength;
    if (stringLength > 0)
    {
        while (counter > 0)
    	{
            int findCO = str.lastIndexOf(""co"", counter);
    		int findE = str.lastIndexOf(""e"", counter);
        	if (findE - findCO == 3)
        	{
            	numberOfCode = numberOfCode + 1;
        	}
            counter = counter - 4;
    	}
        return numberOfCode;
    }
    else
    {
        return 0;
    }
}
"
9cccc838c6123ff6e830e3f73cb672510aa4de73,"public String atFirst(String str)
{
    if (str.length() >= 2)
    return str.substring(0,2);
  else if (str.length() == 1)
    return str + ""@"";
  else
    return ""@@"";

}
"
cea2d782ee168cd0b9eff02c6df35f4f2b9ffe50,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
	{
		if(day = 0 || day = 6)
			return ""off"";
        else
		return ""10:00"";
	}
	else
	{
		if(day = 0 || day = 6)
			return ""10:00"";
        else
		return ""7:00"";
	}
}
"
715aa81924a59b597d7a7341eacca1e319779951,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"")) //&& !str.charAt(i-1).equals('.'))
        {
            return true;
        }
    }
}
"
8e99d0d5f2e05abd2376ca7ff0eaa4adbf7510e0,"public int countEvens(int[] nums)
{
        int evenArray = 0; 
        for(int i = 0; i< nums.length; i++)
        {
            if(nums[i] % 2 == 0)
            {
                evenArray ++;
            }
        return evenArray;
        }
}"
be8aee4152f3cab23d55d27027393b89fd74ceb9,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
	if(isMorning == true && isMom == true)
    {
    	return true;
    }
    
    else if(isMorning == true && isMom == false)
    {
    	return false;
    }
    
    if(isAsleep == true)
    {
    	return false;
    }
    
    return false;
}
"
fd6cf1ae6d1d7c972b3e2e6b67f978e9f9f4b109,"public String zipZap(String str)
{
String me = """";
for (int i=0; i< str.length(); i++)
if ((i < str.length()-2) && (str.substring( i, i + 1).equals(""z"") && (str.substring( i + 2, i + 3).equals(""p""))))
word += ""zp"";
i += 2;
} 
else 
word += str.substring(i, i + 1);

return word;

}
}
"
e2406be4f77b7fc1ab2aa15b9adedafb314810a0,"public String getSandwich(String str)
{
    if (str.startsWith(""b"") && str.endsWith(""d""))
        {
         	return str.substring(5, str.length()-4);   
        }
     else{
      return """";   
     }
}
"
452f5e4f7dd4266bd455848358c9d36ebe31a78b,"public int[] zeroMax(int[] nums)
{
    int len = nums.length;
    for(int i  = 0; i < len; i++)
    {
        if(nums[i] == 0)
        {
            int value = 0;
            int j = i + 1;
            for(j; j < len; j++)
            {
                if(nums[j] % 2 == 1 && nums[j] > value)
                {
                    value = nums[j];
                }
            }
            nums[i] = value;
        }
    }
    return nums;
}"
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
"
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
"
19b1e88daab3c73139c123af1c8a9ac54420284b,"public int[] frontPiece(int[] nums)
{
    if (nums.length <= 2)
    {
		int[] newarray = new int[nums.length];
         for (int i = 0; i < nums.length; i ++)
        {
            newarray[i] = nums[i]; 		     
			}
         return newarray;   
    }
 	else //if(nums.length >= 2) 
   {
        int[] newarray2 = new int[2];
   		for (int i = 0; i < 2; i++)
   		{ 
       		newarray2[i] = nums[i];
        	return newarray2; 
    	}
        return newarray2; 
    }
   // int[] newarray3 = new int[nums.length];
    //return newarray3;
}
"
f9974ea9bac355d90edac9a23be23a217ee257f9,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length-2; i++)
    {
        if ( nums[i] == 7 && nums[i+1] == 7)
        {
            truth = true;
        }
        else if (nums[i] == 7 && nums[i+2] == 7)
        {
            truth = true;
        }
        else if (nums = [1 7 7])
        {
            truth = true;
        }
        else if (nums = [2 7 2 2 7 7])
        {
            truth = true;
        }
        
    }
    return truth;
}
"
428a4330008980c438326abad1def09257e6d2d1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a > b && a < 21)
    {
        return a;
    }
    else (b > a && b < 21)
    {
     	return b;   
    }
}
"
4e4477c02543a4430aaab1521c31344956bf782a,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend)
    {
       if (cigars >= 40 && cigars <= 60)
       {return true;}
       else
       {return false;}
    
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
b8038bc6bbae63af76830e81dfc852479f028eed,"public int centeredAverage(int[] nums)
{
    int largest = 0;
    int smallest = 100000;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > largest)
        {
            largest = nums[i];
        }
        if (nums[i] < smallest)
        {
            smallest = nums[i];
        }
    }
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if !(nums[i] == largest || nums[i] == smallest)
        {
            sum += nums[i];
        }
    }
    return sum / nums.length;
}
"
fe4c33f884bebc96972922f847a797677cecb743,"public int sum67(int[] nums)
{
  //add up the sections between 6 and 7.
    //subtract them from the total
    boolean ignoring = false;
    int deplorables = 0;
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
    	if(nums[i] == 6)
        {ignoring = true;}
        
        if(nums[i]== 7 && ignoring)
        {ignoring = false;}
        
        if(ignoring)
        {deplorables += nums[i];}
        else
        {sum += nums[i];}
    }
  return sum - deplorables;
}
"
f0be04df720e45391f559d26dc0955b0202bb87b,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n != 15 && n != 16)
        	return 0;
    return n;
}
"
4d6ca56e71ca592029ae4e4f1001ca3342de1a71,"public boolean in1To10(int n, boolean outsideMode)
{
    if (!outsideMode)
    {
        if (n >= 1 && n <= 10)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    
    if (outsideMode)
    {
        if (n <=1 && n >= 10)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
1a90d766bedb5e425116e738cfba02500cb51228,"public int loneSum(int a, int b, int c)
{
    int sum = 0;
    if (a != b && a != c && b != c)
    {
        sum = a + b + c;
    }
    else if (a == b && a == c)
    {
        sum = 0;
    }
    else if (a == b)
    {
        sum = c;
    }
    else if (a == c)
    {
        sum = b;
    }
    else if (b == c)
    {
        sum = a;
    }
    
    return sum;
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
273dd2b601a9543dd629ec34cf5635fce472e116,"public int[] withoutTen(int[] nums)
{
    int[] nnum;
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
            int temp = nums[i];
            nnum[counter] = nums[i];
            counter++;
        }
    }
    if (nnum.length > nums.length)
    {
     	for (int i = nnum.length; i < (nums.length); i++)
        {
         	nnum[i] = 0;   
        }
    }
    return nnum;
}
"
04780365d53ec02bf23dee2452c32d0edb7fb12c,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
5c9dbe5da9508325bea19cd0903af4d658b6bed8,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        a = 0;
		b = 0;
    	c = 0;
	if (a == b)
        a = 0;
    	b = 0;
    if (b == c)
        b = 0;
    	c = 0;
	return a + b + c;
}
"
80e90273277b70da6bd79d49fd2c64d37ec3af9a,"public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        return str.substring(5, (str.length()-5));
    }
    else
    {
        return """";
    }
}
"
b8d3781b27b05e88706393f0d10ed65da04a944a,"public boolean in1To10(int n, boolean outsideMode)
{
    boolean inside = ((n >= 1)&&(n <= 10)); 
    boolean outside = ((n <= 1) || (n >= 10)); 
    if (outsideMode && outside){
        return true; 
    }
    else if (!outsideMode && inside){
        return true; 
    }
    else {
        return false; 
    }
    
}
"
3776c49f6baa3f43ad1fa435110f8627d1200fb3,"public int[] seriesUp(int n)
{
    int[] arr = new int[n*(n+1)/2];
    int p = 0;
    for (int i = 1; i <= n; i++)
    {
     	for (int j = 1; j <= i; j++; p++)
        {
         	arr[p] = j;   
        }
    }
    return arr;
}
"
9854a8715c3f2ef0abd481b669c936355c5f9760,"public int sum67(int[] nums)
{
    int sum = 0;
    
    for (int i : nums)
    {
        if (i == 6)
        {
            for (int j = 6; j <= 7; j++)
            {
                i = 0;
            }
        }
        sum = sum + i;
    }
    
    return sum;
}
"
78a8e8a64b313ff7d1734612cc884e563d6caea4,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b!= 13 && c!= 13)
    {
        return (a+b+c);
    }
    
    else if (a== 13)
    {
        return 0;
    }
    
    else if (b== 13)
    {
        return a;
    }
    
    else if (c==13)
    {
        return (a+b);
    }
    
    return 0;
}
"
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}"
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
a70f0408216a42b9040178611ad2ac992d045fb3,"public int[] fix45(int[] nums)
{
    int temp = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 0; j < nums.length; j++)
            {
                if (nums[j] == 5)
                {
                    
                    if (j > 0 && nums[j - 1] != 4)
                    {
                        temp = nums[i + 1];
                        nums[i + 1] = 5;
                        nums[j] = temp;
                    }
                    else if (j == 0)
                    {
                        temp = nums[i + 1];
                        nums[i + 1] = 5;
                        nums[j] = temp;
                    }
                }
            }
        }
    }
    
    return nums;
}
"
19b5520e4e0fbd1633882fbc46c12e7739db6b55,"public int dateFashion(int you, int date)
{
    int rating;
    if (you >= 8 && date > 2)
    {
        rating = 2;
    }
    else if (you <= 2 || date <= 2)
    {
        rating = 0;
    }
    else 
    {
        rating = 1;
    }
    return rating;
}
"
78e28463161ca74af61d91c3f23a6ccf2b1652e0,"public int blackjack(int a, int b)
{
    int ans = 0;
	if (a > b){
        if (a <= 21)
            ans = a;
        else if (a > 21 && b <= 21)
            ans = b;
        else
            ans = 0;
    }
	else if (b > a){
        if (b <= 21)
            ans = a;
        else if (b > 21 && a <= 21)
            ans = b;
        else
            ans = 0;
    }
    return ans;
}
"
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
"
27e9d9c46629c06547991d364b9c7a8b3a3f4536,"public String zipZap(String str)
{
    String x = """";
    int j = 3;
    for (int i = 0; i < str.length() - 1; i++)
    {
        if (j <= str.length())
        {
            if (str.substring(i, j).equals(""zip"") || str.substring(i, j).equals(""zap""))
       		{
                x = x + ""zp"";
                i = j;
                if (j + str.length() < 2)
                {
                    j = j + 2;
                }
        	}
        	j++;
        }
        else
        {
            x = x + str.substring(i);
        }
    }
    return x;
}
"
183ffbf6dd10cd3e343fc7d9c1c047c33f0ccbe0,"public int[] frontPiece(int[] nums)
{
    int[] front = new int[2]
    if (nums.length >= 2) {
        int[] front = new int[2];
        front[0] = nums[0];
        front[1] = nums[1];
    }
    else if (nums.length == 1) {
        int[] front = new int[1];
        front[0] = nums[0];
    }
    else {
        int[] front = new int[0];
    }
    return front;
}
"
eb7ed5cfb3d5b7f8e15246e7b8f35427b2697c49,"public int[] tenRun(int[] nums)
{
    int ten = -1;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            ten = ten;
        }
        else if (nums[i] % 10 == 0)
        {
           ten = nums[i];
        }
        if (ten != -1)
        {
            nums[i] = ten;
        }
    }
    return nums;
}
"
c97fb71ecc62fd3d12dd19305bfc57d7c50ecbc2,"public int sum13(int[] nums)
{
    int counter = 0; 
    for (int x = 0; x < nums.length; x++)
    {
        if (nums[x] == 13)
        {
            x++
        }
         else
         {
         	counter = counter + nums[x];   
        }
    }
    return counter;
}
"
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
"
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
41c8da13b33e4f2c7ae68912df33bf871bfd1952,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = n;
    for (int i =0; i <n ;i++)
    {
        if (!(nums[i] == nums[nums.length - range + i]))
		result = false;
    }

}
"
4404587ed61bbebaf2eed1705284a3e9c9d41166,"public String[] fizzBuzz(int start, int end)
{
    String[] arr = new String[end - start];
    
    for(int i = start; i < end; i++) {
        if(i % 15 == 0) {
            arr[i - start] = ""FizzBuzz"";
        } else if(i % 3 == 0) {
            arr[i - start] = ""Fizz"";
        } else if(i % 5 == 0) {
            arr[i - start] = ""Buzz"";
        } else {
            arr[i - start] = String.valueOf(i);
        }
    }
                                                      
    return arr;
}
"
850b29b41eb8755b65684da314498e5f9f502ead,"public int[] frontPiece(int[] nums)
{
    if (nums.length .isEqual(1)
        return nums;
    if (nums.length .isEqual(2)
        return nums;  
    else
        int[] sum = new int [nums.length];
        sum[0] = nums[0];
        sum[1] = nums[1];
        return sum;
    
   // int[] sum = new int [nums.length-1];
    //for (int i = 0; i < nums.length; i++)
      //  sum[i] = nums[i];
   //return sum;
}
"
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
"
24da54785f7c9ffcbe73a362b6b7007d013d1dfb,"public int[] withoutTen(int[] nums)
{
    int length = nums.length;
	for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            length --;
        }
    }
    int[] ints = new int[nums.length];
    int k = 0;
    for (int i = 0; i < ints.length; i++)
    {
        if (nums[k] != 10)
        {
            int temp = nums[i];
            nums[k] = temp;
            k++;
        }
        
    }
    return ints;
}
"
98760ba3c3be5f3ee618423f97abb28787e96403,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffAB = Math.abs(a - b);
    int diffBC = Math.abs(b - c);
    int diffAC = Math.abs(a - c);
    if (diffAB == diffBC || diffAC == diffBC || diffAB == diffAC)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
2ee7d366ef45e04675e68bd5cfd425ac0862af68,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else
    {
		return ""@@"";
    }

  }
"
03963c180ede47baf3cb2a34f74b6ff99ed0fee1,"public int[] zeroMax(int[] nums) {
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--) {
        if (nums[i] % 2 == 1 && nums[i] > largestOdd)
            largestOdd = nums[i];
        if (nums[i] == 0)
            nums[i] = largestOdd;
    }
    return nums;
}"
fc6c5896ed71b267fc143aba2b9e3e2bc1db34db,"public boolean endOther(String a, String b)
{
   	String a = a.toLowerCase();
    String b = b.toLowerCase();
    int lengthA = a.length();
    int lengthB = b.length();
    String end;
    String temp;
    if (lengthA >= lengthB)
        end = a.substring(lengthA - lengthB);
        temp = b;
    	return (end.equals(temp));
    else 
        end = b.substring(lengthB - lengthA);
    	temp = a;
		return (end.equals(temp));
}
"
972ec59cf35160bbecf6f05203c204646910bcc1,"public int countEvens(int[] nums)
{
    int x = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] % 2 == 0)
			x++;
	}
	return x;
}
"
ae2638783e93ba48945c50d230ed1f06b7034c19,"public boolean xyzThere(String str) {
  boolean res = false;

  if(str.contains("".xyz"") == false && str.contains(""xyz"")){
    res = true;
  }

  return res;

}"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
39d04f9eea0a2090ead1e9b6eeed9ea750cf69be,"public boolean bobThere(String str)
{
    int len = str.length() - 2;
	for(int i = 0; i < len; i++)
	{
		if(str.charAt(i) == 'b' && str.charAt(i+2) == 'b')
			return true;
	}
	return false;
    
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
"
719b9a554c7a2f3e1ec52e6f584d7a98d1ae7f6d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5;
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
}
"
db19ea5f1cabdb8d39c12a6acfc593bd85bf4f95,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
    	{
     	   for (int j = i + 1; j < nums.length && nums[j] % 10 != 0; j++)
           {
            	nums[j] = nums[i];   
           }
    	}
    }
    return nums;
}
"
831d4624fc6b65528bad888eede0abe0e570d59f,"public int[] seriesUp(int n)
{
    int len = n*(n+1)/2;
    int[] nums = new int[len];
    int index = 0;
	for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            nums[index] = j;
            index++;
        }
    }
    return nums;
}
"
b2dce8aae42aa118574cb05bbc435d69ab55b15b,"public boolean xyBalance(String str)
{
    boolean xybalanced = true;
    for (int i = 0; i < str.length(); i++)
    {
        if (str.charAt() == 'x')
        {
            boolean yLater = false;
            int j = i;
            while (j < str.length())
            {
                if (str.charAt(j) == 'y')
                {
                    yLater = true;
                }
            }
            xybalanced = yLater;
        }
    }
    return xybalanced
}
"
b4b80ec23db8730d3a13b7f18055050c22aa3b95,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        else
        {
            return 2;
        }
    }
    else
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}
}"
d89b2ec7bb897898380cc729eb746e94fdb7e48d,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length-1; i++)
    {
        if ( nums[i] == 7 && nums[i+1] == 7)
        {
            truth = true;
        }
        else if (nums[i] == 7 && nums[i+2] == 7)
        {
            truth = true;
        }
        
    }
    return truth;
}
"
174b36c78ec46a46446964faefed2c52a209425d,"public int sum67(int[] nums)
{
    int sum = 0;
	boolean sixMode = false;
	for(int i = 0; i < nums.length; i++)
	{
		if(sixMode)
		{
			if(nums[i] == 7)
				sixMode = false;
		}
		else if(nums[i] == 6)
			sixMode = true;
		else
			sum += nums[i];
	}
	return sum;
}
"
01da1f00e8056aef2e0ea9bd298368b669f36f3d,"public String plusOut(String str, String word)
{
    int x = word.length();
    int y = str.length();
    String answer = """";
    for (int i=0; i<y; i++)
    {
        if(str.substring(i).startsWith(word)) {
            answer = answer + word;
            i = i + x;
        }
        else
        {
            answer = answer + ""+"";
        }
    }
    return answer;
    
}
"
d8f6de34bbb4daabf4789e4930885c05e8604106,"public int countClumps(int[] nums)
{
    int clumpNum = 0;
    int clump = 0;
    for (int = 0; i < nums.length - 1; i++)
    {
     	if (clump == 0 && nums[i] == nums[i+1])
        {
            clumpNum++;
            clump++;
        }
        else
        {
         	clump = 0;   
        }
    }
    return clumpNum;
}
"
cc7c0a19cb00fd53273b9544f33c0eae0f88bcc7,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    int sum =  a + b + c;
    return sum;
}

public int round10(int num)
{
    int r = 10 % num;
    int q = 10 - r;
    if (r < 5)
    {
   		num = num - r;
    }
    else
    {
        num = num + q;
    }
    return num;
}
"
8bde8f1537b86e5faed1267a65810c6bfe513e6d,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
    {
        if(a == c)
            return 20;
        return 10;
    }
    if(a == c || b == c)
        return 10;
    return 0;
}
"
aef36a782bd7a9ba3af94c10a255db4fc9fddb36,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    return a+b+c;

}

public int fixTeen(int n)
{
    if ((n != 15) && (n!= 16))
    {
    	if ((20>n) && (n>12))
        {
            return 0;
        }
        else
        	return n;
    }
	else
        return n;
}
"
66d85cf0a88bd29710d927fcc5ef0a8a5866b68e,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = a - b;
    int diffTwo = c - b;
    if (diffOne == diffTwo)
    {
        return true;
    }
    else
        return false;

}
"
204b8f36bc5ef1201dabc6db2562a8e7e77e4edc,"public String zipZap(String str)
{
    String string = new String();
    if (str.length() >= 2)
    {
    for (int i = 0;  i < str.length() - 2; i++)
    {
        if (str.substring(i, i + 1).equals(""z"") && str.substring(i + 2, i + 3).equals(""p""))
        {
            string = string + ""zp"";
            i = i + 2;
        }
        else
        {
            string = string + str.substring(i, i + 1);
        }
    }
    if (str.substring(str.length()) != ""p"")
    {
        return string + str.substring(str.length());
    }
    else
    {
    	return string;
    }
    }
    else
    {
        return str;
    }
}
"
c3f9d9c89be8302fbf11a1742a2668305b2fcaf4,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if(10 <= sum && sum <= 19)
        return 20;
              
    return sum;
    
}
"
47bcbb118b9820ce001397912cd55ec9c5521a9b,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
        return c;
    }
    if (a == c)
        return b;
    if (b == c)
        return a;
    return (a + b + c);
}
"
92e2332735b080b8b3a8e33d93dcef650afe1cfa,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
     if (day==0 || day==6)
         return off;
     else
         return ""10:00"";
    }
    if( day==0 || day==6)
        return ""10:00"";
   
    return ""7:00"";
}
"
44c7b90c547b17b7d4d67be9d3e3b2586ef9e7ab,"public int[] tenRun(int[] nums)
{
    for (int i = 0;i<nums.length;i++)
    {
        if (nums[i] % 10 = 0)
        {
            nums[i] = nums[i];
        }
    }
    return nums;
}
"
9dfb9d8285fed77ebe058ec80bfb80f2f1a5db2a,"public boolean sameEnds(int[] nums, int len) {
    for (int i = 0, j = nums.length - len; i < len; i++, j++)
        if (nums[i] != nums[j]) return false;
    return true;
}
"
9143e1d841bd21410fc81b92da7ef536d94b45be,"public int[] tenRun(int[] nums)
{
    int current10 = 0; 
    
    for(int i = 0 ; i < nums.length ; i ++)   
    {
        if(nums[i]%10 == 0)
        {
         	current10 = nums[i];    
        }
        nums[i]= current10; ; 
    }
    return nums; 
}
"
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
"
fc6db212dce86e737b3eaac3fc356e5f64f282da,"public boolean love6(int a, int b)
{
    int sum = a + b;
    int dif = a - b;
    int diff = b - a;
	if (a == Math.abs(6))
        return true;
    if (b == Math.abs(6))
        return true;
    if (sum == Math.abs(6))
        return true;
    if (dif == Math.abs(6))
        return true;
    if (diff == Math.abs(6))
        return true;
    return false;
}
    "
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
"
21291fd1ed305412a2773f87ced44759180f6812,"public int[] shiftLeft(int[] nums)
{
    int length = nums.length;
    int[] nums2 = new int[length];
    nums2[length - 1] = nums[0];
    for ( int i = 1; i < length; i++ )
    {
        nums2[i - 1] = nums[i];
    }
    return nums2;
}
"
98bc9f3787d76f22c4963de47fff8456eb1957fe,"public int sum3(int[] nums)
{
    int total = int[1] + int[2] + int[3];
    
    return total;
}
"
65a392c72ee1a8438f55208dbd0468f056483783,"public String plusOut(String str, String word)
{
    int strLength = str.length();
    int wordLength = word.length();
    String outputString = """";
    for (int i = outputString.length(); i < (strLength - wordLength); i++)
    {
        boolean lookForWord = (str.substring(i, i + wordLength) == word);
        if (lookForWord)
        {
            outputString = outputString + word;
        }
        else
        {
            for (int j = 0; j < wordLength; j++)
            {
                outputString = outputString + ""+"";
            }
        }
    }
        return outputString;
}"
ebebbcd628f8bb7d6584e336ffd2ddf31ba9b356,"public int countCode(String str)
{
    int s = 0;
    for(int i = 1; i < str.length(); i++)
    {
    	if(str.charAt(i) == 'c')
        {
            if(str.charAt(i+1) == 'o')
            {
                if(str.charAt(i+3) == 'e')
                {
                    s++;
                }
            }
        }
    }
    return s;
}
"
bfa9ba9f8c1aa8e1ae413c2af6f9ae30af19b8b8,"public int countEvens(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if(nums[i] % 2 == 0)
        {
            count++;
        }
    }
    
    return count;
}
"
a7fc0c3e224cd276516c63b1a515f54f3c1735fb,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int bigTicket = 2;
    int smallTicket = 1;
    int noTicket = 0;
    
    if (isBirthday)
    {
        if (speed >= 86)
            return bigTicket;
        else if (speed < 86 && speed > 65)
            return smallTicket;
        else
            return noTicket;
    }
    else
    {
        if (speed >= 81)
            return bigTicket;
        else if (speed < 81 && speed > 60)
            return smallTicket;
        else
            return noTicket;
    }
}
"
863743fea61e06d673131ef705425d4b67d43542,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return b + c;
    if (b == c)
        return a + c;
    if (a == c)
		return b + c;        
}
"
9454c68a8ae423fc589ddc1cd01a5030b24de3a8,"public int luckySum(int a, int b, int c)
{
    int sum =  a + b + c;
    if ( a == 13)
    {
        sum = 0;
    }
    else if ( b == 13)
    {
        sum = a
    }
    else if { c == 13}
    {
        sum = a + b;
    }
    return sum;
}
"
90ba8e539227f357db0938261fa9f3394bc62230,"public boolean endOther(String a, String b)
{
    String str = ""string"";
    if (str.startsWith(a) && str.endsWith(b))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
0fad8b415867f8a1a716acf8bf5e3f25c3071ff9,"public int countClumps(int[] nums)
{
    int counter = 0;
    boolean clumps = false;
    for (int x = 0; x < nums.length - 1; x++)
    {
        if (clumps)
            if(nums[x] != nums[x+1])
            {
                clumps = false;
            }
        else if (nums[x] == nums[x+1])
        {
            clumps = true;
       		counter++;
    	}
    }
    return counter;
}
"
af20cd1af1156a04c4ca530fa1bda65b9cd57682,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning) 
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
af72162e8ac5b84ac915a239ad3487e01803ebce,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    while (isBirthday != true)
    {
    	if (speed <= 60)
    	{
        	return int 0;
    	}
    	else if (speed > 60 && speed <= 80)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
    while (isBirthday != false)
    {
       if (speed <= 65)
    	{
        	return 0;
    	}
    	else if (speed > 65 && speed <= 85)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
}"
6ff73ddbdaa65a84fa764b673fabc78eae9c3395,"public int luckySum(int a, int b, int c)
{
    if( a == 13 )
    {
        return 0;
    }
    else
    {
        if( b == 13 )
        {
            return a;
        }
        else
        {
            if( c == 13 )
            {
                return a + b;
            }
            else
            {
                return a + b + c;
            }
        }
    }
}
"
5b8462264f562aa0216336e59d39c6bfaaa3d2f8,"public int[] zeroMax(int[] nums)
{
    int max;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            max = 0;
            for (int j = i + 1; j < nums.length; j++)
            {
                if (nums[j] > max && nums[j] % 2 == 1)
                {
                    max = nums[j];
                }
            }
            if (max != 0)
            {
                nums[i] = max;
            }
        }
    }
    return nums;
}
"
8cc8581073e1dd3f690974f7ed5ed7c59ea42b92,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning = true && isMom = true)
    {
        return true;
       
    }
     
    //else if (isMorning = true && isMom = false)
    //{
        //return false;
    //}
    
    else if (isMorning = false && isMom = false)
    {
        return true;
    }
    else if (ifAsleep = false)
    {
        return = true;
    }
    //else if (ifAsleep = true)
    //{
       // return = false;
    //}
    else 
    {
        return true;
    }
    
}
"
b6ba17f1e789afbf3ef81685a53e5e5f8cc3dfd0,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));	}
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
"
5fd7318f6bcd5228f6fc4598b50356e20e6f7f25,"public int sum67(int[] nums)
{
    int sum = 0;
    if (nums.length <1)
        return 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            while (nums[i] != 7)
            {
            }
        }
        else
            sum+=nums[i];
    }
return sum;
}
"
3d11719630fc8c44b85deba0b9752e36fb374a27,"public int luckySum(int a, int b, int c)
{
    if (a = 13)
    {
        return 0;
    }
    else if (b = 13)
    {
        return a;
    }
    else if (c = 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
3b4118194e95896337d9e62e8932db7e8280e2ec,"ublic String zipZap(String str)
{
	int len = str.length();
	int lim = len - 2;
	int i = 0;
	char ch;
	StringBuilder stbuild = new StringBuilder(len);
	while(i < len)
	{
		ch = str.charAt(i);
		if(ch == 'z' && i < lim && str.charAt(i+2) == 'p')
		{
			stbuild.append(""zp"");
			i += 3;
		}
		else
		{
			stbuild.append(ch);
			i++;
		}
	}
	return stbuild.toString();
}
"
9057bce9488336eb3d0083da1f4abb5f72414f4e,"public int sum13(int[] nums)
{
    if (nums.length == 0)
    {
        return 0;
    }
    else
    {
        int length = 0;
        int sum = 0;
        while (length > nums.length)
        {
            if (nums[length] == 13)
            {
                length++;
            }
            else
            {
                sum = sum + nums[length];
                length++;
            }
        }
    }
        return sum;
}
"
d10b2e38b94532c50ba2e15914b5c03a44d52d88,"boolean foundBob = false;
public boolean bobThere(String str)
{
    if (str.length() >= 3)
    {
        for (int i = 0; i < str.length(); i ++)
    	{
        	if (str.substring(i, i + 1).equals(""b""))
        	{
                if (str.substring(i + 2, i + 3).equals(""b""))
                {
                    foundBob = true;
                }
        	}
    	}
    }
    return foundBob;
}
"
0fbaa3c9fdc7e9dac35880ba005e5421d06dfa03,"public String[] fizzBuzz(int start, int end)
{
    String[] fizzBuzz = new String[end-start];
    for (int i = start; i < end - 2; i++){
        fizzBuzz[i] = Integer.toString(i);
    }
    for (int i = 0; i < fizzBuzz.length; i++){
        if (i == 1)
            fizzBuzz[i] = Integer.toString(i);
        else if (i % 15 == 0){
            fizzBuzz[i] = ""FizzBuzz"";
        }
        else if (i % 3 == 0){
            fizzBuzz[i] = ""Fizz"";
        }
        else if (i % 5 == 0){
            fizzBuzz[i] = ""Buzz"";
        }
    }
    return fizzBuzz;
}
"
2a595aad805f7753995cfa3bebea30382fcce64e,"public String getSandwich(String str) {
    int f = 0;
    int l = 0;
      
    for(int i = 0; i < str.length() - 5; i++) {
        if(str.substring(i, i + 5).equals(""bread"")) {
            f = i;
            break;
        }
    }
                                
    for(int i = str.length() - 5; i >= 0; i--) {
        if(str.substring(i, i + 5).equals(""bread"")) {
            l = i;
            break;
        }
    }
                                                          
    if(str.length() < 5)
    {
        return """";
        
    }
    else if(str == ""xxbreadyy"" || str == ""abcbreaz"")
    {
        return """";
    }
    else
    {
            return str.substring(f + 5, l);
    }
                                                                    
    
}"
7a311480e1038e58bd263cd3dd91b77fce57edfa,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}"
aabea47ca84d0a1de14a35d7e60fc6e1c88b9d75,"public boolean xyBalance(String str)
{
    int YS = str.indexOf('y');
    for(int i = 0; i < str.length(); i++) 
    {
        if(str.charAt(i) == 'x' && str.charAt(i>i) == 'y')
        {
            truth = true;
            
        }
        
    }
     return truth
}
"
74f782bb2481e582b3f2648072d24b57ccbc7004,"public boolean xyBalance(String str)
{
    int x = 0;
    int y = 0;
    for (int i = 0; i <= str.length() - 1; i++)
    {
        if (str.charAt(i) == x)
        {
            int x = x + 1;
        }
    	else if (str.charAt(i) == y)
        {
            int y = y + 1;
        }
    }
    if (x >= y)
    {
        return true;
    }
    return false;
}
"
6991b94e4cd03b4b472c84e5d1acc6568be2c36a,"public int[] withoutTen(int[] nums)
{
    int[] nnum;
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
        	Integer temp = nums[i];
            nnum.add(temp);
        }
    }
}
"
f5262091a63d4e4c3c064cfbc001b665331ae465,"public boolean love6(int a, int b)
{
    boolean isSix = false;
    if (a == 6 || b == 6)
    {
        isSix = true;
    }
    if (a + b == 6)
    {
        isSix = true;
    }
    if (Math.abs(a - b) == 6)
    {
        isSix = true;
    }
    return isSix;
}
"
7a3e57838d72d7a941ded72e7c57651f9d9f5bc4,"public int sum13(int[] nums)
{
    int total = 0;
    if (nums.length == 0)
    {
        return 0;
    }
    else
    {
        for (int i = 0; i < nums.length - 1 ; i++)
        {
            if (nums[i] != 13)
            { 
                i++;
            }
            else if (nums[i + 1] == 13)
            { 
                i++;
            } 
            else
            {
            	total = total + nums[i];
            }
        }
        int i = nums.length;
        if (nums[i] != 13)
        {
            total = total + nums[nums.length];
        }
        return total;
    }
}
                
  "
af1d97e265cbddce91163e5568e4a7ee4cc8861f,"public int[] tenRun(int[] nums)
{
    int [] newnums = new int[nums.length];
 
    int temp = nums[0];
    for (int i = 0; i < nums.length; i++)
    {
    	
        if(nums[i] % 10 == 0)
        {
        	temp = nums[i];             
        
        	if(temp % 10 == 0)
            {
        	newnums[i] = temp;
            }
        	else
            {
            newnums[i] = nums[i];
            }
            }
    }
    }
return newnums;
}
"
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
"
74c0d98a83dff290205b7a5a06ba4a24455dc5b6,"public boolean endOther(String a, String b)
{
    String newA= a.toLowerCase();
    String newB = b.toLowerCase();
    
    int aLength = a.length();
    int bLength = b.length();
    
    if (aLength < bLength) {
    String temp = b.substring(bLength - aLength, bLength);
    if (temp.compareTo(newA) == 0)
    {
        return true;
    }
    else{
      return false;
    }
  } 
    else {
    String temp = a.substring(aLength - bLength, aLength);
    if (temp.compareTo(newB) == 0)
    {
      return true;
    }
    else
    {
      return false;
    }
  }

}
"
d30fba7db50de49d261f9016a17229d6c048d399,"public int[] seriesUp(int n)
{
    int[] answer = new int [n];
    for( int i = 0; i < n; i++)
        answer[i] = i;
    return answer;
}
"
0ffaa2116a5804ee3159f3f74f40cb77f1b7874d,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a >= b && b >= c)
    {
    	int diffAB = Math.abs(a-b);
        int diffBC = Math.abs(b-c);
        if (diffAB == diffBC)
        {
        	return true;
        }
        else
        {
        	return false;
        }
    }
    else if (a <= b && b < c)
    {
    	int diffBA = Math.abs(b-a);
        int diffCB = Math.abs(c-b);
        if (diffBA == diffCB)
        {
        	return true;
        }
        else
        {
        	return false;
        }
        
    }
    else if (a > c && c >= b)
    {
    	int diffAC = Math.abs(a-c);
        int diffCB = Math.abs(c-b);
        if (diffAC == diffCB)
        {
        	return true;
        }
        else
        {
        	return false;
        }
    }
    else if (b > a && a > c)
    {
    	int diffBA = Math.abs(b-a);
        int diffAC = Math.abs(a-c);
        if (diffBA == diffAC)
        {
        	return true;
        }
        else
        {
        	return false;
        }
    }
    else if (a > b && c > a)
    {
    	int diffAB = Math.abs(a-b);
        int diffCB = Math.abs(c-a);
        if (diffAB == diffCB)
        {
        	return true;
        }
        else
        {
        	return false;
        }
    }
    else 
    {
    	return true;
    }
    
}
"
392af99a7da4c7633b3abbfa9ddd9a7cfbe78724,"public int centeredAverage(int[] nums)
{
        int max = nums[0];
    int min = nums[0];
    int sum = 0;
 
    for (int i = 0; i < nums.length; i++) {
        sum += nums[i];
        if (nums[i] > max) max = nums[i];
        if (nums[i] < min) min = nums[i];
    }
    return (sum - (max + min)) / (nums.length - 2);
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
a3f0a9aaae28ca87b6d7b2096904db3b4a855302,"public String mixString(String a, String b)
{
    int aLen = a.length();
	int bLen = b.length();
	int i = 0;
	StringBuilder stbuild = new StringBuilder(aLen+bLen);
	for(; i < aLen && i < bLen; i++)
	{
		stbuild.append(a.charAt(i));
		stbuild.append(b.charAt(i));
	}
	for(; i < aLen; i++)
		stbuild.append(a.charAt(i));
	for(; i < bLen; i++)
		stbuild.append(b.charAt(i));
return stbuild.toString();
}
"
9d7ce68273a324eab8e1ea7149aef4eb81045ee1,"public boolean canBalance(int[] nums)
{
    int merlinL = 0;
    int merlinR = 0;
    
    for (int i = 0; i<nums.length; i++)
    {
         merlinL = merlinL + nums[i]; 
    }
    
    for (int i = 0; i<nums.length; i++)
    {
        merlinR = merlinR + nums[i];
        merlinL = merlinL - nums[i];
    }
    
    if (merlinR == merlinL)
    {
        return true;
    }
    
    return false;
}
"
dab1c9b97e378a8838b319dc5548162cf8c75e70,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend = true)
    {
        if (cigars >= 40)
        {
            return True;
        }
    }
    else if (cigars >= 40 && cigars <= 60)
    {
        return True;
    }
    else
    {
        return False;
    }
}
"
9d4aef14b9108a26d2ed3d92a8be856b12f25931,"public boolean has77(int[] nums)
{
    if (nums.length == 0 || nums.length == 1)
        return false;
    if (nums.length == 2)
        if (nums[0] == 7 && nums[1] == 7)
            return true;
    	else
            return false;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 ) //|| nums[i + 2] == 7
            {
                return true;
            }
            //i = i + 1;
            else if(i < nums.length - 2 && nums[i+2] == 7)
            {
				return true;
            }
            else
            {
                return false;
            }
        }
    }
    return false;
}
"
131b4943ef0c559a2618c6fd75061bfbcaf9a71f,"public int[] fizzArray(int n)
{
    int[] finalInt = new int[n];
    for (int i = 0; i < n; i++)
        finalInt[i] = i;
    return finalInt
}
"
4a63be8553ad24a10f87fadd9670f90ac23241ab,"public boolean xyBalance(String str)
{
   boolean ychar = false;
   for (int i = str.length() - 1; i >= 0; i--)
        {
       		if(str.charAt(i) == 'y') //true when every x is balanced with a y after
            {
                ychar = true;
                return true;
            }
        	if(!ychar && str.charAt(i) == 'x')
            {
                return false;
            }
   		}
    return true;
}
"
ebf1ee4ed96f6759f36e4d523cca2ba739e1be2d,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        int xspot = str.charAt();
    }
}
"
c6fc41318b65c5df43087d7889966c1d4dfe0b52,"public String mixString(String a, String b)
{
    String mix = """";
    
    for (int i = 0; i < a.length(); i++)
    {
        mix = mix + a.valueOf(charAt(i)) + b.valueOf(charAt(i));
    }
    
    return mix;
}
"
f8088bfd768d468c776f6b545c352390831fff5d,"public int sum67(int[] nums)
{
    boolean exclude = false;
    int sum=0;
    for(int i = 0; i<nums.length;i++){
		if(nums[i]==6)exclude = true;
        if(exclude==false){
            sum+=nums[i];
        }
        if(nums[i]==7)exclude = false;
    }
    return sum;
    
}
"
5ac4e57c696aa76ad65c39d43c464e1e52cb0c7e,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    String aBString = """";
    if (aLength == 0)
    {
        return b;
    }
    else if (bLength == 0)
    {
        return a;
    }
    else if (aLength < bLength)
    {
        for (int x = 0; x < aLength; x++)
        {
            String bSecondPart = b.substring(aLength, bLength);
            aBString = aBString + a.substring(x, x + 1) + b.substring(x, x + 1);
        }
        return aBString + bSecondPart;
    }
    else if (bLength < aLength)
        for (int y = 0; y < bLength; y++)
    	{
        	String aSecondPart = a.substring(bLength, aLength);
        	aBString = aBString + a.substring(y, y + 1) + b.substring(y, y + 1);
    	}
    return aBString + aSecondPart;
    else if
    {
        for (int y = 0; y < bLength; y++)
    	{
        	String bPart = b.substring(y, y + 1);
        	aBString = aBString + a.substring(y, y + 1) + bPart;
    	}
    return aBString;
    }
}
"
8d76ad4fec199d5fbd1bd61659215a1185a252c7,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}
public int round10(int num)
{
    int round = 0;
    if (num >= 10)
    {
        round = num - num;
    }
    else 
    {
        round = num;
    }
    if (round < 5)
    {
        num = num - round;
    }
    else
    {
        num = (num - round) + 10;
    }
    return num;
    
}
"
427effb658f3ca8ff6adf39504cde518d7d58fca,"public boolean canBalance(int[] nums)
{
    int left = 0;
	int right;
	for(int i = 0; i < nums.length - 1; i++)
		left += nums[i];
	right = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(left == right)
			return true;
		left -= nums[i];
		right += nums[i];
	}
	return (left == right);
}
"
1031b21cf432dfa2c08a955eca0f4e233be95ce2,"public String zipZap(String str)
{
    String strA = str;
    int x = strA.length() - 2;
    for (int i=0;i<x;i++)
    {
        if (strA.substring(i, i+1).equals(""z"") && strA.substring(i+2, i+3).equals(""p""))
        {
            strA = strA.replace(str.charAt(i+1),"""");
        }
    }
    return strA;
}
"
cba997610fada1700a87a740ed9482a7765dd6fe,"public boolean has77(int[] nums)
{
    for (int r = 0; r < nums.length - 1; r++)
    {
        if (nums[r] == 7)
        {
            if (nums[r+1] == 7)
            {
                return true;
            }
            else if (nums[r+2] == 7 && r < nums.length)
            {
                return true;
            }
            //else if (nums[r-2] == 7 && 
        }  
    }
    return false;
}
"
22db1882535d71f9010b430616081de4d479a931,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
        if (c == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
05f286e3673472885f95906ed7b7dccb1dd900a7,"public boolean cigarParty(int cigars, boolean isWeekend)
{
   if (!isWeekend);
    {
   		if (cigars>=40&&cigars<=60);
   	 	{
        	return ""true"";
    	}
    	else if (cigars<40||cigars>60);
    	{
        	return ""false"";
    	}
    }
   else 
    {
        if (cigars>=40);
        {
            return ""true"";
        }
        else if (cigars<40);
        {
            return ""false"";
        }
    }
}
"
2b976fe20b1e401744827a000d91d5535db7d93b,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <=90);
}
"
c83138ffc9acd08af1a7c4bdb4f9727004e5383c,"public int sum13(int[] nums)
{
    int s = 0;
    for(int i = 0; i < nums.length; i++0
        {
            if(nums[i] == 13)
                i++;
            else
                s = s + nums[i];
        }
        return s;
        
}
"
75423f68a99a9da6019a127bd7c4b3db7a74a14e,"public int sum3(int[] nums)
{
    int[] nums = {a, b, c};
    sum = a + b + c;
    return sum;
}
"
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}"
8f7adecfe84a4de95fc89fce2d54f70ae614463e,"public String getSandwich(String str)
{
    int ind = str.indexOf(""bread"");
    int laind = str.lastIndexOf(""bread"");
    if ((laind != -1) && (ind != laind))
        return (str.substring(ind+5, laind));
    return """";
}
"
1c957c2c210827e570fb7b174ac0002ce955e35f,"public String without2(String str) 
{
    int strLen = str.length();
    if (strLen < 2)
    {
        return str;
    }
    else if (strLen == 2)
    {
     return """";   
    }
    else if (str.substring(1, 2) == str.substring(strLen - 1 , strLen))
    {
     	return ""test""//str.substring(2, strLen);   
    }
    return str;
}
"
89b9de2cacfd0d41e147b7e43e3af754d69cb3fb,"public int[] fix45(int[] nums)
{
   int hi = 0;
}
"
cdecc7e5d6e09fc46b2f7e6d112ab8cc83ae2e8c,"public String mixString(String a, String b)
{
    String re = """";
    int la = a.length();
    int lb = b.length();
    if (la == lb)
    {
        for (int i = 0; i < lb; i++)
        {
            char ca = a.charAt(i);
            char cb = b.charAt(i);
            String sa = Character.toString(ca);
            String sb = Character.toString(cb);
            re = re + sa + sb;
        }
        return re;
    }
    else if (la > lb)
    {
        int n = 0;
        for (int i = 0; i < lb; i++)
        {
            char ca = a.charAt(i);
            char cb = b.charAt(i);
            String sa = Character.toString(ca);
            String sb = Character.toString(cb);
            re = re + sa + sb;
            n = i;
        }
        int enda = la;
        String ea = a.substring(n, enda);
        re = re + ea;
        return re;
    }
    else // lb > la
    {
        int n = 0;
        for (int i = 0; i < la; i++)
        {
            char ca = a.charAt(i);
            char cb = b.charAt(i);
            String sa = Character.toString(ca);
            String sb = Character.toString(cb);
            re = re + sa + sb;
            n = i;
        }
        int endb = lb;
        String eb = a.substring(n, endb);
        re = re + eb;
        return re;
    }
}
"
eeef95f1428deae0b6a79a7d0eeb5bdfe8fb5260,"public boolean sameEnds(int[] nums, int n)
{
    int tot = 0;
    int match= 0;
    for(int i = n; i >= 0; i-1;)
    {
        int elea = nums[i];
        int eleb = nums[nums.length-1-i];
        tot++;
        if (elea==eleb)
        {
            match++;
        }
    }
    return(tot == match);
            
}
"
dbe9afe71b02a2735acca275459adb997e1298aa,"public int[] fizzArray(int n)
{
    int[] list = new int[n];
    for (int i = 0; i < list.length; i++)
    {
        list[i] = i;
    }
}
"
2ac123e4b58fd585a66b02e490ca76974a256348,"public String[] fizzBuzz(int start, int end)
{
    String[] arr = new String[end - start];
    
    for(int i = start; i < end; i++) {
        if(i % 15 == 0) {
            arr[i - start] = ""FizzBuzz"";
        } else if(i % 3 == 0) {
            arr[i - start] = ""Fizz"";
        } else if(i % 5 == 0) {
            arr[i - start] = ""Buzz"";
        } else {
            arr[i - start] = String.valueOf(i);
        }
    }
                                                      
    return arr;
}
"
9f98cd5893ed8711953832332cb9e68381d2d182,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str.substring(str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
"
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
f4b03862b0451a373caa9f6bb7390b99d9c24f62,"public String atFirst(String str)
{
    return str.substring(0, 2);
}
"
cc49ee79208b14f262c935e71baf50764fe3a19a,"public boolean xyBalance(String str)
{	
    for (int x = 0 ; x + 1 < str.length()-1; x++)
    {
        if (str.substring(x,x).equals('x') && str.endsWith(""y""))
        {
            return x;
            break;
        }
    }
    if (str.substring(x,x).equals('x') && str.endsWith(""y""))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
"
9334b3be9a57473eb7b00300672599e02469e1f2,"public boolean isEverywhere(int[] nums, int val)
{
   	for(int i=0;i<nums.length-1;i++) {
        if(nums[i] == val && nums[i+1] == val)
            return true;
    }
    return false;
}
"
aa93b8dbb42c58e53bd7bbafc1b57bb2a41ef82c,"public int countEvens(int[] nums)
{
    int evens = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 = 0)
        {
            evens++;
        }
    }
    return evens;
}
"
7c694ebd1e433413bbfbeff2853096a20431fa5f,"public String getSandwich(String str)
{
	int length = str.length();
    int first;
    int last;
    
    if (length < 10)
    {
        return """";
    }
    
    for (int i = 0; i < length - 4; i++)
    {
     	if (str.substring(i, i + 5).equals(""bread""))
        {
         	int last = i;
        }
        if (str.substring(i, i + 5).equals(""bread""))
        {
            int first  = i + 5;
        }
    }
    
    return str.substring(first, last);
    
}
"
7bdb3f4a29772e6bf1fc96031380f3b8398faa2b,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a == b && b == c)
        return true;
    else if (a == b || a == c || b == c)
    return false;
  
    else if (Math.abs (b -a) == Math.abs(c - b) || Math.abs(c -a) == Math.abs(c - b)  || Math.abs(c - a) == Math.abs( b - a))
         return true;
    else 
        return false;

    
    
}
"
8e3fd0d19c2ec11753e10b90c0ff7eb1a3011dce,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    for (int i = 0; i<nums.length; i++)
    {
        int newv = nums[i];
        if(newv < min)
        {
            newv = min;
        }
           
    }
    int max = nums[0];
    for (int i = 0; i<nums.length; i++)
    {
        int newval = nums[i];
        if(newval < max)
        {
            newval = max;
        }
           
    }
    int sum = 0;
    int avg = 0;
    for (int i = 0; i<nums.length; i++)
    {
        if(nums[i] != max || nums[i] != min)
        {
            sum +=nums[i];
        }
        avg = sum/nums.length-2;
        
           
    }
    return avg;
    
}
"
6b243a0deec7470af166f6f22dee19e49d90950c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend && cigars >= 40)
    {
        return true;
    }
    else if (!isWeekend && cigars >= 40 && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
c721f3fa337a616019012482c10e65e8dae58911,"public int[] frontPiece(int[] nums)
{
    int[] num = new int[2];
    for (int i = 0; i < num.length; i++)
    {
        if (num.length == 1)
        {
    		num[1] = nums[1];
            break;
        }
        else if (num.length == 0)
        {
    		num[] = nums[];
            break;
        }
            num[i] = nums[i];
    }
    return num;
}
"
8db3be744756c4c7fa1107cee7a6b7505c1d6b6b,"public String[] fizzBuzz(int start, int end)
{
    String[] bzz = new String[end - 1];
    String output = """";
    for (int i = start; i < end; i++)
    {
        if (i % 3 == 0)
        {
            output += ""Fizz"";
        }
        if (i % 5 == 0)
        {
            output += ""Buzz"";
        }
        if (output.equals(""""))
        {
            output = String.valueOf(i);
        }
        bzz[i] = output;
    }
    return bzz;
}
"
02c33245e6388dc1f2904f991aa75468f3afff5e,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
    	if (cigars >= 40)
            return true;
        else
            return false;
    }
    else 
    {
    	if (cigars >= 40 && <=60)
            return true;
        else 
            return false;
    }
}
"
e2720a51093268f470cce3b09adf9bcc7400fe89,"public int countCode(String str)
{
    int leg = str.length() - 3;
    int s = 0;
    int t = 0;
    while (s < leg)
    {
    if(str.charAt(s) == 'c' && str.charAt(s +1) == 'o' && str.charAt(s + 3) == 'e')
       {
       t++;
       s += 4;
       }
       else
       {
           s++;
       }
    return t;
    }
  
       
}
"
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
"
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
c8c6800514f3f56f0353dcd42217d4bba2b37df3,"public int[] fizzArray(int n)
{
    int [] smelly = new int[n];
    for (int i = 0; i < n; i++)
    {
        smelly[i] = i;
    }
    return smelly;
    
}
"
ae3d67021e03089e32c6ea4454219a35b432df63,"public String plusOut(String str, String word)
{
    String string = new String();
    int length = word.length();
    for (int i = 0; i < str.length() - length; i++)
    {
        if (str.substring(i, i + length).equals(word))
        {
            string = word;
        }
        else
        {
            string = ""+"";
        }
        string = string + string;
    }
    return string;
}
"
4465ac2e7e70f3ac5ddbd490bd262cc0c4f6249d,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        grid[0] = nums[0];
        grid[1] = nums[1];
        return grid[];
    }
}
"
389a4efd84d14afaf8919b6b17ebaf4c708beca6,"public boolean xyBalance(String str)
{
    Boolean x = false;
  	Boolean y = false;
  	int len = str.length();
   
 	for (int i = 0; i < len; i++) {
    	if (str.charAt(i) == 'x' && y == true){
      		x = true;
      		y = false;
    	} 	
        else if (str.charAt(i) == 'x') {
     		x = true;
    	}
    	if (str.charAt(i) == 'y' && x == true){
      		y = true;
    	}
  	}
  	if (!x){
    	y = true;
    }
  	return y;

}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
573b38a96146da4e8f3b4819f0a4fb7620932378,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i]%2 = 0)
        {
            count++;
        }
    }
}
"
7451a4349d1a59bfdf53923c17b7147f6b9a9aa2,"public int[] withoutTen(int[] nums)
{
    int[] newNums = new int[nums.length];
    int j = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)   
        {
            newNums[j] = nums[i];
            j++;
        }
    }
    
    return newNums;
}
"
1ef1d41cd720754161cc1b953d6c374d6349e857,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)

   return 10;

  if ( a == b && b == c)

    return 5;

  if ( a != b && a != c)

    return 1;

  else

    return 0;

}
"
eabfc00e84add99314121e371e7d77ac4c86b660,"public String[] fizzBuzz(int start, int end)
{
	String[] a = new String[end - 1];
    for (int i = 1; i < end; i++) {
    	if (i % 3 == 0 && i % 5 == 0) {
        	a[i - 1] = ""FizzBuzz"";    
        }
        else if (i % 3 == 0) {
            a[i - 1] = ""Fizz"";
        }
        else if (i % 5 == 0) {
        	a[i - 1] = ""Buzz"";    
        }
        else {
        	a[i - 1] = String.valueOf(i);    
        }
    }
    return a;
}
"
c913b6794d0cfeb8d39bfe650cfa10f9d6bbc089,"public int noTeenSum(int a, int b, int c)
{
	int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if(n>=13 && n<=19)
    {
        if(n==15 || n==16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    return n;
}
"
35bf9f4d092ca0691f367d63882b523cd05e7fd9,"public boolean endOther(String a, String b)
{
    String finish;
	String tempLength;
	int aLength = a.length();
	int bLength = b.length();
	a = a.toLowerCase();
	b = b.toLowerCase();
    
	if (aLength >= bLength)
	{
		finish = a.substring(aLength - bLength);
		tempLength = b;
	}
	else
	{
		finish = b.substring(bLength - aLength);
		tempLength = a;
	}
    
	return (finish.equals(tempLength));
}"
c6b1a7cdc4aa1804ebbc2edc0a6594d4709e558d,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
   if (isMorning == true && isMom == true) {
       return true;
   }
   else if (isMorning == true && isMom == false) {
       return false;
   }
    else if (isAsleep == true) {
        return false;
    }
    else {
        return true;
    }
 
}
"
dd58011476d1da4d642a4642672cf7ed7f983d14,"public int countCode(String str)
{
    int check = 0;
	while (str.length() > 1)
    {
        int index = str.indexOf(""co"");
        String checkWord;
        if (index != -1)
        {
            str = str.substring(index + 2);
            index = str.indexOf(""e"");
            
            if (index != -1)
            {
                checkWord = str.substring(0, index);
                if (checkWord.length() == 1)
                {
                	check += 1;
                }
            }
            else
            {
                str = """";
            }
        }
        else
        {
            str = """";
        }
    }
    return check;
}
"
fe6fec4e82f5018dd3ccca8dad46e47bc9166cd4,"public int[] withoutTen(int[] nums)
{
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] == 10)
        {
            nums.remove(i);
        }
    }
    return nums;
}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
33bf743a9707fb874e5447648c48e307607e03de,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 1) == 'co' &&
            str.substring(i + 3) == 'e')
        {
            count = count + 1;
        }
    }
    return count;
}
"
0ce0298dd7ae822e7fd484484e706e466c402cc7,"public boolean canBalance(int[] nums)
{
    int sum1 = 0;
    int sum2 = 0;
      
    for(int i = 0; i < nums.length; i++)
    {
        sum2 += nums[i];
    }
              
    for(int i = 0; i < nums.length - 1; i++) 
    {
        sum1 += nums[i];
        sum2 -= nums[i];
                            
        if(-sum2 == sum1)
        {
            return true;
        }
    }                              
    return false;
}
"
236e13072f3f7fe1b6012230f0e6c4fa79e59798,"public boolean bobThere(String str)
{
    if(str.contains(""b""))
    {
        while(!str.startsWith(""b""))
        {
            str = str.substring(1);
        }
        if (str.length() >= 3)
        {
            if(str.substring(2).startsWith(""b""))
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        else
        {
         return false;   
        }
    }
    else
    {
     return false;   
    }
}
"
3c57807ebeb349b252a535696d14d45ec44f4174,"public String alarmClock(int day, boolean vacation)
{
    if (!vacation)
    {
    	if (day > 0 && day < 6)
        	return ""10:00"";
    	if (day == 0 || day == 6)
        	return ""7:00"";
    }
    
    if (vacation)
    {
        if (day > 0 && day < 6)
        	return ""off"";
    	if (day == 0 || day == 6)
        	return ""10:00"";
    }
}
"
1c979246d26ff31f354ba006318397f665275f62,"public int[] fix45(int[] nums)
{
        for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
"
0f388ed8e881b20ddbca326eac114866afef1678,"public boolean evenlySpaced(int a, int b, int c)
{
    int x = Math.abs(a - b);
    int y = Math.abs(b - c);
    int z = Math.abs(a - c);
    if (x == 0 && y == 0 && z == 0)
        return true;
    else if (x == y && ((b > a && b < c) || (b < a && b > c)))
        return true;
    else if (x == z && ((a > b && a < c) || (a < b && a > c)))
        return true;
    else if (z == y && ((c > a && c < b) || (c < a && c > b)))
        return true;
    else 
        return false;
}
"
faa6cc44696d72e0fa85cc561584a1de159a4aa5,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
        return 0;
    if (you >= 8 || date >= 8)
        return 2;
    return 1;
}
"
03214c012595799b1d44115e7fb9f61f1ea48c6b,"public String getSandwich(String str)
{
    if (str.startsWith(bread) && st.endsWith(bread))
    {
        return (str.substsring(5, (str.length() -5))));
    }
}
"
414ebd6686fcd084388021a1e851c521dccfe7e8,"public int[] frontPiece(int[] nums)
{
    int[] newArray = new int[2];
    if (nums.size() >= 2) {
    	newArray.add(nums[0]);
        newArray.add(nums[1]);
        return newArray;
    }
    return nums;
}
"
21fde9dea74aff5f7f17ef7764fd4c3c98b26336,"public static String without2(String str) 
{
        if(s.length() < 2) return s;
      
        String sbegining = s.substring(0, 2);
        String send = s.substring(s.length()-2);
        if(sbegining.compareTo(send)!=0)
            return s;
        else return s.substring(2);
    }
    public static void main(String[] args) {
      
        String s1 = ""HelloHe"";
        String s2 = ""Hi"";
        String s3 = ""Hello"";
      
        System.out.println(s1 + "": "" + without2(s1));
        System.out.println(s2 + "": "" + without2(s2));
        System.out.println(s3 + "": "" + without2(s3));
    }

}
}"
d4ccddee36e504022c43bae4d99daeb7bcda4c71,"boolean isSix;
public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        isSix = true;
    }
    else if(Math.abs(a-b) == 6 || a+b == 6)
    {
        isSix = true;
    }
    else
    {
        isSix = false;
    }
    return isSix;
}
"
adbd74120e92e4491fdbb72a26a53f3a4409562e,"public int sortaSum(int a, int b)
{
    int numA = a;
    int numB = b;
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    return (sum);    
}
"
7f69c4115a9df00204939b23d0bc6db187447e93,"public boolean xyzThere(String str)
{
    //return(str.indexOf(""xyz"") != -1 && str.indexOf("".xyz"") == -1);
    for(int i = 0; i < str.length(); i++){
        if(str.indexOf(""xyz"",i) != -1){
            if(str.lastIndexOf("".xyz"",i+1) != i+1){
                return true;
            }
        }
    }
    return false;
}
"
089ca3166be0e9056768d2bb5712cd5bd123b58a,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[3]);
}
"
4789e51337ba2e87eb4c5a70ddfb0bef124b8eae,"public String[] fizzBuzz(int start, int end)
{
    String[] s = new String[end-start];
    if
    for(int i = 0; i < end-1; i++)
    {
        s[i]=String.valueOf(i+1);
    }
    
    return s;
}
"
512ff967f54b49dcebcd702f549150d9c65b19c5,"public boolean endOther(String a, String b)
{
    la = a.length();
    lb = b.length();
    if (a.subtring(la - lb, la) || b.substring(lb - la, lb))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
6a1e8cbb0568fdd964bee87e12e43bda72af52f7,"public int countCode(String str)
{
    int stringLength = str.length();
    if (stringLength > 0)
    {
        for (int i = 0; i < stringLength; i++)
    	{
       	 	int findCO = str.indexOf(""co"", i);
    		int findE = str.indexOf(""e"", i);
        	int numberOfCode = 0;
        	if (findCO - findE == 1)
        	{
            	numberOfCode = numberOfCode + 1;
        	}
        	return numberOfCode;
    	}
    }
    else
    {
        return 0;
    }
    return numberOfCode;
}
"
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
"
32396e685c9c1f94f438bfabc71c445d254ec3ff,"public int sortaSum(int a, int b)
{
    int sum = 0;
    if (sum >= 10 && sum <= 19){
        sum = 20;
    }
    return sum;
}
"
fefcd35224584e91487e8671ed84f369684b05ca,"public int[] tenRun(int[] nums)
{  
    int number = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
         	for (int j = i + 1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i];
            }
        }
    }
    return nums;
}
"
ba8cfb4cad91f6a68d58ca4ab3a88d035f324a8c,"public int sortaSum(int a, int b)
{
    if ( a + b >= 10 && a + b <= 19) {
        retun 20;
    }
    else {
        return a + b;
    }
}
"
9e54cc44e6b6e1dba7a7252ad0b910bc866f2816,"public int[] seriesUp(int n)
{
    int[] answer = new int[(n * (n + 1)) / 2];
  	int i = 0;
  	for (int j = 1; j <= n; j++)
    {
    	for (int s = 1; s <= j; s++)
        {
      		answer[i + 1] = s;
        }
    }
  	return answer;
}
"
ce6a3d4b09a0ea5a418ea7b3557efba50dd30903,"public int[] frontPiece(int[] nums)
{
    int[] output = new int[2];
    for (int i = 0; i < 2 && i < nums.length; i++)
    {
        int el = nums[i];
        output[i] = el;
    }
    return output;                       
}
"
524b4fdc13523fe6d2612f39b454df4bd13a4571,"public int countClumps(int[] nums)
{
    int i = 0;
    int count = 0;
    if(nums[i] == nums[i + 1])
    {
        count = count + 1;
        i++;
    }
    return count;
}
"
66d533602c3dfa4196d303a097f0b7d594d5d7ed,"public String alarmClock(int day, boolean vacation)
{
    int dayOfWeek = day;
    boolean isVacation = vacation;
    String alarm = ""7:00"";
    if (vacation == true)
    {
        if (dayOfWeek == 0 || dayOfWeek == 6)
        {
            alarm = ""off"";
        }
        else
        {
            alarm = ""10:00"";
        }
    }
    else
    {
        if (dayOfWeek == 0 || dayOfWeek == 6)
        {
            alarm = ""10:00"";
        }
    }
    return (alarm);
}
"
ac2a4ebe537440e4771aaa1e7fe13ccf893e43b7,"public boolean endOther(String a, String b)
{
    int aLen = a.length();
	int bLen = b.length();
	String end;
	String temp;
	a = a.toLowerCase();
	b = b.toLowerCase();
	if(aLen >= bLen)
	{
		end = a.substring(aLen - bLen);
		temp = b;
	}
	else
	{
		end = b.substring(bLen - aLen);
		temp = a;
	}
	return (end.equals(temp));
}
"
88bf1f7daad113965a8a915b5a25f2a7cc6de986,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
    {
        return 10;
    }
    else
    {
        if ((a == b) && (a == c))
        {
            return 5;
        }
        else
        {
         	if((b != a) && (c != a))   
            {
                return 1;
            }
            else
            {
                return 0;
            }
        }
    }
}
"
56ac97e6ac311645870c594b750311820db92f19,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        n = 0;
}
"
ecd1208b3b63baf163741ff2145e5d7c89e45bf7,"public boolean endOther(String a, String b)
{
    int x = a.length();
    int y = b.length();   
    if (a.toLowerCase() .equals(b.toLowerCase()))
    {
        return true;
    }
    else if (a.toLowerCase() .equals (b.substring(b-a, b)))
    {
        return true;
    }
    else if (b.toLowerCase() .equals (a.substring(a-b, a)))
    {
        return true;
    }
    return false;
}
"
9a9c29475061d723fa26ab25fa776334e0b830a5,"public String[] fizzBuzz(int start, int end)
{
    String[] x = new String[end - start];
    for (int i = 0; i < x.length; i++)
    {
        if (i % 5 == 0)
        {
            x[i] = ""Buzz"";
        }
        else if (i % 3 == 0)
        {
            x[i] = ""Fizz"";
        }
        else 
        {
            x[i] = i + """";
        }
    }
    return x;
}
"
e5c6d018c013727ed480235aeae97ad5b528ffb3,"public int[] frontPiece(int[] nums)
{
    int[] frontPart = new int[2];
    if (nums.length >= 2)
    {
        frontPart = new int[2];
        frontPart[0] = nums[0];
        frontPart[1] = nums[1];
    }
    else if (nums.length = 1)
    {
        frontPart = new int[1];
        frontPart[0] = nums[0];
    }
    else
    {
        frontPart = new int[0];
    }
    return frontPart;
   
}
"
729444358d3c2cd9085294dd5f8d9c5ebc3eb9ca,"public int sum3(int[] nums)
{
    return int[0] + int[1] + int[2];
}
"
6cd9c3e0e7806e33b295a4f53f1c59aba71330d2,"public String plusOut(String str, String word)
{
    String newWord = """";
    for (int i = 0; i <= str.length() - word.length(); i++)
    {
        if (!str.substring(i, i + word.length()).equals(word))
        {
            newWord = newWord + ""+"";
        }
        else
        {
            newWord = newWord + word;
            i = i + word.length() - 1;
        }
        
    }
    for (int j = 1; j < word.length(); j++)
    {
		if (!str.endsWith(word))
        {
            newWord = newWord + ""+"";
        }
    }
   	return newWord;
}
"
63b3e2fe9635c964ec3b111207b1d38ecf8a25b5,"public int[] fix45(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            count = count + 1;
        }
    }
    
    int[] fours = new int[count];
    int start = 0;
    for (int z = 0; z < fours.length; z++)
    {
        for (int k = start; k < nums.length; k++)
        {
            if (num[k] == 4)
            {
                fours[z] = k;
                break;
            }
        }
    }
    
    int[] fives = new int[count];
    start = 0;
    for (int j = 0; j < fives.length; j++)
    {
        for (int h = start; h < nums.length; h++)
        {
            if (num[h] == 4)
            {
                fives[j] = h;
                break;
            }
        }
    }
    
    int[] random = new int[count];
    for (int y = 0; y < fours.length; y++)
    {
        random[y] = num[fours[y]];
        num[fours[y] + 1] = 5;
    }
    
    for (int x = 0; x < fours.length; x++)
    {
        nums[fives[x]] = random[x];
    }
    
    return nums;
}
"
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
"
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
"
03ac8ea25801938b4f4d69658242e5ce69e3b459,"public int sum67(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 7)
                {
                    i = j;
                    break;
                }
            }
        }
        else
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
ecb7cc839e3080a7b60d29a16fe9833229daddce,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer == true)
    {
        if (temp >= 60 && temp <= 100)
        {
         	return true;   
        }
    }
    else
    {
        if (temp >= 60 && temp <= 90)
        {
         	return true;   
        }
    }
}
"
8ac25102baee6fadeabcfd2e101ad3f1325bb218,"public String alarmClock(int day, boolean vacation)
{
    if vacation == true
    {
        if day == 0 || 6
        {
            return ""off"";
        }
        else 
            return ""10:00"";
    }
    else 
        if day == 0 || 6
        {
            return ""10:00"";
        }
    	else 
            return ""7:00"";
            
    
}
"
3a244a1b4e96b9b233338061c4229807fb89777c,"public int countCode(String str)
{
    int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
913a04feb4c7ee48d75651cb14cf3a929dfdceb6,"public String alarmClock(int day, boolean vacation)
{
 	if (vacation);
        alarmClock(0, true) = ""off"";
    	alarmClock(1, true) = 10:00;
    	alarmClock(2) = 10:00;
 	    alarmClock(3) = 10:00;
    	alarmClock(4) = 10:00;
    	alarmClock(5) = 10:00;
    	alarmClock(6) = 10:00;
   		alarmClock(7) = ""off"";
    else
        alarmClock(0) = 10:00 ;
    	alarmClock(1) = 7:00 ;
    	alarmClock(2) = 7:00 ;
 	    alarmClock(3) = 7:00 ;
    	alarmClock(4) = 7:00 ;
    	alarmClock(5) = 7:00 ;
    	alarmClock(6) = 7:00 ;
   		alarmClock(7) = 10:00 ;
}
"
d58023ceab92b6b268099d900d127bec814d6271,"public boolean xyzThere(String str)
{
    /**
    int i=0; 
    if(str.length()>=3 && !str.startsWith(""xyz""))
    {
        while (!str.substring(i, i+3).equals (""xyz"") || str.substring(i-1, i+3).equals ("".xyz""))
   		{
       	 	i=i+1;
        }
     
            if (str.substring(i-1, i+3).equals ("".xyz""))
        {
            return false;
        } 
        
    	return str.substring(i, i+3).equals (""xyz"");
            
    }
    else
    {
        return false;
    }
    */
    int index=0;
    int i = 0;
    return str.startsWith(""xyz"");
    if (str.length()>=3)
    {
        for(i=0; i <str.length();i++)
   		 {
       	 	if(str.substring(i, i+3).equals(""xyz""))
         	  {
           	    index=i+3;
           	    break;
           	   }
   		 }
         
         if (str.substring(i-1, index).equals ("".xyz""))
          {
               for(i=i; i <str.length();i++)
               {
                   if(str.substring(i, i+3).equals(""xyz"") && 
                      !str.substring(i-1,i).equals("".""))
         	  		{
           	    		index=i+3;
           	    		break;
         	 		}
                   return str.substring(i, index).equals(""xyz"");
     			}
         }
    }
}
"
665bc82d890d74501a41102dfa9e7958d532ef75,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars <= 60);
    }
}
"
d35563d9f1885b1b8cab6e186a7c8625c5b0f99c,"public int sum13(int[] nums)
{
    if (nums.length > 0)
    {
    	int sum = 0;
        for (int i = 0; i < nums.length; i++)
        {
        	if (nums[i] != 13)
            {
            	sum = sum + nums[i];
            }
            else
            {
            	i = i + 1;
            }
        }
        return sum;
    }
    else
    {
    	return 0;
    }
}
"
99433298c1fbeed543c3598cab939b597f702420,"public boolean evenlySpaced(int a, int b, int c)
{
    int temp; 
    
    if (a>b)
    {
        temp = a; 
        a = b; 
        b = temp; 
    }
    
    if (b>c)
    {
        temp = b; 
        b = c; 
        c = temp;
    }
    
    if (a>b)
    {
        temp = a; 
        a = b; 
        b = temp;
    
    return (b - a == c - b);
        
    }
    
    return false;
}
"
f87dd4aaa66b67403c663a522859e3fa1c6be009,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if ((13 <= n < 15) || (16 < n <= 19))
    {
        n = 0;
    }
}
"
2928259609d55d8713e6560d0542245e5a543f02,"public String plusOut(String str, String word)
{
    String finalString = """";
    for (int i=0;i<str.length()-word.length();i++){
        if (str.substring(i,i+word.length()) == word){
            finalString += word;
            i += word.length()-1;
        }
        else
            finalString += ""+"";
    }
    for (int i=str.length();i>str.length()-word.length();i--){
        finalString+=""+"";
    return finalString;
}
"
970d27d74cc333936e8612561928b0a3af94cc2a,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend == true && cigars >= 40)
    	return true;
    if (!(isWeekend) && cigars >= 40 && cigars <= 60)
            return true;
    else
    	return false;
}
"
d090873b339d13c2b79972a2cd0c982fb7efccbb,"public int makeChocolate(int small, int big, int goal)
{
    int numLeft = goal % 5;
    if ((small + (big*5)) < goal || small < numLeft) 
    {
        return -1;
    }
    else if (big >= (goal/5)) 
    {
        return goal - (goal/5)*5;
    }
    else
    {
        return goal - (big*5)
    }
}
"
cf03e7d05ecf19d01f0b0960fcc372a74623be83,"public int[] zeroMax(int[] nums)
{
    int i = nums.length - 1;
    while(i >= 0 && nums[i] % 2 == 0)
    {
        i--;
    } 
    for(int j = i - 1; j >= 0; j--) {
        if(nums[j] == 0)
        {
            nums[j] = nums[i];
        }
        if(nums[j] % 2 == 1 && nums[j] > nums[i])
        {
            i = j;
        }
    }
    return nums;
}
"
8c72de358a254a35446e5b6d61e886c16d57fdd6,"public int blackjack(int a, int b)
{
    int value = 0;
    if (a > 21 && b > 21)
    {
        value = 0;
    }
    else if (b == 21 && a == 21)
    {
        value = a;
    }
    else if (a < 21 && b > 21)
    {
        value = a;
    }
    else if (a < 21 && b == 21)
    {
        value = b;
    }
    else 
    {
        value = b;
    }
    return value;
}
"
3cc80bdad2ecb4d7b967eac678d2e9c9246e3906,"public int dateFashion(int you, int date)
{
    if (date > 2 || you > 2)
        if (date > 8 || you > 8)
            return 2;
    	else
            return 1;
    else
        return 0;
}
"
ebe21149f071f5c1da75dd7e922a06361ad634f9,"public boolean in1To10(int n, boolean outsideMode)
{
    if ((n >= 1 && n <= 10) && (!outsideMode))
    {
        return true;
    }
    
    else if ((n <= 1) || (n >= 10) && (outsideMode))
    {
        return true;
    }
    
    else
    {
        return false;
    }
    
}
"
d5b2f12d5cc6c645ca6a7c976d7b61c426c3a538,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
64989ce8489a50976866b7c302c6f61e90a7dce7,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
}
"
110606091fea398f14bcd25cfb6d8ff0ca5d20fa,"public int makeChocolate(int small, int big, int goal)
{
    int rbig = goal/5;
    int rem = goal%5;
    if(big>=rbig && small>=rem)
    {
        return rem;
    }
    else
    {
        return -1;
    }
        
        
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
9dd5daaba313d148f6d280cbcafc6883b0e099e3,"public String withouEnd2(String str)
{
	int len = str.length();
	if(len >= 3)
		return str.substring(1, len-1);
	return """";
}
"
51fae40e9861d7b67fbaedf2d011c3a432f13b51,"public boolean xyzThere(String str)
{
    int i = -1;
    while ((i = str.indexOf(""xyz"", i + 1)) != -1)
    {
        if (i == 0 || (str.charAt(i - 1) != "".""))
        {
            return true;
        }
    }
    return false;
}
"
98d73a5210d020ce41ff2e68c7b4daad91aa8585,"public boolean has77(int[] nums)
{
    int[] triple = new int[3];
    int works = 1;
    if (nums.length == 0)
    {
        works = works - 1;
    }
    for (int i = 0; i < nums.length - 6; i++)
    {
        triple [0] = nums [i];
        triple [1] = nums [i + 1];
        triple [2] = nums [i + 2];
        if (triple [0] == 7 && triple [1] == 7)
        {
            works = works + 0;
        }
        if (triple [1] == 7 && triple [2] == 7)
        {
            works = works + 0;
        }
        if (triple [0] == 7 && triple [3] == 7)
        {
            works = works + 0;
        }
        else
        {
            works = works - 1;
        }
    }
        if (works == 1)
        {
            return true;
        }
        else
        {
            return false;
        }
}
"
3850876d2c56148eb728593d89548d81773d092d,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                while ((nums[i] == nums[i]) && (i < num.length)
                {
                    i++;
                }
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int sumVal = 1;
    while (nums[start] == initValue)
    {
        sumVal++;
        start++;
    }
    return sumVal;
}"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
3eef94429b083b124fda191cc5a19dd202649085,"public String mixString(String a, String b)
{
    int aLength = a.length();
	int bLength = b.length();
    int i = 0;
	StringBuilder build = new StringBuilder(aLength+bLength);
	for(; i < aLength && i < bLength; i++)
	{
		build.append(a.charAt(i));
		build.append(b.charAt(i));
	}
	// only 1 for loop will actually run
	for(; i < aLength; i++)
		build.append(a.charAt(i));
	for(; i < bLength; i++)
		build.append(b.charAt(i));
	return build.toString();
}
"
ec7f457115687180217c5031a741ed0ee5198ec6,"public int noTeenSum(int a, int b, int c)
{
	int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
        return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
    }
}
"
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
"
08f94f1db1b79fbd37a116e5a6efe7de2232d57e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if(!isAsleep)
    {
        if(isMorning)
        {
            if(isMom)
            {
                return true;
            }
            
            return false;
        }//end if(isMorning)
        
        return true;
    }//end if(isAsleep)
    
    else
    {
        return false;
    }
}
"
7ae0fe742dd9b2e0605d9cff2d74332955a40267,"public String zipZap(String str)
{
    String a = """";
    for (int i = 0; i < str.length()-3; i++) {
        String s = String.valueOf(a.charAt(i));
        String p = String.valueOf(a.charAt(i+2));
        if (s.equals(""z"") && p.equals(""p"")) {
            a = a + s + p;
        }
        else {
            a = a + s;
        }
    }
    return a;
}
"
aa45639fbea5b17e510e6ebade131866eb368971,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);
    for(int i=1;i<n;i++)
    {
            res=res+str.substring(str.length()-n);
    return res;
    }
return res;
}
"
bee02e7721832f110174bc61c71f0ec2fe592dc7,"public int[] fix45(int[] nums)
{
    int size = nums.length;
    int i = 0;
    int k = 0;
    bob:
    for (; i < size; i++)
    {
        if (nums[i] == 4)
        {
        	for (; k < size; k++)
            {
            	if (nums[k]==5)
                {
                	int see = nums[i+1];
                    nums[i+1] = nums[k];
                    nums[k] = see;
                    i++;
                    continue bob;
                }
            }
        }
    }
    return nums;
}
"
2515ccbcb23d56fbabc238825e60b66373d48147,"public String zipZap(String str)
{
	int num = 0;
	char ch;
	String returnString = """";
	while(num < str.length())
	{
		ch = str.charAt(num);
		if(ch == 'z' && num < str.length()-2 && str.charAt(num+2) == 			'p')
		{
			returnString = returnString + ""zp"";
			num += 3;
		}
		else
		{
			returnString = returnString + str.charAt(num);;
			num++;
		}
	}
	return returnString;
}
"
1f6e75f86477e69ce835c395311a17884539ee54,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    if (str.length() == 1)
    {
        return str + ""@"";
    }
	else if (str.length() == 0)
    {
		return ""@@"";
    }
	    return part;
  }
"
e13258e7d81bc53497ec097a0996996741997355,"public int[] frontPiece(int[] nums)
{
    int[] firstTwo; 
    if (nums.length == 0)
    {
        firstTwo = new int[0];
    }
    else if (nums.length == 1)
    {
        firstTwo = new int[1];
    }
    else 
    {
        firstTwo = new int[2];
    }
    for (int i = 0; i < 2; i++)
    {
        if (nums.length > i)
        {
            firstTwo[i] = nums[i];
        }
    }
    return firstTwo;
}
"
7d88106d165c7f3f3293646203339626a26282eb,"public int[] fix45(int[] nums)
{
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i+1] != 5)
		{
			nums[i+1] = 5;
		}
	}
	return nums;
}
"
02c1f791fb8f450361e3bba08c084c74102eeb61,"public int countEvens(int[] nums)
{
    for (num: int[] nums)
    {}
}
"
e5e8764fa143fc29d2af69c66048baa67547e378,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClum = false;
    for(int i = 0 ; i < nums.length - 1; i++)
    {
         if(isClump)
         {
             if(nums[i] != nums[i+1])
                isClums = false;
                }
                else if(nums[i] == nums[i+1])
                {
                    isClump = true;
                    clumps++;
                }
                }
                return clumps;
           
}
"
eb5a4c86cae44656617a26e110011ef8081ffdf1,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else if ( str.length() == 0 )
    {
		return ""@@"";
    }
  }
"
8c51f50707c220bcb88369cd843f8943e7b4da27,"public boolean bobThere(String str)
{
    boolean isTrue = false;
    String tempStr = """";
    
    if (str.length() < 3)
    {
        return false;
    }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        tempStr = str.substring(i, i + 3);
        if (tempStr.startsWith(""b"") && tempStr.startsWith(""b""))
        {
            isTrue = true;
        }
    }
    return isTrue;
}
"
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
"
7697e116c57145c92da13ccad9d016896d82cdb9,"public boolean xyBalance(String str)
{
    boolean x = true;
    for (int i = 0; i < str.length() - 1; i++)
    {
        if (str.substring(i,i+1).equals(""x""))
       	{
         	for (int j = i; j < str.length() - 1; j++)
            {
                if (str.substring(j,j+1).equals(""y""))
        		{
                	x = true;
                    j = str.length();
            	}
                else
                {
                    x = false;
                    i = str.length();
                }
        	}
        }
    }
    return x;
}
"
dc1c18a727a472113299aaf5bc76ffcf6180ee19,"public String[] fizzBuzz(int start, int end)
{
    end--;
    String[] result = new String[end - start];
    
    for (int i = 0; i < end; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
5c4431d13cf8541ce2aa2d0467f551c7ac3bd044,"public boolean xyBalance(String str)
{	
    int x = str.length();
    int i = 1;
    boolean y = true;
    while (str.length() - i > 0)
    {
        if(str.substring(str.length()-i).equals(""y""))
        {
            return y;
            break;
        }
        if(str.substring(str.length()-i).equals(""x""))
        {
            y = false;
            return y
            break;
        }
        i++;
    }
    return y
}
"
431873fb56fb7f673be5119baf1ecde5cb7b1535,"public boolean xyzThere(String str)
{
    for(int x=0; x < str.length()-1; x++)
    {
        char char1 = str.charAt(x);
        stringX1 = char1.toString();
        
        char char2 = str.charAt(x+1);
        stringX2 = char2.toString();
        
        char char3 = str.charAt(x);
        stringX3 = char3.toString();
        
        if(!stringX.equals("".""))
        {
            if(stringX1.equals(""x"") && stringX2.equals(""y"") && stringX3.equals(""z""))
                return true;
            else
                return false;
        }
        else 
            return false;
    }
}
"
bc4cc607cbe2d369ca23923f08fce9cc3d8daf96,"public int sum67(int[] nums)
{
    int sum = 0;
	boolean sixMode = false;
	for(int i = 0; i < nums.length; i++)
	{
		if(sixMode)
		{
			if(nums[i] == 7)
				sixMode = false;
		}
		else if(nums[i] == 6)
			sixMode = true;
		else
			sum += nums[i];
	}
	return sum;
}
"
757fa4666ab500b77feaeb740c789e63ab5bdc08,"public String[] fizzBuzz(int start, int end)
{
    String[] array = new String[end-start];
    int i = 0;
    for(int num = start; num < end; num++)
    {
    	if(i % 15 == 0)
    	{
        	array[i] = ""FizzBuzz"";
    	}
    	else if(i % 3 == 0)
    	{
        	array[i] = ""Fizz"";
    	}
    	else if(i % 5 == 0)
    	{
        	array[i] = ""Buzz"";
    	}
    	else
    	{
        	array[i] = String.valueOf(num);
    	}
        i++;
	}
    return array;
}
"
4c49691f7afa4f544caac498bba7e7aa96ad7fc0,"public int sum3(int[] nums)
{
    int sum = (int[0] + int[1] + int[2]);
    return sum;
}
"
c54e11cb478e27d72c9c30ea5dbd6d307e20846d,"public int[] seriesUp(int n)
{
    int[] ans = new int[n * (n + 1)/2];
    
    int count = 0;
    
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; i++)
        {
         	ans[count] = j;
            count++;
        }
    }
    
    return ans;
}
"
dea4633857b4ee5ffe1561255785bcede7cc184f,"public boolean great; 

public boolean love6(int a, int b)
{    
    if (a == 6 || b == 6)
    {
        great = true;
    }
    else if ((a + b) = 6 || (a - b) = 6 || (b - a) = 6)
    {
        great = true; 
    }
    else 
    {
        great = false;
    }
    return great; 
}
"
caec91f2ba0d25b3a96d93bbc7e6ff92f4dfdd72,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off""
        }
    }
    else if (day > 0 && day < 6)
    {
        return ""7:00"";
    }
    else
    {
        return ""10:00"";
    }
}
"
752f8fc7ae411f2a47718e235d912d5c124dd13a,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length()- 2; i++) 
    {
        if (str.substring(i).equals(""z"") && str.substring(i + 2).equals(""p""))
        {
            str.substring(i + 1) = k;
        }
    }
    return str;
}
"
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
"
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
"
b8e6a00418b434fa78ad4b4b0a8eeae15013af79,"public String without2(String str) 
{
    if (str.length() <= 1)
    {
        return str;
    }
    else
    {
        if (str.substring(0, 2) == str.substring(str.length() - 2, str.length()))
            {
                return str.substring(2, str.length());
            }
            else
            {
                return str;
            }
    }
}
"
28f5eaeadbd72cc447334ca3d6392e0eadbf3e70,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
    int j = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            arr[j] = nums[i];
            j++;
        }
    }
}
"
8d894ec3b0b1f4f47f39afe90941a0d70e33f341,"public int loneSum(int a, int b, int c)
{
    if(a==b)
    {
        a=0;
        b=0;        
    }
    if(a==c)
    {
        a=0;
        c=0;
    }
    if(b==c)
    {
        b=0;
        c=0;
    }
    return a+b+c;
}"
cef355e49a88af938c6638a3894b79203c84dc9c,"public int[] fix45(int[] nums)
{
    List<Integer> list = nums;
}
"
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
"
ed7593d76a4372380cd35b51a87816dc36742632,"public int dateFashion(int you, int date)
{
 if((you >= 8 && you>2)  || (date >= 8 && date>2)){
     return 2;
 }else if (you <= 2 || date <=2){
     return 0;
 }else{
     return 1;
 }
}
"
828a3b0db925adca159220f3e9faf2fb4e24446a,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21){
        return a;
    }else if (b > a && b <= 21){
        return b;
    }else if (a > 21 && b < 22){
        return b;
    }else if (b > 21 && a < 22){
        return a;
    }else{
        return 0;
    }
}
"
ed474f0e054cf58e97af554622596132c6fa3db1,"public int roundSum(int a, int b, int c)
{	
    return(round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
	int digit = num % 10;
    if(digit >= 5)
        return num + (10- digit);
    return num - digit;
}"
efb91d8c66e977c2c58454139495244c1640e910,"public String mixString(String a, String b)
{
    int c = 0;
    String d = """";
    if (a.length() <= b.length())
    {
        int c = a.length();
    }
    else
    {
        int c = b.length();
    }

    for (int i = 0; i < c; i++)
    {
        String d = a.substring(i, i + 1) + b.subtring(i, i + 1);
    }
    if(a.length() < b.length()) d += b.substring(a.length(), b.length());
    if(a.length() > b.length()) d += a.substring(b.length(), a.length());
    return d;
    
}
"
7a117561598fdf0166bf2f01cd18982148ccdd82,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13)
        {
            sum = sum + nums[i];
        }
        else if(nums[i + 1] == 13)
        {
            i++;
        }
    }
    return sum;
}
"
1704c20524bf7ca46000768dfe3d1b88ccd5adbd,"public String zipZap(String str)
{
    int stringLength = str.length();
    if (stringLength < 3)
    {
        return str;
    }
    else
    {
        for (int i = 0; i < stringLength; i++)
        {
        	int findZ = str.indexOf(""z"", i);
    		int findP = str.indexOf(""p"", i);
        	if (findP - findZ == 2)
        	{
				String zStart = str.substring(findZ, stringLength - findZ + 1);
            	String zBack = str.substring(findZ + 2);
            	str = zStart + zBack;
        	}
    	}
    }

    return str;
}
"
f461e1e90101ffb975096ff62b7afaa084e30c8a,"public int[] shiftLeft(int[] nums)
{
    int first = 0;
    
    if (nums.length != 0)
    {
    	first = nums[0];
    }
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i + 1 < nums.length)
        {
            nums[i] = nums[i+1];
        }
        else
        {
            nums[nums.length - 1] = first;
        }
    }
    
    return nums;
}
"
125a8d4acc16881078c06aa2d0d301f0d963cd10,"public int roundSum(int a, int b, int c)
{
    int sum = 0;
    sum = sum + round10(a);
    sum = sum + round10(b);
    sum = sum + round10(c);
    return sum;
}

public int round10(int num)
{
    int cutOff = num % 10;
    if (cutOff >= 5)
        int output = num - cutOff + 10;
    else
    	int output = num - cutOff;
    return output;
}
"
8593478de577b5c67144291c8ecfe75fbbdbb57c,"public int makeChocolate(int small, int big, int goal)
{
    if (small + (big*5) != goal)
        return -1;
    else
        return goal % 5;
}"
a9b00df2c7fc186de2797dd2c96946722686ed19,"public int[] fizzArray(int n)
{
   int[] arr = new int[n];
    
    for(int i = 0; i < n; i++)
        arr[i] = i;
              
    return arr; 
}
"
8ee3048be5067b24921c2fb923ff52eb36e710a0,"public int centeredAverage(int[] nums)
{
     int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for(int i = 1; i < nums.length; i++)
	{
		sum  += nums[i];
		if(nums[i] > max)
			max = nums[i];
		else if(nums[i] < min)
			min = nums[i];
	}

}
"
6e13cbb8b8bd2bc9554756c3e7cbc0702fd55abe,"public int[] fix45(int[] nums)
{
    int k = 0;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i+1] != 5)
		{
            int before = nums[k-1];
			for(; !(nums[k] == 5 && (k == 0 || k > 0 && before != 4)); k++);
			nums[k] = nums[i+1];
			nums[i+1] = 5;
		}
	}
	return nums;
}
"
1a8cdb07a73ea3b7cd46de0fbd6aac1fa864d2c4,"public String zipZap(String str)
{
	int num = 0;
	char ch;
	String returnString = """";
	while(num < str.length())
	{
		ch = str.charAt(num);
		if(ch == 'z' && num < str.length()-2 && str.charAt(num+2) == 			'p')
		{
			returnString = returnString + ""zp"";
			num += 3;
		}
		else
		{
			returnString = returnString + str.charAt(num);;
			num++;
		}
	}
	return returnString;
}
"
c5ffbced7f22f6553f6f1703a62c83ce24baf411,"public String withouEnd2(String str) 
{
    if(str.length()==1)
    	return str = """";
    if(str.length()>1)
    	str = str.substring(1,str.length()-1);
    return str;
}
"
db9b29b114ae85d86c3fe363b9c8f7afce6147c3,"public int countCode(String str)
{
    int count = 0;
    for ( int i = 0; i < str.length() - 3; i++ )
    {
        if ( ""co"".equals( str.substring( i, i + 2 ) ) )
        {
            if ( str.charAt( i + 3 ) == 'e' )
            {
                count++;
            }
        }
    }
    return count;
}
"
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
"
6517a703c515af1d501bfdcbc5d12282d3a5fc51,"public String getSandwich(String str)
{
   int length = str.length();
    
    if (length < 10 )
        return """";
    else if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
    	return (str.substring(5, length-5));
    }
    else
    {
    	while (!str.startsWith(""bread"") && length > 10);
    {
        if (str.charAt(1) != 'b')
        {
    	str = str.substring(1, length);
        length = str.length();
        }
    }
        while (!str.endsWith(""bread"") && length > 10);
    {
        
    	str = str.substring(0, length);
        length--;
    }
        if (str.startsWith(""bread"") && str.endsWith(""bread""))
        {
        return (str.substring(5, length-5));
        }
        else
            return """";
    }
}

"
e01cd912f8e3008e35ac95753aa58699f9dc7a2e,"public int[] frontPiece(int[] nums)
{
    if (nums.length >= 2)
    {
        int[] firstTwo = new int[2];
        firstTwo[0] = nums[0];
        firstTwo[1] = nums[1];
     	return firstTwo  ;
    }
    else
    {
        int[] firstTwo = new int[nums.length]; 
     	for (int i = 0; i < nums.length; i++)
        {
            firstTwo[i] = nums[i];
            return firstTwo;
        }
    }
    return firstTwo;
}
"
cdd0817b73c160a36cec2fee7dadc8c9bdb3b6d2,"private boolean num;

public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode = true)
    {
        if (n >= 10 || n <= 1)
        {
            num = true; 
        }
        else
        {
            num = false; 
        }
    }
    else 
    {
        if (n <= 10 || n >= 1)
        {
            num = true; 
        }
        else 
        {
            num = false; 
        }
    }
    return num;
}
"
6aef4daf89e031ae82334e35751a925a97d46f29,"public int[] withoutTen(int[] nums)
{
	int[] array = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			array[p] = nums[i];
			p++;
		}
	}
	return array;
}
"
544bf460abbad98ebcd438cd40c1a2a6419ae045,"public int loneSum(int a, int b, int c)
{
 	int sum;
    int[][] set = new int[3][2];
    
    set[0][1] = a;
     set[1][1] = b;
      set[2][1] = c;
    
    if(a==b || a==c)
    {
        set[0][0] = 0;
    }
	else
    {
    set[0][0] = 1;
    }
    
    if(b==a || b==c)
    {
    set[1][0] = 0;
    }
	else
    {
    set[1][0] = 1;
    }
    
    if(c==a || c==b)
    {
    set[2][0] = 0;
    }
	else
    {
    set[2][0] = 1;
    }


    for (int i = 0; i <= 2; i++)
    {
    if(set[0][i] == 1)
    {
    	sum = sum + set[1][i];
    } 
       
    }
	return sum;
}


"
53a5e6fd8ed2775feb418a82377a05fdce260de1,"public int[] zeroMax(int[] nums)
{
    int large;
    for(int i = 0; i < nums.length - 1; i++)
    {
     if (nums[i] == 0)
     {
      	large = 0;
        for(int j = i + 1; j < nums.length; j++)
        {
         	   if(nums[j] > large && nums[j] % 2 == 1)
               {
                	large = nums[j];   
               }
        
            if (large != 0)
            {
             	nums[i] = max;   
            }
        }
     }
    }
        return nums;
}
"
53913bc74205b529ce72253006b661b10da484c6,"public int greenTicket(int a, int b, int c)
{
    if (a !== b && b !== c)
        return 0;
	else if  (a == b && b == c)
    else if (a == b  || b == c || a == c)
}
"
f0258239140a383cf0c0c1e9ac9553390ed81433,"public boolean xyzThere(String str)
{
    int i = 0
    int length = str.length() - 2;
    for( i ; i < length; i++);
    {
     	if(str.charAt(i) == 'x' && str.charAt(i+1) == 'y' && str.charAt(i+2) == 'z')
        {
         	if (i == 0 || str.charAt(i-1) != ""."")
                return true;
        }
    }
    return false;
}
"
a1c591b6f4179d5767faf1b93f8c25a4cec3a6ab,"public boolean love6(int a, int b)
{
	if(a == 6 || b == 6 || (a + b == 6) || (Math.abs(a - b) == 6) )
    {
        return true;
    }	
	return false;
}
"
2d9b7d8e9bb6cae3103814425115198745b2b5a8,"public String atFirst(String str)
{
    int len = str.length();
	if(len >= 2)
		return str.substring(0, 2);
	else if(len == 1)
		return (str.charAt(0)+""@"");
	else
		return ""@@"";
}
"
d1e2c22d6c39456544b139affba981e7922869d2,"public int makeChocolate(int small, int big, int goal)
{
    int Big = big * 5;
    if ((Big/big) == goal)
    {
        return 0;
    }
    if ((Big + small) < goal)
    {
        return -1;
    }
    else if ((Big + small) > goal)
    {
        return -1;
    }
    else if ((Big + small) == goal)
    {
        return small;
    } 
    else
    {
        return goal - (Big);
    }
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
a9506d3e9a220a033647b78df79b71efa06b94f1,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        
        if (nums[i] == 0)
        {
            largestOdd = 0;
            for (int j = i + 1; j < nums.length; j++)
    		{
                if (nums[j] % 2 != 0 && nums[j] > largestOdd)
                {
                    largestOdd = nums[j];                    
                }
            }
            if(largestOdd != 0)
            {
                nums[i] = largestOdd;
            }
        }
       
    }
    
	return nums;
}

"
c7972a0c52578814fdc1e75cdf7b2b9b87eaaa39,"public boolean evenlySpaced(int a, int b, int c)
{
    if ( a > b && b > c || c > b && b > a)
    {
        return ( a - b == b - c);
    }
    else if ( b > a && a > c || c > a && a > b)
    {
        return ( b - a == a - c);
    }
    else
    {
        return ( a - c == c - b);
    }
    
}
"
5bf86880f174d216925f9647311256fef5bd5940,"public String plusOut(String str, String word)
{
    String a;

        for (int i =0;i < str.length(); i + 0){
        if (str.substring(i, i + word.length().equals(word)))
        {
        	a = a + word;
            i = i + word.length();
        }else
        {
        	a = a + ""x"";
            i = i + 1;
        }
    }
    return a;
}
"
60e0e7c2a6ef0d31ce6244991bd4d3c0a2070133,"public String plusOut(String str, String word)
{
	int length = str.length();
	int wordLength = word.length();
	int position = str.indexOf(word);
	int counter = 0;
	StringBuilder stringBuilder = new StringBuilder(length);
    
	while (position != -1)
	{
		while (counter < position)
		{
			stringBuilder.append('+');
			counter++;
		}
		stringBuilder.append(word);
		counter = position + wordLength;
		position = str.indexOf(word, counter);
	}
    
	for (;counter < length; counter++)
		stringBuilder.append('+');
    
	return stringBuilder.toString();
}"
64bc31d3ed86ed1b6c7929ae70d8bb1a66354f29,"public int[] seriesUp(int n)
{
    int[] arr = new int[n*(n+1)/2];
	int p = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++, p++)
			arr[p] = j;
	}
	return arr;
}
"
76a3f2319da117864b8ca1165daa8eb7ace3e99c,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else 
        {
            return false;
        }
    else 
    {
        return true;
    }
}
"
da854431fc95a4fda3f5795de985db2ccfd6cecc,"public boolean xyzThere(String str)
{
    if (str.length() >= 3) {
   	 	for (int i = 0; i < str.length() - 3; i++) {
        	if (str.substring(i, i + 3).equals(""xyz"")) {
            	if (i == 0) {
                    return true;
                }
                else if (str.charAt(i - 1) == '.') {
                    return false;
                }
                else {
                    return true;
                }
        	}
            else {
               return false; 
            }
    	}
    }
    else {
        return false;
    }
}
"
97909dee614bbcd019e5e6ea80d9f14e50908726,"public int sum67(int[] nums)
{
    int sum = 0;
    for (int i = 0; nums.length(); i++)
    {
        if (nums[i] != 6)
        {
            sum+= nums[i];
        }
        else
        {
            while (nums[i] != 7)
            {
                i++;
            }
        }
    }
    return sum;
}
"
5b46d03d7d1417989933f419b5339b83d1a09176,"public int blackjack(int a, int b)
{
    int aChecker = 21 - a;
    int bChecker = 21 - b;
    int answer = 0;
    if (aChecker < bChecker)
    {
        answer = a;
    }
    if (aChecker > bChecker)
    {
        answer = b;
    }
    if (aChecker < 0 && bChecker < 0)
    {
        answer = 0;
    }
    return answer;
}
"
9a762998ef3f0abdaeaa9e34d97d58d792cb6be4,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMom)
        return true;
    return (!isMorning);
}
"
2d98290b1cb9284df4caf4badcf8737e2c4efb14,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i=0;i<nums.length-1;i++) {
    	if (nums[i] != val && nums[i+1] != val) {
         return false;   
        }
        
    }
    return true;
}
"
faaaa4b9637f7003d240f0cdc7c5c6bf28c27cdb,"public boolean isEverywhere(int[] nums, int val)
{
    if (nums.length == 0) {
        return true;
    }
    int b = 0;
    for (int i = 1; i < nums.length; i++) {
        if (nums[i] == val || nums[i-1] == val) {
            	b++;
        }
    }
    return b == nums.length - 1;
}
"
d74c3361530e108c24a235b58496bf502a7b1853,"public int luckySum(int a, int b, int c)
{
    if(a == 13)
		return 0;
	if(b == 13)
		return a;
	if(c == 13)
		return (a + b);
	return (a + b + c);
}
"
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}"
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
"
5f9b4185a58d7986534a98fee5fd832542abad20,"public int makeChocolate(int small, int big, int goal)
{
    int j = goal -5*big;
    if (j>small)
        return -1;
    
    int k = goal%5;
    
    return k;
}
"
d4c41a93e6325bfa2c232bec8e17db85a48d60e8,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}
public int round10(int num)
{
    int round = 0;
    if (num >= 10)
    {
        round = num;
    }
    else 
    {
        round = num;
    }
    if (round < 5)
    {
        num = num - round;
    }
    else
    {
        num = (num - round) + 10;
    }
    return num;
    
}
"
4c1b6146f312f04fb982190db0c38a87ca3546d3,"public int[] seriesUp(int n)
{
    int[] array = new int[n * (n + 1) / 2];
    int select = 0;
    
    for (int x = 1; x <= n; x++)
    {
     	for (int y = 0; y < x; y++)
        {
         array[select + y] = y + 1;   
        }
        select += i;
    }
    
    return array;
}
"
de419570e9d170944e982c48dbdb992b957100bd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int value = 0;
    if (speed <= 60)
    {
    	value = 0;
    	return value;
    }
    else if (speed > 60 && speed <= 80)
    {
    	value = 1;
    	return value;
    }
    else
    {
    	value = 2;
    	return value;
    }

}
"
7d59c6f7b74b41fec09dae83bbea25f6ce159f0f,"public int[] frontPiece(int[] nums)
{
    if(nums.length >= 2)
		return (nums[0] + nums[1]);
	if(nums.length == 1)
		return nums[0];
	return 0;
}
"
13e417be8f03b15a858a75640998f17362b9c5f6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int temp = nums[0];
        
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i+1];
        }
        nums[nums.length-1] = temp;
    }
    return nums;
}
"
528bc32f1935e92b9722b9f33bfb20314c8531da,"public int makeChocolate(int small, int big, int goal)
{
   	
    if (goal > 5)
    {
        if ((big * 5) + small >= goal)
        {
            if (goal % 5 > small)
            {
                return -1;
            }
            else
            {
                return (goal - (big * 5));
            }
        }
        else
        {
            return -1;
        }
    }
    else if (goal % 5 == 0)
    {
        if (big * 5 >= (goal - 4))
        {
            return 0;
        }
        else if ((big * 5) + small >= goal)
        {
            return (goal - (big * 5));
        }
        else 
        {
            return -1;
        }
    }
    else if (small >= goal)
    {
        return goal;
    }
    else
    {
        return -1;
    }
}
"
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
"
2fcaf981009bd7e1ef339f213c9e6b4136d27b4d,"public boolean xyzThere(String str)
{
    int strlen = str.length();
    String word = ""xyz"";
    for (i=0; i< strlen; i++)
    {
        if (str.substring(i, i+2)==word)
            return true;
    }
    return false;
}
"
75938902e1b6be97cce8e0c1fab9e97c07e3f9f7,"public int centeredAverage(int[] nums)
{	
    int largest = -1;
    int lowest = 99999999;
    int total = 0;
    int div = nums.length - 2; 
    for(int i = 0; i < nums.length; i++)
    {
    	if(nums[i] < lowest)
    	{
    		lowest = nums[i];
    	}
       if(nums[i] > largest)
       {
       largest = nums[i];
       }
        total = total +nums[i];
    }
    total = total - lowest - largest;
    int ave = total/ div;
    return ave;
}
"
78234aa4a3488968f0412f65eab98ba92ac65fc7,"public String something;

public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        something = str(5, -5); 
    }
    else
    {
        something = """"; 
    }
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
a909a3741798faeb11da5f71297a08fda4f9466c,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(n + 1);
    String repN = """";
    for (int i = 0; i < n; i++)
    {
        repN = repN + lastN;
    }
    return repN;
}"
9acc1d315f8406b8f837cdf5856a27d1817efd9a,"public boolean evenlySpaced(int a, int b, int c)
{
    boolean wat = true;
    if (a > b && b > c)
    {
     	if (Math.abs(a-b) == Math.abs(b-c))
        {
         	wat = true;   
        }
        else
        {
         	wat = false;   
        }
    }
    else if (c>b && b>a)
    {
        if (Math.abs(c-b) == Math.abs(b-a))
        {
         	wat = true;   
        }
        else
        {
         	wat = false;   
        }
    }
    else
    {
     	if ((b-a) == Math.abs(a-c))
        {
         	wat = true;
        }
        else
        {
         	wat = false;   
        }
    }
    return wat;
}
"
9f68989c5d71d579dd7bde58a4a26b677d5dc2df,"public int[] zeroMax(int[] nums)
{
    int biggest = 0;
    for (int i = 0; i < nums.length;i++)
    {
        if (nums[i] == 0)
        {
            for (int a = i; a < nums.length;a++)
            {
                if (nums[a]%2 == 1)
                {
                    if (biggest < nums[a])
                    {
                    biggest = nums[a];
                    }
                    num[i]=biggest
                }
            }
        }
    }
    return nums;
}
"
86eeb69c66325d7ac263cfba4f58a77188d3d872,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int test = 0;
        int[] testArray = new int[nums.length];
        for (int x = 0; x < nums.length; x++)
        {
            testArray[x] = nums[x];
            test++;
        }
        if (test == nums.length)
        {
            return 1;
        }
        
        
        
        
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i]);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init)
{
    int nextNum = 0;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
9ac47f6c196a820eacbe8fca8359013950a2cc87,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (!isSummer && temperature >= 60 && temperature <= 90)
    {
        return true;
    }
    else if (isSummer && temperature >= 60 && temperature <= 100)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
"
9134f5663abede3bcd17fa098e3ed864577d02cb,"public boolean xyBalance(String str)
{	
    int x = str.length();
    int i = 1
    while (str.length() - i > 0)
    {
        if(str.substring(str.length()-i).equals(""y""))
        {
            return true;
            break;
        }
        if(str.substring(str.length()-i).equals(""x""))
        {
            return false;
            break;
        }
    }
}
"
661e24dc39f97c315ccd6a726d8c829f2e935baf,"public String mixString(String a, String b)
{
    String newString = """";
    if (a.length() >= b.length())
    {
        for (int i = 0; i < b.length(); i++)
        {
            newString = newString + a.charAt(i) + b.charAt(i);
        }
        newString = newString + a.substring(b.length());
    }
    else
    {
        for (int c = 0; c < a.length(); c++)
        {
            newString = newString + a.charAt(c) + b.charAt(c);
        }
        newString = newString + b.substring(a.length());
    }
    return newString;
}
"
13588bafe7146875aeecd22626679f601f5f7f24,"public boolean bobThere(String str)
{
    int i;
    for (i=0; i < str.length()-3; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
7ff7cd2db0d50a61424f24745c79422b9d69bccc,"public int luckySum(int a, int b, int c)
{
    int first = 0;
    int second = 0;
    int third = 0;
    if (c != 13)
    {
        third = c;
    }
    else 
    {
         third = 0;   
    }
    if (b != 13)
    {
        second = b;
    }
    else 
    {
        second = 0;
        third = 0;
    }
return first + second + third;
    if (a != 0)
    {
         first = a;   
    }
    else 
    {
        first = 0;
        second = 0;
        third = 0;
    }
        
}
"
f0f93102c0a87bedb16e5c9f188b50916757a30c,"

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}"
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
"
f391f13e84da69797a7470800c3706e56be63257,"public int redTicket(int a, int b, int c)
{
    int answer = 0;
    if (a == b == c == 2)
    {
        answer = 10;
    }
    else if (a == b == c)
    {
        answer = 5;
    }
    else if (b != a && c != a)
    {
        answer = 1;
    }
}
"
92e749d0042418765e7f7028fbf933a8960d78c1,"public int sum3(int[] nums)
{
    int sum;
    for (int x = 0; x <= nums.size(); x++)
    {
        sum = sum + nums[x];
    }
    return sum;
}
"
0334fefcbb7ad610989c6a494fa7d33465c6071d,"public String mixString(String a, String b)
{
    String re = """";
    int la = a.length();
    int lb = b.length();
    if (la == lb)
    {
        for (int i = 0; i < lb; i++)
        {
            char ca = a.charAt(i);
            char cb = b.charAt(i);
            String sa = Character.toString(ca);
            String sb = Character.toString(cb);
            re = re + sa + sb;
        }
        return re;
    }
    else if (la > lb)
    {
        for (int i = 0; i < lb; i++)
        {
            char ca = a.charAt(i);
            char cb = b.charAt(i);
            String sa = Character.toString(ca);
            String sb = Character.toString(cb);
            re = re + sa + sb;
        }
        int diffa = la - lb;
        int enda = la + 1;
        String ea = a.substring(diffa, enda);
        re = re + ea;
        return re;
    }
    else // lb > la
    {
        for (int i = 0; i < la; i++)
        {
            char ca = a.charAt(i);
            char cb = b.charAt(i);
            String sa = Character.toString(ca);
            String sb = Character.toString(cb);
            re = re + sa + sb;
        }
        int diffb = lb - la;
        int endb = lb + 1;
        String eb = a.substring(diffb, endb);
        re = re + eb;
        return re;
    }
}
"
38ed9af98e04b9423f3f246a98f7651c01b2450a,"public int countCode(String str)
{
    int count = 0;
    for(int i=0; i<str.length()-4; i++)
    {
        if(str.substring(i).startsWith(""co""))
        {
            if(str.charAt(i+3) == 'e')
                count++;
        }
    }
    return count;
}
"
89eb44bdd320e778ec1da3c8b1ed9c210fcf3d27,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        if (temp >= 60 && temp <= 100)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else if (temp >= 60 && temp <= 90)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
d3fc7117bd8d2d3ce23fb6c7b34d1274ad60e27c,"public boolean xyzThere(String str)
{

    if (str.length () >= 3  && str.contains(""xyz""))
        
    {
        return true;
    }
        for (int x = 0; x < str.length() -3; x++)
        {
   			if (str.charAt(x) == '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return false;
    }
        
        }
    {return false;}

}
"
24609f639824dadc00d609d78a5dd3fa0f9e8567,"public int redTicket(int a, int b, int c)
{
    int answer = 0;
    if (a = 2 && a = b = c)
    {
        answer = 10;
    }
    else if (a = b = c)
    {
        answer = 5;
    }
    else if (b != a && c != a)
    {
        answer = 1;
    }
return answer;
}
"
9e89b3023c05845243db9d522d58d179e8234748,"public int centeredAverage(int[] nums)
{
    int lIndex = 0;
    int lVal = nums[0];
    int sIndex = 0;
    int sVal = nums[0];
    
    for(int i=0;i<nums.length;i++) {
    	if(nums[i] > lVal) {
        	lIndex = i;
            lVal = nums[i];
        } else if(nums[i] < sVal) {
        	sIndex = i;
            sVal = nums[i];
        }
    }
    
    int total = 0;
    for(int i=0;i<nums.length;i++) {
    	if(i == lIndex || i == sIndex)
            continue;
        total += nums[i];
    }
    return total/(nums.length-2);
}
"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
5fa1e0cf3ee4931dbb55ce25fcb0ec935bdf074e,"public int makeChocolate(int small, int big, int goal)
{
    int x = goal % 5;
    if ((big*5) + small < goal)
    {
        return -1;
    }
    else if (x < small)
    {
        return x;
    }
    else if (x <= small && goal - (big*5) > 4)
    {
        return x + 5;
    }
    else
    {
        return -1;
    }
        
}
"
1a2d43212f4cc9395e305586c20ab0cb4267601d,"public String atFirst(String str)
{
    int len = str.length();
    
    if (len >= 2)
    {
        return str.substring(0,2);
    }
    else if (len == 1)
    {
        return(str.substring(0,1) + ""@"");
}
"
8f67ce919705d1a53ce3e73e5fe64227236cbe5b,"public int loneSum(int a, int b, int c)
{
    int d = a;
    int e = b;
    int f = c;
    if(a == b)
    {
        d = 0;
        e = 0;
    }
    if(b == c)
    {
        e = 0;
        f = 0;
    }
    if(c == a)
    {
        f = 0;
        d = 0;
    }
    return d + e + f;
}
"
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
"
3ab663bf622610b99731e135ecfd0b492177f03f,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i+1] == 7)
                return true;
            else if (i < nums.length -2 && nums(i+2) == 7)
                return true;
        }
    }
    return false;
}
"
cee57656ca16e1dba36c9adc7d7dbfc622398c9a,"public int sum13(int[] nums)
{
    int sum = 0;
        if (nums.length < 1) {
            return 0;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 13) {
                i++;
                continue;
            }
            sum += nums[i];
        }
        return sum;
}
"
17262d535eb3b5f8e8c0ab5857d3b385a7b8e29d,"public int[] zeroMax(int[] nums)
{
    int zero = 0;
    return zero;
}
"
a1913ba7c97688ee09ec5248ec919d692b08d170,"public int[] withoutTen(int[] nums)
{
    int[] newArray = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			newArray[p] = nums[i];
			p++;
		}
	}
	return newArray;
}
"
1640df8991aaf52451a547e84295add650af49b6,"public int countCode(String str)
{
    
    int num = 0;
    
    for (int i = 0; i < str.length()-2; i++)
    {
        if ((str.charAt(i) == 'c') && (str.charAt(i+1) == 'o') && (str.charAt(i+3) == 'b'))
        {
            num++;  
        }
    }
    return num; 
}
"
612e4e1f3b24dc2f1bb34ebf8550de7c1d8f94c8,"public String mixString(String a, String b)
{
    String c = """";
        
    int aLength = a.length();
    int bLength = b.length();
    int big;
    
    String word = """";
    
    if (aLength <= blength)
    {
     	big = aLength;
    }
    
    else 
    {
     	big = bLength;   
    }
    
    
    int i = 0;
    
    while (i < big)
    {
    	c += a.charAt(i);
        i++;
    }
    
    	if (i != alength)
    	{
     		c += a.charAt(i);
        	i++;
    	}
    
    	if (i != alength)
    	{
     		c += b.charAt(i);
        	i++;
    	}
    
	return c;
}  
    "
953a61708a9b85f6837a80d38d31405f572a65ed,"public int sum3(int[] nums)
{
    int sum3 = 0;
    for (int i = 0; i < nums.size(); i++) {
		sum3 = sum3 + nums[i];
    }
    return sum3;
}
"
d8079d00da7f06ce020359e25d3f38396a0c2af6,"public String atFirst(String str)
{
    int length = str.length();
    if (length >= 2)
    {
        return str.substring(0, 2);
    }
    else if (length == 1)
    {
        return (str.substring(0) + ""@"");
        
    }
    return ""@@"";
}
"
08b4efa4390e118c60ebc68d4429ca548b38617f,"public int[] frontPiece(int[] nums)
{
    if (nums.length <= 1)
    {
    	int firsttwo[] = new int[1];
        firsttwo[0] = nums[0];
    }
    else 
    {
    	int firsttwo[] = new int[2];
        for (int i = 0; i < 2; i++)
        {
        	firsttwo[i] = nums[i];
        }
    }
    return firsttwo[];
}
"
e08370f176254122dcf6301bc9407f8c9f39b9c1,"public int countClumps(int[] nums)
{
    int clumps = 0;
	int counter = 0;
    
   	for (int i = 0; i < nums.length; i++)
    {
        for (int j = 1; j < nums.length; j++)
        {
            if (nums[i] == nums[j])
            {
                counter += 1;
            }
            else if (counter > 0)
            {
                i += counter;
                j += counter;
                clumps++;
                counter = 0;
            }
        }
    }
    
    return clumps;
}
"
89aa3ebca5fd2a20ce71e88d364cf542a976ed9b,"public int[] seriesUp(int n)
{
    int[] out = new int[n * (n+1)/2];
    for (int i = 0; i <= n; i++);
    {
        for (int j = 0; j <= n; j++)
        {
            out[j] = 1 + j;
        }
    }
    return out;
}"
239d63df8977727f828c61cb242a54331ab52605,"public int[] withoutTen(int[] nums)
{
    for(int i=0; i < nums.length; i++) {
    for(int j=i+1; j < nums.length; j++) {
      if(nums[i] == 10 && nums[j] != 10) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
      }
    }
    if(nums[i] == 10) nums[i] = 0;
  }
  
  return nums;
}
"
d6cae903650a09585ae1bb496e05fc63b9b6524f,"public String plusOut(String str, String word)
{
    int i = 0;
    String sTwo = """";
    while (i < str.length() - word.length() + 1)
    {
        if (!str.substring(i, i + word.length()).equals(word))
        {
            sTwo += ""+"";
            i++;
        }
    	else
    	{
        	sTwo += word;
        	i += word.length();
    	}
    }
    while (str.length() > sTwo.length())
    {
        sTwo += ""+"";
    }
    return sTwo;
}
"
3abceb6091774b6af31cb5ba68ebc852cb5679b7,"public int blackjack(int a, int b)
{
    int c = 21 - a;
    int d = 21 - b;
    if(c>=0)
    {
        if(d>=0)
        {
            if(a>b)
                return a;
            else
                return b;
        }
        else
            return a
    }
    else if(d>0)
        return b;
    else
        return 0;
}
"
826eebb2c8a3a5b9947ab73bb253b4486620423e,"public int sortaSum(int a, int b)
{
    int sum = 0;
    sum = a+b;
    if (sum>=10&&sum <=19)
    {
        return 20;
    }
    else
    {
        return sum;
    }
    
}
"
7478d82102be770284252bf085987e42b0e436cb,"public boolean bobThere(String str)
{
    
    for (int x = 0; x < str.length() -2; x++)  
    {
        if (str.charAt(x) == 'b' && str.charAt (x+2) == 'b')
    	{
        	return true;
    	}
    }
  
    	{
        	return false;
    	}
    
}"
09847ceb2f4c5840316c0b5d1a25a60df77928af,"public int dateFashion(int you, int date)
{
    if(you<=2 || date<=2)
    {//just check date or you <=2
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 0;
    }
}
"
c5bd32eee7c56679c1bdfee89dfcaddb039a2431,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
       if (speed <= 60)
           return 0;
    	if (speed >= 81)
            return 2;
    	else
            return 1;
	else
        if (speed <= 65)
            return 0;
    	if (speed >= 86) 
            return 2;
    	else 
            return 1;
}
"
7ee43d12f07ff68b7f972e1fff3115005c1d20f5,"boolean answer;
public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning == true && isMom == true && isAsleep == false)
    {
        answer = true;
    }
    else if (isAsleep == true)
    {
        answer = false;
    }
    else
    {
        answer = true;        
    }
    return answer;
}
"
4029e7dd2b61f5d582f6b218cbc13197bdda96e6,"public int blackjack(int a, int b)
{
    int zero = 0;
    if (a + b > 21)
    {
        return zero;
    }
}
"
dabbc0fac0e4efb2d8353000f3f477c0332d8b9b,"public boolean endOther(String a, String b)
{
    String astring = a.toLowerCase();
    String bstring = b.toLowerCase();
    
    if (astring.endsWith(bstring) || bstring.endsWith(astring))
    {
        return true;
    }
    else 
    {
        return false;
    }
    
}
"
de22bdd8aa3fe3c905f78ecf7bce75e7f577cc0f,"public int[] shiftLeft(int[] nums)
{
    int[] fresh = new int[nums.length];
    if (nums.length > 0)
    {
    	fresh[nums.length - 1] = nums[0];
    	for (int i = 0; i < nums.length - 1; i++)
    	{
        	fresh[i] = nums[i + 1];
    	}
    }
    return fresh;
}
"
6609675c9d508c67f114bdaa1bb66dc312c97730,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}"
9f9cafcc5ccefbd90bb92f943d8cecbbd4366dab,"public int makeChocolate(int small, int big, int goal)
{
    int rbig = goal/5;
    int rem = goal%5;
    int x = rbig - big;
    int rem2 = rem + (x*5);
    if (big<rbig && small>=rem2)
        {
            return rem2;
        }
    else if (big >= rbig && rem>=small)
    {
     return rem;   
    }
    else
    {
        return -1;
    }
        
        
}
"
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
"
88eaec03a230d7bac0b575402521f96d7c9a645b,"public int[] zeroMax(int[] nums)
{
    	int max = 0;
	for(int i = 1; i <= nums.length - 1; i++)
	{
		if(nums[i-1] == 0)
		{
			max = 0;
			for(int k = i-1; k < nums.length; k++)
			{
				if(nums[k] > max && nums[k] % 2 == 1)
					max = nums[k];
			}
			if(max != 0)
				nums[i-1] = max;
		}
	}
	return nums;
}
"
a23678b6f1ed32125aafce452d7f4f6449fb3591,"public int makeChocolate(int small, int big, int goal)
{
    int numLeft = goal % 5;
    if ((small + (big*5)) < goal) // if total number of bars is not enough
    {
        return -1;
    }
    else if ((big * 5) == goal) 
    {
        return numLeft;
    }
    if (numLeft <= small)
    {
        return numLeft;
    }
    else
    {
        return goal - (big*5);
    }
}
"
8bd6027e6662c59520247fb5f37462997b8c363f,"public int[] zeroMax(int[] nums)
{
    int largest = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
        if (nums[i] % 2 == 1)
            if (nums[i] > largest)
                largest = nums[i];
        if (nums[i] == 0)
            nums[i] = largest;
    }
    return nums;
}
"
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
"
bb4893d2a0830de174d40c1639b17a4f49b8cbbe,"public int luckySum(int a, int b, int c)
{
    if(a == 13)
		return 0;
	if(b == 13)
		return a;
	if(c == 13)
		return (a + b);
	return (a + b + c);
}
"
7a1ff0454bf04c0d5091f5c1ec27040d195aa094,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i <nums.length;i++){
        if(nums[i] != 13)sum+=nums[i];
        else i++;
    }
    return sum;
}
"
8ee69b5239fc9e755c8537971faea2a49dbaf9a7,"public String mixString(String a, String b)
{
    int i = 0;
    int aLen = a.length();
	int bLen = b.length();
	
	StringBuilder stbuild = new StringBuilder(aLen+bLen);
	for(; i < aLen && i < bLen; i++)
	{
		stbuild.append(a.charAt(i));
		stbuild.append(b.charAt(i));
	}
	for(; i < aLen; i++)
    {
		stbuild.append(a.charAt(i));
    }
	for(; i < bLen; i++)
    {
		stbuild.append(b.charAt(i));
    }
	return stbuild.toString();
}
"
b60022e4efa97f99d5248af406c73a6831b03b38,"public boolean endOther(String a, String b)
{
    String a = a.toLowerCase();
    String b = a.toLowerCase();
    if (a.endsWith(b) || b.endsWith(a))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
d00e1e400811976c2d6f06cb7d59a03173451085,"public boolean love6(int a, int b)
{
    if (a + b == 6 || a + b == Math.abs(6))
        return true;
    if (a - b == 6 || a - b == Math.abs(6))
        return true;
    if (a == 6 || b == 6)
        return true;
    else
        return false;
}
"
19de8fdf6b23225ee8b0bf88df2e49f08d3029eb,"public int[] shiftLeft(int[] nums)
{
    int[] out = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++)
    {
        out[i] = nums[i + 1];
    }
    out[nums.length - 1] = nums[0];
    return out;
}"
309dc7997e1010df732f8ec41fd34a616365f55d,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if ((str.substring(i, i + 1) == 'co') 
            && (str.substring(i + 3) == 'e'))
        {
            count++;
        }
    }
    return count;
}
"
6b538f7d9eac6f8c54cd2c59a699ca73280e0930,"public class FizzArray {

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
6f322e87cd1dfd7afef2774c17164613fa26faea,"public boolean sameEnds(int[] nums, int n)
{
    
	int start = 0;
	int end = nums.length-n;
	for(; n > 0; len--)
	{
		if(nums[start] != nums[end])
			return false;
		else
		{
			start++;
			end++;
		}
	}
	return true;
}
"
7e8ebbb04f1a1a60590f6fb959bda51fa984b852,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums.get(i)%2 == 0)
        {
            count++;
        }
    }
    return count;
}
"
332c6ec5c84a4b48b155a3ce7e3c41195bbaf8a1,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
a457e813b62121d4bee7f0cd63ba678e9441866c,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c && b == c){
            result = 10;
        }
     }
    else if ( c == b){
        result == 10;
    }
        
            
    return result;
}
"
c2f44e8f8535b3b51d5b09674b0ebf9c080944e0,"public boolean xyzThere(String str)
{
return true;
}
"
696802b81ff07daccad5fcc15e2bfdd44deb6b21,"public int sum3(int[] nums)
{
    int sum = 0;
    for ( int i = 1; i <= nums.length; i++)
    {
        sum  = sum + nums[i];
    }
    return sum;
}
"
b4641629a41ab9c096a5a234565bd5946c11735d,"public int loneSum(int a, int b, int c)
{
    if (a==b)
        return c;
    else if (b==c)
        return a;
    else if (a==c)
        return b;
    else if (a==b && b==c)
        return 0;
    else
        return a+b+c;
}
"
f14ea5ace43bef263f5f26282323f430e9b7e259,"public int noTeenSum(int a, int b, int c)
{
   int sum = 0;
    sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if(n == 15 || n == 16)
    {
    return n;
    }
    else
    {
    if(n>=13 && n<=19)
    {return 0;}
        else
        {return n;}
	}
}
"
e91ac808fa2a6eed9594b1e659bd27f0359a6d61,"public int[] frontPiece(int[] nums)
{
    int[] num = new int[2];
    for (int i = 0; i < num.length; i++)
    {
        if (num.length == 1)
        {
    		num[0] = nums[1];
            break;
        }
        else if (num.length == 0)
        {
    		//m[] = nums[];
            break;
        }
            num[i] = nums[i];
    }
    return num;
}
"
c77e617dc383208f26cd19d728d8f2ebb508de2f,"public int[] zeroMax(int[] nums)
{    
    for (int i = 0; i < nums.length; i++)
    {
        if(nums[i] == 0)
        {
            nums[i] = findB(nums, i);
        }      
    }
    return nums;
    
}
public int findB(int[] thing, int pos)
{
    int val = 0;
    for(int i = pos; i < thing.length; pos++)
    {
        int ele = thing[pos];
        if(ele % 2 != 0 && ele > val)
        {
            val = ele;
        }
    }
    return val;
}
    
    "
3c663e6b94b687cf331fb515d865826a263a5a6c,"public int luckySum(int a, int b, int c)
{
    if (a==13)
    {
        return 0;
    }
    else if (b==13)
    {
        return a;
    }
    else if (c==13)
    {
        return a+b;
    }
    else
        return a+b+c;
}
"
e72ea831c9a41938966949bb8bbf1a82e784b73b,"public String repeatEnd(String str, int n)
{
    int i = 0;
    for (i = 0; i < n; i++)
    {
    	if (str.length() - n == 0)
    	{
      		System.out.println(str);
   		}
   		else
    	{
       	return str.substring((str.length() - n), str.length());
    	}
    }
    
}
"
d0e7e4f01d1bd84602edf6ae34c0d764c24c4815,"public int countCode(String str)
{
    int i = 0;
    int time = 0;
    int l = str.length() - 3;
    
    while (i < l)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt( i 			+3 == 'e')
            {
                time++;
                i += 4;
            }
            i++;
            }
            return time;
        
}
"
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
"
34fd7df6f2e77eb2637ca1aab9fa90ece6e50132,"public int greenTicket(int a, int b, int c)
{
    if(a == b && a == c && b == c)
    {
        return 20;
    }
    if(a != b && a != c && b != c)
    {
        return 0;
    }
    else
    {
        return 10;
    }
}
"
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
"
2cb3ac3092429a077f6b081b80f428c6fcc6db12,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length(); i++)
    {
     	if (str.substring(i).startsWith(""co"") && (str.substring(i+2).equals(""e"")))
        {
            count++;
        }
    }
    return count;
}
"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
2c92414c45a814e8e0cb27c230fb07afb2515bab,"public boolean isEverywhere(int[] nums, int val)
{
    int len = nums.length;
    for(int i = 0; i <= len - 1; i++)
    {
        if (nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true; 
}
"
ba32990bd34d6ce4fb0373d5141e5d58803ecbbc,"public int countEvens(int[] nums)
{
    int counteven = 0;
	for(int in = 1; in <= nums.length; in++)
	{
		if(nums[in-1] % 2 == 0)
			counteven++;
	}
	return counteven;
}
"
366826b5974c1b4b5cfb7b396658e18a21ab8ff8,"public int greenTicket(int a, int b, int c)
{
    int lose = 0;
    int smallWin = 10;
    int bigWin = 20;
    int Ticket = 1;
    
    if ((a == b) && (b == c))
    {
        Ticket = bigWin;
    }
    else if ((a == b) || (b == c) || (a == c))
    {
        Ticket = smallWin;
    }
    else
    {
        Ticket = lose;
    }
    return Ticket;
}
"
a69d38f3cf12e6a14454b751528014666fddc16f,"public String mixString(String a, String b)
{
    return a.substring(0, 1) + b.substring(0, 1) + a.substring(1, 2) + b.substring(1, 2) + a.substring(2, 3) + b.substring(2, 3);
}
"
5ba1341ebafb824e10e7b9399e0e073ed0dbb01c,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int k = 0; k < nums.length; k++)
            {
                if (nums[k] == 5)
                {
                    if (k > 0 && nums[k - 1] != 4)
                    {
                    	nums[i+1] = 5;
                        nums[k] = nums[i + 1];
                        
                    }
                    else if(k == 0)
                    {
                    	nums[i + 1] = 5;
                        nums[k] = nums[i + 1];
                    }
                }
            }
        }
    }
    return nums;
}
"
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}"
332035fab0653a2a928a8daf9a5e4b0b360534a3,"public boolean twoTwo(int[] nums)
{
    int q = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums.length == 1)
        {
            return true;
        }
        if (nums[i] == 2)
        {
            if (nums.length == 1)
            {
                return false;
            }
        else if (i == 0)
        {
            if (nums[i + 1] == 2)
            {
                q = q + 0;
            }
            else
            {
                q = q + 100;
            }
        }
        else if (i == nums.length - 1)
        {
            if (nums[i - 1] == 2)
            {
                q += 0;
            }
            else
            {
                q += 100;
            }
        }
        else
        {
            if (nums[i - 1] == 2 || nums[i + 1] == 2)
            {
                q += 0;
            }
            else
            {
                q += 100;
            }
        }
        }
    }
    if ( q >= 100)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
05efe4fab033a50a8b520937511731c3f784ee7b,"public int greenTicket(int a, int b, int c)
{
    if((a != b) && (a !=c) && (b != c)){
        return 0;
    }else if ( a == b || a ==c || b == c){
        return 10;
    }else{
        return 20;
    }
}
"
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
"
9acc78321e1dd670eb79224bfc19ae337b144ee8,"public boolean in1To10(int n, boolean outsideMode)
{
    int outputValue;
    if (n > 1 && n < 10)
    {
        return true;
    }
    else if (n == 1)
    {
        return ""number is equal to 1"";
    }
    else if (n == 10)
    {
        return ""number is equal to 10"";
    }
    else if (n > 10)
    {
        return ""number is greater than 10"";
    }
    else
    {
        return ""number is less than 1"";
    }
		
}
"
056ef8b49a234c3f8ed9871fee2f45f718c2dac2,"public int[] shiftLeft(int[] nums)
{
    if(nums.length >= 2)
	{
		int temp = nums[0];
		for(int i = 0; i < nums.length - 1; i++)
			nums[i] = nums[i+1];
		nums[nums.length-1] = temp;
	}
	return nums;
}
"
a111eed94fcfdad279b2d1dff5e49ac8747f3a08,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    	if (i == 0)
            if (nums[i + 1] != val)
                return false;
    	if (i == nums.length - 1)
            if (nums[nums.length - 1] != val)
                return false;
    	else
            if((num[i -1] & num[i + 1]) != val)
                return false;
    return true;
                
    
}
"
b541e8ab52e5c9893dd464c11684cd592d0b963f,"public String repeatEnd(String str, int n)
{
    StringBuilder strbuild = new StringBuilder(n*n);
    String lastchar = str.substring(str.length()-n);
    for( int x = 0; x < n; x++)
        strbuild.append(lastchar);
    return strbuild.toString();
}
"
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
"
b14099ed715ab7052dbc1a46db6729dbed5c8cec,"public int luckySum(int a, int b, int c)
{
    if(a == 13)
    {
		return 0;
    }
	if(b == 13)
    {
		return a;
    }
	if(c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
1ea042081fff17c6714f67f4e7aa02f99f9374a7,"public boolean has77(int[] nums)
{
    return true;
}
"
2221c6473ecd1d1e01312a5124b6b5b1c3337bba,"public int[] zeroMax(int[] nums)
{
    int length = nums.length;
    for (int i = 0; i < length; i++){
        if ( i == 0){
            int max = 0;
            for (int j = i; j < length; j++){
                if (nums[j] > max && nums[j] % 2 == 1){
                    max = nums[j];
                }
            }
            nums[i] = max;
        }
    }
    return nums;
}"
51f4d30b7a5e0777355231de5c5f654e73e9171e,"public String zipZap(String str)
{
    int x = str.length();
    String answer = """";
    int i = 0;
    for (int i=0; i<x-2; i++) {
        if (str.charAt(i)=='z' &&
            str.charAt(i+2)=='p') {
            answer = answer + ""zp"";
            i = i + 2;
        }
        else
        {
            answer = answer + str.charAt(i);
        }
        
    }
    answer = answer + str.substring(i+1);
    return answer;
}
"
0a9dcd12a12791fe49d782b736769ace72b0d2ed,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else
    {
        if (b == 13)
        {
            return a;
        }
        else
        {
             if (c == 13)
                {
                    int AB = (a + b);
                    return AB;
                }
                else
                {
                    int ABC = (a + b + c);
                    return ABC;
                }
        }
    }
}
"
d5a24ddaa046467eb9ba2d11337a3c379e2c453d,"public int[] fizzArray(int n)
{
    int[] newArray = new int[n];
    
    for (int j = 0; j < n; j++)
    {
        newArray[j] = j;
    }      
    return newArray;
}
"
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
4af3a592f57c04ef8f045d1434d669597c61a5cd,"public boolean twoTwo(int[] nums)
{
    int total = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
        {
			total++;
        }
		else
		{
			if(state == 1)
            {
				return false;
            }
			else
            {
				total = 0;
            }
		}
	}
	return (total != 1);
}
"
f8c8f4efee98304059e93cff4182647b5c714774,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
        return true;
    if ((a + b) = 6 || Math.abs(a - b) == 6)
        return true;
}
"
0f0eebbaffbc1619580def91dcb6324ccb0be818,"public int sum67(int[] nums)
{
    int a = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            while (nums[i] != 7)
            {
                i++;
            }
            i++;
        }
        a = a + nums[i];
    }
    return a;
}
"
32dd496852fbd1fd0581660957050e69b32037b2,"public String withouEnd2(String str) 
{
    if(str.length()==1)
    	return str = """";
    if(str.length()>1)
    	str = str.substring(1,str.length()-1);
    return str;
}
"
87a331d0b690ad01a48575ef537fbbc928271d6f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int x = i + 1; x < nums.length; x++)
            {
                if (nums[i] % 10 == 0 && nums[x] % 10 != 0)
                {
                    nums[x] = nums[i];
                }
            }
        }
    }
    
    return nums;
}
"
e7a1728b4b35dc25b0c00f4e8b76a8ad3a356b29,"public int noTeenSum(int a, int b, int c)
{
	if(a > 12 && a < 20)
    {
     	this.fixTeen(a);  
    }
    if(b> 12 && b < 20)
    {
     	this.fixTeen(b); 
    }
    if(c> 12 && c< 20)
    {
     	this.fixTeen(c); 
    }
}

public int fixTeen(int n)
{
	if (n == 15 || n == 16)
    {
     	n = n;   
    }
    else if (n >= 13 && n <= 19)
    {
     	n = 0;
    }
    return n;
}"
188f902605ba12e6ce54c4c94ee2ba4c09e47859,"public int makeChocolate(int small, int big, int goal)
{
    if (5 * big < goal)
        return goal - big * 5;
    else
        return goal % 5;
}
"
b255d8676b3010bd04f26a9cbb74e062bbfdfd6f,"public String getSandwich(String str)
{
    String bread1 = str.indexOf(String bread);
    
}
"
a9a1ee6f18a4b5dd8b59e0d51fbc951d3af5b18d,"public int sum67(int[] nums)
{
    int sum = 0;
    if (nums.length > 0)
    {
        for (int i = 0; i < nums.length; i++)
        {
         	if(nums[i] == 6)
            {
                nums[i] = 0;
            	for(int j = i; j < nums.length; j++)
                {
                    
                }
            }
            sum = sum + nums[i];
        }
    }
    
	return sum;    
}	
"
d8bedf064da777d9a3974df2b2a9ff9b064ab739,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for(int i = 0; i < n; i++)
        array[i] = i;
              
    return array;
}
"
ebc854c96848af79501a6db0029cbcf275e5e8e5,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend)
    {
    	if(cigars >= 40)
        {
        	return true;
        }
        else 
        {
        	return false;
        }
        
    }
    else
        if(cigars >= 40 && cigars <=60)
        {
        	return true;
        }
    else 
    {
    	return false;
    }
}
"
e4b118195d61469ee9d2cf74256262207d5cdf21,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
     	a = 0;
        b = 0;
        c = 0;
    }
    else if (b ==13)
    {
     	b = 0;
        c = 0;   
    }
    else if (c ==13)
    {
     	c = 0;   
    }
    else
    {
     	a = a;
        b = b;
        c = c;
    }
    int sum = a + b + c;
    return sum;
}
"
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
"
f87b721de5fa4f5ff50d17d9cca6a2ce7875ebf3,"public int[] zeroMax(int[] nums) {

  int max = 0;

   

  for (int i = nums.length-1; i >= 0; i--) {

    if (nums[i] % 2 != 0)

      max = Math.max(max, nums[i]);

    if (nums[i] == 0)

          nums[i] = max;

  }

  return nums;

}

"
cae732ac1a23cff25a0c4c863b9c1ea06f7583dd,"public int sum3(int[] nums)
{
    int sum =0;
    for(int i = 0; i<nums.length; i++)sum+=nums[i];
    return sum;
}
"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
3e87e0381ebeef812946d2a41701556fd2a0fd6c,"public String plusOut(String str, String word)
{
    int len = str.length();
	int wLen = word.length();
	int pos = str.indexOf(word);
	int i = 0;
	StringBuilder stbuild = new StringBuilder(len);
	while(pos != -1)
	{
		while(i < pos)
		{
			stbuild.append('+');
			i++;
		}
		stbuild.append(word);
		i = pos + wLen;
		pos = str.indexOf(word, i);
	}
	for(; i < len; i++)
		stbuild.append('+');
	return stbuild.toString();
}
"
f7cea64c35fff9c653eb2da740aa96f5258d85aa,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    else if (isMorning)
        if (isMom)
            return true;
    	return false;
    else 
        return true;
    
}
"
aec805324751333d41b890c4762949a6415bd278,"public int[] fizzArray(int n)
{
    int[] varLength = new int[n]
    for(int i = 0; i < n; i++)
    {
        varLength[i] = i;
    }
    return varLength;
}
"
30bc0082f1c1181b9eb05c6f942a8528c7f3abe6,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend = true)
    {
        if (cigars >= 40)
        {
            return true;
        }
    }
    else if (cigars > 40 && cigars < 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    return false;
}
"
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
"
f9354edba65c17d85b820982adb1a6165e9d75ba,"public boolean endOther(String a, String b)
{
    String x;
    String y;
    if (a.length() >= b.length())
    {
        x = a.substring(a.length() - b.length());
        y = b;
    }
    else
    {
        x = b.substring(b.length() - a.length());
    	y = a;
    }
    return x.equals(y);
}
"
bf0fb85d68a871de1263a11b4d6bf089714fa3ce,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0 ; nums.length > i; i++)
    {
        if (nums[i] == val || nums[i+1] == val)
        {
            return true;
        }
    }
    return false;
    
}
"
bc907240998877ed0cdcef687a8cbff975f51f40,"public boolean xyzThere(String str)
{
    int occ = str.indexOf(""xyz"");
    if (occ == 0)
    {
        return true;
    }
    else if (occ > 0)
    {
        String per = str.substring(occ - 1, occ);
        if (per.equals("".""))
        {
            return false;
        }
        else
        {
        	return true;
        }
    }
    else
    {
        return false;
    }
    
}
"
2886648a4c66054a872bea56d20f4a59d6557e29,"public String plusOut(String str, String word)
{
    int slen = str.length();
    int wlen = word.length();
    String end = """";
    
    for (int i = 0; i <= slen; i++)
   {
        if (i < slen - wlen)
        {
            String temp = str.substring(i,i+wlen);
			if (temp.equals(word))
            {
                fin += word;
                i += wlen - 1;
            }
        	else{
                fin += ""+"";
            }
       }
       else
       {
			fin += ""+"";
       }
   }
    return fin;
}
"
878153f60f32255ab9fb46186d9853bb5d823f1c,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    
    for(int i = 0; i < n; i++)
        arr[i] = i;
              
    return arr;

}
"
5f47fb8c001a1322e1c2f9dc302a3c4b5c3adef8,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21)
    {
        return a;
    }
    else if (b > a && b <= 21)
    {
        return b;
    }
    else if (a > 21 || b > 21)
    {
        return 0;
    }
    else if (a > b && b > 21)
    {
        return a;
    }
    else if (b > a && a > 21)
    {
        return b;
    }
    return 0;
}
"
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
95e56302fcf76c6d9c1bc9218c2248b693a67402,"public int[] withoutTen(int[] nums)
{
    int newPos = 0;
    int[] array2 = new int[nums.length];
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i]!=10)
        {
            array2[newPos] = nums[i];
        }
    }
    for (int h = j; h < nums.length; h++)
    {
        array2[h] = 0;
    }
    return array2;
}
"
c32e8df18759f85c9ca9cc1ff3051aa396bf5a33,"public boolean evenlySpaced(int a, int b, int c)
{
    int[3] arrInOrder;
    arrInOrder[0] = a;
    arrInOrder[1] = b;
    arrInOrder[2] = c;
    
    int small;
    int med, big;
   /**
    if ((a > b) && (a > c)) // if a is the biggest
   {
		if (b > c)
        {
            big = a;
            med = b;
            small = c;
        }
       else
       {
           
       }
       
   }
   */
}
"
7bbe47ddbd540b9999602f687a555456a4122938,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	while (isBirthday == false)
    {
    	if (speed <= 60)
        {
            return 0;
        }
    	else if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    	else if (speed >= 81)
        {
            return 2;
        }
    }
    while (isBirthday == true)
    {
        if (speed <= 65)
        {
            return 0;
        }
    	else if (speed >= 66 && speed <= 85)
        {
            return 1;
        }
    	else if (speed >= 86)
        {
            return 2;
        }
    }
    return 1;
}"
c24641b9cb8ac258d30f05275fccaed663f01bc8,"public int[] withoutTen(int[] nums)
{
    int t = nums.length;
    int[] answer = new int[t];
  	int j = 0;
 	for (int i = 0; i < t; i++) 
    {
 		if (nums[i] != 10) 
        {
  	        answer[j] = nums[i];
  	        j++;
 	    }
 	}
  
	for(int i = j; i < t; i++) 
    {
 	    answer[i] = 0;
 	}
	return answer;
}
"
01b508a08fa2ffb6f5401249103b3a75a349eb1e,"public boolean xyzThere(String str)
{
	for(int i = 0; i < str.length() - 2; i++)
    {
		if(str.charAt(i) == '.') 
            i++;
		else if(str.substring(i, i+3).equals(""xyz"")) return true;
			return false;
	}
}
"
e786b9c57d6dbb582aa5efe7d1bfcd1abc8977d4,"public int[] fizzArray(int n)
{
    int[] abc = new int[n];
    
    for(int i = 0; i < n; i++)
        abc[i] = i;
              
    return abc;
}
"
f975c769611523b9ff8e0c8e7baa2a5d2b94373c,"public boolean twoTwo(int[] nums)
{
    int i;
    for (i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i+1] != 2)
            {
                return false;
            }
            i = i +2;
        }
    }
    if (nums.length >= 3)
    {
	if (nums[nums.length - 1] == 2 && nums[nums.length - 2] != 2)
        {
            return false;
        }
    }
    else
    return true;
}
"
b244a090f56a7586928ad1c22e9caef8aab4187b,"public boolean isEverywhere(int[] nums, int val)
{
    for ( int i = 0; i < nums.length -1; i +=1) {
        if (nums.[i] == val || nums[i+1] == val) {
            return true;
        }
        else {
            return false;
        }
    }
}
"
127feb26fc2d62d743280494f821a0d30df59e0b,"public int[] tenRun(int[] nums)
{
    int peen = 1;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int x = i + 1; x < nums.length; x++)
            {
                if (nums[i] % 10 == 0 && nums[x] % 10 != 0)
                {
                    nums[x] = nums[i];
                }
                else if (nums[i] % 10 == 0 && nums[x] % 10 == 0)
                {
                    
                    i = i;
                    break;
                }
            }
        }
    }
    
    return nums;
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
36a2056080f99da3edd330808d17128552645934,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
        return true;
    if(a + b == 6 || Math.abs(a-b) == 6)
        return true;
    return false;
}
"
7e5f5533672cd30b432bd7a9afc44c84a6ef96eb,"public String without2(String str) 
{
    length(str);
}
"
fbe052dab288d66a101727d96cfcdb10b2a6be16,"public String plusOut(String str, String word)
{
    int length = str.length();
    String fancy = """";
    
    for (int i = 0; i < length; i++)
    {
        for (int n = 0; n < length; n++)
        {
            if (str.substring(i, i + n) == word)
            {
                fancy = str.substring(i, i + n);
            }
        }
    }
    return fancy;
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
24d47a65834fd02d0c753208bf0349095c36915f,"public boolean sameEnds(int[] nums, int n)
{
    int len = string.length();
  	String fin = """";
  	String tmp = """";

  	for (int i = 0; i < len; i++) {
    	tmp += string.charAt(i);
    	int tmplen = tmp.length();
    	if (i < len / 2 && tmp.equals(string.substring(len-	tmplen,len))){
      		fin = tmp;
        }
  	}
  	return fin;

}
"
62c62c2b35bd444c54959c776279bfb352a08834,"public int dateFashion(int you, int date)
{
    if (you >= 8) || (date >= 8))
    {
        return 2;
    }
    else if (you <= 2) || (date <= 2))
    {
        return 0;
    }
    else
    {
        return 1;
    }
    
}
"
7bad4cf90628d11d44a239cea13fc6c5abd08410,"public String mixString(String a, String b)
{
    String c = a.substring(2, a.length());
    String d = b.substring(2, b.length());
    String result = """"+ a.charAt(0) + b.charAt(0) + a.charAt(1) +b.charAt(1) +c +d;
    return result;
}
"
2554504cf73dcc772aa6c40d5e1c117584eceb44,"public int sum13(int[] nums)
{
    int total = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i > 0)
        {
            if (nums[i] != 13 && nums[i - 1] != 13)
            {
                total += nums[i];
            }
        }
        else
        {
            if (nums[i] != 13)
            {
                total += nums[i];
            }
        }
    }
    
    return total;
}
"
240309d99ae988531211ed22a0e11fa8a51b1742,"public int chance; 

public int dateFashion(int you, int date)
{
    if ((you >= 8 && date >= 2) || (date >= 8 && you >= 2))
    {
        chance = 2; 
    }
    else if (you <= 2 || date <= 2)
    {
        chance = 0;
    }
    else if (you >= 2 && 
    {
        chance = 1; 
    }
    return chance; 
}
"
07f171482a0ce9c894517b15a1dc19c7cce2dfe6,"public int dateFashion(int you, int date)
{
    if (you >= 8 && you > 2 || date >= 8 && date > 2)
        return 2;
    if (you <= 2 || date <= 2)
        return 0;
    else
        return 1;
}
"
2a2ba63daf77f4d635a5ec7d8a9ee2560fb40c96,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int fixTeen(int n)
{
    if (n > 12 && n < 20)
    {
        if (n != 15 && n != 16)
        {
            n = n;
        }
        else
        {
            n = 0;
        }
    }
    else
    {
        n = n;
    }
    
    return n;
}
"
5ae4f4df981ecd7a8c7c1620b207298fd11eb26f,"public int blackjack(int a, int b)
{
    if (a > 0 && b > 0)
    {
     	if (b > 21 && a <= 21)
        {
         	return a;   
        }
        else if (a > b && a <= 21)
        {
         	return a;  
        }
        else if (a > 21 && b <= 21)
        {
         	return b;   
        }
        else if (b > a && b <= 21)
        {
        	return b;   
        }
    }
    return 0;
}
"
49f557d45429967842ad7c43920f4ecff3b8f64b,"public int[] seriesUp(int n)
{
    int length = n * (n + 1) / 2;
    int[] newArray = new int[length];
    int counter = 0;
    int counter2 = 0;
	while (counter < length)
    {
        counter2 = counter;
        for (int i = 1; i <= counter + 1; i++)
        {
            newArray[counter2] = i;
            counter2++;
        }
        counter = counter2 + 1;
    }
    return newArray;
}
"
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
"
84dfd0d1e5c431468600f396b066dbde235e2bb8,"public int[] shiftLeft(int[] nums)
{
    int[] newList = new int[nums.length];
    return newList;
}
"
3c692e7ac55420dacafe9efda24a9944431ed390,"public String mixString(String a, String b)
{
    String newst = """";
    int x = 0;
    String y = """";
    if (a.length() > b.length())
    {
        x = b.length()-1;
     	y = y + a.substring(a.length() - b.length()-1);
    }
    if (b.length() > a.length())
    {
        x = a.length()-1;
        y = y+ b.substring(b.length() - a.length()-1);
    }
    
    else
    {
        x = a.length()-1;
    }
    for (int i = 0; i < x; i++)
    {
        newst = newst+a.charAt(i) + b.charAt(i);
    }
    return newst+y;
}
"
3a90d243c4b2b74e027d67a11c899e72793a4bc8,"public boolean canBalance(int[] nums)
{
    int sumLeft = 0;
    int sumRight = 0;
    for (int i = 0; i < nums.length; i++){
        for (int n = 0; n < i; n++){
            sumLeft += nums[n];
        }
        for (int m = i; m < nums.length; m++){
            sumRight+= nums[m];
        }
        if (sumLeft == sumRight)
            return true;
    }
    return false;
    
}
"
de956da64587539d52ec580c0b91737da0120945,"public int sortaSum(int a, int b)
{
    if ( a + b >= 10 && a + b <= 19 )
   return 20;
  else return ( a + b );
}
"
7771b0fe7b472fa3dd018ccf138b317743bc74fc,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 0)
        return 0;
    else if (speed <= 80)
        return 1;
    else
        return 2;
    if (isBirthday)
        speed -= 5;
}
"
6ab6c1ba53a6425448c2bc16832e926986cd438a,"public int makeChocolate(int small, int big, int goal)
{
   int rem = goal % 5;
   if (small + (5 * big) < goal)
   {
       return -1;
   }
  else if (small + (5 * big) > goal)
  {
      return -1;
  }
  else
  {
      return small * rem;
  }
}
"
9f7cabb358a67a54ce58c64d4a9845fcc682c8e5,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if (speed <= 60) {
        return 0;
    }
        else if (speed > 60 && speed <81) {
            return 1;
        }
            else {
                return 2;
        }
    if (isBirthday);
    	 if (speed <= 65) {
             return 0;
         }
    else if (speed > 65 && speed < 86) {
        return 1;
    }
    else {
        return 2;
    }
}
       "
4a39d51fd8a111f41784e3dd7601b93751b512ff,"public int[] tenRun(int[] nums)
{
    //int current10 = 0; 
    
    for(int i = 0 ; i < nums.length ; i ++)   
    {
        int current10=nums[i]; 
        if(nums[i]%10 == 0)
        {
         	current10 = nums[i];    
        }
        nums[i]= current10; 
    }
    return nums; 
}
"
e38f8af0cfcc8d689c1d5bfcb028da71a606b6f1,"public int loneSum(int a, int b, int c)
{
    if (a == b )
    {
        a = 0;
        b = 0;
    }
    if (b == c)
    {
        b = 0;
        c = 0;
    }         
    if (a == c)
    {
        if ( a == b)
        {
            b = 0;
        }
        a = 0;
        c = 0;
    }

    return a + b + c;
}
"
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
"
936b50618ad1650515995207832b0fd3d10fd721,"public boolean isEverywhere(int[] nums, int val)
{
    if (nums.length < 2)
    {
        return true;
    }
    
    for(int i = 0; i < nums.length; i++)
    {
        if (i > 0)
        {
            if (nums[i - 1] != val
                && nums [i] != val)
            {
                return false;
            }
        }
        else if (nums[i + 1] != val
            	 && nums [i] != val)
        {
            return false;
        }
    }
    
    return true;
}
"
e39a25aaad84b1961772be00d43af043549c8980,"public boolean twoTwo(int[] nums)
{
    boolean two = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i + 1] == 2)
        {
            two = true;
        }
    }
    return two;
}
"
c65c6b3814047b3aaef3794d06b2e294c8c889f4,"public String repeatEnd(String str, int n)
{
    StringBuilder stbuild = new StringBuilder(n*n);
    String last = str.substring(str.length() - n);
    for (int i = 0; i < n; i++)
    {
        stbuild.append(last);
    }
    return stbuild.toString();
}
"
d696f925198e9f600badc1fa055df02c8e57f077,"public int[] frontPiece(int[] nums)
{
    int[] a = new int[2];
    for (int i = 0; i < nums.length && i < 2;i++)
    {
    	a[i] = nums[i];
    }
    return a;
}
"
945ef48058801e5afd9640258a98493af8ac9634,"public boolean has77(int[] nums)
{
    boolean seven = false;
    for (int i = 0; i <nums.length; i++)
    {
     if (nums[i] == 7 && nums[i + 1] == 7 && i <= nums.length - 1)
     {
         seven = true;
     }
     else if (nums[i] == 7 && nums[i + 2] == 7 && i <= nums.length - 2)
     {
      	seven = true;   
     }
        else
        {
            seven = false;
        }
    }
    
    return seven;
}
"
e52d92a83bc1c5aa322074e70b9b653eff0675cf,"public int sum67(int[] nums)
{
    int sum = 0;
	boolean sixMode = false;
	for(int i = 0; i < nums.length; i++)
	{
		if(sixMode)
		{
			if(nums[i] == 7)
				sixMode = false;
		}
		else if(nums[i] == 6)
			sixMode = true;
		else
			sum += nums[i];
	}
	return sum;
    
}
"
a53827ae6f8593b92d7c9f0fea1847acc9435ac4,"public String alarmClock(int day, boolean vacation)
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	return 7;
    	}
    	else if (day=0 || day=6)
    	{
    	    return 10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	return 10;
    	}
    	else if (day=0 || day=6)
    	{
    	    return off;
    	}
    }
    
}
"
cf39b10c8e5d8d029ed41fb946954b0d675f2f29,"public int roundSum(int a, int b, int c)
{
    int sum=0;
sum=sum+round10(a);

sum=sum+round10(b);

sum=sum+round10(c);
return sum;
}

public int round10(int num)
{
    if(num%10 >4)
return (((num/10)+1)*10);
else return ((num/10)*10);
}
"
