ID,Code,Prompt
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
",
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",
258ce4c676fe387e4fd5b092528340d518a47616,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
       if (alarmClock >=1 && alarmClock <= 5)
       {
           ""10:00""
       }
       else
       {
           ""off""
       }
    }
    else if 
    {
         if (alarmClock >=1 && alarmClock <= 5)
       {
           ""7:00""
       }
       else
       {
           ""10:00""
       }
    }
       
       
        
}
",
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
",
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",
0302301efcb83cdd2541bfef41b35ffbf043fe24,"public int[] zeroMax(int[] nums)
{
	int max;
    
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 0)
		{
			max = 0;
            
			for(int j = i + 1; j < nums.length; j++)
			{
				if(nums[j] > max && nums[j] % 2 == 1)
                {
					max = nums[j];
                }
			}
			if(max != 0)
            {
				nums[i] = max;
            }
		}
	}
    
	return nums;   
}",
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
9ab9adfbd148ab36fea8046986a42317f6b53a8e,"public String plusOut(String str, String word)
{
      String output = """";
      int i = 0 ;

      while(i < str.length() ) 
      {
         if (str.substring(i).startsWith(word)) 
         {
            output = output + word;
            i = i + word.length();
         } 
         else 
         {
            result = result + ""+"" ;
            i++;
         }
      }

      return output;
}",
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
",
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
",
372944027251b586f7cdc180fc986b574988b126,"public boolean bobThere(String str)
{
    return true;
}
",
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
",
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",
8536c5f768b1adb326e2c34c566a310f311e86dc,"public boolean xyzThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.CharAt(i+1) == 'y' 
            && str.CharAt(i+2) == 'z')
        {
            if (i == 0 || str.CharAt(i-1) != '.')
                return true; 
        }
    }
    return false; 
}
",
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
",
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",
8ac25102baee6fadeabcfd2e101ad3f1325bb218,"public String alarmClock(int day, boolean vacation)
{
    if vacation == true
    {
        if day == 0 || 6
        {
            return ""off"";
        }
        else 
            return ""10:00"";
    }
    else 
        if day == 0 || 6
        {
            return ""10:00"";
        }
    	else 
            return ""7:00"";
            
    
}
",
c0e74847daded5db86a45f95da024ec482c4f9a4,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19}
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
",
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
",
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",
7bbe47ddbd540b9999602f687a555456a4122938,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	while (isBirthday == false)
    {
    	if (speed <= 60)
        {
            return 0;
        }
    	else if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    	else if (speed >= 81)
        {
            return 2;
        }
    }
    while (isBirthday == true)
    {
        if (speed <= 65)
        {
            return 0;
        }
    	else if (speed >= 66 && speed <= 85)
        {
            return 1;
        }
    	else if (speed >= 86)
        {
            return 2;
        }
    }
    return 1;
}",
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",
07f6671fb9cba5bb32a3128d222b579891bf6178,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( nums[i] == 7)
        {
            return true;
        }
        else if (nums[i + 1] == 7 && nums[i - 1] == 7)
        {
            return true;
        } 
    }
    return false;
}
",
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
",
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
",
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
",
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",
c77723bd709b08d6e00161ce3c6ef305a61d69c9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length()-2; i++) {
    if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b') {
      return true;
    }
  }
  return false;
}
",
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
",
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",
8ff2bbf7b0b8b3388076f7accf0194eb817a8d98,"public String zipZap(String str)
{
    char strChar;
    strChar = char.valueOf(str)
}
",
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",
c559438f06240059fea5a78e3e17776de821361c,"public boolean xyzThere(String str)
{
    if (str.indexOf(""xyz"") != -1)
    {
     	if (str.indexOf("".xyz"") + 1 == str.indexOf(""xyz""))
        {
         	return true;   
        }
    }
            
    return false;
}
",
cf4ff5dda73a278e4bf2898a9f2b28b9afa0a194,"public boolean has77(int[] nums)
{
    for	(int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == 7 && (nums[i+1] == 7 || nums[i+2] == 7))
        {
            return true;
        }
    }
    if (nums[nums.length - 3] == 7 && (nums[nums.length - 3] == 7 ||
                                      nums[nums.length - 1] == 7))
    {
        return true;
    }
    if (nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7)
    {
        return true;
    }
        return false;
}
",
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
",
9da10eb0a36c1f2a83adb2a9e709bf948f23038e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if (a + b == 6)
    {
        return true;
    }
    else if (Math.abs(a-b) == 6)
    {
        return true;
    }
}
",
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
a24dfce9bb2b97aec0c2a859f3855e3285de4fff,"public int[] seriesUp(int n)
{
    
    int[] array = new int[n * (n + 1) / 2];
    
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i; j++)
        {
            array[(i - 1) * 2] = j;
        }
    }
    
    return array;
}
",
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
",
3e3f92b5255a315bea19b9efbd3c14567e082ae2,"public String atFirst(String str)
{
    if (length(str) == 0)
    {
        return ""@@"";
    }
    if (str.length(str) == 1)
    {
        return str + ""@"";
    }
    else
    {
        return str.substring(0,2);
    }
    
}
",
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",
e444710aa658e2dde4799f8965284cd20bc98f6a,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
        int even = 0;
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;
}
",
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",
af72162e8ac5b84ac915a239ad3487e01803ebce,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    while (isBirthday != true)
    {
    	if (speed <= 60)
    	{
        	return int 0;
    	}
    	else if (speed > 60 && speed <= 80)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
    while (isBirthday != false)
    {
       if (speed <= 65)
    	{
        	return 0;
    	}
    	else if (speed > 65 && speed <= 85)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
}",
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
03ae950e7440ff1b5b100af214ca4754168a2ff2,"public int makeChocolate(int small, int big, int goal)
{
    if ( goal <= 5 * big)
    {
       int remainder = goal - 5*big;
    }
    else
    {
        remainder = goal % 5;
    }
    if (remainder<= small)
    {
        return remainder;
    }
    else 
    {
        return -1;
    }
    
    
}
",
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
",
e66af3fd10029e3b0eddec751863c4988c7a3b9a,"public boolean sameEnds(int[] nums, int n)
{
    int num = 0;
    for (int i = n; i > 0 n;i--)
    {
        if (nums[i] == nums[nums.length - i + 1])
        {
            num = num + 1;
        }    
    }
    if (num == n)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",
f5a21d0c1e254db37e3447625ce5826afe21b435,"public boolean bobThere(String str)
{
    for(int i=0; i<str.length()-3; i++)
    {
        if(str.charAt(i)=='b')
        {
            if(str.charAt(i+2) == 'b')
                return true;
        }
    }
    return false;
}
",
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
",
1e1c5de578989095aae1aa204ec49af769839064,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (1 <= day <= 5)
        {
            return(""10:00"")
        }
        else
        {
            return(""off"")
        }
    }
    else
    {
        if (1 <= day <= 5)
        {
            return(""7:00"")
        }
        else
        {
            return(""10:00"")
        }
    }
}
",
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
",
d5a24ddaa046467eb9ba2d11337a3c379e2c453d,"public int[] fizzArray(int n)
{
    int[] newArray = new int[n];
    
    for (int j = 0; j < n; j++)
    {
        newArray[j] = j;
    }      
    return newArray;
}
",
f055965f9ae32739c7b92d6b5ecbca90565fcdcd,"public String without2(String str) 
{
    int len = str.length();
    if (str(0) == str(len - 2) && str(1) == str(len - 1))
    {
        String sss = null;
        sss.append(str,2,len-1);
            return sss;
    }
    else
    {
        return str;
    }
}
",
5f0de396365017b80185b81d0904cd472b4f28f8,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if ((a == b && b != c) || (a == c && a != b) || (b == c && b != a))
    {
       return 10;
    }
    else 
    {
        return 0;
    }
}
",
87b2b1811ad58d7a1fff515864427654134ed8fa,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            if (j == 0)
            {
            	while (nums[j] != 5)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
            
            else
            {
                while (nums[j] != 5 && nums[j - 1] != 4 && j < nums.length)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
        }
    }
    return nums;
}",
c95c93f8d1fa224a7fbbc0fb3c04049e5934f3d4,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            return true;
        }
    }
    return false;
    
}
",
e87542225324deb36fc5891405e6401d53aab2a3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed -= 5;
    }
    if (speed=<60)
    {
        return 0;
    }
    if (speed>=61 && speed<= 80)
    {
        return 1;
    }
    if (speed>=81)
    {
        return 2;
    }
}
",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
ded617ac228599b7e04f7d65099c42c4528958d6,"public boolean bobThere(String str)
{
     
    
    if (str.length() >= 3 && str.indexOf(""b"") != str.lastIndexOf(""b"") &&
        str.lastIndexOf(""b"") - str.indexOf(""b"") == 2)
    {     
   	if (str.indexOf(""b"") + 2 == str.lastIndexOf(""b""))
        return true;
    
    else if (str.substring(str.lastIndexOf(""b"") -2, str.lastIndexOf(""b"")-1).equals(""b""))
        return true;
 	else 
        return false;
    }
    else 
        return false;
    
}
",
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",
5df1dd8a44fb303694ec9a03ed2a5d4231f1bad4,"public String[] fizzBuzz(int start, int end)
{
    String[] output = new String[end - 1];
    int j = 0;
    for(int i = start; i < end;i++)
    {
        if (i % 3 == 0 && i % 5 == 0)
        {
            output[j] = ""FizzBuzz"";
            j++;
        ]
        else if (i % 3 == 0)
        {
            output[j] = ""Fizz"";
            j++;
        }
        else if (i % 5 == 0)
        {
            output[j] = ""Buzz"";
            j++;
        }
        else
        {
        	output[j] = String.valueOf(i);
        	j++;
        }
    }
    return output;
}
",
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
2efc3b1d0acaa60b452bf611f88e4f3873fd00aa,"public boolean isEverywhere(int[] nums, int val)
{
    int b = 0;
    for (int i = 1; i < nums.length - 1; i++) {
        if (nums[i] == val || nums[i-1] == val ||
            nums[i+1] == val) {
            	b++;
        }
    }
    return b == nums.length - 2;
}
",
8bf0c02326a8dece6634c3b907e8da6aa6c7a3cf,"public int countCode(String str)
{
    if (str.length() < 4)
        return 0;
    
    if (str.indexOf(""c"") == -1)
        return 0;
    
    int total = 0;
    
    for (int i = str.indexOf(""c""); i < str.length() - 3; i++)
    {
     	   if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i+3) == 'e')
           {
            	total = total + 1;	   
           }
    }
    return total;
}
",
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",
0c472f05e792f9faa897d48e61dc3be1f370d3e3,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for(int i = 0; i< nums.length; i++)
    {
        if(i+1 < nums.length)
        {
            if(nums[i] == nums[i+1])
            {
                clumps++;
            }
        }
    }
    return clumps;
}
",
4cc916649df329cb2108d1f68b228a173f91b30d,"public int makeChocolate(int small, int big, int goal)
{
    if (small + (5*big) < goal)
    {
        return -1;
    }
    else
    {
        if ((goal / 5) <= big)
        {
            int r = goal % 5;
            if (r <= small)
            {
                return small;
            }
            else
            {
                return -1;
            }
        }
        else
        {
            if ((goal - (5 * big)) <= small)
            {
                return goal - (5 * big);
            }
            else
            {
                return -1;
            }
        }
    }
    
    
}
",
9222afd237f2a153dec01f15809e88ec81bac994,"public String plusOut(String str, String word)
{
    String trivialEnd = """";
    int n = 0;
    
    while (n <= str.length())
    {
       if (str.substring(n).startsWith(word))
       {
           trivialEnd += word;
           n += word;
           
       }
        else 
        {
            trivialEnd += '+';
            n++
        }   
    }   
    return trivialEnd;
}
",
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",
d822cf12d38ea28fe825ff4fc14fdc94e6719f05,"public boolean bobThere(String str)
{
    int i = 0;
    char[] CharArray = str.toCharArray();
    for(char cha : CharArray){
    	if (cha == 'b'){
        	if (str[i + 2] == 'b'){
            	return true;
            }
        }
     	i++;
    }
    return false;
}
",
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
",
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",
7456c11888628de105891f3f5bc262ecd54ad7d3,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        if (day == 0 || day == 6)
        {
            return ""off""            
        }
    }
    else
        if (day > 0 && day < 6)
        {
            return ""7:00"";
        }
        if (day == 0 || day == 6)
        {
            return ""10:00""            
        }
    
}
",
907136eba01f60c88adffb16041850d5038ac56a,"public int countClumps(int[] nums)
{
	int count = 0;
    for(int i = 0; i < nums.length - 1; i++)
    {
        if(nums[i] == nums[i + 1])
        {
         	count = count + 1;   
        }
    }
   	return count;     
}
",
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
",
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",
f69e8dd43d667d277a71e8afa47bc128fe9fec54,"public int[] shiftLeft(int[] nums)
{
    if (nums.equals({})){
        return null;
    }
    int[] left = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++){
        left[i] = nums[i+1];
    }
    left[nums.length - 1] = nums[0];
    return left;
}
",
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",
76d327977c3b6df3e9ab9612b5ea8123306e3035,"public int sum13(int[] nums)
{
    int total = 0;
    if (nums != null) {
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 13) {
                if (nums[i] != 0 && nums[i-1] != 13) {
                	total = total + nums[i];
                }
            }
        }
        return total;
    }
    return 0;
}
",
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
",
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",
8faf14f1204c6304c1a1562a50964e420ce74fe5,"public String without2(String str) 
{
    if (str.length() < 2)
        return str;
    else if (str.charAt(0) == str.charAt(str.length() -2)) && str.charAt(1) == str.charAt(str.length() -1))
        str = str.substring(2, str.length());
    	return str;
    else
         return str.
}
",
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",
9f98cd5893ed8711953832332cb9e68381d2d182,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str.substring(str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
",
7991e5a91ee75b2ca8290f4fbbd9dee8ea1ad8dc,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
    }
    return nums;
}
",
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
",
4f020dcb2ebec419aa94d431533df15542e537ec,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
    return false;
}
",
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
",
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
dc3378fef360ec4c5e4c0ddeaace01619067c129,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (is_weekend = true)
    {
        if cigars >= 40:
        {
            return True
        }
    }
    else if (cigars >= 40 && cigars <= 60)
    {
        return True
    }
    else
    {
        return False
    }
}
",
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",
51d726f3ba7d0bdf6df41f275be7d3e5ae0b21ed,"public String getSandwich(String str)
{
    int firstBread = -1;
    int lastBread = -1;
    for (int i = 0; i < str.length() - 5; i++)
    {
        if (str.substring(i, i+5).equals(""bread""))
        {
            firstBread = i;
            i = str.length();
        }
    }
    for (int j = str.length() - 5; j > 0; j--)
    {
        if (str.substring(j, j+5).equals(""bread""))
        {
            lastBread = j;
            j = 0;
        }
    }
    if(firstBread != -1 && lastBread != -1 && firstBread != lastBread)
        return str.substring(firstBread + 5, lastBread);
    return """";
}
",
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
",
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
",
54e8d733e91a15a740f7a7e802894add4c55a348,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
        {
			count++;
        }
		else
		{
			if(count == 1)
            {
				return false;
            }
			else
            {
				count = 0;
            }
		}
	}
	return (count != 1);
}
",
462c32a961f9e37900f45d8ce5b1817ecd8a2c74,"public int noTicket(0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
",
75d0dc362a4c31d014837d1a8c1fe16ca29a92fa,"public boolean xyBalance(String str)
{
    int length = str.length() - 1;
    char character;
    for (int i = length; i >= 0; i--)
    {
        character = str.charAt(i);
        if(character == 'x')
        {
            return false;
        }
        else if(character == 'y')
        {
            return true;
        }
    }
    return true;
}
",
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",
033c470bc2ca011829feb02b4e4446a50e195e06,"public String alarmClock(int day, boolean vacation)
{
    if ((day == 6 || day == 0) && vacation)
    {
        return ""off"";
    }
    else if ((day != 6 || day != 0) && vacation)
    {
        return ""10:00"";
    }
    else if ((day == 0 && day <= 5) && !vacation)
    {
        return ""7:00"";
    }
    else if ((day == 6 || day == 0) && !vacation)
    {
    	return ""10:00"";
    }
    else
    {
    	return """";
    }
    
}
",
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
",
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",
414ebd6686fcd084388021a1e851c521dccfe7e8,"public int[] frontPiece(int[] nums)
{
    int[] newArray = new int[2];
    if (nums.size() >= 2) {
    	newArray.add(nums[0]);
        newArray.add(nums[1]);
        return newArray;
    }
    return nums;
}
",
c0bcafd61ce598040aa977b280d46011559cb4c7,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true;
    for( int i = 0; i <= nums.length-2; i++)
    {
        if( nums [i] != val && nums[i+1] != val)
            result = false;
    }
    return result;
}
    
}
",
c0f5b70b603edfb55cea6f3a939df372d0d07201,"public int makeChocolate(int small, int big, int goal)
{
    if (goal >= 5 && (goal / 5) >= big && (goal / 5 )
        - small > 0)
        return goal - big * 5; 
    else if (goal / 5 < big ) 
        return goal % 5;
    else 
        return -1;
}
",
a24dfce9bb2b97aec0c2a859f3855e3285de4fff,"public int[] seriesUp(int n)
{
    
    int[] array = new int[n * (n + 1) / 2];
    
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i; j++)
        {
            array[(i - 1) * 2] = j;
        }
    }
    
    return array;
}
",
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
",
a5ef4e9ae777060ed56015c4182bbe5b63e80d69,"public boolean evenlySpaced(int a, int b, int c)
{
    return (a == b && b ==c);
    return ((Math.abs(a-b) == Math.abs(b-c)) || (Math.abs(a-c) == Math.abs(a-b)) || (Math.abs(c-a) == Math.abs(b-c)));    
}
",
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",
cf1dbff19a0df81efa6a08b7ef7316b1f5d9939d,"public String zipZap(String str)
{
    String s = """";
    String diff = "" "" + str + "" "";
    for (int i = 1; i < diff.length()-1; i++) {
        if (diff.charAt(i-1) != 'z' &&
                diff.charAt(i+1) != 'p') {
            s += diff.charAt(i);
        }
    }
    return s;
}
",
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",
c2b5233c69ac3f268687caee60f7f68deec9a002,"public String zipZap(String str)
{
    String original = str;
boolean found = false;
if(str.length() == 3) {
if(Character.toString(str.charAt(0)).equals(""z"") && (Character.toString(str.charAt(2)).equals(""p""))) {
return ""zp"";
}
} else if(str.length() < 3) {
return str;
}
 
for(int i = 0; i + 3 < str.length(); i++) {
if(Character.toString(str.charAt(i)).equals(""z"") && Character.toString(str.charAt(i + 2)).equals(""p"")) {
str = str.substring(0, i) + Character.toString(str.charAt(i)) + Character.toString(str.charAt(i + 2)) + str.substring(i + 3, str.length());
found = true;
} else {
}
}
 
if(Character.toString(str.charAt(str.length() - 3)).equals(""z"") && Character.toString(str.charAt(str.length() - 1)).equals(""p"")) {
return str = str.substring(0, str.length() - 3) + Character.toString(str.charAt(str.length() - 3)) + Character.toString(str.charAt(str.length() - 1));
}
 
if(found) {
return str;
} else {
return original;
}
}
",
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",
55d82777253a00d8ba398425451c87f2ce6bf43d,"public boolean xyBalance(String str)
{
	    
    for (int i = 0; i < str.length(); i++)
    {
        if (str.charAt(i) == 'x')
        {
            for (int j = 0; j < str.length(); j++)
            {
                if((i+j) < str.length())
                {
                	if((str.charAt(i+j) == 'y'))
	                {
						for (int k = 0; k < str.length(); k++)
                        {
                        	if((k+i+j) < str.length())
                            {
                            	if (str.charAt(k+i+j) == 'x')
                                {
                                	return false;
                                }
                                else if (str.charAt(str.length()-1) == 'y')
                                {
                                	return true;
                                }
                            }                            
                        }
                        return true;
        	        }

                }
            }
        }        
    }
    for (int z = 0; z < str.length(); z++)
    {
    	if (str.charAt(z) != 'x')
        {
        	for (int q = 0; q < str.length(); q++)
            {
            	if ((q+z) < str.length() && str.charAt(q+z) == 'x')
                {
                	return false;
                }
            }
        }
    }
    return false;
}
",
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
",
e9684c37300ad2ff0907d6d517e96656ca70ab9b,"public boolean isEverywhere(int[] nums, int val)
{
   for(int i = 0; i < nums.length - 1; i++) {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
                
return true; 
}
",
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}",
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
",
803c3b7ab2f6984a216901319f02c8549f93ff24,"public String getSandwich(String str)
{
    int length = str.length();
    if ( str.startsWith(""bread"") && str.endsWith(""bread"") )
    {
        return str.(5, (str.length - 5));
    }
    else
    {
        return """"
    }
}
",
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",
99b9efd5a3ff3c0a87317e8d345a47ce902c6b97,"public boolean has77(int[] nums)
{
    for(int i = 0; i < nums.length - 1; i++)
  	{
  		if(nums[i] == 7)
  		{
			if(nums[i+1] == 7)
            {
				return true;
            }
			else if(i < nums.length - 2 && nums[i+2] == 7)
            {
				return true;
            }
		}
	}
	return false;
}
",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
35dde7794b6fddbfa24173cdc0b55b2393660120,"public int makeChocolate(int small, int big, int goal)
{
    int pack = goal % 5;
    if (small + (big*5) < goal)
    {
        return -1;
    }
    else if (pack <= small && goal > big*5 > 4)
    {
        return pack + 5;
    }
    else if (pack <= small)
    {
        return pack;
    }
    else 
    {
        return -1;
    }
}
",
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",
7a311480e1038e58bd263cd3dd91b77fce57edfa,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}",
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
",
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
4f020dcb2ebec419aa94d431533df15542e537ec,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
    return false;
}
",
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
",
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
",
7991e5a91ee75b2ca8290f4fbbd9dee8ea1ad8dc,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
    }
    return nums;
}
",
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
",
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
",
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
",
ce8faf0b0976ddb82152e029b4e00668a05ed30f,"public String without2(String str) 
{
    int l = str.length();
    if (l <= 1)
    {
        return str;
    }
    else if (l == 2)
    {
        return """";
    }
    else
    {
        if (str.substring(0, 2) == str.substring(l - 2, l))
        {
            return str.substring(0, 2) + "" == "" + str.substring(l - 2, l);
        }
        else
        {
            return str.substring(0, 2 + "" != "" + str.substring(l - 2, l);
        }
    }
}
",
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
",
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",
8486d888511b0c88a6cdd719c0976a881dec165a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday) {
        if(speed <= 65) {
            return 0;
        } else if(66 <= speed && speed <= 85) {
            return 1;
        } else if(86 <=  speed) {
            return 2;
        }
    }
                                        
    if(speed <= 60) {
        return 0;
    } else if(61 <= speed && speed <= 80) {
        return 1;
    } else {
        return 2;
    }
}
",
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
",
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
",
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",
4a9806e5d979032eadab4c8d23dec29284441f09,"public int greenTicket(int a, int b, int c)
{	
   	int result = 10;
    if (a != b && b != c && a != c)
    {    
        result = 0;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    return result;
}
",
e5e657c2181fcc98486e3cc0d5d3eefe6b267e6c,"public boolean isEverywhere(int[] nums, int val)
{
    
    int totalz = nums.length - 1;
    int counter = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {        
		if (nums[i] == val || nums[i+1] == val)
        {
            counter = counter + 1;
        }
        if (1 > nums.length)
        {
            return true;
        }
    }
    
    return (counter == totalz);
    
}
",
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
",
01dada3eb82d5f59744af5d29ff6f78ae6dbe6ba,"public boolean has77(int[] nums)
{
    for(int i = 0; i < nums.length - 1; i++)
  {
  	if(nums[i] == 7)
  	{
			if(nums[i+1] == 7)
            {
				return true;
            }
			else if(i < nums.length - 2 && nums[i+2] == 7)
            {
				return true;
            }
		}
	}
	return false;
}
",
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
739598df6f10e1b41997fbbce33f2e2bf0fd995e,"public boolean has77(int[] nums)
{
    int x = nums.length;
    for (int i = 0; i < x; i++)
    {
        if (i < x - 1 && nums.[i] == 7 && nums.[i + 1] == 7)
        {
            return true;
        }
        if (i < x - 2 && nums.[i] == 7 && nums.[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
",
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
",
dc20b50f1f6fc266d80c9cceb3e26ca923d1b02f,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
    //return nums;
   int start = nums[0];
    for (int i = 0; i < nums.length; i++)
    {
     	int j = 1;
        nums[i] = nums[j];
        j++;
        //nums[i] = nums[i + 1];
        /*if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }*/
              	
    }
    
    
    return nums;   
}
",
d208b89a96d191ff7b56b1ff4cf0a1d7c5bab816,"public int sum67(int[] nums)
{
    int sum = 0;
    
    for(int i = 0 ; i < num.size() ; i++)
    {
     	if(nums[i]==6)
        {
         	while(nums[i]!=7)
            {
             	i++; 
            }
        }
        sum += nums[i]; 
    }
    
    return sum; 
}
",
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
",
6f412fb97dacfeab711397d737336f16f8b3a81c,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder();
    for (int i = 0; i < n; i++)
    {
    	sb.append(str.charAt(str.length()-1));
    }
    return sb.toString();
}
",
3439750259b41a6f74fac56d4dbc326d2ae80e46,"public int countCode(String str)
{
    int num = 0;
    int num2 = 1;
    for (int i = 3; i < str.length(); i++)
    {
        if (str.charAt(num) == 'c' && str.charAt(num2) == 'o' && str.charAt(i) == 'e')
        {
            return true;
        }
        num += 1;
        num2 += 1;
    }
}
",
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",
09847ceb2f4c5840316c0b5d1a25a60df77928af,"public int dateFashion(int you, int date)
{
    if(you<=2 || date<=2)
    {//just check date or you <=2
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 0;
    }
}
",
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",
2554504cf73dcc772aa6c40d5e1c117584eceb44,"public int sum13(int[] nums)
{
    int total = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i > 0)
        {
            if (nums[i] != 13 && nums[i - 1] != 13)
            {
                total += nums[i];
            }
        }
        else
        {
            if (nums[i] != 13)
            {
                total += nums[i];
            }
        }
    }
    
    return total;
}
",
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",
87a331d0b690ad01a48575ef537fbbc928271d6f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int x = i + 1; x < nums.length; x++)
            {
                if (nums[i] % 10 == 0 && nums[x] % 10 != 0)
                {
                    nums[x] = nums[i];
                }
            }
        }
    }
    
    return nums;
}
",
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
",
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",
acf68ee14e8bbbb4c7037ac6430a44a2a7624ef8,"public int roundSum(int a, int b, int c)
{
      return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int n = num % 10;
    
    if(n >= 5)
    {
        num = num + (10-n);
    }
    else
    {
        num = num - n;
    }
    return num;
}
",
c2b5233c69ac3f268687caee60f7f68deec9a002,"public String zipZap(String str)
{
    String original = str;
boolean found = false;
if(str.length() == 3) {
if(Character.toString(str.charAt(0)).equals(""z"") && (Character.toString(str.charAt(2)).equals(""p""))) {
return ""zp"";
}
} else if(str.length() < 3) {
return str;
}
 
for(int i = 0; i + 3 < str.length(); i++) {
if(Character.toString(str.charAt(i)).equals(""z"") && Character.toString(str.charAt(i + 2)).equals(""p"")) {
str = str.substring(0, i) + Character.toString(str.charAt(i)) + Character.toString(str.charAt(i + 2)) + str.substring(i + 3, str.length());
found = true;
} else {
}
}
 
if(Character.toString(str.charAt(str.length() - 3)).equals(""z"") && Character.toString(str.charAt(str.length() - 1)).equals(""p"")) {
return str = str.substring(0, str.length() - 3) + Character.toString(str.charAt(str.length() - 3)) + Character.toString(str.charAt(str.length() - 1));
}
 
if(found) {
return str;
} else {
return original;
}
}
",
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",
a05e5d98a96c772e1afad34a0ae82871a6e741d0,"public String zipZap(String str)
{
    int num = 0;
    for (int i = 2; i < str.length(); i++)
    {
        if (str.charAt(num) == 'z' && str.charAt(i) == 'p')
        {
            str.replace(str.substring(num, i), ""zp"")
        }
        num += 1;
    }
    return str;
}
",
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",
fe6fec4e82f5018dd3ccca8dad46e47bc9166cd4,"public int[] withoutTen(int[] nums)
{
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] == 10)
        {
            nums.remove(i);
        }
    }
    return nums;
}
",
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",
19b1e88daab3c73139c123af1c8a9ac54420284b,"public int[] frontPiece(int[] nums)
{
    if (nums.length <= 2)
    {
		int[] newarray = new int[nums.length];
         for (int i = 0; i < nums.length; i ++)
        {
            newarray[i] = nums[i]; 		     
			}
         return newarray;   
    }
 	else //if(nums.length >= 2) 
   {
        int[] newarray2 = new int[2];
   		for (int i = 0; i < 2; i++)
   		{ 
       		newarray2[i] = nums[i];
        	return newarray2; 
    	}
        return newarray2; 
    }
   // int[] newarray3 = new int[nums.length];
    //return newarray3;
}
",
6019a2d927f175c86e134452ff3a3b0ec8aaa33b,"public int[] frontPiece(int[] nums)
{
    if (nums.length >= 2)
    {
        int[] newnums = new int[2];
        newnums.add(nums[0]);
        newnums.add(nums[1]);
        return newnums;
    }
    else
    {
        return nums;
    }
}
",
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",
e93ac984fe80d9ff8d2b28a49fe9042f2029629f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] % 10 == 0)
        {
            if (nums[i + 1] % 10 != 0)
            {
                nums[i + 1] = nums[i];
            }
        }
    }
    return nums;
}
",
56c06bec7cf7e18244403d9e4f756ec0427933f0,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    if (n <= nums.length)
    {
        int[] firstgroup = new int[n];
        int[] lastgroup = new int[n];
        for (int i = 0; i < n; i++)
        {
            firstgroup[i] = nums[i];
        }
        int p = nums.length;
        for (int o = nums.length - n; o < nums.length; o++)
        {
            int r = nums.length - p;
            lastgroup[r] = nums[o];
            p = p - 1;
        }
        if (firstgroup.equals(lastgroup))
        {
            return true;
        }
    }
    return false;
}
",
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
",
73ed1de85d5b22771d0d401395f97178f38186a0,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for (int i = 1; i < nums.length; i++)
	{
		sum += nums[i];
		if (nums[i] > max)
        {
			max = nums[i];
        }
		else if(nums[i] < min)
        {
			min = nums[i];
        }
	}
	return (sum - max - min) / (nums.length - 2)
}
",
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
",
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
",
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",
e444710aa658e2dde4799f8965284cd20bc98f6a,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
        int even = 0;
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;
}
",
7478d82102be770284252bf085987e42b0e436cb,"public boolean bobThere(String str)
{
    
    for (int x = 0; x < str.length() -2; x++)  
    {
        if (str.charAt(x) == 'b' && str.charAt (x+2) == 'b')
    	{
        	return true;
    	}
    }
  
    	{
        	return false;
    	}
    
}",
c39d1ee94f6a9a0a81bfecf4b8fd083b1fca26c2,"public int[] fizzArray(int n)
{
    int array = new int[n];
    for(int i=0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",
49c3fe42791682d66a90f553422c9d4f389e55d4,"public boolean has77(int[] nums)
{
    for (int x = 0; x < nums.length; x++)
    {
        if ((nums[x] == 7 && nums[x+1] == 7) || (nums[x] == 7 && nums[x + 2] == 7))
        {
            return true;
        }
    }
    return false;
}
",
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",
71116885b5a9e6a8364d74ea99aedc306f1c208f,"public int roundSum(int a, int b, int c)
{
    this.round10(a);
    this.round10(b);
    this.round10(c);
    
   
    
}

public int round10(int num)
{
    int value = 0;
    value = num % 10;
    if (value>= 5)
    {
        num = num +(10-value);
    }
    else if (value < 5)
    {
        num = num - (10-value);
    }
    return num;
}
",
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}",
2eefd35700230f8780f45d01d416afdecdd69994,"public int caughtSpeeding(int speed, boolean isBirthday)
if(isBirthday)
{
	speed -= 5;
}
if(speed <= 60)
{
    return 0;
}
else if (speed <= 80)
{
    return 1;
}
else
{
    return 2;
}
    
",
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",
7d88106d165c7f3f3293646203339626a26282eb,"public int[] fix45(int[] nums)
{
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i+1] != 5)
		{
			nums[i+1] = 5;
		}
	}
	return nums;
}
",
4951e3e93960ed4399945d8a349ac025dd9fc00d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum<= 19)
    {
     	sum = 20;   
    }
    return sum;
}
",
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
bb86254aedf9de05bb25aa1cd4e29774b6db4f34,"public boolean endOther(String a, String b)
{
    String aLow = a.toLowerCase();
String bLow = b.toLowerCase();
if (aLow.endsWith(bLow) || bLow.endsWith(aLow)) {
return true;
}
return false;

}
",
7991e5a91ee75b2ca8290f4fbbd9dee8ea1ad8dc,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
    }
    return nums;
}
",
bfa9ba9f8c1aa8e1ae413c2af6f9ae30af19b8b8,"public int countEvens(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if(nums[i] % 2 == 0)
        {
            count++;
        }
    }
    
    return count;
}
",
2b64a0277763a3e3aeb7d462893bb8e9e84266a5,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
        
        for (int i = 0; i < nums.length; i++)
        {
            sum += nums[i];
            if (nums[i] < min)
            {
                min = nums[i];
            }
            else if (nums[i] > max)
            {
                max = nums[i];                
            }
        }
    int average = (sum - min - max) / (nums.length - 2);
    
    return average;
}
",
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",
d2c34eafb2200c0ed9275335d7feeedd7b9bd1fb,"public int[] fizzArray(int n)
{
    int[] nums = new [n];
    for (int i = 0; i < nums.length; i++)
    {
        nums[i] = i
    }
    return nums;
}
",
8fbb70b4ce6f9c55dcd5d47f50272f1685330601,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
            return true;
        else 
            return false;
    }
    if (isAsleep)
        return false;
}
",
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
",
9854a8715c3f2ef0abd481b669c936355c5f9760,"public int sum67(int[] nums)
{
    int sum = 0;
    
    for (int i : nums)
    {
        if (i == 6)
        {
            for (int j = 6; j <= 7; j++)
            {
                i = 0;
            }
        }
        sum = sum + i;
    }
    
    return sum;
}
",
07f6671fb9cba5bb32a3128d222b579891bf6178,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( nums[i] == 7)
        {
            return true;
        }
        else if (nums[i + 1] == 7 && nums[i - 1] == 7)
        {
            return true;
        } 
    }
    return false;
}
",
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",
668b321bacc6da673fbfd4dcf462b28bfc39f2da,"public String plusOut(String str, String word)
{
    String output = """";
    for (int i = 0; i < str.length(); i++)
    {
        if (str.substring(i, i + word.length()).equals(word))
        {
            i += word.length();
        }
        else {
            output += ""+"";
        }
    }
    return output;
}
",
09847ceb2f4c5840316c0b5d1a25a60df77928af,"public int dateFashion(int you, int date)
{
    if(you<=2 || date<=2)
    {//just check date or you <=2
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 0;
    }
}
",
196436f6a31b3c5fa13fcebfee2d326193bfb3b0,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
          
    if(a == b && b == c)
        return 5;
                    
    if(a != b && a != c)
        return 1;
                            
    return 0;
}
",
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
",
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",
9580bc9ec9768fbe373460d6ae91ff54ca05bf71,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if(nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
dc20b50f1f6fc266d80c9cceb3e26ca923d1b02f,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
    //return nums;
   int start = nums[0];
    for (int i = 0; i < nums.length; i++)
    {
     	int j = 1;
        nums[i] = nums[j];
        j++;
        //nums[i] = nums[i + 1];
        /*if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }*/
              	
    }
    
    
    return nums;   
}
",
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
",
0052f96ceb63d13b4f7dcf7cc400966906099f39,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}
}
}",
87346e3e31d1cd09cf1ea78408fe3cd51d049e2e,"public int sum13(int[] nums)
{
    sumNum = 0;
    if (nums.length == 0)
    {
        return sumNum;
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
        {
            i += 1;
        }
        else
        {
            sumNum += nums[i];
        }
    }
    return sumNum;
}
",
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
",
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
",
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
",
0302770bfa1d80a26d8f7722e81454eef91f7586,"public String plusOut(String str, String word)
{
    String fuckThis = """";
    for (int i = 0; i < str.length(); i++){
    	if (word == str.substring(i, i + word.length())){
            i += word.length();
        } else {
            fuckThis += ""+"";
        }
    }
    return fuckThis;
}
",
7a311480e1038e58bd263cd3dd91b77fce57edfa,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}",
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
",
739598df6f10e1b41997fbbce33f2e2bf0fd995e,"public boolean has77(int[] nums)
{
    int x = nums.length;
    for (int i = 0; i < x; i++)
    {
        if (i < x - 1 && nums.[i] == 7 && nums.[i + 1] == 7)
        {
            return true;
        }
        if (i < x - 2 && nums.[i] == 7 && nums.[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
",
e1f80924e2fa9aba6195f174166b813b13fea19e,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 && day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",
580384a19906db0b652aa0ac4867db127e99210b,"public boolean canBalance(int[] nums)
{
    int size = nums.length;
    int sum1 = 0;
    int sum2 = 0;
    int k = size - 1;
    int i = 0;
    john:
    for (; k > k - i; k--)
    {	
        sum2 = nums[k];    
    }
    for (; i < size - k; i++)
    {
            sum1 += nums[i];
        if (i == size - k - 1)
        {
        if (sum1 == sum2)
		return true;
    i++;
    k--;
    sum1 = 0;
    sum2 = 0;
    if (k!=0)
    continue john;
        }
    }
    
    return false;

    
}
",
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
",
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
7478d82102be770284252bf085987e42b0e436cb,"public boolean bobThere(String str)
{
    
    for (int x = 0; x < str.length() -2; x++)  
    {
        if (str.charAt(x) == 'b' && str.charAt (x+2) == 'b')
    	{
        	return true;
    	}
    }
  
    	{
        	return false;
    	}
    
}",
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",
db19ea5f1cabdb8d39c12a6acfc593bd85bf4f95,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
    	{
     	   for (int j = i + 1; j < nums.length && nums[j] % 10 != 0; j++)
           {
            	nums[j] = nums[i];   
           }
    	}
    }
    return nums;
}
",
dd62800fd575243e19f14d265c244ec566ba4e58,"public boolean sameEnds(int[] nums, int n)
{
    for(int i = 0; i < len; i++) {
        if(nums[i] != nums[nums.length - len + i])
            return false;
    }
                
    return true;
}
",
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
",
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
",
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
",
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",
d1c3c949a3fa3e5304850b7480d7ac8914cbf4ce,"public int loneSum(int a, int b, int c)
{
    if(a==b)
    {
    	return c;
    }
    else if(b == c)
    {
    	return a;
    }
    else if(a == c)
    {
    	return b;
    }
    else
    {
    	return 0;
    }
    return (a + b + c);
}
",
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",
af72162e8ac5b84ac915a239ad3487e01803ebce,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    while (isBirthday != true)
    {
    	if (speed <= 60)
    	{
        	return int 0;
    	}
    	else if (speed > 60 && speed <= 80)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
    while (isBirthday != false)
    {
       if (speed <= 65)
    	{
        	return 0;
    	}
    	else if (speed > 65 && speed <= 85)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
}",
3b6a3747d8a8ba7e00b3386b0a9baaad77d0edec,"public boolean sameEnds(int[] nums, int n)
{
    /**
    int same=0;
    for (int i=nums.length-1;i>0 ;i--)
    {
        if (nums[0]!=nums[i])
        {
            same++;
        }
    }
    */
    int same=0;
    int end = nums.length-i;
    for(int i=nums.length; i > 0; i--)
	{
		if(nums[same] != nums[end])
			return false;
		else
		{
			same++;
			end++;
		}
	}
    return true;
        
}
",
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}",
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",
35dde7794b6fddbfa24173cdc0b55b2393660120,"public int makeChocolate(int small, int big, int goal)
{
    int pack = goal % 5;
    if (small + (big*5) < goal)
    {
        return -1;
    }
    else if (pack <= small && goal > big*5 > 4)
    {
        return pack + 5;
    }
    else if (pack <= small)
    {
        return pack;
    }
    else 
    {
        return -1;
    }
}
",
e93b94f6835046c42b16cfe507547d10945a4c3a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++) {
		if ((nums[i-1] == val) && 
            (nums[i] == val) && nums[i+1] == val) {
         	 return true;
        }
        else {
			return false;
        }
    }
}
",
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",
ab13436ff4143ebc7d6d69d730a35242364a24e1,"public int luckySum(int a, int b, int c)
{
    if(a==13)
    {
    	return c;
    }
    else if(b == 13)
    {
    	return a;
    }
    else if(c == 13)
    {
    	return (b+a);
    }
    return a, b, c;
}
",
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
",
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
54e8d733e91a15a740f7a7e802894add4c55a348,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
        {
			count++;
        }
		else
		{
			if(count == 1)
            {
				return false;
            }
			else
            {
				count = 0;
            }
		}
	}
	return (count != 1);
}
",
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
",
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",
cd36011e020ffc41188de2b7cfe5e55af586b032,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
    {
        return 10;
    }
    else if ((a == b) && (b == c))
    {
        return 5;
    }
    else if ((b != a) && (c != a))
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",
617e080aa52b2079a26ca214e0adcbebaeec5270,"public int makeChocolate(int small, int big, int goal)
{
   int rem = goal % 5;
   if (small + (5 * big) < goal)
   {
       return -1;
   }
  else if (rem <= small + (5 * big) >= goal)
  {
      return -1;
  }
  else
  {
      return small * rem;
  }
}
",
5771edb09478591fc879512a4e01c7ace896b913,"public int sum67(int[] nums)
{ 
    int sum = 0;
    for(int i - 0;i < nums.length; i++)
    {
        if( nums[0] == null)
        {
            return 0;
        }
        else
        {
            if(nums[i].charAt(0) == '6' && nums[i].charAt(1) == '7'}
               return sum;}
               return sum + i;
               }

         

",
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
",
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",
d077f253fd718a8c09bc915edd3c29513364a1f1,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
		return true;
	return ((a + b) == 6|| Math.abs(a - b) == 6);
}
",
b334137a2954d0930d610613ec54703a38531bae,"public boolean sameEnds(int[] nums, int n)
{
    /**
    int same=0;
    for (int i=nums.length-1;i>0 ;i--)
    {
        if (nums[0]!=nums[i])
        {
            same++;
        }
    }
    */
    int same=0;
    int  i=nums.length;
    int end = nums.length-i;
    
    for( i; i > 0; i--)
	{
		if(nums[same] != nums[end])
			return false;
		else
		{
			same++;
			end++;
		}
	}
    return true;
        
}
",
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",
214c5b8362c94ebc3f184bc105375d4681d7db7a,"public int[] fizzArray(int n)
{
    //fizzArray is a method which takes input n and prepares fizzArray


//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}
}
",
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
",
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",
3d7361f97ad4dd443028e6672105587f2d537df7,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
			count++;
		else
		{
			if(state == 1)
				return false;
			else
				count = 0;
		}
	}
	return (count != 1);
}
",
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}",
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
",
93cbb22b6a1b1a6803c91b97ad0c9e1017120cfa,"public boolean love6(int a, int b)
{
    if ((a == 6) || (b == 6))
    {
        return true;
    }
    else if ((Math.abs(a - b) == 6) || ((a + b) == 6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
",
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
a05e5d98a96c772e1afad34a0ae82871a6e741d0,"public String zipZap(String str)
{
    int num = 0;
    for (int i = 2; i < str.length(); i++)
    {
        if (str.charAt(num) == 'z' && str.charAt(i) == 'p')
        {
            str.replace(str.substring(num, i), ""zp"")
        }
        num += 1;
    }
    return str;
}
",
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",
39f7db5a7fbf9dd38ccc348c22569f375d2af11d,"public int[] fizzArray(int n)
{
    int count = 0;
    int[] arr = new int[n];
    for (int i = 0; i < arr.length; i++)
    {
        arr[i] = count;
        count++;
    }
    return arr;
}
",
7478d82102be770284252bf085987e42b0e436cb,"public boolean bobThere(String str)
{
    
    for (int x = 0; x < str.length() -2; x++)  
    {
        if (str.charAt(x) == 'b' && str.charAt (x+2) == 'b')
    	{
        	return true;
    	}
    }
  
    	{
        	return false;
    	}
    
}",
803c3b7ab2f6984a216901319f02c8549f93ff24,"public String getSandwich(String str)
{
    int length = str.length();
    if ( str.startsWith(""bread"") && str.endsWith(""bread"") )
    {
        return str.(5, (str.length - 5));
    }
    else
    {
        return """"
    }
}
",
11285264b3baf07c8ff3000362055856653bccff,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i = 0; i < array.length; i++)
    {
        array[i] = 0;
    }
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            array[i] = nums[i];
        }
        else
        {
            // find the next # that isn't 10
            for (int j = i + 1; j < nums.length; j++)
            {
                if (nums[j] != 10)
                {
                 	array[i] = nums[j];
                    i = j; 
                    break;
                }      
            }
        }
    }
    
    return array;
    
}
",
0bd81a714f85b9f284e05cc169fc136a5202b440,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
			count++;
		else
		{
			if(state == 1)
				return false;
			else
				count = 0;
		}
	}
	return (count != 1);
}
",
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",
57de305af5c397df593d610c754a2029157ce03a,"public int[] tenRun(int[] nums)
{
    for (int i =0; i <nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int j = i+1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i]; 
            }
        }
    }
    
    return nums; 
    
}
",
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
4951e3e93960ed4399945d8a349ac025dd9fc00d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum<= 19)
    {
     	sum = 20;   
    }
    return sum;
}
",
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
",
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",
557026f064a89be4df627a611b8a898f7a2fc2f3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if ((nums[i] != val) || (nums[i + 1] != val))
        {
            return flase;
        }          
        
    }
     return false;
}
",
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
",
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
",
34fd7df6f2e77eb2637ca1aab9fa90ece6e50132,"public int greenTicket(int a, int b, int c)
{
    if(a == b && a == c && b == c)
    {
        return 20;
    }
    if(a != b && a != c && b != c)
    {
        return 0;
    }
    else
    {
        return 10;
    }
}
",
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",
cd727adb54733c5b0e8ec8f90e3a20c4ce931c92,"public int makeChocolate(int small, int big, int goal)
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
    {
        return remainder;
    }
        
    return - 1;
}
",
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",
10af8ae87e8d5fab568a4bc61c1cbcdf1cf7e4e3,"public boolean xyBalance(String str)
{
    boolean y = false;
    for(int i = 0; i < str.length() - 1; i++)
        {
       		if(str.charAt(i) == 'y')
            {
                y = true;
            }
        	if(str.charAt(i) == 'x' && !y)
            {
                return false;
            }
   		}
    return true;
}
",
f8ee40e5bc9aa3f91f7922bed0ea2908b34efbc5,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
			count++;
		else
		{
			if(count == 1)
				return false;
			else
				count = 0;
		}
	}
	return (count != 1);
}
",
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
",
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}",
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",
c0f5b70b603edfb55cea6f3a939df372d0d07201,"public int makeChocolate(int small, int big, int goal)
{
    if (goal >= 5 && (goal / 5) >= big && (goal / 5 )
        - small > 0)
        return goal - big * 5; 
    else if (goal / 5 < big ) 
        return goal % 5;
    else 
        return -1;
}
",
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",
203f9c47a0738c4f7deb3aa08f1ac17b6d91cac6,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    int index = 0;
    
    for (int i : nums)
    {
        if (i != 10)
        {
            array[index] = i;
            index++;
        }
    }
    
   return array;
}
",
85c4da3eae44449610d4abcaabc40f355189f866,"public boolean twoTwo(int[] nums)
{
    for (int i=0; i<(nums.length); i++)
	{
		if(nums[i]==2)
		{
			i++;
			if(!(i<(nums.length)) || nums[i] !=2) 
    		{
        		return false;
    		}
			while(i<nums.length && nums[i] ==2) i++;
			}
		}
	return true;
}
",
7856bc992acb7f7b799ac4063e23bfc3598df9e0,"public int sum13(int[] nums)
{
    if(nums.length == 0) {
        return 0;
    }
    
    int sum = 0;
    boolean thirteen = false;
    boolean secondthirteen = false;
    
    for(int i = 0; i < nums.length; i++) {
        if(nums[i] == 13) {
            thirteen = true;
        }
        
        if(!thirteen && !secondthirteen) {
            sum += nums[i];
            thirteen = false;
            secondthirteen = false;
        }
        
        if(thirteen) {
            secondthirteen = true;
        }
    }
    
    return sum;
}
",
84dfd0d1e5c431468600f396b066dbde235e2bb8,"public int[] shiftLeft(int[] nums)
{
    int[] newList = new int[nums.length];
    return newList;
}
",
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
",
8ec5f482e6f6fe23af27069dab01c8e77a3f2c6a,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i < (nums.length - 1); i++)
    {
        if ((nums[i] == val) || (nums[i + 1] == val))
        {
            everywhere = true;
        }
        else
        {
            everywhere = false;
        }
    }
    return everywhere;
}
",
86cb31ccd85e2cce6656636a5b1817a50876a726,"public int[] withoutTen(int[] nums)
{
	int[] newNums = new int[nums.length];
    int newI;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            newNums[newI] = nums[i];
        }
    }
    return newNums;
}",
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
1f5c3d8a073e2b5edf9214c7e6888105496b4151,"public int[] seriesUp(int n)
{	
    int[] list = new int[n * (n + 1)/2];
    int max = 1;
    int count = 0;
    for (int i = 0; i < list.length; i++)
    {
        list[i] = max - count;
        if (list[i] == max)
        {
            count = max;
            max++;
        }
        else
        {
            count--;
        }
    }
    return list;
    
}
",
4b739892a3a01dc0f58db94873932aeb2301f0b2,"public int[] fix45(int[] nums)
{
    List<int> fourIndex = new ArrayList();
    list<int> fiveIndex = new ArrayList();
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            fourIndex.add(i);                  
        }
        else if (nums[i] == 5)
        {
            fiveIndex.add(i);
        }
    }
    for (int i = 0; i < fourIndex.size(); i++)
    {
        int fivePos = fiveIndex(i);
        int newPos = fourIndex(i + 1);
        int number = nums[newPos];
        nums[fivePos] = number;
        nums[newPos] = 5;
    }
    return nums;
}
",
f0258239140a383cf0c0c1e9ac9553390ed81433,"public boolean xyzThere(String str)
{
    int i = 0
    int length = str.length() - 2;
    for( i ; i < length; i++);
    {
     	if(str.charAt(i) == 'x' && str.charAt(i+1) == 'y' && str.charAt(i+2) == 'z')
        {
         	if (i == 0 || str.charAt(i-1) != ""."")
                return true;
        }
    }
    return false;
}
",
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
33e62f65180aaedc26d6d11b46d081d5c9bffbf4,"public int[] frontPiece(int[] nums) 
{
  if (nums.length == 1)
  {
  return new int[] {nums[0]};
  }
  else if (nums.length == 0)
  {
  return new int[] {};
  }
    else
    {
  return new int[] {nums[0],nums[1]};
    }
    }
",
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
db19ea5f1cabdb8d39c12a6acfc593bd85bf4f95,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
    	{
     	   for (int j = i + 1; j < nums.length && nums[j] % 10 != 0; j++)
           {
            	nums[j] = nums[i];   
           }
    	}
    }
    return nums;
}
",
9dfb9d8285fed77ebe058ec80bfb80f2f1a5db2a,"public boolean sameEnds(int[] nums, int len) {
    for (int i = 0, j = nums.length - len; i < len; i++, j++)
        if (nums[i] != nums[j]) return false;
    return true;
}
",
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",
226b5d8a7b8a50ea1a33a1983fecefe1ef7fa72b,"public boolean canBalance(int[] nums)
{
	int leftNum = 0;
	int rightNum;
	for(int i = 0; i < nums.length - 1; i++)
    {
		leftNum += nums[i];
    }
	rightNum = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(leftNum == rightNum)
        {
			return true;
        }
		leftNum -= nums[i];
		rightNum += nums[i];
	}
	return (leftNum == rightNum);
}",
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
7c7871661cd4465fe9ca613614480b58e74f7aad,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        repeat = repeat + str.substring(str.length() - n);
    return repeat;
}
",
0745e670c9437c03200a3e652fd7a5a0bf1399ee,"public String plusOut(String str, String word)
{
    int strLength = str.length();
    int wordLength = word.length();
    int position = str.indexOf(word);
    int i = 0;
    StringBuilding strbuild = new Stringbuilder(strLength);
    while(position != -1)
    {
     	while ( i < position)
        {
         	strbuild.append('+');
            i++;
        }
        strbuild.append(word);
        i = pos+ wordLength;
        position = str.indexOf(word, i);
    }
    for(i; i<len; i++)
        strbuild.append('+');
    return strbuild.toString();
}
",
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",
c77723bd709b08d6e00161ce3c6ef305a61d69c9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length()-2; i++) {
    if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b') {
      return true;
    }
  }
  return false;
}
",
17aa8ed5de6f5c8c29872cbd7d0efdd891d76307,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int[] newnums = new int[nums.length];
    int large = 0;
    int small = 0;
    int count = 0;
    for (int number : nums)
    {
        newnums[count] = number;
        if (number > newnums[large])
        {
            large = count;
        }
        if (number < newnums[small])
        {
            small = count;
        }
        ++count;
    }
    if (large == small && nums.lenght >= 2)
    {
        small = 1;
    }
    newnums[large] = 0;
    newnums[small] = 0;
    for (int number : newnums)
    {
        sum = sum + number;
    }
    return sum / (newnums.length - 2);
}",
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",
54e8d733e91a15a740f7a7e802894add4c55a348,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
        {
			count++;
        }
		else
		{
			if(count == 1)
            {
				return false;
            }
			else
            {
				count = 0;
            }
		}
	}
	return (count != 1);
}
",
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
",
0bd7fe95ce9749e4f8a7edf4208f6c161ea14ca1,"public int countCode(String str)
{
    int x = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c')
        {
            if (str.charAt(i+1) == 'o')
            {
                if (str.charAt(i + 3) == 'e')
                {
                    x++;
                }
            }
        }
    }
    return x;
}
",
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",
033c470bc2ca011829feb02b4e4446a50e195e06,"public String alarmClock(int day, boolean vacation)
{
    if ((day == 6 || day == 0) && vacation)
    {
        return ""off"";
    }
    else if ((day != 6 || day != 0) && vacation)
    {
        return ""10:00"";
    }
    else if ((day == 0 && day <= 5) && !vacation)
    {
        return ""7:00"";
    }
    else if ((day == 6 || day == 0) && !vacation)
    {
    	return ""10:00"";
    }
    else
    {
    	return """";
    }
    
}
",
bda78f041aeff5c1c99839481d54cb270d0f1529,"public int makeChocolate(int small, int big, int goal)
{
     if goal >= 5 * big
     {
        remainder = goal - 5 * big；
     }
    else
    {
        remainder = goal % 5；
    }
        
    if remainder <= small
    {
        return remainder；
    }
        
    return -1；
}
",
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
",
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
",
1a4217a42da8fb81be3f704b665bfc939b38dc68,"public String getSandwich(String str)
{
    int a = -1; //the first character
    int z = -1; //the last character
      
    for(int i = 0; i < str.length() - 5; i++) 
    {
        if(str.substring(i, i + 5).equals(""bread"")) 
        {
            a = i;
            break;
        }
    }
                                
    for(int i = str.length() - 5; i >= 0; i--) 
    {
        if(str.substring(i, i + 5).equals(""bread"")) 
        {
            z = i;
            break;
        }
    }
                                                          
    if(a != -1 && z != -1 && a != z) //determining the substring that should be returned
        return str.substring(a + 5, z);
                                                                    
    return """";
}
",
aabea47ca84d0a1de14a35d7e60fc6e1c88b9d75,"public boolean xyBalance(String str)
{
    int YS = str.indexOf('y');
    for(int i = 0; i < str.length(); i++) 
    {
        if(str.charAt(i) == 'x' && str.charAt(i>i) == 'y')
        {
            truth = true;
            
        }
        
    }
     return truth
}
",
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
",
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",
af72162e8ac5b84ac915a239ad3487e01803ebce,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    while (isBirthday != true)
    {
    	if (speed <= 60)
    	{
        	return int 0;
    	}
    	else if (speed > 60 && speed <= 80)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
    while (isBirthday != false)
    {
       if (speed <= 65)
    	{
        	return 0;
    	}
    	else if (speed > 65 && speed <= 85)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
}",
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
",
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",
783f58a9d684df6c18e6b47db9326f28032afe07,"public int countCode(String str)
{
    int count = 0;
    for(int i = 0; i < str.length(); i++){
    	if(str.indexOf(""co"",i)==i+1&&str.indexOf(""co"",i+2)==i+3)count++;
    }
    return count;
}
",
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",
cd727adb54733c5b0e8ec8f90e3a20c4ce931c92,"public int makeChocolate(int small, int big, int goal)
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
    {
        return remainder;
    }
        
    return - 1;
}
",
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
",
8525e179d8af7bb7632d7d8c09ddf14b6e564466,"public boolean twoTwo(int[] nums)
{
    for(int i=0;i+3<nums.length;i++)
    {
        if(nums[i]==2&&nums[i+1]!=2)
        {
            i+=2;
        }
        if(nums[i]==2&&nums[i+1]!=2)
        {
            
            return false;
        }
      
    }
    return true;
}
",
4afa993dcfa50e1dfc676d02d355a13166a4eaad,"public int caughtSpeeding(int speed, boolean isBirthday)
{
        
    if (isBirthday)
    {
        speed = speed - 5;
        
    }
    
    if (speed < 60)
    {
        return 0;
    }
    
    else if (60 < speed < 80)
    {
        return 1;
        
    }
    
    else if (speed > 81);
    {
        return 2;
        
    }
    }
    
    
    
        
   

",
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",
27ced9f412138c0fe596bab23d6119a3c93f5686,"public int[] shiftLeft(int[] nums)
{
    int length = nums.length;
    int special = nums[0];
    if (length == 0)
    {
        return nums;
    }
    for (int i = 0; i < length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[length - 1] = special;
    return nums;
}
",
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",
c54e11cb478e27d72c9c30ea5dbd6d307e20846d,"public int[] seriesUp(int n)
{
    int[] ans = new int[n * (n + 1)/2];
    
    int count = 0;
    
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; i++)
        {
         	ans[count] = j;
            count++;
        }
    }
    
    return ans;
}
",
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
",
c77723bd709b08d6e00161ce3c6ef305a61d69c9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length()-2; i++) {
    if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b') {
      return true;
    }
  }
  return false;
}
",
c0e74847daded5db86a45f95da024ec482c4f9a4,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19}
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
",
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
",
51fae40e9861d7b67fbaedf2d011c3a432f13b51,"public boolean xyzThere(String str)
{
    int i = -1;
    while ((i = str.indexOf(""xyz"", i + 1)) != -1)
    {
        if (i == 0 || (str.charAt(i - 1) != "".""))
        {
            return true;
        }
    }
    return false;
}
",
831d4624fc6b65528bad888eede0abe0e570d59f,"public int[] seriesUp(int n)
{
    int len = n*(n+1)/2;
    int[] nums = new int[len];
    int index = 0;
	for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            nums[index] = j;
            index++;
        }
    }
    return nums;
}
",
ebebbcd628f8bb7d6584e336ffd2ddf31ba9b356,"public int countCode(String str)
{
    int s = 0;
    for(int i = 1; i < str.length(); i++)
    {
    	if(str.charAt(i) == 'c')
        {
            if(str.charAt(i+1) == 'o')
            {
                if(str.charAt(i+3) == 'e')
                {
                    s++;
                }
            }
        }
    }
    return s;
}
",
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",
31d2de2c4723037a38f2b62dd095d3efaf175d3f,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
}
",
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
",
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",
caec91f2ba0d25b3a96d93bbc7e6ff92f4dfdd72,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off""
        }
    }
    else if (day > 0 && day < 6)
    {
        return ""7:00"";
    }
    else
    {
        return ""10:00"";
    }
}
",
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
",
63bc9b6a7e3b8866c3ea0d84d282e25f9716e838,"public String mixString(String a, String b)
{
    String result = """"; 
    int index = 0;
    
    if (a.length() >= b.length()) {
        index = b.length(); 
    }
    if (a.length() <= b.length()) {
        index = a.length(); 
    }
    for (int i = 0; i < index; i++) {
        result += a.substring(i, i + 1) + b.substring(i, i + 1);
    }
    if (a.length() < b.length()) {
        result += b.substring(a.length(), b.length()); 
    }
    if (a.length() > b.length()) {
        result += a.substring(b.length(), a.length()); 
    }
    return result; 
}
",
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",
907136eba01f60c88adffb16041850d5038ac56a,"public int countClumps(int[] nums)
{
	int count = 0;
    for(int i = 0; i < nums.length - 1; i++)
    {
        if(nums[i] == nums[i + 1])
        {
         	count = count + 1;   
        }
    }
   	return count;     
}
",
0483b1e79e3f05acdb38f49fb36b807ed2e6bb07,"public int[] withoutTen(int[] nums)
{
    int[] done = new int[nums.length];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            count++;
        }
        else
        {
            done[i - count] = nums[i];
        }
    }
    return done;
}
",
6a623e78b320858b018881a4c447f0285bde0276,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            int temp = nums[i];
            while (nums[i+1] % 10 != 0 || i == nums.length)
            {
                nums[i] = temp;
                i++;
            }
        }
    }
    return nums;
}",
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
",
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
",
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",
0745e670c9437c03200a3e652fd7a5a0bf1399ee,"public String plusOut(String str, String word)
{
    int strLength = str.length();
    int wordLength = word.length();
    int position = str.indexOf(word);
    int i = 0;
    StringBuilding strbuild = new Stringbuilder(strLength);
    while(position != -1)
    {
     	while ( i < position)
        {
         	strbuild.append('+');
            i++;
        }
        strbuild.append(word);
        i = pos+ wordLength;
        position = str.indexOf(word, i);
    }
    for(i; i<len; i++)
        strbuild.append('+');
    return strbuild.toString();
}
",
e73f15cebf791aa932347617662e3a6641135a35,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
    //return nums;
    if (nums.length >= 2)
    {
        
   		int start = nums[0];
    	for (int i = 0; i < nums.length - 1; i++)
    	{
     	//int j = 1;
        //nums[i] = nums[j];
        	nums[i] = nums[i + 1];
    	}
    
        	//nums[nums.length - 1] = start;
        /*if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }*/
    
              	
    }
    
    return nums;   
}
",
5f0de396365017b80185b81d0904cd472b4f28f8,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if ((a == b && b != c) || (a == c && a != b) || (b == c && b != a))
    {
       return 10;
    }
    else 
    {
        return 0;
    }
}
",
7bad4cf90628d11d44a239cea13fc6c5abd08410,"public String mixString(String a, String b)
{
    String c = a.substring(2, a.length());
    String d = b.substring(2, b.length());
    String result = """"+ a.charAt(0) + b.charAt(0) + a.charAt(1) +b.charAt(1) +c +d;
    return result;
}
",
c28f1db3b98eccc9bf14bad6af77e537a13c86b0,"public String plusOut(String str, String word)
{
   int yo = str.length();
   int wordL = word.length();
    
   int x = str.indexOf(word);
    
   int i = 0;
    
    StringBuilder stringYo = new StringBuilder(yo);
    
    while (x != -1)
    {
        while (i < x)
        {
            stringYo.append('+');
            i++;
            
        }
        
        stringYo.append(word);
        i = x + wordL;
        x = str.indexOf(word, i);
    }
    
    for(; i < wordL; i++)
        stringYo.append('+');
    
    return stringYo.toString();
    
}
",
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
",
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
",
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",
3d7361f97ad4dd443028e6672105587f2d537df7,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
			count++;
		else
		{
			if(state == 1)
				return false;
			else
				count = 0;
		}
	}
	return (count != 1);
}
",
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",
50e38ea828c8b0ad18791c7c955b37bad6c9d4bc,"public boolean xyzThere(String str)
{
    int a = str.indexOf(""xyz"");
    int b = str.lastIndexOf(""xyz"");
    return ( a != -1 || b != -1);
}
",
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
3b24fd13da29cf3eaf6ecbfb5f5dfeb4cbdd236e,"public int noTicket(int 0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
",
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
",
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
a6ef869527e799ebeaa3435595e0271453b97469,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    int temperature = temp;
    boolean summer = isSummer;
    int minTemp = 60;
    int maxTemp = 90;
    boolean play = false;
    if (summer == true)
    {
        maxTemp += 10;
    }
    if (temp >= minTemp && temp <= maxTemp)
    {
        play = true;
    }
    return (play);
}
",
1367b766aeeb082338bdcc66af4a847712cf9c27,"public String zipZap(String str)
{
   int len = str.length();
	int lim = len - 2;
	int i = 0;
	char ch;
	StringBuilder stbuild = new StringBuilder(len);
	while(i < len)
	{
		ch = str.charAt(i);
		if(ch == 'z' && i < lim && str.charAt(i+2) == 'p')
		{
			stbuild.append(""zp"");
			i += 3;
		}
		else
		{
			stbuild.append(ch);
			i++;
		}
	}
return stbuild.toString(); 
}
",
3a2534fb0ac1dc3651141e9a0bd5b1830ff648bb,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""small ticket"";
        }
        else
        {
            return ""big ticket"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""small ticket"";
        }
        else
        {
			return ""big ticket"";
        }
    
    }
}  
",
831d4624fc6b65528bad888eede0abe0e570d59f,"public int[] seriesUp(int n)
{
    int len = n*(n+1)/2;
    int[] nums = new int[len];
    int index = 0;
	for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            nums[index] = j;
            index++;
        }
    }
    return nums;
}
",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",
2216bc569ee8caff75d3702a81475722e85c8551,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 || n == 16)
            return n;
        return 0;
    //return n;
}
",
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",
a77cf61f1d235b19831c14399114810bc8b89144,"public int[] shiftLeft(int[] nums)
{
    int[] array = new int[nums.length];
    if ( nums.length >= 2 ) {
        for ( int i = 1; i < nums.length; i++ ) {
            array[i-1] = nums[i];
            array[nums.length - 1] = nums[0];
        }
        return array;
    }
    else
    {
        return nums;
    }
}
",
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
",
4333b62c7fd61280f00279732dd695ff60e6829f,"public String zipZap(String str)
{
int len = str.length();
	int lim = len - 2;
	int i = 0;
	char ch;
	StringBuilder stbuild = new StringBuilder(len);
	while(i < len)
	{
		ch = str.charAt(i);
		if(ch == 'z' && i < lim && str.charAt(i+2) == 'p')
		{
			stbuild.append(""zp"");
			i += 3;
		}
		else
		{
			stbuild.append(ch);
			i++;
		}
	}
	return stbuild.toString();

}
",
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",
d5ce0fb7cf0b155cde53ceb7bede5737956327c9,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        for (int j : array)
        {
            if (i != 10)
            {
                array[j] = i;
                break;
            }
        }
    }
    
   return array;
}
",
d077f253fd718a8c09bc915edd3c29513364a1f1,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
		return true;
	return ((a + b) == 6|| Math.abs(a - b) == 6);
}
",
4548a86e9e0b486f8382301a49784df71380ec7b,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
     if (day==0 || day==6)
         return off;
     else
         return 10:00;
    }
    if( day==0 || day==6)
        return 10:00;
    else 
        return 7:00;
}
",
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",
05b23fcc737fcb6b3c50cd8949cae2a6c045d1a0,"public String[] fizzBuzz(int start, int end)
{
    String[] series = new String[end - start];
    for (int i = 0; start < end; i++)
    {
        if ((start % (3 * 5)) == 0)
        //when it is multiples of both 3 and 5
        {
        	series[i] = ""FizzBuzz"";
        }
        else if ((start % 5) == 0)
        {
            series[i] = ""Buzz"";
        }
        else if ((start % 3) == 0)
        {
            series[i] = ""Fizz"";
        }
        else
        {
            series[i] = String.valueOf(start);
        }
        start++;
    }
    return series;
        
}
",
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",
3b4118194e95896337d9e62e8932db7e8280e2ec,"ublic String zipZap(String str)
{
	int len = str.length();
	int lim = len - 2;
	int i = 0;
	char ch;
	StringBuilder stbuild = new StringBuilder(len);
	while(i < len)
	{
		ch = str.charAt(i);
		if(ch == 'z' && i < lim && str.charAt(i+2) == 'p')
		{
			stbuild.append(""zp"");
			i += 3;
		}
		else
		{
			stbuild.append(ch);
			i++;
		}
	}
	return stbuild.toString();
}
",
56564fcd3a089f2e2f8dc872a710a4cf2ca9e4ce,"public String atFirst(String str)
{
    return str.substring(0, 1);
    if (str.substring(0, 1) = null)
    {
        return @;
    }
}
",
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",
fbd4c23e76bef6c785eaeac729ab320635a7682b,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
",
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",
d913ccc855b91ab41a6aea04dded6729d5896140,"public String zipZap(String str)
{
    int len = str.length();
	int lim = len - 2;
	int i = 0;
	char ch;
	StringBuilder stbuild = new StringBuilder(len);
	while(i < len)
	{
		ch = str.charAt(i);
		if(ch == 'z' && i < lim && str.charAt(i+2) == 'p')
		{
			stbuild.append(""zp"");
			i += 3;
		}
		else
		{
			stbuild.append(ch);
			i++;
		}
	}
	return stbuild.toString();

    
}
",
f6cfdfcc045d3ced7634c7a0afcbe4afd98d380e,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
        n = 0;
    
    return n;
}
",
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
",
3648267d25d6d458866c61f5973f047dbbbc6421,"public int dateFashion(int you, int date)
{
    if (you < 3 || date < 3)
    {
        return 0;
    }
    else if (you > 7 || date > 7)
    {
        return 2;
    }
    else if(you > 2 && date > 2)
    {
        return 1;
    }
}
",
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
",
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
",
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",
fe6fec4e82f5018dd3ccca8dad46e47bc9166cd4,"public int[] withoutTen(int[] nums)
{
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] == 10)
        {
            nums.remove(i);
        }
    }
    return nums;
}
",
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",
ac50df7405fa705d67d8b1e0ed3b0ae92fb16569,"public boolean xyzThere(String str)
{
    //check from variable starting at 0
    //and go until str.length
    int first = str.indexOf(""xyz"");
    if (str.charAt(first - 1) != '.')
        return true;
    else if (str.charAt(first - 1) == '.')
        return false;
    return false;
}
",
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}",
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",
85c4da3eae44449610d4abcaabc40f355189f866,"public boolean twoTwo(int[] nums)
{
    for (int i=0; i<(nums.length); i++)
	{
		if(nums[i]==2)
		{
			i++;
			if(!(i<(nums.length)) || nums[i] !=2) 
    		{
        		return false;
    		}
			while(i<nums.length && nums[i] ==2) i++;
			}
		}
	return true;
}
",
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",
a425b20e7cbf4dd7abbd1c087ba031d2cbb3a08a,"public String mixString(String a, String b)
{
    int aLen = a.length();
    int bLen = b.length();
    int i = 0;
    StringBuilder stbuild = new StringBuilder(aLen+bLen);;
    for (; i < aLen && i <bLen; i ++)
    {
    	stbuild.append(a.charAt(i));
        stbuild.append(b.charAt(i));
    }
    for(; i < aLen; i++)
        stbuild.append(a.charAt(i));
    for(; i < aLen; i++)
        stbuild.append(b.charAt(i));
	return stbuild.toString();
}
",
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",
6f7f61c8665e5fbb33bb6cdb300c38706ffa9630,"public int centeredAverage(int[] nums)
{
    int average = 0;
    int sum = 0;
    int low = nums[0];
    int high = nums[0];
    boolean found = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > high)
        {
            high = nums[i];
        }
        
        if (nums[i] < low)
        {
            low = nums[i];
        }
    }
    
    for (int a : nums)
    {
        sum = sum + a;
    }
    
    sum = sum - low - high;
    
    average = sum / (nums.length - 2)
    
    return average;
}
",
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
",
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
47bcbb118b9820ce001397912cd55ec9c5521a9b,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
        return c;
    }
    if (a == c)
        return b;
    if (b == c)
        return a;
    return (a + b + c);
}
",
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
",
2a2ba63daf77f4d635a5ec7d8a9ee2560fb40c96,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int fixTeen(int n)
{
    if (n > 12 && n < 20)
    {
        if (n != 15 && n != 16)
        {
            n = n;
        }
        else
        {
            n = 0;
        }
    }
    else
    {
        n = n;
    }
    
    return n;
}
",
3a2534fb0ac1dc3651141e9a0bd5b1830ff648bb,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""small ticket"";
        }
        else
        {
            return ""big ticket"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""small ticket"";
        }
        else
        {
			return ""big ticket"";
        }
    
    }
}  
",
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
",
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",
b792f65710603537369d8658da16396d60eece84,"public String atFirst(String str)
{
    int len = str.length();
    
    if (len >= 2)
    {
        return str.substring(0,2);
    }
}
",
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",
3b24fd13da29cf3eaf6ecbfb5f5dfeb4cbdd236e,"public int noTicket(int 0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
",
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
1f5da1cd2474bb70a08ba1ebec2f36fe938b688f,"public String atFirst(String str)
{
    int length = str.length();
    if (length>=2)
    {
        return str.substring(1,2);
    }
    else if (length==1)
    {
        return str.charAt(1) + ""@"";
    }
    else 
    {
        return ""@@"";
    }
}
",
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",
3b6a3747d8a8ba7e00b3386b0a9baaad77d0edec,"public boolean sameEnds(int[] nums, int n)
{
    /**
    int same=0;
    for (int i=nums.length-1;i>0 ;i--)
    {
        if (nums[0]!=nums[i])
        {
            same++;
        }
    }
    */
    int same=0;
    int end = nums.length-i;
    for(int i=nums.length; i > 0; i--)
	{
		if(nums[same] != nums[end])
			return false;
		else
		{
			same++;
			end++;
		}
	}
    return true;
        
}
",
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
",
ff2b6bd2c759f5b6b3785903e523884601b6c7c6,"public int countCode(String str)
{
  	int count = 0;
    int len = str.length();
    for (int i = 0; i < len - 3; i++)
    {
        int iCo = str.indexOf(""co"", i);
        if (iCo!= -1) 
        {
        String code = str.substring(iCo, iCo+4);
        if (code.endsWith(""e""))
            count++;
        }
    }
    return count;
}
",
462c32a961f9e37900f45d8ce5b1817ecd8a2c74,"public int noTicket(0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
",
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
",
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
",
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
a43f9daaa9b5cc98acfe197b9157d9de345febf6,"public int[] frontPiece(int[] nums)
{
    for (int numbers: nums; int i = 0; i < 2; i++)
    {
        int number[i] = numbers;
    }
    return number;
}
",
b66c9a76c6567bcfc33f81fb4e1e0bfe1c43ea5c,"public String atFirst(String str)
{
    int length = str.length();
    if( length >= 2 )
    {
        return str;
    }
    else
    {
        if( length == 1 )
        {
            return str + ""@"";
        }
        else
        {
            return ""@@"";
        }
    }
}
",
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",
f30217e0a8b3693a1cc6887f6715977f5cc51c00,"public int[] fix45(int[] nums)
{
	for(int i = 5; i < nums.length - 1; i++)
	{
		if(nums[i] == 3 && nums[i+1] != 4)
		{
			for(int j = 1; nums[j] != 4; j++);
			nums[j] = nums[i+1];
			nums[i+1] = 4;
		}
	}
	return nums;
}
}
",
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
",
e73f15cebf791aa932347617662e3a6641135a35,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
    //return nums;
    if (nums.length >= 2)
    {
        
   		int start = nums[0];
    	for (int i = 0; i < nums.length - 1; i++)
    	{
     	//int j = 1;
        //nums[i] = nums[j];
        	nums[i] = nums[i + 1];
    	}
    
        	//nums[nums.length - 1] = start;
        /*if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }*/
    
              	
    }
    
    return nums;   
}
",
7f69c4115a9df00204939b23d0bc6db187447e93,"public boolean xyzThere(String str)
{
    //return(str.indexOf(""xyz"") != -1 && str.indexOf("".xyz"") == -1);
    for(int i = 0; i < str.length(); i++){
        if(str.indexOf(""xyz"",i) != -1){
            if(str.lastIndexOf("".xyz"",i+1) != i+1){
                return true;
            }
        }
    }
    return false;
}
",
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
",
1f9cfe0ad15be359081183aba85c155aa774ac9b,"public String plusOut(String str, String word)
{
    int wLen = word.length();
	int pos = str.indexOf(word);
	int len = str.length();
	int i = 0;
	StringBuilder stbuild = new StringBuilder(len);
	while(pos != -1)
	{
		while(i < pos)
		{
			stbuild.append('+');
			i++;
		}
		stbuild.append(word);
		i = pos + wLen;
		pos = str.indexOf(word, i);
	}
	for(; i < len; i++)
		stbuild.append('+');
	return stbuild.toString();
}
",
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",
e1f80924e2fa9aba6195f174166b813b13fea19e,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 && day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
bee02e7721832f110174bc61c71f0ec2fe592dc7,"public int[] fix45(int[] nums)
{
    int size = nums.length;
    int i = 0;
    int k = 0;
    bob:
    for (; i < size; i++)
    {
        if (nums[i] == 4)
        {
        	for (; k < size; k++)
            {
            	if (nums[k]==5)
                {
                	int see = nums[i+1];
                    nums[i+1] = nums[k];
                    nums[k] = see;
                    i++;
                    continue bob;
                }
            }
        }
    }
    return nums;
}
",
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
",
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",
0745e670c9437c03200a3e652fd7a5a0bf1399ee,"public String plusOut(String str, String word)
{
    int strLength = str.length();
    int wordLength = word.length();
    int position = str.indexOf(word);
    int i = 0;
    StringBuilding strbuild = new Stringbuilder(strLength);
    while(position != -1)
    {
     	while ( i < position)
        {
         	strbuild.append('+');
            i++;
        }
        strbuild.append(word);
        i = pos+ wordLength;
        position = str.indexOf(word, i);
    }
    for(i; i<len; i++)
        strbuild.append('+');
    return strbuild.toString();
}
",
f055965f9ae32739c7b92d6b5ecbca90565fcdcd,"public String without2(String str) 
{
    int len = str.length();
    if (str(0) == str(len - 2) && str(1) == str(len - 1))
    {
        String sss = null;
        sss.append(str,2,len-1);
            return sss;
    }
    else
    {
        return str;
    }
}
",
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",
b23234bdfab0d909602eff7d91c9461d3957de8f,"public String repeatEnd(String str, int n)
{
    String last = new String();
    for (int i = 0; i <= n; i++)
    {
        last = last.concat(str.substring(str.length() - n, str.length()));
    }
    return last;
}
",
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
",
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
",
ebebbcd628f8bb7d6584e336ffd2ddf31ba9b356,"public int countCode(String str)
{
    int s = 0;
    for(int i = 1; i < str.length(); i++)
    {
    	if(str.charAt(i) == 'c')
        {
            if(str.charAt(i+1) == 'o')
            {
                if(str.charAt(i+3) == 'e')
                {
                    s++;
                }
            }
        }
    }
    return s;
}
",
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",
fe6fec4e82f5018dd3ccca8dad46e47bc9166cd4,"public int[] withoutTen(int[] nums)
{
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] == 10)
        {
            nums.remove(i);
        }
    }
    return nums;
}
",
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",
1f5c3d8a073e2b5edf9214c7e6888105496b4151,"public int[] seriesUp(int n)
{	
    int[] list = new int[n * (n + 1)/2];
    int max = 1;
    int count = 0;
    for (int i = 0; i < list.length; i++)
    {
        list[i] = max - count;
        if (list[i] == max)
        {
            count = max;
            max++;
        }
        else
        {
            count--;
        }
    }
    return list;
    
}
",
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
",
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
",
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
",
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
",
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
",
1c957c2c210827e570fb7b174ac0002ce955e35f,"public String without2(String str) 
{
    int strLen = str.length();
    if (strLen < 2)
    {
        return str;
    }
    else if (strLen == 2)
    {
     return """";   
    }
    else if (str.substring(1, 2) == str.substring(strLen - 1 , strLen))
    {
     	return ""test""//str.substring(2, strLen);   
    }
    return str;
}
",
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
2adbb39337217f673d1ee6e9632faef8d959ee31,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2)
    {
		return 0;
    }
	if(you >= 8 || date >= 8)
    {
		return 2;
    }
    else
    {
        return 1;
    }
}
",
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
",
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}",
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",
05b23fcc737fcb6b3c50cd8949cae2a6c045d1a0,"public String[] fizzBuzz(int start, int end)
{
    String[] series = new String[end - start];
    for (int i = 0; start < end; i++)
    {
        if ((start % (3 * 5)) == 0)
        //when it is multiples of both 3 and 5
        {
        	series[i] = ""FizzBuzz"";
        }
        else if ((start % 5) == 0)
        {
            series[i] = ""Buzz"";
        }
        else if ((start % 3) == 0)
        {
            series[i] = ""Fizz"";
        }
        else
        {
            series[i] = String.valueOf(start);
        }
        start++;
    }
    return series;
        
}
",
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
",
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",
4608082136fcae872bcda006b0d157435a82925d,"
public int[] withoutTen(int[] nums)
{
 	//int[] pi = new int[] {nums};  
    //import java.util.*;
    java.util.List<Integer> holder = new java.util.ArrayList<Integer>();
   
     for(int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
         holder.add(nums[i]);
        }
    }
     for(int i = 0; i < nums.length; i++)
    {
        if (holder.size() > i)
        {
            nums[i] = holder.get(i);
        }
        else
        {
            nums[i] = 0;
        }
        
    }
    return nums;
    
}
",
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",
27ced9f412138c0fe596bab23d6119a3c93f5686,"public int[] shiftLeft(int[] nums)
{
    int length = nums.length;
    int special = nums[0];
    if (length == 0)
    {
        return nums;
    }
    for (int i = 0; i < length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[length - 1] = special;
    return nums;
}
",
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
",
9ab9adfbd148ab36fea8046986a42317f6b53a8e,"public String plusOut(String str, String word)
{
      String output = """";
      int i = 0 ;

      while(i < str.length() ) 
      {
         if (str.substring(i).startsWith(word)) 
         {
            output = output + word;
            i = i + word.length();
         } 
         else 
         {
            result = result + ""+"" ;
            i++;
         }
      }

      return output;
}",
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",
4cc916649df329cb2108d1f68b228a173f91b30d,"public int makeChocolate(int small, int big, int goal)
{
    if (small + (5*big) < goal)
    {
        return -1;
    }
    else
    {
        if ((goal / 5) <= big)
        {
            int r = goal % 5;
            if (r <= small)
            {
                return small;
            }
            else
            {
                return -1;
            }
        }
        else
        {
            if ((goal - (5 * big)) <= small)
            {
                return goal - (5 * big);
            }
            else
            {
                return -1;
            }
        }
    }
    
    
}
",
41fbb0ec3f09d19d78c9bae81f5a75e31cf74218,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",
e2840899f1aac60ee4fa7b06722a656e8bb2fb17,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 )
    {
        return true;
    }
    if ( Math.abs(a + b) == 6 || Math.abs(a - b) == 6) {
        return true;
    }
    return false;
}
",
4e43740dacd2244c66fa59b287af405f40ba88f8,"public boolean endOther(String a, String b)
{
    for (int i = 0; i < a.length(); i++)
    {
        if 
        (a.toLowerCase().substring(i).equals(
            b.toLowerCase()));
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",
3b24fd13da29cf3eaf6ecbfb5f5dfeb4cbdd236e,"public int noTicket(int 0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
",
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",
fb3b878ff7c89e0940c66e22faadec79ac2996e7,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i: int[])
    {
     	sum = sum + i;
    }
    return sum;
}
",
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
",
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",
a2f4dd138e591312ee1e4d2886035072ec1e3cf4,"public boolean xyzThere(String str)
{
    str = str.toLowerCase();
    if (str.indexOf(""xyz"") >= 0)
    {
        if (str.charAt(str.indexOf(""xyz"") - 1).equals("".""))
        {
            return false;
        }
        else
        {
            return true;
        }
    }
    else 
    {
        return false;
    }
}
",
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",
51d726f3ba7d0bdf6df41f275be7d3e5ae0b21ed,"public String getSandwich(String str)
{
    int firstBread = -1;
    int lastBread = -1;
    for (int i = 0; i < str.length() - 5; i++)
    {
        if (str.substring(i, i+5).equals(""bread""))
        {
            firstBread = i;
            i = str.length();
        }
    }
    for (int j = str.length() - 5; j > 0; j--)
    {
        if (str.substring(j, j+5).equals(""bread""))
        {
            lastBread = j;
            j = 0;
        }
    }
    if(firstBread != -1 && lastBread != -1 && firstBread != lastBread)
        return str.substring(firstBread + 5, lastBread);
    return """";
}
",
d5ce0fb7cf0b155cde53ceb7bede5737956327c9,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        for (int j : array)
        {
            if (i != 10)
            {
                array[j] = i;
                break;
            }
        }
    }
    
   return array;
}
",
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",
2eefd35700230f8780f45d01d416afdecdd69994,"public int caughtSpeeding(int speed, boolean isBirthday)
if(isBirthday)
{
	speed -= 5;
}
if(speed <= 60)
{
    return 0;
}
else if (speed <= 80)
{
    return 1;
}
else
{
    return 2;
}
    
",
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
",
79f2da1916c858f4bd63251e6ec244aad4272418,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
    {
		return n;
    }
    else
    {
		return 0;
    }
}
public int noTeenSum(int a, int b, int c)
{  
    return (fixTeen(a) + fixTeen(b) +fixTeen(c)); 
}
",
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",
1607ad1277faa6509f0ec7a5452e0b3f9b1280e4,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        int a = array[0];
            if (i != 10)
            {
                array[a] = i;
                a++;
            }
    }
    
   return array;
}
",
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",
bee02e7721832f110174bc61c71f0ec2fe592dc7,"public int[] fix45(int[] nums)
{
    int size = nums.length;
    int i = 0;
    int k = 0;
    bob:
    for (; i < size; i++)
    {
        if (nums[i] == 4)
        {
        	for (; k < size; k++)
            {
            	if (nums[k]==5)
                {
                	int see = nums[i+1];
                    nums[i+1] = nums[k];
                    nums[k] = see;
                    i++;
                    continue bob;
                }
            }
        }
    }
    return nums;
}
",
0596e9fad0e491fa66802102678ad39fda317949,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
    
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
        return num + (10 - round);
    else 
        return num + (round - 10);
    
}
",
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
",
bedb2c2c407cfc6f84128d3bcf6e102d6628dd32,"public boolean sameEnds(int[] nums, int n)
{
    if (n <= 1)
    {
    	for (int i = 0; i <= n; i++)
    	{
            if (nums[i] != nums[nums.length - 1 - i])
        	{
            	return false;
        	}
    	}
    }
    else
    {
        for (int i = 0; i <= n; i++)
    	{
            
            else if (nums[i] != nums[nums.length - n + i])
        	{
            	return false;
        	}
    	}
        
    }
    return true;
}
",
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",
d5ce0fb7cf0b155cde53ceb7bede5737956327c9,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        for (int j : array)
        {
            if (i != 10)
            {
                array[j] = i;
                break;
            }
        }
    }
    
   return array;
}
",
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
",
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",
953a61708a9b85f6837a80d38d31405f572a65ed,"public int sum3(int[] nums)
{
    int sum3 = 0;
    for (int i = 0; i < nums.size(); i++) {
		sum3 = sum3 + nums[i];
    }
    return sum3;
}
",
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",
86757d01e597c85e23352aeb4e2d80fde96657bd,"public int[] shiftLeft(int[] nums)
{
    int[] foo;
    foo = new int[nums.length];
    if (nums.length == 0)
    {
    	return foo;
    }
  	for (int i = 0; i < nums.length-1; i++) 
    {
    	if (i > 0)
        {
            foo[i] = nums[i+1];
        }
    }
  	if (nums.length > 1)
    {
    	foo[0] = nums[1];
    }
  	foo[nums.length-1] = nums[0];
  	return foo;
}
",
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
",
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
",
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
",
b66c9a76c6567bcfc33f81fb4e1e0bfe1c43ea5c,"public String atFirst(String str)
{
    int length = str.length();
    if( length >= 2 )
    {
        return str;
    }
    else
    {
        if( length == 1 )
        {
            return str + ""@"";
        }
        else
        {
            return ""@@"";
        }
    }
}
",
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",
684d16d1fe00b522bc43f3c44174bcb4ccab14db,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && b == c && a == c)
    {
        result = 20;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    else
    {
        result = 10;
    }
    return result;
}
",
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
",
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",
a2c77eb2341d2107484dea64721c8eb1fb2b5c9b,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else if (c == 13)
    {
    	sum = a + b;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum;
    }
}
",
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",
8fe89f0000f53d58016dc77d2e78c0f3a582d500,"public int countCode(String str)
{
    str = str.toLowerCase();
    String frs = ""co""
    int len = str.length();;
    int count = 0;
    if (len < 4)
        return 0;
    while (len > 0)
    {
    	if (!str.substring(0,2).equals(frs) && str.charAt(3)!='e')
        {
            str=str.substring(1,len);
       	 	len--;
        }
        else
            count++;
            
    }
    return count;
    
}
",
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
",
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",
e444710aa658e2dde4799f8965284cd20bc98f6a,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
        int even = 0;
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;
}
",
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
",
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}",
a77cf61f1d235b19831c14399114810bc8b89144,"public int[] shiftLeft(int[] nums)
{
    int[] array = new int[nums.length];
    if ( nums.length >= 2 ) {
        for ( int i = 1; i < nums.length; i++ ) {
            array[i-1] = nums[i];
            array[nums.length - 1] = nums[0];
        }
        return array;
    }
    else
    {
        return nums;
    }
}
",
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",
6f412fb97dacfeab711397d737336f16f8b3a81c,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder();
    for (int i = 0; i < n; i++)
    {
    	sb.append(str.charAt(str.length()-1));
    }
    return sb.toString();
}
",
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",
1f5c3d8a073e2b5edf9214c7e6888105496b4151,"public int[] seriesUp(int n)
{	
    int[] list = new int[n * (n + 1)/2];
    int max = 1;
    int count = 0;
    for (int i = 0; i < list.length; i++)
    {
        list[i] = max - count;
        if (list[i] == max)
        {
            count = max;
            max++;
        }
        else
        {
            count--;
        }
    }
    return list;
    
}
",
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
",
caec91f2ba0d25b3a96d93bbc7e6ff92f4dfdd72,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off""
        }
    }
    else if (day > 0 && day < 6)
    {
        return ""7:00"";
    }
    else
    {
        return ""10:00"";
    }
}
",
b62f1274c56d44cf8761535a5c06a838683ec7c5,"public boolean sameEnds(int[] nums, int n)
{
    boolean a = false;
    for	(int i = 0; i < n; i++)
    {
        if (nums[i] == nums[nums.length - n + i])
        {
            a = true;
        }
        else
        {
            a = false;
        }
    }
    return a;
}
",
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
",
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
",
4afa993dcfa50e1dfc676d02d355a13166a4eaad,"public int caughtSpeeding(int speed, boolean isBirthday)
{
        
    if (isBirthday)
    {
        speed = speed - 5;
        
    }
    
    if (speed < 60)
    {
        return 0;
    }
    
    else if (60 < speed < 80)
    {
        return 1;
        
    }
    
    else if (speed > 81);
    {
        return 2;
        
    }
    }
    
    
    
        
   

",
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
",
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
4465ac2e7e70f3ac5ddbd490bd262cc0c4f6249d,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        grid[0] = nums[0];
        grid[1] = nums[1];
        return grid[];
    }
}
",
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",
557026f064a89be4df627a611b8a898f7a2fc2f3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if ((nums[i] != val) || (nums[i + 1] != val))
        {
            return flase;
        }          
        
    }
     return false;
}
",
c5d364aebfeaf536888aa2177a5459f2c3dcb34e,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i < nums.length; i++)
    {
    	if (i+1 < nums.length && i-1 >= 0)
        {
        	if (nums[i+1] == val || nums[i] == val)
            {
            	everywhere = true;
                
            }            
        }        
    }
    return everywhere;
}
",
54e8d733e91a15a740f7a7e802894add4c55a348,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
        {
			count++;
        }
		else
		{
			if(count == 1)
            {
				return false;
            }
			else
            {
				count = 0;
            }
		}
	}
	return (count != 1);
}
",
24d47a65834fd02d0c753208bf0349095c36915f,"public boolean sameEnds(int[] nums, int n)
{
    int len = string.length();
  	String fin = """";
  	String tmp = """";

  	for (int i = 0; i < len; i++) {
    	tmp += string.charAt(i);
    	int tmplen = tmp.length();
    	if (i < len / 2 && tmp.equals(string.substring(len-	tmplen,len))){
      		fin = tmp;
        }
  	}
  	return fin;

}
",
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",
0a2e6956d8d8ab433e2ff2bce3b19759edab6e63,"public int[] fizzArray(int n)
{
	int[] newNumbers = new int[n];
    for (int i = 0; i < n; i++)
    {
        newNumbers[i] = i;
    }
    return newNumbers;
}
",
22d46f636a2ecaa8a80e55e579500a4ff8e2a188,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            nums[i+1] = 5;
        }
    }
    
    return nums;
}
",
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
",
f5d7a8149b93de3c18b1d9776b959ae91d8a1075,"public int sum67(int[] nums)
{
    int result = 0;
    int rest = 0;
    
    for (int i = 0; i < nums.length, i++)
    {
        if(nums[i] == 6)
        { 
            for (int j = i + 1; j < nums.length, j++)
            {
                if (nums[j] != 7)
                {
                    rest += nums[j];
                }
            }
        }
        else if (nums[i] != 7)
        {
            result += nums[i];
        }
    }
    
    return result - rest;
}
",
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
",
5080cbff9febce53b7162b24a534bb411cfadeea,"public String without2(String str) 
{

    int strSize = str.length();
    String first2 = str.substring(0,2);
    String last2 = str.substring(strSize - 2, strSize);
    if (strSize > 1)
    {
        if (first2.equals(last2))
        {
        	return str.substring(2);
        }
        else
            return str;
    }
    else
        return str;
    
}
",
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
",
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",
93cbb22b6a1b1a6803c91b97ad0c9e1017120cfa,"public boolean love6(int a, int b)
{
    if ((a == 6) || (b == 6))
    {
        return true;
    }
    else if ((Math.abs(a - b) == 6) || ((a + b) == 6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
0f7eb7c6740ccd257c3f6da081cc3f753e5a2516,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int clumpSize = this.sizeClump(nums, nums[i], i);
                i = i + clumpSize;
                counter++;
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int nextNum = 0;
    while (nums[start] == initValue)
    {
        nextNum++;
    }
    return nextNum;
}",
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
462c32a961f9e37900f45d8ce5b1817ecd8a2c74,"public int noTicket(0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
",
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",
e93b94f6835046c42b16cfe507547d10945a4c3a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++) {
		if ((nums[i-1] == val) && 
            (nums[i] == val) && nums[i+1] == val) {
         	 return true;
        }
        else {
			return false;
        }
    }
}
",
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
",
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
",
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",
6278dac5854b7ab18fc810573a8a9c24f9ba2d83,"public int sum67(int[] nums)
{
    int result = 0;
    int rest = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if(nums[i] == 6)
        { 
            for (int j = i + 1; j < nums.length; j++)
            {
                if (nums[j] != 7)
                {
                    rest += nums[j];
                }
            }
        }
        else if (nums[i] != 7)
        {
            result += nums[i];
        }
    }
    
    return result - rest;
}
",
7a311480e1038e58bd263cd3dd91b77fce57edfa,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}",
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",
8536c5f768b1adb326e2c34c566a310f311e86dc,"public boolean xyzThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.CharAt(i+1) == 'y' 
            && str.CharAt(i+2) == 'z')
        {
            if (i == 0 || str.CharAt(i-1) != '.')
                return true; 
        }
    }
    return false; 
}
",
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",
e5f4a1d12a2732c56ffa6463cfe4561bd754d8e2,"public String atFirst(String str)
{
    if (str.length >= 2)
    {
        return (str.substring(0,2));
    }
    else
    {
        return (str + ""@"");
    }
}
",
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",
c7972a0c52578814fdc1e75cdf7b2b9b87eaaa39,"public boolean evenlySpaced(int a, int b, int c)
{
    if ( a > b && b > c || c > b && b > a)
    {
        return ( a - b == b - c);
    }
    else if ( b > a && a > c || c > a && a > b)
    {
        return ( b - a == a - c);
    }
    else
    {
        return ( a - c == c - b);
    }
    
}
",
a9a1ee6f18a4b5dd8b59e0d51fbc951d3af5b18d,"public int sum67(int[] nums)
{
    int sum = 0;
    if (nums.length > 0)
    {
        for (int i = 0; i < nums.length; i++)
        {
         	if(nums[i] == 6)
            {
                nums[i] = 0;
            	for(int j = i; j < nums.length; j++)
                {
                    
                }
            }
            sum = sum + nums[i];
        }
    }
    
	return sum;    
}	
",
9580bc9ec9768fbe373460d6ae91ff54ca05bf71,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if(nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
d5ce0fb7cf0b155cde53ceb7bede5737956327c9,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        for (int j : array)
        {
            if (i != 10)
            {
                array[j] = i;
                break;
            }
        }
    }
    
   return array;
}
",
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
",
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
",
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",
5455ec6afe437e7506504e1f1428a5a0b96a5669,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
    if (a > b)
    {
       return blackjack(a, 0);
    }
    else if (b > a)
    {
        return blackjack(0, b);
    }
    } 
    return 0;
}

",
f055965f9ae32739c7b92d6b5ecbca90565fcdcd,"public String without2(String str) 
{
    int len = str.length();
    if (str(0) == str(len - 2) && str(1) == str(len - 1))
    {
        String sss = null;
        sss.append(str,2,len-1);
            return sss;
    }
    else
    {
        return str;
    }
}
",
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",
76d327977c3b6df3e9ab9612b5ea8123306e3035,"public int sum13(int[] nums)
{
    int total = 0;
    if (nums != null) {
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 13) {
                if (nums[i] != 0 && nums[i-1] != 13) {
                	total = total + nums[i];
                }
            }
        }
        return total;
    }
    return 0;
}
",
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
",
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
",
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
",
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
",
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
",
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",
6f7f61c8665e5fbb33bb6cdb300c38706ffa9630,"public int centeredAverage(int[] nums)
{
    int average = 0;
    int sum = 0;
    int low = nums[0];
    int high = nums[0];
    boolean found = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > high)
        {
            high = nums[i];
        }
        
        if (nums[i] < low)
        {
            low = nums[i];
        }
    }
    
    for (int a : nums)
    {
        sum = sum + a;
    }
    
    sum = sum - low - high;
    
    average = sum / (nums.length - 2)
    
    return average;
}
",
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",
d17244a79757f570de9d8170c3085ee0f6678c21,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom && isAsleep)
        {
            return true;
        }
        else if (isMom && !isAsleep)
        {
            return false;
        }
        else if (!isMom && isAsleep)
        {
            return false;
        }
        else if (!isMom && !isAsleep)
        {
            return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return;
}",
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
",
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",
4cc916649df329cb2108d1f68b228a173f91b30d,"public int makeChocolate(int small, int big, int goal)
{
    if (small + (5*big) < goal)
    {
        return -1;
    }
    else
    {
        if ((goal / 5) <= big)
        {
            int r = goal % 5;
            if (r <= small)
            {
                return small;
            }
            else
            {
                return -1;
            }
        }
        else
        {
            if ((goal - (5 * big)) <= small)
            {
                return goal - (5 * big);
            }
            else
            {
                return -1;
            }
        }
    }
    
    
}
",
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",
8bf0c02326a8dece6634c3b907e8da6aa6c7a3cf,"public int countCode(String str)
{
    if (str.length() < 4)
        return 0;
    
    if (str.indexOf(""c"") == -1)
        return 0;
    
    int total = 0;
    
    for (int i = str.indexOf(""c""); i < str.length() - 3; i++)
    {
     	   if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i+3) == 'e')
           {
            	total = total + 1;	   
           }
    }
    return total;
}
",
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",
57de305af5c397df593d610c754a2029157ce03a,"public int[] tenRun(int[] nums)
{
    for (int i =0; i <nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int j = i+1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i]; 
            }
        }
    }
    
    return nums; 
    
}
",
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",
03ae950e7440ff1b5b100af214ca4754168a2ff2,"public int makeChocolate(int small, int big, int goal)
{
    if ( goal <= 5 * big)
    {
       int remainder = goal - 5*big;
    }
    else
    {
        remainder = goal % 5;
    }
    if (remainder<= small)
    {
        return remainder;
    }
    else 
    {
        return -1;
    }
    
    
}
",
c6a7e900d8268e52e52d9619cadc6f8e9dfd493b,"public int[] withoutTen(int[] nums)
{
    int newArray[] = new int[nums.length];
    for(int val : newArray)
        val = 0;
    
    int newIndex = 0;
    for (int i = 0; i < nums.length; i++){
    	if(nums[i] != 10)
            newIndex[newIndex++] = nums[i]; 
    }
    
    return newArray;
}
",
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
",
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
",
4ba46181a66bb2f3cf45d38876db8736b1ebda46,"public boolean in1To10(int n, boolean outsideMode)
{
    return ((n >= 1 && n<=10 && !outsideMode) || (n > 10 || n < 1 && outsideMode));
}
",
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
",
10af8ae87e8d5fab568a4bc61c1cbcdf1cf7e4e3,"public boolean xyBalance(String str)
{
    boolean y = false;
    for(int i = 0; i < str.length() - 1; i++)
        {
       		if(str.charAt(i) == 'y')
            {
                y = true;
            }
        	if(str.charAt(i) == 'x' && !y)
            {
                return false;
            }
   		}
    return true;
}
",
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
",
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
",
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",
76d327977c3b6df3e9ab9612b5ea8123306e3035,"public int sum13(int[] nums)
{
    int total = 0;
    if (nums != null) {
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 13) {
                if (nums[i] != 0 && nums[i-1] != 13) {
                	total = total + nums[i];
                }
            }
        }
        return total;
    }
    return 0;
}
",
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
",
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",
6a623e78b320858b018881a4c447f0285bde0276,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            int temp = nums[i];
            while (nums[i+1] % 10 != 0 || i == nums.length)
            {
                nums[i] = temp;
                i++;
            }
        }
    }
    return nums;
}",
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",
d866157db78f6eb45be705042a8b581075d47972,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    	if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
            return a.sb;
    	}
    
    
}
",
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
",
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",
67512e6abc150f86462e6ffdaabd155ce19ea2c2,"public int[] seriesUp(int n)
{
    int[] finding = new int[n * (n+1) / 2];
    int i = 0;
    for (int j = 1; j <= n; ++j)
        for (int k = 1; k <= j; ++k)
            result[i++] = k;
    return result;
}
",
236e13072f3f7fe1b6012230f0e6c4fa79e59798,"public boolean bobThere(String str)
{
    if(str.contains(""b""))
    {
        while(!str.startsWith(""b""))
        {
            str = str.substring(1);
        }
        if (str.length() >= 3)
        {
            if(str.substring(2).startsWith(""b""))
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        else
        {
         return false;   
        }
    }
    else
    {
     return false;   
    }
}
",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
8a18265b0731d20f4721addcf3d10d70eaee3d62,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
        return true;
    if ((a + b) == 6 || Math.abs(a - b) == 6);
    	return true;
}
",
9222afd237f2a153dec01f15809e88ec81bac994,"public String plusOut(String str, String word)
{
    String trivialEnd = """";
    int n = 0;
    
    while (n <= str.length())
    {
       if (str.substring(n).startsWith(word))
       {
           trivialEnd += word;
           n += word;
           
       }
        else 
        {
            trivialEnd += '+';
            n++
        }   
    }   
    return trivialEnd;
}
",
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
",
87a331d0b690ad01a48575ef537fbbc928271d6f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int x = i + 1; x < nums.length; x++)
            {
                if (nums[i] % 10 == 0 && nums[x] % 10 != 0)
                {
                    nums[x] = nums[i];
                }
            }
        }
    }
    
    return nums;
}
",
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
",
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",
6bcfc4f8f71961def49e25a62a3705be7faac429,"public int[] fix45(int[] nums)
{
    int i = 0;
    int j = 0;
    while(j < nums.length && nums[j] != 5)
        j++;
    while(i < nums.length)
    {
    	if(nums[i] == 4)
        {
        	int temp = nums[i+1];
            nums[i+1] = nums[j];
            nums[j] = temp;
            
            while((j < nums.length && nums[j] != 5) || j ==i+1)
                j++;
        }
        i++;
        
    }
    return nums;
}",
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}",
eec3b28394fdf34d94959f5b27d3bcb590bc286d,"public boolean xyBalance(String str)
{
    int count = 1;
    char position;
	for (int i = 0; i < str.length(); i++)
    {
        position = str.charAt(i);
    	if (position == 'x')
        	count = 0;
    	if (position == 'y')
        	count = 1;
    }
    return count = 1;
}
",
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",
41fbb0ec3f09d19d78c9bae81f5a75e31cf74218,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
7456c11888628de105891f3f5bc262ecd54ad7d3,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        if (day == 0 || day == 6)
        {
            return ""off""            
        }
    }
    else
        if (day > 0 && day < 6)
        {
            return ""7:00"";
        }
        if (day == 0 || day == 6)
        {
            return ""10:00""            
        }
    
}
",
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",
85c4da3eae44449610d4abcaabc40f355189f866,"public boolean twoTwo(int[] nums)
{
    for (int i=0; i<(nums.length); i++)
	{
		if(nums[i]==2)
		{
			i++;
			if(!(i<(nums.length)) || nums[i] !=2) 
    		{
        		return false;
    		}
			while(i<nums.length && nums[i] ==2) i++;
			}
		}
	return true;
}
",
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
",
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",
a23678b6f1ed32125aafce452d7f4f6449fb3591,"public int makeChocolate(int small, int big, int goal)
{
    int numLeft = goal % 5;
    if ((small + (big*5)) < goal) // if total number of bars is not enough
    {
        return -1;
    }
    else if ((big * 5) == goal) 
    {
        return numLeft;
    }
    if (numLeft <= small)
    {
        return numLeft;
    }
    else
    {
        return goal - (big*5);
    }
}
",
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
50e38ea828c8b0ad18791c7c955b37bad6c9d4bc,"public boolean xyzThere(String str)
{
    int a = str.indexOf(""xyz"");
    int b = str.lastIndexOf(""xyz"");
    return ( a != -1 || b != -1);
}
",
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
",
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",
0745e670c9437c03200a3e652fd7a5a0bf1399ee,"public String plusOut(String str, String word)
{
    int strLength = str.length();
    int wordLength = word.length();
    int position = str.indexOf(word);
    int i = 0;
    StringBuilding strbuild = new Stringbuilder(strLength);
    while(position != -1)
    {
     	while ( i < position)
        {
         	strbuild.append('+');
            i++;
        }
        strbuild.append(word);
        i = pos+ wordLength;
        position = str.indexOf(word, i);
    }
    for(i; i<len; i++)
        strbuild.append('+');
    return strbuild.toString();
}
",
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",
617e080aa52b2079a26ca214e0adcbebaeec5270,"public int makeChocolate(int small, int big, int goal)
{
   int rem = goal % 5;
   if (small + (5 * big) < goal)
   {
       return -1;
   }
  else if (rem <= small + (5 * big) >= goal)
  {
      return -1;
  }
  else
  {
      return small * rem;
  }
}
",
501aad78d9f445fad6785a696183d9f103460c21,"public int countCode(String str)
{
    int i = 0;
    int j = 0;
    String keyword = ""code"";
    String[] sentence = keyword.split(str);
    for (String word: sentence)
    {
        i++;
    }
    return i;
}
",
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}",
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;",
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
",
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",
458df3209fd88a511ec835c27a6b8e785183059c,"public boolean xyzThere(String str)
{
    int len = str.length() - 2;
    for(int i = 0; i < len; i++)
    {
        if (str.charAt(i) == ""x"" && str.charAt == ""y"" && str.charAt(i+2) == ""z"")
        {
            if(str.charAt(i-1) 1= ""."" || i==0)
            {
                return true;
            }
        }
    }
        return false;
}
",
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",
3b24fd13da29cf3eaf6ecbfb5f5dfeb4cbdd236e,"public int noTicket(int 0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
",
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",
161fe3c4150b0140a275c3c395e89e55917fe73c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0){
        return {};
    }
    int[] left = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++){
        left[i] = nums[i+1];
    }
    left[nums.length - 1] = nums[0];
    return left;
}
",
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",
414ebd6686fcd084388021a1e851c521dccfe7e8,"public int[] frontPiece(int[] nums)
{
    int[] newArray = new int[2];
    if (nums.size() >= 2) {
    	newArray.add(nums[0]);
        newArray.add(nums[1]);
        return newArray;
    }
    return nums;
}
",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
13588bafe7146875aeecd22626679f601f5f7f24,"public boolean bobThere(String str)
{
    int i;
    for (i=0; i < str.length()-3; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
d2f05cc468a84bb01f5d675dcfafb4beb9a0b4c9,"public int[] fizzArray(int n)
{
    int[] output = new int[n]();
    for(int i = 0; i < n; i++){
        output[i] = i;
    }
    return output; 
}
",
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
",
9294b03f96e7ba6c8ebb76fc9437bfadef40b777,"public int sum67(int[] nums)
{
	int sum = 0;
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 6)
        {
            for(int j = nums[i]; nums[i] =! 7; j++)
            {
            	sum + 0;
            }
        }
        else 
        {
        	sum += nums[i];
        }
            
    return sum;
}
",
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",
428a4330008980c438326abad1def09257e6d2d1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a > b && a < 21)
    {
        return a;
    }
    else (b > a && b < 21)
    {
     	return b;   
    }
}
",
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",
e3ca0205d988751a8bcc80a617f048d01dfa7c60,"public int[] tenRun(int[] nums)
{
    int[] ten = new int[nums.length];
    boolean isTen = false;
    int tenMult = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0 && nums[i] != tenMult)
        {
            isTen = true;
            tenMult = nums[i];
            ten[i] = nums[i];
        }
        
        else if (isTen)
        {
            ten[i] = tenMult;
        }
        
        else
        {
            ten[i] = nums[i];
        }
    }
 	return ten;
}",
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
",
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
",
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
",
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",
55d82777253a00d8ba398425451c87f2ce6bf43d,"public boolean xyBalance(String str)
{
	    
    for (int i = 0; i < str.length(); i++)
    {
        if (str.charAt(i) == 'x')
        {
            for (int j = 0; j < str.length(); j++)
            {
                if((i+j) < str.length())
                {
                	if((str.charAt(i+j) == 'y'))
	                {
						for (int k = 0; k < str.length(); k++)
                        {
                        	if((k+i+j) < str.length())
                            {
                            	if (str.charAt(k+i+j) == 'x')
                                {
                                	return false;
                                }
                                else if (str.charAt(str.length()-1) == 'y')
                                {
                                	return true;
                                }
                            }                            
                        }
                        return true;
        	        }

                }
            }
        }        
    }
    for (int z = 0; z < str.length(); z++)
    {
    	if (str.charAt(z) != 'x')
        {
        	for (int q = 0; q < str.length(); q++)
            {
            	if ((q+z) < str.length() && str.charAt(q+z) == 'x')
                {
                	return false;
                }
            }
        }
    }
    return false;
}
",
aabea47ca84d0a1de14a35d7e60fc6e1c88b9d75,"public boolean xyBalance(String str)
{
    int YS = str.indexOf('y');
    for(int i = 0; i < str.length(); i++) 
    {
        if(str.charAt(i) == 'x' && str.charAt(i>i) == 'y')
        {
            truth = true;
            
        }
        
    }
     return truth
}
",
e39a25aaad84b1961772be00d43af043549c8980,"public boolean twoTwo(int[] nums)
{
    boolean two = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i + 1] == 2)
        {
            two = true;
        }
    }
    return two;
}
",
4bbc3e204cd69131a96c0f7ab0f9c94499406204,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
        {
            return 10;
        }
    else if ((a == b) && (b == c) && (a == c))
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",
1f4ab776a038a2ea0754f23990cdf4dd73dad5ce,"public int makeChocolate(int small, int big, int goal)
{
    int smallBar = (goal % big)
        return smallBar;
}
",
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
",
f87b721de5fa4f5ff50d17d9cca6a2ce7875ebf3,"public int[] zeroMax(int[] nums) {

  int max = 0;

   

  for (int i = nums.length-1; i >= 0; i--) {

    if (nums[i] % 2 != 0)

      max = Math.max(max, nums[i]);

    if (nums[i] == 0)

          nums[i] = max;

  }

  return nums;

}

",
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",
08a8f18512884512a30b8a03fcabf51503771cf5,"public int[] seriesUp(int n)
{
    int[] ans = new int[n * (n + 1) / 2];
    int num = 0;
    for (int i = 1; i <= n; ++i)
    {
     	for (int j = 1; j <= n; ++j)
        {
         	ans[num++] = j;
        }
    }
    return ans;
}
",
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
",
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
",
a43f9daaa9b5cc98acfe197b9157d9de345febf6,"public int[] frontPiece(int[] nums)
{
    for (int numbers: nums; int i = 0; i < 2; i++)
    {
        int number[i] = numbers;
    }
    return number;
}
",
7a311480e1038e58bd263cd3dd91b77fce57edfa,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}",
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
",
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
",
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",
7bbe47ddbd540b9999602f687a555456a4122938,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	while (isBirthday == false)
    {
    	if (speed <= 60)
        {
            return 0;
        }
    	else if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    	else if (speed >= 81)
        {
            return 2;
        }
    }
    while (isBirthday == true)
    {
        if (speed <= 65)
        {
            return 0;
        }
    	else if (speed >= 66 && speed <= 85)
        {
            return 1;
        }
    	else if (speed >= 86)
        {
            return 2;
        }
    }
    return 1;
}",
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
",
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
",
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
083ca5818f3f055e87fb758cb9de020f40601414,"public int[] withoutTen(int[] nums)
{
    int[] ten = new int[nums.length];
    int result = 0;
    for (int i = 0;i<nums.length;i++)
    {
        if (nums[i] == 10)
        {
            nums[i] = 0;
        }
        if (nums[i] != 10)
        {
            ten[result++] = nums[i];
        }
    }
    return nums;
}
",
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",
5e5840b4728a9e257720a8c46d3285726a2ba053,"public boolean twoTwo(int[] nums)
{
    for(int i = 0; i < nums.length-2; i++)
    {
        if(nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
        if(nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
    }
    return true;
        
}
",
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",
7d59c6f7b74b41fec09dae83bbea25f6ce159f0f,"public int[] frontPiece(int[] nums)
{
    if(nums.length >= 2)
		return (nums[0] + nums[1]);
	if(nums.length == 1)
		return nums[0];
	return 0;
}
",
1889c30f0414785c8f5f8afe2dc4eaf09520169f,"public boolean twoTwo(int[] nums)
{
    boolean hasTwo = true;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 2) {
                if ((i != 0 && nums[i - 1] == 2) || (nums.length - 1 > i && nums[i + 1] == 2 )) {
                    hasTwo = true;
                    i++;
                } else {
                    hasTwo = false;
                }
            }
        }
        return hasTwo;
}
",
476282c2e0abd60f5061866fd402f17a5abacc73,"public int[] zeroMax(int[] nums)
{
    int oddNumber = 0;
    int[] newNums = new int[];
    for (int i = 0; i < nums.length; i++)
    {
        if (this.isOdd(nums[i]) && nums[i] > oddNumber)
        {
            oddNumber = nums[i];
        }
    }
    return newNums
}

public boolean isOdd(int num)
{
    if (num % 2 == 1)
    {
        return true;
    }
        else
            return false;
}
",
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
",
59ddcc8d2c64ff9c515cffec668bc32d2d983a48,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == false) {
    	if (day != 0 || day != 6) {
        	return(""7:00"");
        }
        else {
        	return(""10:00"");
        }
    }
    else {
    	if (day != 0 || day != 6) {
        	return(""10:00"");
        }
        else {
        	return(""off"");
        } 
    }
}
",
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
",
1d6179ccdc1c6fce139143f569025a679c1301a0,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        	largeOdd == nums[i];
        if (nums[i] == 0)
        	nums[i] == largeOdd;
    }
    return nums;
}",
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}",
0c056c7e8ab6d96355504d675bcd5d71af441a61,"public String atFirst(String str)
{
    return str.substring(1);
}
",
ac791e33437b3b26bd56526f8f1a68c958771022,"public int sum3(int[] nums)
{
    return nums[0]+nums[1]+nums[2];
}
",
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
",
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
2554504cf73dcc772aa6c40d5e1c117584eceb44,"public int sum13(int[] nums)
{
    int total = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i > 0)
        {
            if (nums[i] != 13 && nums[i - 1] != 13)
            {
                total += nums[i];
            }
        }
        else
        {
            if (nums[i] != 13)
            {
                total += nums[i];
            }
        }
    }
    
    return total;
}
",
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",
8e2fbb177f04d826bcf31a521e3d2d5c0a540cf5,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if(sum >= 10 || sum <= 19)
    {
    	return sum;
    }
    
    else if (sum<=9 || sum>=20) 
    {
    	return 20;
    }
    
    return 20;
}
",
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",
f975c769611523b9ff8e0c8e7baa2a5d2b94373c,"public boolean twoTwo(int[] nums)
{
    int i;
    for (i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i+1] != 2)
            {
                return false;
            }
            i = i +2;
        }
    }
    if (nums.length >= 3)
    {
	if (nums[nums.length - 1] == 2 && nums[nums.length - 2] != 2)
        {
            return false;
        }
    }
    else
    return true;
}
",
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
",
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
84dfd0d1e5c431468600f396b066dbde235e2bb8,"public int[] shiftLeft(int[] nums)
{
    int[] newList = new int[nums.length];
    return newList;
}
",
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",
6019a2d927f175c86e134452ff3a3b0ec8aaa33b,"public int[] frontPiece(int[] nums)
{
    if (nums.length >= 2)
    {
        int[] newnums = new int[2];
        newnums.add(nums[0]);
        newnums.add(nums[1]);
        return newnums;
    }
    else
    {
        return nums;
    }
}
",
e9684c37300ad2ff0907d6d517e96656ca70ab9b,"public boolean isEverywhere(int[] nums, int val)
{
   for(int i = 0; i < nums.length - 1; i++) {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
                
return true; 
}
",
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
8536c5f768b1adb326e2c34c566a310f311e86dc,"public boolean xyzThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.CharAt(i+1) == 'y' 
            && str.CharAt(i+2) == 'z')
        {
            if (i == 0 || str.CharAt(i-1) != '.')
                return true; 
        }
    }
    return false; 
}
",
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
",
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
",
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
",
e8c026b49d4d5468f73d155e84de3b7f6aa9087b,"public int makeChocolate(int small, int big, int goal)
{
    if(goal % 5 == 0) 
    {   
        if (goal/5 <= big)
        	return 0;
    	else 
            return -1;
    }
    else
    {
        if(goal % 5 <= small)
            small = goal % 5;
    		return small;
        else if
            return -1;
    }
}	
",
2a0f687acdeea9020ea4290975c99db3e6204800,"public int[] zeroMax(int[] nums)
{
    int greatest = 0;
    int[] newArray = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            for (int j = i; j < nums.length - 1; j++)
            {
                if (nums[j] % 2 != 0 && nums[j] != 0)
                {
                    greatest = nums[j];
                }
            }
            if (greatest != 0)
            {
                newArray[i] = greatest;
            }
        }
        else
        {
            newArray[i] = nums[i]
        }
    }
    return nums;
}
",
e773b35c4440baf407292a0e144e90ebd1fab1ce,"public int countCode(String str)
{ 
    int count = 0;
    for (int i = 0; i < str.length(); i++)
    {
  		int co =   str.indexOf(""co"");
        String newStr = str.substring(co, co+4);
        System.out.println(newStr);
        if (newStr.endsWith(""e""))
        {
            count++;
        }  
    }
    return count;
}
",
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
",
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",
c3f9d9c89be8302fbf11a1742a2668305b2fcaf4,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if(10 <= sum && sum <= 19)
        return 20;
              
    return sum;
    
}
",
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",
7f69c4115a9df00204939b23d0bc6db187447e93,"public boolean xyzThere(String str)
{
    //return(str.indexOf(""xyz"") != -1 && str.indexOf("".xyz"") == -1);
    for(int i = 0; i < str.length(); i++){
        if(str.indexOf(""xyz"",i) != -1){
            if(str.lastIndexOf("".xyz"",i+1) != i+1){
                return true;
            }
        }
    }
    return false;
}
",
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
",
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
",
1adf1201d219d6cf2893ea40470b60c2a19806f6,"public int countClumps(int[] nums)
{
    int count = 0;
    int i = 0;
    
    while (i < nums.length)
    {
        int val = nums[i];
        i++;
        int length = 1;
        
        while (i < nums.length && nums[i] == val)
        {
            i++;
            length++;
        }
        if (length > 1);
        {
            count ++;
        }
    }
    return count;
}
",
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
",
1c7f60afbb325cd1bf6ef9300fc570a4b484732e,"public int countEvens(int[] nums)
{	
   int total = 0;
  	for(int i = 0; i < nums.length; i++)
  {
     // int remain = nums[i] % 2;
 		if(nums[i] % 2; == 0)
 			{
 				total = total + 1;
 			}
  }
   return total;
}
",
fe6f1db71252da2edc7dfe1ed53b97e3e8c7d386,"public int roundSum(int a, int b, int c)
{
    int sum=0;
	sum=sum+round10(a);

	sum=sum+round10(b);

	sum=sum+round10(c);
	return sum;
}

public int round10(int num)
{
    if(num%10 >4)
    {
		return (((num/10)+1)*10);
    }
	else 
    {
        return ((num/10)*10);
    }
}
",
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
",
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",
50e38ea828c8b0ad18791c7c955b37bad6c9d4bc,"public boolean xyzThere(String str)
{
    int a = str.indexOf(""xyz"");
    int b = str.lastIndexOf(""xyz"");
    return ( a != -1 || b != -1);
}
",
e444710aa658e2dde4799f8965284cd20bc98f6a,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
        int even = 0;
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;
}
",
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}",
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
",
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",
c0e74847daded5db86a45f95da024ec482c4f9a4,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19}
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
",
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
0cecfb01fbe27f29bd99b59b030edfdabc4b74d6,"public int[] frontPiece(int[] nums)
{
    int size = nums.length;
    int fir;
    if (size < 2)
    {
        return nums;
    }
    fir = new int[2];    
       
        return nums;
    
}
",
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
",
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",
c6a7e900d8268e52e52d9619cadc6f8e9dfd493b,"public int[] withoutTen(int[] nums)
{
    int newArray[] = new int[nums.length];
    for(int val : newArray)
        val = 0;
    
    int newIndex = 0;
    for (int i = 0; i < nums.length; i++){
    	if(nums[i] != 10)
            newIndex[newIndex++] = nums[i]; 
    }
    
    return newArray;
}
",
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
",
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
f8ebcbd79bc4f0fcf31f8870b3444075c6607618,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        for (int j = 1; i < nums.length; i++)
        {
            if (nums[i] == val || nums[j] == val)
            {
                everywhere = true;
            }
            else
            {
                everywhere = false;
                break;
            }
        }
    }
    
    return everywhere;
}
",
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",
e1f80924e2fa9aba6195f174166b813b13fea19e,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 && day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
",
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",
09847ceb2f4c5840316c0b5d1a25a60df77928af,"public int dateFashion(int you, int date)
{
    if(you<=2 || date<=2)
    {//just check date or you <=2
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 0;
    }
}
",
2adbb39337217f673d1ee6e9632faef8d959ee31,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2)
    {
		return 0;
    }
	if(you >= 8 || date >= 8)
    {
		return 2;
    }
    else
    {
        return 1;
    }
}
",
2ab613317018e535c7c370e1bf3fb0d86c7a9f9b,"public int[] tenRun(int[] nums)
{
    int[] result = new int[nums.length];
    int input;
    int value = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (input % 10 == 0 && input > value)
        {
            value = input;
        }
        
        if (value == -1)
        {
            result[i] = input;
        }
        else
        {
            result[i] = value;
        }
    }
    
    return result;
}
",
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",
22c01d075ca013fa7bc6cd92261260c430d6365c,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * ((n+1) / 2)];
    int count = 0;
    int array = 0;
    for (int i = 0; i < nums.length; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            nums[count] = j;
            count++;
        }
    }
    return nums;
}
",
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
",
faaaa4b9637f7003d240f0cdc7c5c6bf28c27cdb,"public boolean isEverywhere(int[] nums, int val)
{
    if (nums.length == 0) {
        return true;
    }
    int b = 0;
    for (int i = 1; i < nums.length; i++) {
        if (nums[i] == val || nums[i-1] == val) {
            	b++;
        }
    }
    return b == nums.length - 1;
}
",
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",
28ee56231138fc8b7d16d467e604bb9c774bfecc,"public int sum67(int[] nums)
{
    int sum =0;
    if(nums.length == 0)
    {
        return sum;
    }
    for(int i =0; i< nums.length-1; i++)
    {
        if(nums[i] != 6)
        {
            sum += nums[i];
        }
        else if(nums[i] == 6)
        {
            int j = i;
            while(nums[j] != 7)
            {
                j++;
            }
            i = j;
        }
    }
    return sum;
    
}
",
f0258239140a383cf0c0c1e9ac9553390ed81433,"public boolean xyzThere(String str)
{
    int i = 0
    int length = str.length() - 2;
    for( i ; i < length; i++);
    {
     	if(str.charAt(i) == 'x' && str.charAt(i+1) == 'y' && str.charAt(i+2) == 'z')
        {
         	if (i == 0 || str.charAt(i-1) != ""."")
                return true;
        }
    }
    return false;
}
",
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
",
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",
0bd81a714f85b9f284e05cc169fc136a5202b440,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
			count++;
		else
		{
			if(state == 1)
				return false;
			else
				count = 0;
		}
	}
	return (count != 1);
}
",
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
",
49eb57187ce32f7392ba9eb954bfc79921194a03,"public int countCode(String str)
{
    int count = 0;
    int i = 0;
    int length = str.length() - 3;
    while (i < length)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) = ""e"")
        {
            count++;
        }
        else
        {
            i++
        }
    }
    return times;
}
",
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",
3d7361f97ad4dd443028e6672105587f2d537df7,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
			count++;
		else
		{
			if(state == 1)
				return false;
			else
				count = 0;
		}
	}
	return (count != 1);
}
",
a7bf016297c1740702691f6d6981c0641c01cd4c,"public String repeatEnd(String str, int n)
{
    String end = str.substring(str.length() - n, str.length());
    for(int i = 0; i < n-1; i++){
        end += end;
    }
    return end;
}
",
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
",
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",
7f41d3bdfcd6606cda578b2090213e0dfcd23aad,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
    {
        return true;
    }
    
    return((a + b) == 6 || Math.abs(a - b) == 6)
}
",
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
4235496ebf6598fa98499554c7e8810f24a343da,"public int countCode(String str)
{
    for(int x = 0; x <= str.length(); x++)
    {
        int count = 0;
        if (str.charAt(x) == 'c' && str.charAt(x + 1) == 'o' 
            && str.charAt(x+3) == 'e')
        {
            count = count + 1;
        }
    }
    return count;
}
",
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
",
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",
557026f064a89be4df627a611b8a898f7a2fc2f3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if ((nums[i] != val) || (nums[i + 1] != val))
        {
            return flase;
        }          
        
    }
     return false;
}
",
8486d888511b0c88a6cdd719c0976a881dec165a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday) {
        if(speed <= 65) {
            return 0;
        } else if(66 <= speed && speed <= 85) {
            return 1;
        } else if(86 <=  speed) {
            return 2;
        }
    }
                                        
    if(speed <= 60) {
        return 0;
    } else if(61 <= speed && speed <= 80) {
        return 1;
    } else {
        return 2;
    }
}
",
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
",
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",
f8088bfd768d468c776f6b545c352390831fff5d,"public int sum67(int[] nums)
{
    boolean exclude = false;
    int sum=0;
    for(int i = 0; i<nums.length;i++){
		if(nums[i]==6)exclude = true;
        if(exclude==false){
            sum+=nums[i];
        }
        if(nums[i]==7)exclude = false;
    }
    return sum;
    
}
",
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
6ecddb9c912e2d5f56c005bd019276cc36e7e894,"public int[] fizzArray(int n)
{
    public static int[] fizzArray(int n) {
        int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}
}
",
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
",
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",
7bbe47ddbd540b9999602f687a555456a4122938,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	while (isBirthday == false)
    {
    	if (speed <= 60)
        {
            return 0;
        }
    	else if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    	else if (speed >= 81)
        {
            return 2;
        }
    }
    while (isBirthday == true)
    {
        if (speed <= 65)
        {
            return 0;
        }
    	else if (speed >= 66 && speed <= 85)
        {
            return 1;
        }
    	else if (speed >= 86)
        {
            return 2;
        }
    }
    return 1;
}",
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",
3b0eeb497e386fec2a977ccae4fec4517fa8e7f2,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    if (n < nums.length)
    {
        int[] firstgroup = new int[n];
        int[] lastgroup = new int[n];
        for (int i = 0; i < n; i++)
        {
            firstgroup[i] = nums[i];
        }
        for (int o = nums.length - n; o < nums.length; o++)
        {
            lastgroup[o] = nums[o];
        }
        if (firstgroup.equals(lastgroup))
        {
            return true;
        }
    }
    return false;
}
",
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
",
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",
8dd0ea4aa40c9c74b0f4a3dddd8ecdfabf898186,"public int sortaSum(int a, int b)
{
    sum = a+b;
    if (sum>=10&&sum <=19)
    {
        return 20;
    }
    else
    {
        return sum;
    }
    
}
",
d832642cded155ba61945ed277e663a0de8cb32c,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 || day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
0052f96ceb63d13b4f7dcf7cc400966906099f39,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}
}
}",
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
",
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",
936b50618ad1650515995207832b0fd3d10fd721,"public boolean isEverywhere(int[] nums, int val)
{
    if (nums.length < 2)
    {
        return true;
    }
    
    for(int i = 0; i < nums.length; i++)
    {
        if (i > 0)
        {
            if (nums[i - 1] != val
                && nums [i] != val)
            {
                return false;
            }
        }
        else if (nums[i + 1] != val
            	 && nums [i] != val)
        {
            return false;
        }
    }
    
    return true;
}
",
dc3378fef360ec4c5e4c0ddeaace01619067c129,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (is_weekend = true)
    {
        if cigars >= 40:
        {
            return True
        }
    }
    else if (cigars >= 40 && cigars <= 60)
    {
        return True
    }
    else
    {
        return False
    }
}
",
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",
7991e5a91ee75b2ca8290f4fbbd9dee8ea1ad8dc,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
    }
    return nums;
}
",
be8aee4152f3cab23d55d27027393b89fd74ceb9,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
	if(isMorning == true && isMom == true)
    {
    	return true;
    }
    
    else if(isMorning == true && isMom == false)
    {
    	return false;
    }
    
    if(isAsleep == true)
    {
    	return false;
    }
    
    return false;
}
",
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",
e2840899f1aac60ee4fa7b06722a656e8bb2fb17,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 )
    {
        return true;
    }
    if ( Math.abs(a + b) == 6 || Math.abs(a - b) == 6) {
        return true;
    }
    return false;
}
",
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",
1a4217a42da8fb81be3f704b665bfc939b38dc68,"public String getSandwich(String str)
{
    int a = -1; //the first character
    int z = -1; //the last character
      
    for(int i = 0; i < str.length() - 5; i++) 
    {
        if(str.substring(i, i + 5).equals(""bread"")) 
        {
            a = i;
            break;
        }
    }
                                
    for(int i = str.length() - 5; i >= 0; i--) 
    {
        if(str.substring(i, i + 5).equals(""bread"")) 
        {
            z = i;
            break;
        }
    }
                                                          
    if(a != -1 && z != -1 && a != z) //determining the substring that should be returned
        return str.substring(a + 5, z);
                                                                    
    return """";
}
",
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
",
d6cae903650a09585ae1bb496e05fc63b9b6524f,"public String plusOut(String str, String word)
{
    int i = 0;
    String sTwo = """";
    while (i < str.length() - word.length() + 1)
    {
        if (!str.substring(i, i + word.length()).equals(word))
        {
            sTwo += ""+"";
            i++;
        }
    	else
    	{
        	sTwo += word;
        	i += word.length();
    	}
    }
    while (str.length() > sTwo.length())
    {
        sTwo += ""+"";
    }
    return sTwo;
}
",
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
49e7b4bf2fb1b0b48c85aab71916659d19122522,"public boolean xyBalance(String str)
{
    int length = str.length() - 1;
	char s;
	for (int i = length; i >= 0; i--)
	{
		s = str.charAt(i);
		if (s == 'x')
        {
			return false;
        }
		else if (s == 'y')
        {
			return true;
        }
	}
    
	return true;
}
",
85c4da3eae44449610d4abcaabc40f355189f866,"public boolean twoTwo(int[] nums)
{
    for (int i=0; i<(nums.length); i++)
	{
		if(nums[i]==2)
		{
			i++;
			if(!(i<(nums.length)) || nums[i] !=2) 
    		{
        		return false;
    		}
			while(i<nums.length && nums[i] ==2) i++;
			}
		}
	return true;
}
",
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",
6f7f61c8665e5fbb33bb6cdb300c38706ffa9630,"public int centeredAverage(int[] nums)
{
    int average = 0;
    int sum = 0;
    int low = nums[0];
    int high = nums[0];
    boolean found = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > high)
        {
            high = nums[i];
        }
        
        if (nums[i] < low)
        {
            low = nums[i];
        }
    }
    
    for (int a : nums)
    {
        sum = sum + a;
    }
    
    sum = sum - low - high;
    
    average = sum / (nums.length - 2)
    
    return average;
}
",
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
",
d96a0285c6ef424bb4ff5119134143d2d1c7d7b0,"public String alarmClock(int day, boolean vacation)
{
	if (vacation)
    {
       	if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
    {
        if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""10:00"";
        }
		else if (day == 0 || day == 6)
        {
            return ""off"";
        }
    }
}
",
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
",
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",
1c7f60afbb325cd1bf6ef9300fc570a4b484732e,"public int countEvens(int[] nums)
{	
   int total = 0;
  	for(int i = 0; i < nums.length; i++)
  {
     // int remain = nums[i] % 2;
 		if(nums[i] % 2; == 0)
 			{
 				total = total + 1;
 			}
  }
   return total;
}
",
b792f65710603537369d8658da16396d60eece84,"public String atFirst(String str)
{
    int len = str.length();
    
    if (len >= 2)
    {
        return str.substring(0,2);
    }
}
",
62f72af3ae154013bd683db3293680707ac4c381,"public boolean xyzThere(String str)
{
    //return(str.indexOf(""xyz"") != -1 && str.indexOf("".xyz"") == -1);
    for(int i = 0; i < str.length()-2; i++){
        if(str.indexOf(""xyz"",i) != -1){
            if(str.lastIndexOf(""."",i) != i){
                return true;
            }
        }
    }
    return false;
}
",
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
",
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",
6a623e78b320858b018881a4c447f0285bde0276,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            int temp = nums[i];
            while (nums[i+1] % 10 != 0 || i == nums.length)
            {
                nums[i] = temp;
                i++;
            }
        }
    }
    return nums;
}",
e0fc48a114ea8a2948e43da4eb1342009c283ca3,"public boolean love6(int a, int b)
{
    if (a == b)
    {
        return true
    }
    else if (Math.abs(a - b) == 6)
    {
        return true
    }
    else if (a + b == 6)
    {
        return true
    }
    else
    {
        return false
    }
}
",
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",
be8aee4152f3cab23d55d27027393b89fd74ceb9,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
	if(isMorning == true && isMom == true)
    {
    	return true;
    }
    
    else if(isMorning == true && isMom == false)
    {
    	return false;
    }
    
    if(isAsleep == true)
    {
    	return false;
    }
    
    return false;
}
",
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",
f5a21d0c1e254db37e3447625ce5826afe21b435,"public boolean bobThere(String str)
{
    for(int i=0; i<str.length()-3; i++)
    {
        if(str.charAt(i)=='b')
        {
            if(str.charAt(i+2) == 'b')
                return true;
        }
    }
    return false;
}
",
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
e87542225324deb36fc5891405e6401d53aab2a3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed -= 5;
    }
    if (speed=<60)
    {
        return 0;
    }
    if (speed>=61 && speed<= 80)
    {
        return 1;
    }
    if (speed>=81)
    {
        return 2;
    }
}
",
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
",
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
",
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
",
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
",
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
",
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
",
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
",
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
",
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
",
b2dce8aae42aa118574cb05bbc435d69ab55b15b,"public boolean xyBalance(String str)
{
    boolean xybalanced = true;
    for (int i = 0; i < str.length(); i++)
    {
        if (str.charAt() == 'x')
        {
            boolean yLater = false;
            int j = i;
            while (j < str.length())
            {
                if (str.charAt(j) == 'y')
                {
                    yLater = true;
                }
            }
            xybalanced = yLater;
        }
    }
    return xybalanced
}
",
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",
9f87b2b05c03f2be8a156ec1c96ef54488b5591a,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean check = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (check)
        {
         	if (nums[i]==7)
            {
                check = false;
            }
        }
        else if (nums[i]==6)
        {
            check = true;
        }
        else
        {
            sum = sum + nums[i];
        }
    }
    return sum;
}
",
f055965f9ae32739c7b92d6b5ecbca90565fcdcd,"public String without2(String str) 
{
    int len = str.length();
    if (str(0) == str(len - 2) && str(1) == str(len - 1))
    {
        String sss = null;
        sss.append(str,2,len-1);
            return sss;
    }
    else
    {
        return str;
    }
}
",
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",
e9684c37300ad2ff0907d6d517e96656ca70ab9b,"public boolean isEverywhere(int[] nums, int val)
{
   for(int i = 0; i < nums.length - 1; i++) {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
                
return true; 
}
",
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",
c77723bd709b08d6e00161ce3c6ef305a61d69c9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length()-2; i++) {
    if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b') {
      return true;
    }
  }
  return false;
}
",
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
",
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",
7856bc992acb7f7b799ac4063e23bfc3598df9e0,"public int sum13(int[] nums)
{
    if(nums.length == 0) {
        return 0;
    }
    
    int sum = 0;
    boolean thirteen = false;
    boolean secondthirteen = false;
    
    for(int i = 0; i < nums.length; i++) {
        if(nums[i] == 13) {
            thirteen = true;
        }
        
        if(!thirteen && !secondthirteen) {
            sum += nums[i];
            thirteen = false;
            secondthirteen = false;
        }
        
        if(thirteen) {
            secondthirteen = true;
        }
    }
    
    return sum;
}
",
083ca5818f3f055e87fb758cb9de020f40601414,"public int[] withoutTen(int[] nums)
{
    int[] ten = new int[nums.length];
    int result = 0;
    for (int i = 0;i<nums.length;i++)
    {
        if (nums[i] == 10)
        {
            nums[i] = 0;
        }
        if (nums[i] != 10)
        {
            ten[result++] = nums[i];
        }
    }
    return nums;
}
",
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
",
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",
9da10eb0a36c1f2a83adb2a9e709bf948f23038e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if (a + b == 6)
    {
        return true;
    }
    else if (Math.abs(a-b) == 6)
    {
        return true;
    }
}
",
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",
3c663e6b94b687cf331fb515d865826a263a5a6c,"public int luckySum(int a, int b, int c)
{
    if (a==13)
    {
        return 0;
    }
    else if (b==13)
    {
        return a;
    }
    else if (c==13)
    {
        return a+b;
    }
    else
        return a+b+c;
}
",
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
",
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
",
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
",
85c4da3eae44449610d4abcaabc40f355189f866,"public boolean twoTwo(int[] nums)
{
    for (int i=0; i<(nums.length); i++)
	{
		if(nums[i]==2)
		{
			i++;
			if(!(i<(nums.length)) || nums[i] !=2) 
    		{
        		return false;
    		}
			while(i<nums.length && nums[i] ==2) i++;
			}
		}
	return true;
}
",
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
0745e670c9437c03200a3e652fd7a5a0bf1399ee,"public String plusOut(String str, String word)
{
    int strLength = str.length();
    int wordLength = word.length();
    int position = str.indexOf(word);
    int i = 0;
    StringBuilding strbuild = new Stringbuilder(strLength);
    while(position != -1)
    {
     	while ( i < position)
        {
         	strbuild.append('+');
            i++;
        }
        strbuild.append(word);
        i = pos+ wordLength;
        position = str.indexOf(word, i);
    }
    for(i; i<len; i++)
        strbuild.append('+');
    return strbuild.toString();
}
",
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",
9f87b2b05c03f2be8a156ec1c96ef54488b5591a,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean check = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (check)
        {
         	if (nums[i]==7)
            {
                check = false;
            }
        }
        else if (nums[i]==6)
        {
            check = true;
        }
        else
        {
            sum = sum + nums[i];
        }
    }
    return sum;
}
",
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",
e1f80924e2fa9aba6195f174166b813b13fea19e,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 && day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
6f7f61c8665e5fbb33bb6cdb300c38706ffa9630,"public int centeredAverage(int[] nums)
{
    int average = 0;
    int sum = 0;
    int low = nums[0];
    int high = nums[0];
    boolean found = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > high)
        {
            high = nums[i];
        }
        
        if (nums[i] < low)
        {
            low = nums[i];
        }
    }
    
    for (int a : nums)
    {
        sum = sum + a;
    }
    
    sum = sum - low - high;
    
    average = sum / (nums.length - 2)
    
    return average;
}
",
6b538f7d9eac6f8c54cd2c59a699ca73280e0930,"public class FizzArray {

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",
61507d1731f1978056a90c5d7cd0758944df033c,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
        if (str.charAt(i) == ""b"" && str.charAt(i + 2) == ""b"")
            return true;
    return false;
}
",
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
",
84dfd0d1e5c431468600f396b066dbde235e2bb8,"public int[] shiftLeft(int[] nums)
{
    int[] newList = new int[nums.length];
    return newList;
}
",
56564fcd3a089f2e2f8dc872a710a4cf2ca9e4ce,"public String atFirst(String str)
{
    return str.substring(0, 1);
    if (str.substring(0, 1) = null)
    {
        return @;
    }
}
",
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",
bd6a0818d02de2faff72753b137582927a9653f1,"public int countClumps(int[] nums)
{
    boolean b = false;
    int a = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !b)
        {
            a++;
             b = true;
        }
        else if (nums[i] != nums[i + 1])
        {
            b = false;
        }
    }
    return a;
}
",
87b2b1811ad58d7a1fff515864427654134ed8fa,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            if (j == 0)
            {
            	while (nums[j] != 5)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
            
            else
            {
                while (nums[j] != 5 && nums[j - 1] != 4 && j < nums.length)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
        }
    }
    return nums;
}",
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",
fbd4c23e76bef6c785eaeac729ab320635a7682b,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
",
cbe0867721bed5c395d1b47196b5f934a768f03b,"public String getSandwich(String str)
{
    int bread1 = str.indexOf(""bread""); 
    int bread2 = str.lastIndexOf(""bread"");
    String newStr;
    if (bread1 == -1 || bread2 == -1)
        newStr = """";
    else
        newStr = str.substring(bread1, bread2);
	return newStr;
}
",
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
",
76d327977c3b6df3e9ab9612b5ea8123306e3035,"public int sum13(int[] nums)
{
    int total = 0;
    if (nums != null) {
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 13) {
                if (nums[i] != 0 && nums[i-1] != 13) {
                	total = total + nums[i];
                }
            }
        }
        return total;
    }
    return 0;
}
",
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",
c559438f06240059fea5a78e3e17776de821361c,"public boolean xyzThere(String str)
{
    if (str.indexOf(""xyz"") != -1)
    {
     	if (str.indexOf("".xyz"") + 1 == str.indexOf(""xyz""))
        {
         	return true;   
        }
    }
            
    return false;
}
",
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
",
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
",
4ba46181a66bb2f3cf45d38876db8736b1ebda46,"public boolean in1To10(int n, boolean outsideMode)
{
    return ((n >= 1 && n<=10 && !outsideMode) || (n > 10 || n < 1 && outsideMode));
}
",
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",
531bdfd3cc310c2b5e00a692007865c2d4b2f67e,"public int roundSum(int a, int b, int c)
{
    int sum = round10(a) + round10(b) + round10(c);
    return sum;
}

public int round10(int num)
{
    if( num%10 > 5)
    {
     	num = num - num%10 + 10;   
        return num;
    }
    else
    {
        num = num - num%10;
        return num;
    }
}
",
3b6a3747d8a8ba7e00b3386b0a9baaad77d0edec,"public boolean sameEnds(int[] nums, int n)
{
    /**
    int same=0;
    for (int i=nums.length-1;i>0 ;i--)
    {
        if (nums[0]!=nums[i])
        {
            same++;
        }
    }
    */
    int same=0;
    int end = nums.length-i;
    for(int i=nums.length; i > 0; i--)
	{
		if(nums[same] != nums[end])
			return false;
		else
		{
			same++;
			end++;
		}
	}
    return true;
        
}
",
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",
d822cf12d38ea28fe825ff4fc14fdc94e6719f05,"public boolean bobThere(String str)
{
    int i = 0;
    char[] CharArray = str.toCharArray();
    for(char cha : CharArray){
    	if (cha == 'b'){
        	if (str[i + 2] == 'b'){
            	return true;
            }
        }
     	i++;
    }
    return false;
}
",
9b342fc15c2809ae0df1462b7b0f10d2014d8513,"public int countEvens(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] % 2 == 0)
			count++;
	}
	return count;
}
",
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
",
d24d1f6c63d130653db3ccbdafd62201dc23e757,"public int countEvens(int[] nums)
{
   int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] % 2 == 0)
			count++;
	}
	return count; 
}
",
203f9c47a0738c4f7deb3aa08f1ac17b6d91cac6,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    int index = 0;
    
    for (int i : nums)
    {
        if (i != 10)
        {
            array[index] = i;
            index++;
        }
    }
    
   return array;
}
",
8a18265b0731d20f4721addcf3d10d70eaee3d62,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
        return true;
    if ((a + b) == 6 || Math.abs(a - b) == 6);
    	return true;
}
",
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",
ce0fcb830ccf1b5abc99eeadb21396fcab812588,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
    {
		return true;
    }
	return ((a + b) == 6|| Math.abs(a - b) == 6);
    
}
",
e93ac984fe80d9ff8d2b28a49fe9042f2029629f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] % 10 == 0)
        {
            if (nums[i + 1] % 10 != 0)
            {
                nums[i + 1] = nums[i];
            }
        }
    }
    return nums;
}
",
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
",
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",
c16adb4c3eec7086b0c8eda70c0968aa35b37c28,"public int countEvens(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] % 2 == 0)
			count++;
	}
	return count;
}
",
677fbb2c5184ad034acd62c6303f9fdf6cbce459,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffAB = Math.abs(a - b);
    int diffBC = Math.abs(b - c);
    int diffAC = Math.abs(a - c);
    //if (diffAB == diffBC || diffAC == diffBC || diffAB == diffAC)
    if (a == b || b == c || a == c)
    {
        return false;
    }
    else
    {
        return true;
    }
}",
62f72af3ae154013bd683db3293680707ac4c381,"public boolean xyzThere(String str)
{
    //return(str.indexOf(""xyz"") != -1 && str.indexOf("".xyz"") == -1);
    for(int i = 0; i < str.length()-2; i++){
        if(str.indexOf(""xyz"",i) != -1){
            if(str.lastIndexOf(""."",i) != i){
                return true;
            }
        }
    }
    return false;
}
",
d6cae903650a09585ae1bb496e05fc63b9b6524f,"public String plusOut(String str, String word)
{
    int i = 0;
    String sTwo = """";
    while (i < str.length() - word.length() + 1)
    {
        if (!str.substring(i, i + word.length()).equals(word))
        {
            sTwo += ""+"";
            i++;
        }
    	else
    	{
        	sTwo += word;
        	i += word.length();
    	}
    }
    while (str.length() > sTwo.length())
    {
        sTwo += ""+"";
    }
    return sTwo;
}
",
b334137a2954d0930d610613ec54703a38531bae,"public boolean sameEnds(int[] nums, int n)
{
    /**
    int same=0;
    for (int i=nums.length-1;i>0 ;i--)
    {
        if (nums[0]!=nums[i])
        {
            same++;
        }
    }
    */
    int same=0;
    int  i=nums.length;
    int end = nums.length-i;
    
    for( i; i > 0; i--)
	{
		if(nums[same] != nums[end])
			return false;
		else
		{
			same++;
			end++;
		}
	}
    return true;
        
}
",
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
78a59ae37cfd572faf37016467c03ce718cdba5d,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
        if (str.charAt(i) == b && str.charAt(i + 2) == b)
            return true;
    return false;
}
",
d5ce0fb7cf0b155cde53ceb7bede5737956327c9,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        for (int j : array)
        {
            if (i != 10)
            {
                array[j] = i;
                break;
            }
        }
    }
    
   return array;
}
",
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",
49eb57187ce32f7392ba9eb954bfc79921194a03,"public int countCode(String str)
{
    int count = 0;
    int i = 0;
    int length = str.length() - 3;
    while (i < length)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) = ""e"")
        {
            count++;
        }
        else
        {
            i++
        }
    }
    return times;
}
",
783f58a9d684df6c18e6b47db9326f28032afe07,"public int countCode(String str)
{
    int count = 0;
    for(int i = 0; i < str.length(); i++){
    	if(str.indexOf(""co"",i)==i+1&&str.indexOf(""co"",i+2)==i+3)count++;
    }
    return count;
}
",
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
0bd7fe95ce9749e4f8a7edf4208f6c161ea14ca1,"public int countCode(String str)
{
    int x = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c')
        {
            if (str.charAt(i+1) == 'o')
            {
                if (str.charAt(i + 3) == 'e')
                {
                    x++;
                }
            }
        }
    }
    return x;
}
",
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
",
b66c9a76c6567bcfc33f81fb4e1e0bfe1c43ea5c,"public String atFirst(String str)
{
    int length = str.length();
    if( length >= 2 )
    {
        return str;
    }
    else
    {
        if( length == 1 )
        {
            return str + ""@"";
        }
        else
        {
            return ""@@"";
        }
    }
}
",
b20d525ead268bb3eced9c95cb88481aa8aab61d,"public int makeChocolate(int small, int big, int goal)
{
	if (goal > 5*big)
    {
       goal = goal - 5 * big); 
    }
    else
    {
        goal = goal % 5;
    }
    if (goal <= small)
    {
        return goal;
    }
    return -1;
}
",
dabbc0fac0e4efb2d8353000f3f477c0332d8b9b,"public boolean endOther(String a, String b)
{
    String astring = a.toLowerCase();
    String bstring = b.toLowerCase();
    
    if (astring.endsWith(bstring) || bstring.endsWith(astring))
    {
        return true;
    }
    else 
    {
        return false;
    }
    
}
",
9f7cabb358a67a54ce58c64d4a9845fcc682c8e5,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if (speed <= 60) {
        return 0;
    }
        else if (speed > 60 && speed <81) {
            return 1;
        }
            else {
                return 2;
        }
    if (isBirthday);
    	 if (speed <= 65) {
             return 0;
         }
    else if (speed > 65 && speed < 86) {
        return 1;
    }
    else {
        return 2;
    }
}
       ",
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
",
e444710aa658e2dde4799f8965284cd20bc98f6a,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
        int even = 0;
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;
}
",
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",
51d726f3ba7d0bdf6df41f275be7d3e5ae0b21ed,"public String getSandwich(String str)
{
    int firstBread = -1;
    int lastBread = -1;
    for (int i = 0; i < str.length() - 5; i++)
    {
        if (str.substring(i, i+5).equals(""bread""))
        {
            firstBread = i;
            i = str.length();
        }
    }
    for (int j = str.length() - 5; j > 0; j--)
    {
        if (str.substring(j, j+5).equals(""bread""))
        {
            lastBread = j;
            j = 0;
        }
    }
    if(firstBread != -1 && lastBread != -1 && firstBread != lastBread)
        return str.substring(firstBread + 5, lastBread);
    return """";
}
",
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
62f72af3ae154013bd683db3293680707ac4c381,"public boolean xyzThere(String str)
{
    //return(str.indexOf(""xyz"") != -1 && str.indexOf("".xyz"") == -1);
    for(int i = 0; i < str.length()-2; i++){
        if(str.indexOf(""xyz"",i) != -1){
            if(str.lastIndexOf(""."",i) != i){
                return true;
            }
        }
    }
    return false;
}
",
cace7d6ba2df7803b7856f0a4767813ab512f4c5,"public String without2(String str) 
{
    if (str.length() > 1)
    {
        if (str.substring(0, 1).equals(str.substring(str.length() - 2, str.length() - 1)))
        {
            return str.substring(2, str.length());
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
}
",
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",
6a623e78b320858b018881a4c447f0285bde0276,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            int temp = nums[i];
            while (nums[i+1] % 10 != 0 || i == nums.length)
            {
                nums[i] = temp;
                i++;
            }
        }
    }
    return nums;
}",
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
",
265f1f469f36912bddad02dbbd6b2e229eca0a06,"public int[] tenRun(int[] nums)
{
    int[] ten = new int[nums.length];
    boolean isTen = false;
    private int tenMult;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0 && nums[i] != tenMult)
        {
            isTen = true;
            tenMult = nums[i];
            ten[i] = nums[i];
        }
        
        else if (isTen)
        {
            ten[i] = tenMult;
        }
        
        else
        {
            ten[i] = nums[i];
        }
    }
 	return ten;
}",
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
",
8ac25102baee6fadeabcfd2e101ad3f1325bb218,"public String alarmClock(int day, boolean vacation)
{
    if vacation == true
    {
        if day == 0 || 6
        {
            return ""off"";
        }
        else 
            return ""10:00"";
    }
    else 
        if day == 0 || 6
        {
            return ""10:00"";
        }
    	else 
            return ""7:00"";
            
    
}
",
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",
ce0fcb830ccf1b5abc99eeadb21396fcab812588,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
    {
		return true;
    }
	return ((a + b) == 6|| Math.abs(a - b) == 6);
    
}
",
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",
e2840899f1aac60ee4fa7b06722a656e8bb2fb17,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 )
    {
        return true;
    }
    if ( Math.abs(a + b) == 6 || Math.abs(a - b) == 6) {
        return true;
    }
    return false;
}
",
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
",
2216bc569ee8caff75d3702a81475722e85c8551,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 || n == 16)
            return n;
        return 0;
    //return n;
}
",
bedb2c2c407cfc6f84128d3bcf6e102d6628dd32,"public boolean sameEnds(int[] nums, int n)
{
    if (n <= 1)
    {
    	for (int i = 0; i <= n; i++)
    	{
            if (nums[i] != nums[nums.length - 1 - i])
        	{
            	return false;
        	}
    	}
    }
    else
    {
        for (int i = 0; i <= n; i++)
    	{
            
            else if (nums[i] != nums[nums.length - n + i])
        	{
            	return false;
        	}
    	}
        
    }
    return true;
}
",
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
",
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
",
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",
cee57656ca16e1dba36c9adc7d7dbfc622398c9a,"public int sum13(int[] nums)
{
    int sum = 0;
        if (nums.length < 1) {
            return 0;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 13) {
                i++;
                continue;
            }
            sum += nums[i];
        }
        return sum;
}
",
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
",
2ee7d366ef45e04675e68bd5cfd425ac0862af68,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else
    {
		return ""@@"";
    }

  }
",
f5262091a63d4e4c3c064cfbc001b665331ae465,"public boolean love6(int a, int b)
{
    boolean isSix = false;
    if (a == 6 || b == 6)
    {
        isSix = true;
    }
    if (a + b == 6)
    {
        isSix = true;
    }
    if (Math.abs(a - b) == 6)
    {
        isSix = true;
    }
    return isSix;
}
",
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",
34fd7df6f2e77eb2637ca1aab9fa90ece6e50132,"public int greenTicket(int a, int b, int c)
{
    if(a == b && a == c && b == c)
    {
        return 20;
    }
    if(a != b && a != c && b != c)
    {
        return 0;
    }
    else
    {
        return 10;
    }
}
",
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
",
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",
0a4d7aee449450431db0efcda5856b22d973b605,"public String getSandwich(String str)
{
    if(str.length() > 10 &&
       str.substring(0, 5) == ""bread"" &&
       str.substring(str.length() - 6, str.length() - 1) == ""bread"")
    {
        return str.substring(5, str.length() - 6);
    }
    else {
        return str.substring(5, str.length() - 6);
    }
}
",
6f002bcf6f8eade451cdf51b44eb5d612b8375b8,"public int[] withoutTen(int[] nums)
{   
    for (int i = nums.length - 1; i >= 0; i--)
    {
        if (nums[i] == 10)
        {   
            nums[i] = 0;
            for (int j = nums.length - 1; j > i; j++)
            {
                if (nums[j] != 0) {
                    int temp = nums[j];
                    nums[j] = 0;
                    nums[i] = temp;
                }
            }
            
        }

    }
    
    return nums;
}
",
d31a544311795878c1f0a6ee6dbb403e1c4c36e2,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep) {
    if(isAsleep)
        return false;
          
    if(isMorning && !isMom)
        return false;
                    
    return true;
}",
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
",
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
",
ebebbcd628f8bb7d6584e336ffd2ddf31ba9b356,"public int countCode(String str)
{
    int s = 0;
    for(int i = 1; i < str.length(); i++)
    {
    	if(str.charAt(i) == 'c')
        {
            if(str.charAt(i+1) == 'o')
            {
                if(str.charAt(i+3) == 'e')
                {
                    s++;
                }
            }
        }
    }
    return s;
}
",
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",
13e417be8f03b15a858a75640998f17362b9c5f6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int temp = nums[0];
        
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i+1];
        }
        nums[nums.length-1] = temp;
    }
    return nums;
}
",
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",
76d327977c3b6df3e9ab9612b5ea8123306e3035,"public int sum13(int[] nums)
{
    int total = 0;
    if (nums != null) {
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 13) {
                if (nums[i] != 0 && nums[i-1] != 13) {
                	total = total + nums[i];
                }
            }
        }
        return total;
    }
    return 0;
}
",
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",
09ef55b983ce1aa4ba6d9bf2dc14bc1c988b8d7c,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int count = 0;
    int tot = 0;
 
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] > max) {
            max = nums[i];
            count = count + nums[i];
        }
        if (nums[i] < min) {
            min = nums[i];
            count = count + nums[i];
        }
        count = count + nums[i];
    }
    return (count - (max + min)) / (tot - 2);
}
",
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
7f41d3bdfcd6606cda578b2090213e0dfcd23aad,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
    {
        return true;
    }
    
    return((a + b) == 6 || Math.abs(a - b) == 6)
}
",
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
",
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
",
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",
203f9c47a0738c4f7deb3aa08f1ac17b6d91cac6,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    int index = 0;
    
    for (int i : nums)
    {
        if (i != 10)
        {
            array[index] = i;
            index++;
        }
    }
    
   return array;
}
",
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",
265dd4458fb43967c87890408a4569ed8e08a397,"public String alarmClock(int day, boolean vacation)
{
    if alarmClock(< 6, false)
    {
        return ""7:00""
    }
}
",
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
",
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
",
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
c0e74847daded5db86a45f95da024ec482c4f9a4,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19}
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
",
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",
87346e3e31d1cd09cf1ea78408fe3cd51d049e2e,"public int sum13(int[] nums)
{
    sumNum = 0;
    if (nums.length == 0)
    {
        return sumNum;
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
        {
            i += 1;
        }
        else
        {
            sumNum += nums[i];
        }
    }
    return sumNum;
}
",
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
d96a0285c6ef424bb4ff5119134143d2d1c7d7b0,"public String alarmClock(int day, boolean vacation)
{
	if (vacation)
    {
       	if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
    {
        if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""10:00"";
        }
		else if (day == 0 || day == 6)
        {
            return ""off"";
        }
    }
}
",
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
",
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",
e3604130ed0d8066301429b1026d44bbec5d2b4b,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder(n*n);
    for (int i = 0; i < n; i++)
    {
    	sb.append(n);
    }
    return sb.toString();
}
",
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
2b976fe20b1e401744827a000d91d5535db7d93b,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <=90);
}
",
0302770bfa1d80a26d8f7722e81454eef91f7586,"public String plusOut(String str, String word)
{
    String fuckThis = """";
    for (int i = 0; i < str.length(); i++){
    	if (word == str.substring(i, i + word.length())){
            i += word.length();
        } else {
            fuckThis += ""+"";
        }
    }
    return fuckThis;
}
",
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
",
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
41fbb0ec3f09d19d78c9bae81f5a75e31cf74218,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",
b20d525ead268bb3eced9c95cb88481aa8aab61d,"public int makeChocolate(int small, int big, int goal)
{
	if (goal > 5*big)
    {
       goal = goal - 5 * big); 
    }
    else
    {
        goal = goal % 5;
    }
    if (goal <= small)
    {
        return goal;
    }
    return -1;
}
",
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",
7a311480e1038e58bd263cd3dd91b77fce57edfa,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}",
aabea47ca84d0a1de14a35d7e60fc6e1c88b9d75,"public boolean xyBalance(String str)
{
    int YS = str.indexOf('y');
    for(int i = 0; i < str.length(); i++) 
    {
        if(str.charAt(i) == 'x' && str.charAt(i>i) == 'y')
        {
            truth = true;
            
        }
        
    }
     return truth
}
",
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
",
5c7feaf744df1e6b8f1557078bca4e6ad1f5fca5,"public int sum13(int[] nums)
{
    if (nums.length == 0)
    {
        return 0;
    }
    else
    {
        int finalSum = 0;
        for (int i = 0; i < nums.length; i++)
        {
            if (nums[i] != 13)
            {
                finalSum = finalSum + nums[i];
            }
            else
            {
                i++;
            }
        }
        return finalSum;
    }
}",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
cf03e7d05ecf19d01f0b0960fcc372a74623be83,"public int[] zeroMax(int[] nums)
{
    int i = nums.length - 1;
    while(i >= 0 && nums[i] % 2 == 0)
    {
        i--;
    } 
    for(int j = i - 1; j >= 0; j--) {
        if(nums[j] == 0)
        {
            nums[j] = nums[i];
        }
        if(nums[j] % 2 == 1 && nums[j] > nums[i])
        {
            i = j;
        }
    }
    return nums;
}
",
2eefd35700230f8780f45d01d416afdecdd69994,"public int caughtSpeeding(int speed, boolean isBirthday)
if(isBirthday)
{
	speed -= 5;
}
if(speed <= 60)
{
    return 0;
}
else if (speed <= 80)
{
    return 1;
}
else
{
    return 2;
}
    
",
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",
2efc3b1d0acaa60b452bf611f88e4f3873fd00aa,"public boolean isEverywhere(int[] nums, int val)
{
    int b = 0;
    for (int i = 1; i < nums.length - 1; i++) {
        if (nums[i] == val || nums[i-1] == val ||
            nums[i+1] == val) {
            	b++;
        }
    }
    return b == nums.length - 2;
}
",
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
",
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
",
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",
9f7cabb358a67a54ce58c64d4a9845fcc682c8e5,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if (speed <= 60) {
        return 0;
    }
        else if (speed > 60 && speed <81) {
            return 1;
        }
            else {
                return 2;
        }
    if (isBirthday);
    	 if (speed <= 65) {
             return 0;
         }
    else if (speed > 65 && speed < 86) {
        return 1;
    }
    else {
        return 2;
    }
}
       ",
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
",
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",
414ebd6686fcd084388021a1e851c521dccfe7e8,"public int[] frontPiece(int[] nums)
{
    int[] newArray = new int[2];
    if (nums.size() >= 2) {
    	newArray.add(nums[0]);
        newArray.add(nums[1]);
        return newArray;
    }
    return nums;
}
",
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}",
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",
2727a8707a58f11215001cccf998e4af0cececdb,"public class FizzArray {

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}",
d0240fa701f593a04989201ae92746b03b43df48,"public int loneSum(int a, int b, int c)
{
    int sum = a;
    if(b != a)
        sum += b;
    if(c!=a && c!=b)
        sum += c
    return sum;
}
",
e503bcd53b6c1b8e1f5bceead47b945857b50e9a,"public int dateFashion(int you, int date)
{
    if ( you >= 8 && date >= 8)
    {
        return 2;
    }
    if ( you <= 2 && date <= 2)
    {
        return 0;
    }
     if ( you >= 8 && date <= 8)
    {
        return 1;
    }
   if ( you <= 8 && date >= 8)
    {
        return 1;
    }
    }
    else 
        return 1;
}
",
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
",
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
38ed9af98e04b9423f3f246a98f7651c01b2450a,"public int countCode(String str)
{
    int count = 0;
    for(int i=0; i<str.length()-4; i++)
    {
        if(str.substring(i).startsWith(""co""))
        {
            if(str.charAt(i+3) == 'e')
                count++;
        }
    }
    return count;
}
",
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
",
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
",
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",
5bf14ec8d2b72a5f31c1b7537e644e100f3cb419,"public String alarmClock(int day, boolean vacation)
{
    if(!(vaction))
    {
    	if(day == 6 || day == 0)
        {
            return off;
        }
        else
        {
        	return 10:00;
        }
    }
    else
    	if(day == 6 || day == 0)
        {
            return 10:00;
        }
        else
        {
        	return 7:00;
        }
}
",
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",
e1f80924e2fa9aba6195f174166b813b13fea19e,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 && day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
e2840899f1aac60ee4fa7b06722a656e8bb2fb17,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 )
    {
        return true;
    }
    if ( Math.abs(a + b) == 6 || Math.abs(a - b) == 6) {
        return true;
    }
    return false;
}
",
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
",
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
fe6fec4e82f5018dd3ccca8dad46e47bc9166cd4,"public int[] withoutTen(int[] nums)
{
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] == 10)
        {
            nums.remove(i);
        }
    }
    return nums;
}
",
49f557d45429967842ad7c43920f4ecff3b8f64b,"public int[] seriesUp(int n)
{
    int length = n * (n + 1) / 2;
    int[] newArray = new int[length];
    int counter = 0;
    int counter2 = 0;
	while (counter < length)
    {
        counter2 = counter;
        for (int i = 1; i <= counter + 1; i++)
        {
            newArray[counter2] = i;
            counter2++;
        }
        counter = counter2 + 1;
    }
    return newArray;
}
",
458df3209fd88a511ec835c27a6b8e785183059c,"public boolean xyzThere(String str)
{
    int len = str.length() - 2;
    for(int i = 0; i < len; i++)
    {
        if (str.charAt(i) == ""x"" && str.charAt == ""y"" && str.charAt(i+2) == ""z"")
        {
            if(str.charAt(i-1) 1= ""."" || i==0)
            {
                return true;
            }
        }
    }
        return false;
}
",
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
",
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
",
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",
e7a1728b4b35dc25b0c00f4e8b76a8ad3a356b29,"public int noTeenSum(int a, int b, int c)
{
	if(a > 12 && a < 20)
    {
     	this.fixTeen(a);  
    }
    if(b> 12 && b < 20)
    {
     	this.fixTeen(b); 
    }
    if(c> 12 && c< 20)
    {
     	this.fixTeen(c); 
    }
}

public int fixTeen(int n)
{
	if (n == 15 || n == 16)
    {
     	n = n;   
    }
    else if (n >= 13 && n <= 19)
    {
     	n = 0;
    }
    return n;
}",
8e2fbb177f04d826bcf31a521e3d2d5c0a540cf5,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if(sum >= 10 || sum <= 19)
    {
    	return sum;
    }
    
    else if (sum<=9 || sum>=20) 
    {
    	return 20;
    }
    
    return 20;
}
",
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
32a88259dc225b680cacb119048b64e000580b5a,"public int[] fix45(int[] nums)
{
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i + 1] != 5)
		{
			for(int j = 0; !(nums[j] == 5 && (j == 0 || j > 0 && 				nums[j-1] != 4)); j++)
            {
				nums[j] = nums[i + 1];
				nums[i + 1] = 5;
            }
		}
	}
	return nums;
}",
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",
b62f1274c56d44cf8761535a5c06a838683ec7c5,"public boolean sameEnds(int[] nums, int n)
{
    boolean a = false;
    for	(int i = 0; i < n; i++)
    {
        if (nums[i] == nums[nums.length - n + i])
        {
            a = true;
        }
        else
        {
            a = false;
        }
    }
    return a;
}
",
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",
6b538f7d9eac6f8c54cd2c59a699ca73280e0930,"public class FizzArray {

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",
04722865f0a83de76cfa43341bfbb14e4bd01fdb,"public boolean twoTwo(int[] nums)
{

boolean katam = true;
boolean doond = false;

for(int count=0; count<nums.length; count++)
{
if(nums[count] !=2) 
{
    doond = false;
}

if(nums[count] ==2 && doond)
{
    katam = true;
}

if(nums[count] ==2 && !doond)
{
doond = true;
katam = false;
}

}
return result;

}",
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",
d077f253fd718a8c09bc915edd3c29513364a1f1,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
		return true;
	return ((a + b) == 6|| Math.abs(a - b) == 6);
}
",
fb3b878ff7c89e0940c66e22faadec79ac2996e7,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i: int[])
    {
     	sum = sum + i;
    }
    return sum;
}
",
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",
be512a309ada9ac4c145827a9dee60f0d18cb960,"public boolean xyzThere(String str)
{
    int check = str.substring(indexOf(""xyz"");
                              
    if (check == -1 || str.substring(check - 1, check).equals("".""))
    {
        return false;
    }
    
    else
    {
        return true;
    }
}
",
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",
e9684c37300ad2ff0907d6d517e96656ca70ab9b,"public boolean isEverywhere(int[] nums, int val)
{
   for(int i = 0; i < nums.length - 1; i++) {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
                
return true; 
}
",
9580bc9ec9768fbe373460d6ae91ff54ca05bf71,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if(nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
bfa9ba9f8c1aa8e1ae413c2af6f9ae30af19b8b8,"public int countEvens(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if(nums[i] % 2 == 0)
        {
            count++;
        }
    }
    
    return count;
}
",
05b23fcc737fcb6b3c50cd8949cae2a6c045d1a0,"public String[] fizzBuzz(int start, int end)
{
    String[] series = new String[end - start];
    for (int i = 0; start < end; i++)
    {
        if ((start % (3 * 5)) == 0)
        //when it is multiples of both 3 and 5
        {
        	series[i] = ""FizzBuzz"";
        }
        else if ((start % 5) == 0)
        {
            series[i] = ""Buzz"";
        }
        else if ((start % 3) == 0)
        {
            series[i] = ""Fizz"";
        }
        else
        {
            series[i] = String.valueOf(start);
        }
        start++;
    }
    return series;
        
}
",
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
c0e74847daded5db86a45f95da024ec482c4f9a4,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19}
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
",
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",
7f41d3bdfcd6606cda578b2090213e0dfcd23aad,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
    {
        return true;
    }
    
    return((a + b) == 6 || Math.abs(a - b) == 6)
}
",
c6a7e900d8268e52e52d9619cadc6f8e9dfd493b,"public int[] withoutTen(int[] nums)
{
    int newArray[] = new int[nums.length];
    for(int val : newArray)
        val = 0;
    
    int newIndex = 0;
    for (int i = 0; i < nums.length; i++){
    	if(nums[i] != 10)
            newIndex[newIndex++] = nums[i]; 
    }
    
    return newArray;
}
",
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
",
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",
3b24fd13da29cf3eaf6ecbfb5f5dfeb4cbdd236e,"public int noTicket(int 0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
",
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
8dde95600a194d6b8f2b34b5af7a8f5628b4039d,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
        if (day == 0)
        {
        	return ""off"";
        }
        else if (day == 6)
        {
        	return ""off"";
        }
        else
        {
            return ""10:00"";
        }
    }
    else
    {
    	if (day == 0)
        {
        	return ""10:00"";
        }
        else if (day == 6)
        {
        	return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",
4cc916649df329cb2108d1f68b228a173f91b30d,"public int makeChocolate(int small, int big, int goal)
{
    if (small + (5*big) < goal)
    {
        return -1;
    }
    else
    {
        if ((goal / 5) <= big)
        {
            int r = goal % 5;
            if (r <= small)
            {
                return small;
            }
            else
            {
                return -1;
            }
        }
        else
        {
            if ((goal - (5 * big)) <= small)
            {
                return goal - (5 * big);
            }
            else
            {
                return -1;
            }
        }
    }
    
    
}
",
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
",
06e475a59e49cf50479572d393ff89b78fbe2113,"public int makeChocolate(int small, int big, int goal)
{ int value = goal%5;
        
    if (big * 5 + small < goal)
    {return -1;}
    else if (goal%5 <= small)
    {return goal%5;}
    else if (big*5>goal)
    {return goal%5}
    else 
    {return -1;}
    
}
",
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
",
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",
dfec8af38d1aa62647f76b80d8aa2ced155dd146,"public int[] fizzArray(int n)
{
    int[] num;
    num = new int[n];
    for (int i = 0; i < n; i++)
    {
    	num[i] = i;
    }
       return num; 
}
",
ac50df7405fa705d67d8b1e0ed3b0ae92fb16569,"public boolean xyzThere(String str)
{
    //check from variable starting at 0
    //and go until str.length
    int first = str.indexOf(""xyz"");
    if (str.charAt(first - 1) != '.')
        return true;
    else if (str.charAt(first - 1) == '.')
        return false;
    return false;
}
",
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
7bbe47ddbd540b9999602f687a555456a4122938,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	while (isBirthday == false)
    {
    	if (speed <= 60)
        {
            return 0;
        }
    	else if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    	else if (speed >= 81)
        {
            return 2;
        }
    }
    while (isBirthday == true)
    {
        if (speed <= 65)
        {
            return 0;
        }
    	else if (speed >= 66 && speed <= 85)
        {
            return 1;
        }
    	else if (speed >= 86)
        {
            return 2;
        }
    }
    return 1;
}",
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",
9a5832bfed15bdad7772d535eb8ac20de5ee9a60,"public boolean sameEnds(int[] nums, int n)
{
    boolean answer = true;
    for (int i = 0; i < n; i++)
    {
        if (!(nums[i] == nums[nums.length - n + 1]))
        {
            answer = false;
        }
    }
    return answe;
}
",
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",
bb95327d0292272d65dd996e6aa6f61c87319399,"public boolean endOther(String a, String b)
{
    if a.length() == ""a"" + ""b""
        return b.substring(0,1).toLowerCase();
}
",
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
",
2b64a0277763a3e3aeb7d462893bb8e9e84266a5,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
        
        for (int i = 0; i < nums.length; i++)
        {
            sum += nums[i];
            if (nums[i] < min)
            {
                min = nums[i];
            }
            else if (nums[i] > max)
            {
                max = nums[i];                
            }
        }
    int average = (sum - min - max) / (nums.length - 2);
    
    return average;
}
",
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
7e8ebbb04f1a1a60590f6fb959bda51fa984b852,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums.get(i)%2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",
5e5840b4728a9e257720a8c46d3285726a2ba053,"public boolean twoTwo(int[] nums)
{
    for(int i = 0; i < nums.length-2; i++)
    {
        if(nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
        if(nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
    }
    return true;
        
}
",
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",
6b538f7d9eac6f8c54cd2c59a699ca73280e0930,"public class FizzArray {

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
3e3d7e87775a8c1206be6e9b3a713cbc238778ad,"public boolean sameEnds(int[] nums, int n)
{
    int[] a = int[n];
    int[] b = int[n];
    if (n == 0 || n == nums.length)
    {
        return true;
    }
    else
    {
        for (int i = 0; i < n; i++)
        {
            a[i] = nums[i];
            b[i] = nums[nums.length - n + i];
            if (a[i] != b[i])
            {
                return false;
            }
        }
        return true;
    }
}
",
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
",
8faf14f1204c6304c1a1562a50964e420ce74fe5,"public String without2(String str) 
{
    if (str.length() < 2)
        return str;
    else if (str.charAt(0) == str.charAt(str.length() -2)) && str.charAt(1) == str.charAt(str.length() -1))
        str = str.substring(2, str.length());
    	return str;
    else
         return str.
}
",
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",
c0e74847daded5db86a45f95da024ec482c4f9a4,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19}
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
",
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
",
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",
2d1d1fb5d01448f6fb807ae2e7396795eba1c3fd,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0
    }
}
",
8a779c37e36e7e7238238f8fa362f496af39a6e3,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    
    
        
        
    if(first != -1 && last != -1 && first != last)
    {
		return str.substring(first + 5, last);
    }
    else return"""";
}
",
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",
501aad78d9f445fad6785a696183d9f103460c21,"public int countCode(String str)
{
    int i = 0;
    int j = 0;
    String keyword = ""code"";
    String[] sentence = keyword.split(str);
    for (String word: sentence)
    {
        i++;
    }
    return i;
}
",
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
",
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
",
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",
35dde7794b6fddbfa24173cdc0b55b2393660120,"public int makeChocolate(int small, int big, int goal)
{
    int pack = goal % 5;
    if (small + (big*5) < goal)
    {
        return -1;
    }
    else if (pack <= small && goal > big*5 > 4)
    {
        return pack + 5;
    }
    else if (pack <= small)
    {
        return pack;
    }
    else 
    {
        return -1;
    }
}
",
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",
caec91f2ba0d25b3a96d93bbc7e6ff92f4dfdd72,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off""
        }
    }
    else if (day > 0 && day < 6)
    {
        return ""7:00"";
    }
    else
    {
        return ""10:00"";
    }
}
",
7991e5a91ee75b2ca8290f4fbbd9dee8ea1ad8dc,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
    }
    return nums;
}
",
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
",
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",
d620f21e27a87e15d05a4f085e8ed51214622697,"public String alarmClock(int day, boolean vacation);
int alarmTime = 0;
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	alarmTime=7;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	alarmTime=10;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=off;
    	}
    }
return alarmTime;    
}
",
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
",
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
",
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",
63bc9b6a7e3b8866c3ea0d84d282e25f9716e838,"public String mixString(String a, String b)
{
    String result = """"; 
    int index = 0;
    
    if (a.length() >= b.length()) {
        index = b.length(); 
    }
    if (a.length() <= b.length()) {
        index = a.length(); 
    }
    for (int i = 0; i < index; i++) {
        result += a.substring(i, i + 1) + b.substring(i, i + 1);
    }
    if (a.length() < b.length()) {
        result += b.substring(a.length(), b.length()); 
    }
    if (a.length() > b.length()) {
        result += a.substring(b.length(), a.length()); 
    }
    return result; 
}
",
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",
c7972a0c52578814fdc1e75cdf7b2b9b87eaaa39,"public boolean evenlySpaced(int a, int b, int c)
{
    if ( a > b && b > c || c > b && b > a)
    {
        return ( a - b == b - c);
    }
    else if ( b > a && a > c || c > a && a > b)
    {
        return ( b - a == a - c);
    }
    else
    {
        return ( a - c == c - b);
    }
    
}
",
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
",
0052f96ceb63d13b4f7dcf7cc400966906099f39,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}
}
}",
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",
da854431fc95a4fda3f5795de985db2ccfd6cecc,"public boolean xyzThere(String str)
{
    if (str.length() >= 3) {
   	 	for (int i = 0; i < str.length() - 3; i++) {
        	if (str.substring(i, i + 3).equals(""xyz"")) {
            	if (i == 0) {
                    return true;
                }
                else if (str.charAt(i - 1) == '.') {
                    return false;
                }
                else {
                    return true;
                }
        	}
            else {
               return false; 
            }
    	}
    }
    else {
        return false;
    }
}
",
ed001bba4d539b3174c33573c1d34c4f777cd0e2,"public int[] seriesUp(int n)
{
    int[] arr = new int[n*(n+1)/2];
    
    int index = 0;
        
    for(int i = 1; i <= n; i++) {
        for(int j = 0; j < i; j++) {
            arr[index + j] = j + 1;
        }
        index += i;
    }
                                
return arr;
}
",
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
",
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
",
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",
5f137dbfa54f3c15c65ef24630bad52216763faa,"public int redTicket(int a, int b, int c)
{
    
    if (a== 2 && b==2 && c==2)
    {
        return 10;
    }
    
    if (a==b && a==c && b==c)
    {
        return 5;
    }
    
    if (a!=b && a!=c)
    {
        return 1;
    }
    
    
    
    
    return 0;
}
",
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",
6ab6c1ba53a6425448c2bc16832e926986cd438a,"public int makeChocolate(int small, int big, int goal)
{
   int rem = goal % 5;
   if (small + (5 * big) < goal)
   {
       return -1;
   }
  else if (small + (5 * big) > goal)
  {
      return -1;
  }
  else
  {
      return small * rem;
  }
}
",
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",
9def91e03cb4c9e4fb5f0472d02e90c8fb23cc26,"public int makeChocolate(int small, int big, int goal)
{
    int amount = (5*big) + small; // Amount possible
    if (amount < goal)
    {
        return -1;
    }
    else if (amount == goal)
    {
        return small;
    }
    else
    {
        int diff = amount - goal;
        int afterBig = diff - (5*big);
        if (afterBig < 0)
        {
            return small;
        }
        else
        {
            return small - afterBig;
        }
    }
}
",
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
",
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
",
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",
d866157db78f6eb45be705042a8b581075d47972,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    	if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
            return a.sb;
    	}
    
    
}
",
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
",
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",
5f0de396365017b80185b81d0904cd472b4f28f8,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if ((a == b && b != c) || (a == c && a != b) || (b == c && b != a))
    {
       return 10;
    }
    else 
    {
        return 0;
    }
}
",
a730369051672c668c3efc03eb8dcc6956e9beb3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	// Java arrays are initialized to 0 so no need to set the last elements to 0
	return arr;
}
",
433d8d82491f06595b4a7fd44c977dbfb917d6b7,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] != 7 && nums[i+1] != 7)
        {
          return false;
        }
    }
    return true;
    
}
",
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
",
7a311480e1038e58bd263cd3dd91b77fce57edfa,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}",
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
",
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
",
a77cf61f1d235b19831c14399114810bc8b89144,"public int[] shiftLeft(int[] nums)
{
    int[] array = new int[nums.length];
    if ( nums.length >= 2 ) {
        for ( int i = 1; i < nums.length; i++ ) {
            array[i-1] = nums[i];
            array[nums.length - 1] = nums[0];
        }
        return array;
    }
    else
    {
        return nums;
    }
}
",
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
",
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",
ac50df7405fa705d67d8b1e0ed3b0ae92fb16569,"public boolean xyzThere(String str)
{
    //check from variable starting at 0
    //and go until str.length
    int first = str.indexOf(""xyz"");
    if (str.charAt(first - 1) != '.')
        return true;
    else if (str.charAt(first - 1) == '.')
        return false;
    return false;
}
",
e93ac984fe80d9ff8d2b28a49fe9042f2029629f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] % 10 == 0)
        {
            if (nums[i + 1] % 10 != 0)
            {
                nums[i + 1] = nums[i];
            }
        }
    }
    return nums;
}
",
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",
7f69c4115a9df00204939b23d0bc6db187447e93,"public boolean xyzThere(String str)
{
    //return(str.indexOf(""xyz"") != -1 && str.indexOf("".xyz"") == -1);
    for(int i = 0; i < str.length(); i++){
        if(str.indexOf(""xyz"",i) != -1){
            if(str.lastIndexOf("".xyz"",i+1) != i+1){
                return true;
            }
        }
    }
    return false;
}
",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
33e62f65180aaedc26d6d11b46d081d5c9bffbf4,"public int[] frontPiece(int[] nums) 
{
  if (nums.length == 1)
  {
  return new int[] {nums[0]};
  }
  else if (nums.length == 0)
  {
  return new int[] {};
  }
    else
    {
  return new int[] {nums[0],nums[1]};
    }
    }
",
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",
811d76f82110f3c78d7ac2e389a660bd7056fd4d,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
        if (nums.length != 0)
        {
            int[] newArray = new int[1];
        	newArray[0] = nums[0]; 
            return newArray;
        }
        else
        {
            int[] newArray = new int[0];
            return newArray;
        }
    }


        int[] newArray = new int[2];
        newArray[0] = nums[0];
        newArray[1] = nums[1];
        return newArray;

}
",
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",
f5262091a63d4e4c3c064cfbc001b665331ae465,"public boolean love6(int a, int b)
{
    boolean isSix = false;
    if (a == 6 || b == 6)
    {
        isSix = true;
    }
    if (a + b == 6)
    {
        isSix = true;
    }
    if (Math.abs(a - b) == 6)
    {
        isSix = true;
    }
    return isSix;
}
",
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
",
5f0de396365017b80185b81d0904cd472b4f28f8,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if ((a == b && b != c) || (a == c && a != b) || (b == c && b != a))
    {
       return 10;
    }
    else 
    {
        return 0;
    }
}
",
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
",
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
",
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
",
0044e95fa65db2f377719ad29d9703343bb89fbc,"public int[] shiftLeft(int[] nums)
{
 	int[] numsNew = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++)
    {
        numsNew[i] = nums[i + 1];
    }
    numsNew[nums.length - 1] = nums[0];
    return numsNew;
}
",
49eb57187ce32f7392ba9eb954bfc79921194a03,"public int countCode(String str)
{
    int count = 0;
    int i = 0;
    int length = str.length() - 3;
    while (i < length)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) = ""e"")
        {
            count++;
        }
        else
        {
            i++
        }
    }
    return times;
}
",
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",
6951053422eb1f10e58384407fe2177bd76f6031,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum
    }
}
",
d832642cded155ba61945ed277e663a0de8cb32c,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 || day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",
a2c77eb2341d2107484dea64721c8eb1fb2b5c9b,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else if (c == 13)
    {
    	sum = a + b;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum;
    }
}
",
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",
524b4fdc13523fe6d2612f39b454df4bd13a4571,"public int countClumps(int[] nums)
{
    int i = 0;
    int count = 0;
    if(nums[i] == nums[i + 1])
    {
        count = count + 1;
        i++;
    }
    return count;
}
",
50e38ea828c8b0ad18791c7c955b37bad6c9d4bc,"public boolean xyzThere(String str)
{
    int a = str.indexOf(""xyz"");
    int b = str.lastIndexOf(""xyz"");
    return ( a != -1 || b != -1);
}
",
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
",
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",
f055965f9ae32739c7b92d6b5ecbca90565fcdcd,"public String without2(String str) 
{
    int len = str.length();
    if (str(0) == str(len - 2) && str(1) == str(len - 1))
    {
        String sss = null;
        sss.append(str,2,len-1);
            return sss;
    }
    else
    {
        return str;
    }
}
",
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
e9684c37300ad2ff0907d6d517e96656ca70ab9b,"public boolean isEverywhere(int[] nums, int val)
{
   for(int i = 0; i < nums.length - 1; i++) {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
                
return true; 
}
",
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
",
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",
9da10eb0a36c1f2a83adb2a9e709bf948f23038e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if (a + b == 6)
    {
        return true;
    }
    else if (Math.abs(a-b) == 6)
    {
        return true;
    }
}
",
5e5840b4728a9e257720a8c46d3285726a2ba053,"public boolean twoTwo(int[] nums)
{
    for(int i = 0; i < nums.length-2; i++)
    {
        if(nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
        if(nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
    }
    return true;
        
}
",
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",
ab587b2f0a8c9a7e320c5272ce424f6add5b8e19,"public String atFirst(String str)
{
 	if (str.length()==0)
    {
    	return ""@@"";
    }
    else if (str.length() == 1)
    {
    	return str + ""@"";
     
    }
    else
    {
    	return str.substring(0,2);
    }
}
",
803c3b7ab2f6984a216901319f02c8549f93ff24,"public String getSandwich(String str)
{
    int length = str.length();
    if ( str.startsWith(""bread"") && str.endsWith(""bread"") )
    {
        return str.(5, (str.length - 5));
    }
    else
    {
        return """"
    }
}
",
88a0dfaaec01e3c8bf3da8cb5e083b9f86484d26,"public int[] withoutTen(int[] nums)
{
    int[] newArray = new int[nums.length()];
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] % 10 != 0)
        {
            newArray[i] = nums[i];
        }
    }
    return nums;
}
",
8536c5f768b1adb326e2c34c566a310f311e86dc,"public boolean xyzThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.CharAt(i+1) == 'y' 
            && str.CharAt(i+2) == 'z')
        {
            if (i == 0 || str.CharAt(i-1) != '.')
                return true; 
        }
    }
    return false; 
}
",
4cc916649df329cb2108d1f68b228a173f91b30d,"public int makeChocolate(int small, int big, int goal)
{
    if (small + (5*big) < goal)
    {
        return -1;
    }
    else
    {
        if ((goal / 5) <= big)
        {
            int r = goal % 5;
            if (r <= small)
            {
                return small;
            }
            else
            {
                return -1;
            }
        }
        else
        {
            if ((goal - (5 * big)) <= small)
            {
                return goal - (5 * big);
            }
            else
            {
                return -1;
            }
        }
    }
    
    
}
",
4465ac2e7e70f3ac5ddbd490bd262cc0c4f6249d,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        grid[0] = nums[0];
        grid[1] = nums[1];
        return grid[];
    }
}
",
609cc3f20dd1f3529a02ebbed8384395c8400b2b,"public int countEvens(int[] nums)
{
    int evens = 0;
    for (int number: countEvens)
    {
        if (number % 2 == 0)
        {
            evens = evens + 1;
        }
    }
    return evens;
}
",
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
",
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",
0052f96ceb63d13b4f7dcf7cc400966906099f39,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}
}
}",
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
",
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",
7a311480e1038e58bd263cd3dd91b77fce57edfa,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}",
f975c769611523b9ff8e0c8e7baa2a5d2b94373c,"public boolean twoTwo(int[] nums)
{
    int i;
    for (i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i+1] != 2)
            {
                return false;
            }
            i = i +2;
        }
    }
    if (nums.length >= 3)
    {
	if (nums[nums.length - 1] == 2 && nums[nums.length - 2] != 2)
        {
            return false;
        }
    }
    else
    return true;
}
",
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
",
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
",
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}",
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
",
72ecc8394c6495b7c9dc9d4810c8469c5f8fa3b9,"public int luckySum(int a, int b, int c)
{
    int sum=0;
    if(a==13)
    {
        sum=0;
    }
    if(b==13)
    {
        sum=a;
    }
    if(c==13)
    {
        sum=a+b;
    }
    return sum;
}
",
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
",
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",
831d4624fc6b65528bad888eede0abe0e570d59f,"public int[] seriesUp(int n)
{
    int len = n*(n+1)/2;
    int[] nums = new int[len];
    int index = 0;
	for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            nums[index] = j;
            index++;
        }
    }
    return nums;
}
",
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
",
35dde7794b6fddbfa24173cdc0b55b2393660120,"public int makeChocolate(int small, int big, int goal)
{
    int pack = goal % 5;
    if (small + (big*5) < goal)
    {
        return -1;
    }
    else if (pack <= small && goal > big*5 > 4)
    {
        return pack + 5;
    }
    else if (pack <= small)
    {
        return pack;
    }
    else 
    {
        return -1;
    }
}
",
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
32396e685c9c1f94f438bfabc71c445d254ec3ff,"public int sortaSum(int a, int b)
{
    int sum = 0;
    if (sum >= 10 && sum <= 19){
        sum = 20;
    }
    return sum;
}
",
3f9ae7a55e4744f76136cc3c9f389c1976990cdf,"public int[] shiftLeft(int[] nums)
{
    int length = nums.length;
    int[] nums2 = new int[length];
    if ( length > 0 )
    {
    	nums2[length - 1] = nums[0];
    }
    for ( int i = 1; i < length; i++ )
    {
        nums2[i - 1] = nums[i];
    }
    return nums2;
}
",
ea7b7503d60391606cc84dfdd7b718ed94407df2,"public int makeChocolate(int small, int big, int goal)
{
    if (goal / 5 != big )
        return goal % 5;
    else if (goal / 5 == big && (goal - big * 5) != 0)
        return small;
    else if (goal / 5 == big && (goal - big * 5) == 0)
        return 0;
    else 
        return -1;
}
",
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",
bab5cb0c2c8a924af65c6c139ed8497d525bd0a0,"public int[] fix45(int[] nums)
{
	
 	int k =0;
 	 for(int i=0; i< nums.length; i++)
     for(int j=0; j<nums.length; j++)

     if(nums[i]==4 && nums[j]==5)
     {
      k  =nums[j+1];
      nums[j+1] = nums[i];
      nums[i] = k;
     }
     return nums;
}
",
59ddcc8d2c64ff9c515cffec668bc32d2d983a48,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == false) {
    	if (day != 0 || day != 6) {
        	return(""7:00"");
        }
        else {
        	return(""10:00"");
        }
    }
    else {
    	if (day != 0 || day != 6) {
        	return(""10:00"");
        }
        else {
        	return(""off"");
        } 
    }
}
",
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
",
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",
e83f8a27c4629867efdeba1df6ad71bbdbbfb10d,"public int luckySum(int a, int b, int c)
{
    if(a!=13)
    {
        a=0;
    }
    if(b!=13)
    {
        b=0;
    }
    if(c!=13)
    {
        c=0;
    }
    return a+b+c;
}",
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
4bbc3e204cd69131a96c0f7ab0f9c94499406204,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
        {
            return 10;
        }
    else if ((a == b) && (b == c) && (a == c))
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
84dfd0d1e5c431468600f396b066dbde235e2bb8,"public int[] shiftLeft(int[] nums)
{
    int[] newList = new int[nums.length];
    return newList;
}
",
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
f4397125e1414a5e4418c6c38c9bfca85bafd13c,"public int dateFashion(int you, int date)
{
    int chances = 0;
    if ((you >= 8 && date > 2) || (date >= 8 && you > 2))
    {
    	chances = 2;
        return chances;
    }
    else if (you <= 2 || date <= 2)
    {
        return chances;
    }
    else
    {
        chances = 1;
        return chances;
    }
    
}
",
f6cfdfcc045d3ced7634c7a0afcbe4afd98d380e,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
        n = 0;
    
    return n;
}
",
cf03e7d05ecf19d01f0b0960fcc372a74623be83,"public int[] zeroMax(int[] nums)
{
    int i = nums.length - 1;
    while(i >= 0 && nums[i] % 2 == 0)
    {
        i--;
    } 
    for(int j = i - 1; j >= 0; j--) {
        if(nums[j] == 0)
        {
            nums[j] = nums[i];
        }
        if(nums[j] % 2 == 1 && nums[j] > nums[i])
        {
            i = j;
        }
    }
    return nums;
}
",
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
",
5771edb09478591fc879512a4e01c7ace896b913,"public int sum67(int[] nums)
{ 
    int sum = 0;
    for(int i - 0;i < nums.length; i++)
    {
        if( nums[0] == null)
        {
            return 0;
        }
        else
        {
            if(nums[i].charAt(0) == '6' && nums[i].charAt(1) == '7'}
               return sum;}
               return sum + i;
               }

         

",
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
",
4b39b762690e012369c928241a0dcc90b6ba8eda,"public boolean twoTwo(int[] nums)
{
    int i;
    for (i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i+1] != 2)
            {
                return false;
                i = i +1;
            }
        }
    }
    return true;
}
",
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",
a43f9daaa9b5cc98acfe197b9157d9de345febf6,"public int[] frontPiece(int[] nums)
{
    for (int numbers: nums; int i = 0; i < 2; i++)
    {
        int number[i] = numbers;
    }
    return number;
}
",
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
",
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",
be6f330ec55383c3df4f8bb983cb48c54ee2f1e9,"public void int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    	if (speed<=65) {
			return 0;
   	 	} else if (speed>=66 && speed<=85) {
       		return 1;   
        } else if (speed>=86) {
        	return 2;
        }
    else if (isBirthday == false) {
       if (speed<=60) {
			return 0;
   	 	} else if (speed>=61 && speed<=80) {
       		return 1;   
        } else if (speed>=81) {
        	return 2;
        }
    }
}	
",
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",
d3fc7117bd8d2d3ce23fb6c7b34d1274ad60e27c,"public boolean xyzThere(String str)
{

    if (str.length () >= 3  && str.contains(""xyz""))
        
    {
        return true;
    }
        for (int x = 0; x < str.length() -3; x++)
        {
   			if (str.charAt(x) == '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return false;
    }
        
        }
    {return false;}

}
",
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",
f2cb95a9b34f9f39eef5d70b74753e2a8d272bd5,"public void int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    	if (speed<=65) {
			return 0;
   	 	} else if (speed>=66 && speed<=85) {
       		return 1;   
        } else if (speed>=86) {
        	return 2;
        }
    else if (isBirthday == false) {
       if (speed<=60) {
			return 0;
   	 	} else if (speed>=61 && speed<=80) {
       		return 1;   
        } else if (speed>=81) {
        	return 2;
        }
    }
}	
",
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",
fbd4c23e76bef6c785eaeac729ab320635a7682b,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
",
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
",
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
",
e87542225324deb36fc5891405e6401d53aab2a3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed -= 5;
    }
    if (speed=<60)
    {
        return 0;
    }
    if (speed>=61 && speed<= 80)
    {
        return 1;
    }
    if (speed>=81)
    {
        return 2;
    }
}
",
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
",
acf68ee14e8bbbb4c7037ac6430a44a2a7624ef8,"public int roundSum(int a, int b, int c)
{
      return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int n = num % 10;
    
    if(n >= 5)
    {
        num = num + (10-n);
    }
    else
    {
        num = num - n;
    }
    return num;
}
",
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",
2d1d1fb5d01448f6fb807ae2e7396795eba1c3fd,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0
    }
}
",
56b30ba0d8342b36c32494ba9afb08d905deed7c,"public int[] tenRun(int[] nums)
{
    int i;
    int[] arr = new int[nums.length];
    for (i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0 && nums[i+1] % 10 != 0)
        {
        while (nums[i] % 10 == 0 && nums[i+1] % 10 != 0)
        {
            arr[i] = nums[i];
            arr[i+1] = nums[i];
            i++;
        }
        }
        else
            arr[i] = nums[i];
    }
    return arr;
}
",
39483c437921abc8fe24406f9d159f633a6ed263,"public boolean xyzThere(String str)
{

    if (str.startsWith(""xyz"") || str.endsWith(""xyz""));
        
    {
        return true;
    }
        for (int x = 0; x < str.length() -2; x++)
        {
   			if (str.charAt(x) == '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return false;
    }
        
        }
    {return false;}

}
",
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
2efc3b1d0acaa60b452bf611f88e4f3873fd00aa,"public boolean isEverywhere(int[] nums, int val)
{
    int b = 0;
    for (int i = 1; i < nums.length - 1; i++) {
        if (nums[i] == val || nums[i-1] == val ||
            nums[i+1] == val) {
            	b++;
        }
    }
    return b == nums.length - 2;
}
",
7991e5a91ee75b2ca8290f4fbbd9dee8ea1ad8dc,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
    }
    return nums;
}
",
f5de478e40b7f066a55956915d8f27db4a8f69be,"public boolean bobThere(String str)
{
    
    int end = (str.length - 2));
	for(int i = 0; i < end; i++)
	{
		if(str.charAt(i) == 'b'
           && str.charAt(i+2) == 'b')
			return true;
	}
    {
	return false;
    }
    
}
",
e9684c37300ad2ff0907d6d517e96656ca70ab9b,"public boolean isEverywhere(int[] nums, int val)
{
   for(int i = 0; i < nums.length - 1; i++) {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
                
return true; 
}
",
af72162e8ac5b84ac915a239ad3487e01803ebce,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    while (isBirthday != true)
    {
    	if (speed <= 60)
    	{
        	return int 0;
    	}
    	else if (speed > 60 && speed <= 80)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
    while (isBirthday != false)
    {
       if (speed <= 65)
    	{
        	return 0;
    	}
    	else if (speed > 65 && speed <= 85)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
}",
ecc91027483a8b199845eaf128d2f3efd91fb801,"public int noTeenSum(int a, int b, int c)
{
return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 16) {
        n = n;
    }
    else if (n == 15) {
        n = n;
    }
    else if (n > 12 && n < 20) {
        n = 0;
    }
return n;}
",
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",
e84673c29694a76707c256790f12f5017607e1ac,"public int[] frontPiece(int[] nums)
{
    int[] newArray = new int[2];
    for (int i = 0; i < 2; i ++)
    {
        if (i < nums.length)
        {
            newArray.add(nums[i]);
        }
    }
    return newArray;
}
",
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
f0258239140a383cf0c0c1e9ac9553390ed81433,"public boolean xyzThere(String str)
{
    int i = 0
    int length = str.length() - 2;
    for( i ; i < length; i++);
    {
     	if(str.charAt(i) == 'x' && str.charAt(i+1) == 'y' && str.charAt(i+2) == 'z')
        {
         	if (i == 0 || str.charAt(i-1) != ""."")
                return true;
        }
    }
    return false;
}
",
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
",
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",
87b2b1811ad58d7a1fff515864427654134ed8fa,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            if (j == 0)
            {
            	while (nums[j] != 5)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
            
            else
            {
                while (nums[j] != 5 && nums[j - 1] != 4 && j < nums.length)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
        }
    }
    return nums;
}",
a53827ae6f8593b92d7c9f0fea1847acc9435ac4,"public String alarmClock(int day, boolean vacation)
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	return 7;
    	}
    	else if (day=0 || day=6)
    	{
    	    return 10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	return 10;
    	}
    	else if (day=0 || day=6)
    	{
    	    return off;
    	}
    }
    
}
",
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
",
e5e657c2181fcc98486e3cc0d5d3eefe6b267e6c,"public boolean isEverywhere(int[] nums, int val)
{
    
    int totalz = nums.length - 1;
    int counter = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {        
		if (nums[i] == val || nums[i+1] == val)
        {
            counter = counter + 1;
        }
        if (1 > nums.length)
        {
            return true;
        }
    }
    
    return (counter == totalz);
    
}
",
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
",
7f69c4115a9df00204939b23d0bc6db187447e93,"public boolean xyzThere(String str)
{
    //return(str.indexOf(""xyz"") != -1 && str.indexOf("".xyz"") == -1);
    for(int i = 0; i < str.length(); i++){
        if(str.indexOf(""xyz"",i) != -1){
            if(str.lastIndexOf("".xyz"",i+1) != i+1){
                return true;
            }
        }
    }
    return false;
}
",
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",
e444710aa658e2dde4799f8965284cd20bc98f6a,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
        int even = 0;
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;
}
",
55d82777253a00d8ba398425451c87f2ce6bf43d,"public boolean xyBalance(String str)
{
	    
    for (int i = 0; i < str.length(); i++)
    {
        if (str.charAt(i) == 'x')
        {
            for (int j = 0; j < str.length(); j++)
            {
                if((i+j) < str.length())
                {
                	if((str.charAt(i+j) == 'y'))
	                {
						for (int k = 0; k < str.length(); k++)
                        {
                        	if((k+i+j) < str.length())
                            {
                            	if (str.charAt(k+i+j) == 'x')
                                {
                                	return false;
                                }
                                else if (str.charAt(str.length()-1) == 'y')
                                {
                                	return true;
                                }
                            }                            
                        }
                        return true;
        	        }

                }
            }
        }        
    }
    for (int z = 0; z < str.length(); z++)
    {
    	if (str.charAt(z) != 'x')
        {
        	for (int q = 0; q < str.length(); q++)
            {
            	if ((q+z) < str.length() && str.charAt(q+z) == 'x')
                {
                	return false;
                }
            }
        }
    }
    return false;
}
",
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",
bb819a051a15f625b5912634652b195b464f7095,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length + 1 < nums.length - 2)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
",
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
",
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
",
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}",
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",
ac50df7405fa705d67d8b1e0ed3b0ae92fb16569,"public boolean xyzThere(String str)
{
    //check from variable starting at 0
    //and go until str.length
    int first = str.indexOf(""xyz"");
    if (str.charAt(first - 1) != '.')
        return true;
    else if (str.charAt(first - 1) == '.')
        return false;
    return false;
}
",
9222afd237f2a153dec01f15809e88ec81bac994,"public String plusOut(String str, String word)
{
    String trivialEnd = """";
    int n = 0;
    
    while (n <= str.length())
    {
       if (str.substring(n).startsWith(word))
       {
           trivialEnd += word;
           n += word;
           
       }
        else 
        {
            trivialEnd += '+';
            n++
        }   
    }   
    return trivialEnd;
}
",
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",
458df3209fd88a511ec835c27a6b8e785183059c,"public boolean xyzThere(String str)
{
    int len = str.length() - 2;
    for(int i = 0; i < len; i++)
    {
        if (str.charAt(i) == ""x"" && str.charAt == ""y"" && str.charAt(i+2) == ""z"")
        {
            if(str.charAt(i-1) 1= ""."" || i==0)
            {
                return true;
            }
        }
    }
        return false;
}
",
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",
c39d1ee94f6a9a0a81bfecf4b8fd083b1fca26c2,"public int[] fizzArray(int n)
{
    int array = new int[n];
    for(int i=0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",
a43f9daaa9b5cc98acfe197b9157d9de345febf6,"public int[] frontPiece(int[] nums)
{
    for (int numbers: nums; int i = 0; i < 2; i++)
    {
        int number[i] = numbers;
    }
    return number;
}
",
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
",
094b0e8c960090e5db7e7ed5078935048f600dba,"public String zipZap(String str)
{
    
    for(int x = 0; x< str.length()-2; x++)
    {
     	if(str.charAt(x) == 'z' && str.charAt(x+2) == 'p')
            return ""zp"";
    }
    return ""zpXzp"";
        
}
",
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",
cf1aaa53350b07642069ec537a4b37e93bf3531b,"public int redTicket(int a, int b, int c)
{
    if (a==2 && b==2 && c==2)
    {
        return 10;
    }
    else if (a==b && b==c)
    {
        return 5;
    }
    else if (a!=b && b!=c && c!=a)
    {
        return 1;
    }
    else 
    {
        return 0;
    }
}
",
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",
067f3c0fe82004ac32645ea8ebf00f9e81915b6f,"public boolean twoTwo(int[] nums)
{
    if(nums.length==1&&nums[0]==2)
    {
        return false;
    }
    if( nums.length==0)
    {
        return true;
    }
     for(int i=0;i+1<nums.length;i++)
    {
        if(nums[i]==2&&nums[i+1]!=2)
        {
            
            return false;
        }
         
        else if(nums[i]==2&&nums[i+1]==2)
        {
            i++;
        }
    }
    if(nums[nums.length-1] == 2 && nums[nums.length-2] != 2&&nums.length>=2)
         {
             return false;
         }   
    return true;
}
",
b20d525ead268bb3eced9c95cb88481aa8aab61d,"public int makeChocolate(int small, int big, int goal)
{
	if (goal > 5*big)
    {
       goal = goal - 5 * big); 
    }
    else
    {
        goal = goal % 5;
    }
    if (goal <= small)
    {
        return goal;
    }
    return -1;
}
",
5f137dbfa54f3c15c65ef24630bad52216763faa,"public int redTicket(int a, int b, int c)
{
    
    if (a== 2 && b==2 && c==2)
    {
        return 10;
    }
    
    if (a==b && a==c && b==c)
    {
        return 5;
    }
    
    if (a!=b && a!=c)
    {
        return 1;
    }
    
    
    
    
    return 0;
}
",
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",
a3e152967d7d008b50968916b9389141c0fff350,"public boolean sameEnds(int[] nums, int n)
{
    int length = nums.length;
    if ( n == 0 || n == length )
    {
        return true;
    }
    else
    {
        boolean same = true;
        for ( int i = 0; i < n; i++ )
        {
            if ( nums[i] != nums[length - n + i] )
            {
                same = false
            }
        }
        return same;
    }
}
",
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
",
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",
2554504cf73dcc772aa6c40d5e1c117584eceb44,"public int sum13(int[] nums)
{
    int total = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i > 0)
        {
            if (nums[i] != 13 && nums[i - 1] != 13)
            {
                total += nums[i];
            }
        }
        else
        {
            if (nums[i] != 13)
            {
                total += nums[i];
            }
        }
    }
    
    return total;
}
",
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
",
fbb1ba5b8e0bd1848e38b6705785113e63a30905,"public boolean bobThere(String str)
{
 	for (int i = 0; i < str.length() - 3; i++)
    {
     	if(str.charAt(i)).equals(""b"") && str.charAt(i+2)).equals(""b""))   
        {
            return true;
        }
    }
    return false;
}
",
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}",
8525e179d8af7bb7632d7d8c09ddf14b6e564466,"public boolean twoTwo(int[] nums)
{
    for(int i=0;i+3<nums.length;i++)
    {
        if(nums[i]==2&&nums[i+1]!=2)
        {
            i+=2;
        }
        if(nums[i]==2&&nums[i+1]!=2)
        {
            
            return false;
        }
      
    }
    return true;
}
",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",
783f58a9d684df6c18e6b47db9326f28032afe07,"public int countCode(String str)
{
    int count = 0;
    for(int i = 0; i < str.length(); i++){
    	if(str.indexOf(""co"",i)==i+1&&str.indexOf(""co"",i+2)==i+3)count++;
    }
    return count;
}
",
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",
78a8e8a64b313ff7d1734612cc884e563d6caea4,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b!= 13 && c!= 13)
    {
        return (a+b+c);
    }
    
    else if (a== 13)
    {
        return 0;
    }
    
    else if (b== 13)
    {
        return a;
    }
    
    else if (c==13)
    {
        return (a+b);
    }
    
    return 0;
}
",
3b6a3747d8a8ba7e00b3386b0a9baaad77d0edec,"public boolean sameEnds(int[] nums, int n)
{
    /**
    int same=0;
    for (int i=nums.length-1;i>0 ;i--)
    {
        if (nums[0]!=nums[i])
        {
            same++;
        }
    }
    */
    int same=0;
    int end = nums.length-i;
    for(int i=nums.length; i > 0; i--)
	{
		if(nums[same] != nums[end])
			return false;
		else
		{
			same++;
			end++;
		}
	}
    return true;
        
}
",
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
",
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}",
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
8ac25102baee6fadeabcfd2e101ad3f1325bb218,"public String alarmClock(int day, boolean vacation)
{
    if vacation == true
    {
        if day == 0 || 6
        {
            return ""off"";
        }
        else 
            return ""10:00"";
    }
    else 
        if day == 0 || 6
        {
            return ""10:00"";
        }
    	else 
            return ""7:00"";
            
    
}
",
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",
14169fa5cf7228ed6bc8ea2218a09d6b346ae3e8,"public int sortaSum(int a, int b)
{
    if (a + b > 0)
    { 
        return a +b ;
    }
    else if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }   
}
",
4f020dcb2ebec419aa94d431533df15542e537ec,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
    return false;
}
",
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",
8fe89f0000f53d58016dc77d2e78c0f3a582d500,"public int countCode(String str)
{
    str = str.toLowerCase();
    String frs = ""co""
    int len = str.length();;
    int count = 0;
    if (len < 4)
        return 0;
    while (len > 0)
    {
    	if (!str.substring(0,2).equals(frs) && str.charAt(3)!='e')
        {
            str=str.substring(1,len);
       	 	len--;
        }
        else
            count++;
            
    }
    return count;
    
}
",
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
",
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
332c6ec5c84a4b48b155a3ce7e3c41195bbaf8a1,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
",
3afcfb5b95bbb4959ca6608a9210a1470ece3f60,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (cigars >= 40 && cigars <= 60 && false)
    {
        return true;
    }
    
    
    
    return false;
}
",
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
",
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",
e9684c37300ad2ff0907d6d517e96656ca70ab9b,"public boolean isEverywhere(int[] nums, int val)
{
   for(int i = 0; i < nums.length - 1; i++) {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
                
return true; 
}
",
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",
4489cdc24ed51b605c6903ab95f440f106adc6df,"public boolean twoTwo(int[] nums)
{
    int i;
    for (i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i+1] != 2)
            {
                return false;
            }
            i = i +2;
        }
    }
            else if (nums[nums.length - 1] == 2 && nums[nums.length - 2] != 2)
        {
            return false;
        }
    return true;
}
",
fbb1ba5b8e0bd1848e38b6705785113e63a30905,"public boolean bobThere(String str)
{
 	for (int i = 0; i < str.length() - 3; i++)
    {
     	if(str.charAt(i)).equals(""b"") && str.charAt(i+2)).equals(""b""))   
        {
            return true;
        }
    }
    return false;
}
",
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
",
64048f2701869a2bcb7a460416d3ef15f722e6b6,"public int[] fizzArray(int n)
{
    int i;
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",
002254c45164bdf12bfca8a0fe71d68f839bbb7a,"public boolean canBalance(int[] nums)
{
    int sum = 0;
    int other =0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
    
    	for(int j = nums.length-1; j < i; j--)
   		{
        	other += nums[j];
    	}
    }
    if (other == sum)
        return true;
        else
            return false;
}
",
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",
4465ac2e7e70f3ac5ddbd490bd262cc0c4f6249d,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        grid[0] = nums[0];
        grid[1] = nums[1];
        return grid[];
    }
}
",
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
",
f1f7b77c1f7f33e64d0bfe57969ef3ab6e7f8ba1,"public int makeChocolate(int small, int big, int goal)
{
    if (goal > 0)
    {
        int bigNum = goal/5;
        if (bigNum > big)
        {
			int smallNum = goal - (bigNum * 5);
        	if (smallNum > small)
        	{
            	return -1;
        	}
        }
        else
        {
            int smallNum = goal - (bigNum * 5);
        	if (smallNum > small)
        	{
            	return -1;
        	}
            else
            {
            	return smallNum;
            }
        }
    }
    return -1;
}
",
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
",
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",
e5f4a1d12a2732c56ffa6463cfe4561bd754d8e2,"public String atFirst(String str)
{
    if (str.length >= 2)
    {
        return (str.substring(0,2));
    }
    else
    {
        return (str + ""@"");
    }
}
",
cd36011e020ffc41188de2b7cfe5e55af586b032,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
    {
        return 10;
    }
    else if ((a == b) && (b == c))
    {
        return 5;
    }
    else if ((b != a) && (c != a))
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
203f9c47a0738c4f7deb3aa08f1ac17b6d91cac6,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    int index = 0;
    
    for (int i : nums)
    {
        if (i != 10)
        {
            array[index] = i;
            index++;
        }
    }
    
   return array;
}
",
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
",
2ab613317018e535c7c370e1bf3fb0d86c7a9f9b,"public int[] tenRun(int[] nums)
{
    int[] result = new int[nums.length];
    int input;
    int value = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (input % 10 == 0 && input > value)
        {
            value = input;
        }
        
        if (value == -1)
        {
            result[i] = input;
        }
        else
        {
            result[i] = value;
        }
    }
    
    return result;
}
",
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
",
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
",
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
",
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",
63bc9b6a7e3b8866c3ea0d84d282e25f9716e838,"public String mixString(String a, String b)
{
    String result = """"; 
    int index = 0;
    
    if (a.length() >= b.length()) {
        index = b.length(); 
    }
    if (a.length() <= b.length()) {
        index = a.length(); 
    }
    for (int i = 0; i < index; i++) {
        result += a.substring(i, i + 1) + b.substring(i, i + 1);
    }
    if (a.length() < b.length()) {
        result += b.substring(a.length(), b.length()); 
    }
    if (a.length() > b.length()) {
        result += a.substring(b.length(), a.length()); 
    }
    return result; 
}
",
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
",
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
",
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
c77723bd709b08d6e00161ce3c6ef305a61d69c9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length()-2; i++) {
    if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b') {
      return true;
    }
  }
  return false;
}
",
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",
fbd4c23e76bef6c785eaeac729ab320635a7682b,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
",
af72162e8ac5b84ac915a239ad3487e01803ebce,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    while (isBirthday != true)
    {
    	if (speed <= 60)
    	{
        	return int 0;
    	}
    	else if (speed > 60 && speed <= 80)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
    while (isBirthday != false)
    {
       if (speed <= 65)
    	{
        	return 0;
    	}
    	else if (speed > 65 && speed <= 85)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
}",
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
",
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",
f6c0b5a67b540c4df32e3c9b77a9038120b43903,"public String getSandwich(String str)
{
    if (str.substring(0, 5).equals(str.substring(str.length()-5))
               && str.substring(0, 5).equals(""bread""))
    {
        return str.substring(5, str.length() -5);
    }
    else if (str.substring(2, 7).equals(str.substring(str.length()-7)))
    {
        return str.substring(7, str.length() -7);
    }
    else 
        {
            return """";
        }
}
",
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
",
5455ec6afe437e7506504e1f1428a5a0b96a5669,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
    if (a > b)
    {
       return blackjack(a, 0);
    }
    else if (b > a)
    {
        return blackjack(0, b);
    }
    } 
    return 0;
}

",
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
",
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
",
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",
1607ad1277faa6509f0ec7a5452e0b3f9b1280e4,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        int a = array[0];
            if (i != 10)
            {
                array[a] = i;
                a++;
            }
    }
    
   return array;
}
",
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
",
6a623e78b320858b018881a4c447f0285bde0276,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            int temp = nums[i];
            while (nums[i+1] % 10 != 0 || i == nums.length)
            {
                nums[i] = temp;
                i++;
            }
        }
    }
    return nums;
}",
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",
f916727180911437e727e3beb5163e6447d5202b,"public String plusOut(String str, String word)
{
    String plus = new String();
    for (int i = 0; i < str.length(); i++)
    {
        if (i <= str.length() - word.length())
        {
            if (str.substring(i, i + word.length()).equals(word))
            {
                plus += word;
                i += word.length() - 1;
            }
            else
            {
                plus += '+';
            }
        }
    }
    return plus;
}
",
203f9c47a0738c4f7deb3aa08f1ac17b6d91cac6,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    int index = 0;
    
    for (int i : nums)
    {
        if (i != 10)
        {
            array[index] = i;
            index++;
        }
    }
    
   return array;
}
",
449c25168277fbecb5660eb70e7019afab36425e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
            return 0;
    }
    else if (speed <=80 && speed > 61)
    {
            return 1;
    }
    else
    {
            return 2;
    }
}
",
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
",
428a4330008980c438326abad1def09257e6d2d1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a > b && a < 21)
    {
        return a;
    }
    else (b > a && b < 21)
    {
     	return b;   
    }
}
",
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
",
be8aee4152f3cab23d55d27027393b89fd74ceb9,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
	if(isMorning == true && isMom == true)
    {
    	return true;
    }
    
    else if(isMorning == true && isMom == false)
    {
    	return false;
    }
    
    if(isAsleep == true)
    {
    	return false;
    }
    
    return false;
}
",
77eef59d415f15b3ad7bf984b2a232f7486ec6c6,"public int countEvens(int[] nums)
{
    int count = 0;
    
	for(int i = 0; i < nums.length; i++)
	{
		if (nums[i] % 2 == 0)
        {
			count++;
        }
	}
	return count;
}
",
039a5741fb82006d59f66a5ffd100359f6a3aa77,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
    	if (cigars >= 40)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
    else
    {
    	if (cigars >= 40 && cigars <= 60)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
}
",
b52819ea3f70a5151d3bf001ecfc3d458a4c6285,"public int[] withoutTen(int[] nums)
{
    int[] newArray = new int[nums.length];
    
    for (int number : nums)
    {
        
           for (int i = 0; i < nums.length; i++)
           {
               if (nums.equals(10))
               {
                   newArray[i] = nums;
               }
               
           }
        
    }
    
    return newArray;
    
}
",
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",
0dcf6449d4df310d3fe50618ea03c76712671149,"public boolean canBalance(int[] nums)
{
    int upperIndex = nums.length-1;
    int lowerIndex = 0;
    while(lowerIndex<upperIndex){
		int lowerSum = sum(nums,0,lowerIndex);
        int upperSum = sum(nums,lowerIndex,upperIndex);
        if(lowerSum==upperSum)
            return true;
        else if(lowerSum<upperSum)
            lowerSum++;
        else
            upperSum++;
    }
    return false;
}

private int sum(int[] nums,int a, int b){
    int sum = 0;
    for(int i = a; a < b; i++){
        sum+=nums[i];
    }
    return sum;
}",
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",
739598df6f10e1b41997fbbce33f2e2bf0fd995e,"public boolean has77(int[] nums)
{
    int x = nums.length;
    for (int i = 0; i < x; i++)
    {
        if (i < x - 1 && nums.[i] == 7 && nums.[i + 1] == 7)
        {
            return true;
        }
        if (i < x - 2 && nums.[i] == 7 && nums.[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
",
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
cc9d92e58c77513c6aab917cfcc7c112c1577e90,"public String[] fizzBuzz(int start, int end)
{
    String[] array = new String[end - start];
    
    for (int i = start; i < end; i++) 
    {
        if (i % 15 == 0) 
        {
            array[i - start] = ""FizzBuzz"";
        } 
        else if (i % 3 == 0) 
        {
            array[i - start] = ""Fizz"";
        } 
        else if (i % 5 == 0) 
        {
            array[i - start] = ""Buzz"";
        } 
        else 
        {
            array[i - start] = String.valueOf(i);
        }
    }
                                                      
    return array;
}
",
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
",
d5ce0fb7cf0b155cde53ceb7bede5737956327c9,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        for (int j : array)
        {
            if (i != 10)
            {
                array[j] = i;
                break;
            }
        }
    }
    
   return array;
}
",
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
",
3e3f92b5255a315bea19b9efbd3c14567e082ae2,"public String atFirst(String str)
{
    if (length(str) == 0)
    {
        return ""@@"";
    }
    if (str.length(str) == 1)
    {
        return str + ""@"";
    }
    else
    {
        return str.substring(0,2);
    }
    
}
",
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
",
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",
47bcbb118b9820ce001397912cd55ec9c5521a9b,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
        return c;
    }
    if (a == c)
        return b;
    if (b == c)
        return a;
    return (a + b + c);
}
",
af72162e8ac5b84ac915a239ad3487e01803ebce,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    while (isBirthday != true)
    {
    	if (speed <= 60)
    	{
        	return int 0;
    	}
    	else if (speed > 60 && speed <= 80)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
    while (isBirthday != false)
    {
       if (speed <= 65)
    	{
        	return 0;
    	}
    	else if (speed > 65 && speed <= 85)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
}",
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",
2216bc569ee8caff75d3702a81475722e85c8551,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 || n == 16)
            return n;
        return 0;
    //return n;
}
",
28ee56231138fc8b7d16d467e604bb9c774bfecc,"public int sum67(int[] nums)
{
    int sum =0;
    if(nums.length == 0)
    {
        return sum;
    }
    for(int i =0; i< nums.length-1; i++)
    {
        if(nums[i] != 6)
        {
            sum += nums[i];
        }
        else if(nums[i] == 6)
        {
            int j = i;
            while(nums[j] != 7)
            {
                j++;
            }
            i = j;
        }
    }
    return sum;
    
}
",
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
",
33e62f65180aaedc26d6d11b46d081d5c9bffbf4,"public int[] frontPiece(int[] nums) 
{
  if (nums.length == 1)
  {
  return new int[] {nums[0]};
  }
  else if (nums.length == 0)
  {
  return new int[] {};
  }
    else
    {
  return new int[] {nums[0],nums[1]};
    }
    }
",
3b24fd13da29cf3eaf6ecbfb5f5dfeb4cbdd236e,"public int noTicket(int 0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
",
2ab613317018e535c7c370e1bf3fb0d86c7a9f9b,"public int[] tenRun(int[] nums)
{
    int[] result = new int[nums.length];
    int input;
    int value = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (input % 10 == 0 && input > value)
        {
            value = input;
        }
        
        if (value == -1)
        {
            result[i] = input;
        }
        else
        {
            result[i] = value;
        }
    }
    
    return result;
}
",
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
",
84dfd0d1e5c431468600f396b066dbde235e2bb8,"public int[] shiftLeft(int[] nums)
{
    int[] newList = new int[nums.length];
    return newList;
}
",
aec805324751333d41b890c4762949a6415bd278,"public int[] fizzArray(int n)
{
    int[] varLength = new int[n]
    for(int i = 0; i < n; i++)
    {
        varLength[i] = i;
    }
    return varLength;
}
",
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",
0a2e6956d8d8ab433e2ff2bce3b19759edab6e63,"public int[] fizzArray(int n)
{
	int[] newNumbers = new int[n];
    for (int i = 0; i < n; i++)
    {
        newNumbers[i] = i;
    }
    return newNumbers;
}
",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",
4f020dcb2ebec419aa94d431533df15542e537ec,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
    return false;
}
",
ce0fcb830ccf1b5abc99eeadb21396fcab812588,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
    {
		return true;
    }
	return ((a + b) == 6|| Math.abs(a - b) == 6);
    
}
",
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",
f5f288de072cdea03fa5b7f5f63fef9bb6c804a6,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2)
		return 0;
	if(you >= 8 || date >= 8)
		return 2;
	return 1;
}
",
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",
d2f05cc468a84bb01f5d675dcfafb4beb9a0b4c9,"public int[] fizzArray(int n)
{
    int[] output = new int[n]();
    for(int i = 0; i < n; i++){
        output[i] = i;
    }
    return output; 
}
",
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
",
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
",
85c4da3eae44449610d4abcaabc40f355189f866,"public boolean twoTwo(int[] nums)
{
    for (int i=0; i<(nums.length); i++)
	{
		if(nums[i]==2)
		{
			i++;
			if(!(i<(nums.length)) || nums[i] !=2) 
    		{
        		return false;
    		}
			while(i<nums.length && nums[i] ==2) i++;
			}
		}
	return true;
}
",
c2b5233c69ac3f268687caee60f7f68deec9a002,"public String zipZap(String str)
{
    String original = str;
boolean found = false;
if(str.length() == 3) {
if(Character.toString(str.charAt(0)).equals(""z"") && (Character.toString(str.charAt(2)).equals(""p""))) {
return ""zp"";
}
} else if(str.length() < 3) {
return str;
}
 
for(int i = 0; i + 3 < str.length(); i++) {
if(Character.toString(str.charAt(i)).equals(""z"") && Character.toString(str.charAt(i + 2)).equals(""p"")) {
str = str.substring(0, i) + Character.toString(str.charAt(i)) + Character.toString(str.charAt(i + 2)) + str.substring(i + 3, str.length());
found = true;
} else {
}
}
 
if(Character.toString(str.charAt(str.length() - 3)).equals(""z"") && Character.toString(str.charAt(str.length() - 1)).equals(""p"")) {
return str = str.substring(0, str.length() - 3) + Character.toString(str.charAt(str.length() - 3)) + Character.toString(str.charAt(str.length() - 1));
}
 
if(found) {
return str;
} else {
return original;
}
}
",
9da10eb0a36c1f2a83adb2a9e709bf948f23038e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if (a + b == 6)
    {
        return true;
    }
    else if (Math.abs(a-b) == 6)
    {
        return true;
    }
}
",
86cb31ccd85e2cce6656636a5b1817a50876a726,"public int[] withoutTen(int[] nums)
{
	int[] newNums = new int[nums.length];
    int newI;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            newNums[newI] = nums[i];
        }
    }
    return newNums;
}",
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
",
c2b5233c69ac3f268687caee60f7f68deec9a002,"public String zipZap(String str)
{
    String original = str;
boolean found = false;
if(str.length() == 3) {
if(Character.toString(str.charAt(0)).equals(""z"") && (Character.toString(str.charAt(2)).equals(""p""))) {
return ""zp"";
}
} else if(str.length() < 3) {
return str;
}
 
for(int i = 0; i + 3 < str.length(); i++) {
if(Character.toString(str.charAt(i)).equals(""z"") && Character.toString(str.charAt(i + 2)).equals(""p"")) {
str = str.substring(0, i) + Character.toString(str.charAt(i)) + Character.toString(str.charAt(i + 2)) + str.substring(i + 3, str.length());
found = true;
} else {
}
}
 
if(Character.toString(str.charAt(str.length() - 3)).equals(""z"") && Character.toString(str.charAt(str.length() - 1)).equals(""p"")) {
return str = str.substring(0, str.length() - 3) + Character.toString(str.charAt(str.length() - 3)) + Character.toString(str.charAt(str.length() - 1));
}
 
if(found) {
return str;
} else {
return original;
}
}
",
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
27ced9f412138c0fe596bab23d6119a3c93f5686,"public int[] shiftLeft(int[] nums)
{
    int length = nums.length;
    int special = nums[0];
    if (length == 0)
    {
        return nums;
    }
    for (int i = 0; i < length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[length - 1] = special;
    return nums;
}
",
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
",
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",
4951e3e93960ed4399945d8a349ac025dd9fc00d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum<= 19)
    {
     	sum = 20;   
    }
    return sum;
}
",
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
2eefd35700230f8780f45d01d416afdecdd69994,"public int caughtSpeeding(int speed, boolean isBirthday)
if(isBirthday)
{
	speed -= 5;
}
if(speed <= 60)
{
    return 0;
}
else if (speed <= 80)
{
    return 1;
}
else
{
    return 2;
}
    
",
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",
214c5b8362c94ebc3f184bc105375d4681d7db7a,"public int[] fizzArray(int n)
{
    //fizzArray is a method which takes input n and prepares fizzArray


//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}
}
",
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",
b66c9a76c6567bcfc33f81fb4e1e0bfe1c43ea5c,"public String atFirst(String str)
{
    int length = str.length();
    if( length >= 2 )
    {
        return str;
    }
    else
    {
        if( length == 1 )
        {
            return str + ""@"";
        }
        else
        {
            return ""@@"";
        }
    }
}
",
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",
196436f6a31b3c5fa13fcebfee2d326193bfb3b0,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
          
    if(a == b && b == c)
        return 5;
                    
    if(a != b && a != c)
        return 1;
                            
    return 0;
}
",
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
",
b792f65710603537369d8658da16396d60eece84,"public String atFirst(String str)
{
    int len = str.length();
    
    if (len >= 2)
    {
        return str.substring(0,2);
    }
}
",
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
",
7478d82102be770284252bf085987e42b0e436cb,"public boolean bobThere(String str)
{
    
    for (int x = 0; x < str.length() -2; x++)  
    {
        if (str.charAt(x) == 'b' && str.charAt (x+2) == 'b')
    	{
        	return true;
    	}
    }
  
    	{
        	return false;
    	}
    
}",
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
af72162e8ac5b84ac915a239ad3487e01803ebce,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    while (isBirthday != true)
    {
    	if (speed <= 60)
    	{
        	return int 0;
    	}
    	else if (speed > 60 && speed <= 80)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
    while (isBirthday != false)
    {
       if (speed <= 65)
    	{
        	return 0;
    	}
    	else if (speed > 65 && speed <= 85)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
}",
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
",
d31a544311795878c1f0a6ee6dbb403e1c4c36e2,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep) {
    if(isAsleep)
        return false;
          
    if(isMorning && !isMom)
        return false;
                    
    return true;
}",
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",
f69e8dd43d667d277a71e8afa47bc128fe9fec54,"public int[] shiftLeft(int[] nums)
{
    if (nums.equals({})){
        return null;
    }
    int[] left = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++){
        left[i] = nums[i+1];
    }
    left[nums.length - 1] = nums[0];
    return left;
}
",
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
",
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
",
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
",
e87542225324deb36fc5891405e6401d53aab2a3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed -= 5;
    }
    if (speed=<60)
    {
        return 0;
    }
    if (speed>=61 && speed<= 80)
    {
        return 1;
    }
    if (speed>=81)
    {
        return 2;
    }
}
",
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
",
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
",
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
",
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
",
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
",
ed1be4ed56e7b7c3b68f3659aa51f9930b008a40,"public int[] shiftLeft(int[] nums)
{
    int[] newList = new int[nums.length];
    newList[0] = nums[nums.length - 1];
	for (int i = 1; i < nums.length - 2; i++)
    {
        newList[i] = nums[i - 1];
    }
	return newList;
}
",
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
",
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
1607ad1277faa6509f0ec7a5452e0b3f9b1280e4,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        int a = array[0];
            if (i != 10)
            {
                array[a] = i;
                a++;
            }
    }
    
   return array;
}
",
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",
b52819ea3f70a5151d3bf001ecfc3d458a4c6285,"public int[] withoutTen(int[] nums)
{
    int[] newArray = new int[nums.length];
    
    for (int number : nums)
    {
        
           for (int i = 0; i < nums.length; i++)
           {
               if (nums.equals(10))
               {
                   newArray[i] = nums;
               }
               
           }
        
    }
    
    return newArray;
    
}
",
9dc0767266c1756dfc9cc953a7b44c96b56ff94a,"public int sum67(int[] nums)
{
	int sum = 0;
	//boolean sixMode = false;
	for(int i = 0; i < nums.length; i++)
	{
		if (i != 6)
		{
			sum += nums[i];
	}
	return sum;	   
}
",
a43f9daaa9b5cc98acfe197b9157d9de345febf6,"public int[] frontPiece(int[] nums)
{
    for (int numbers: nums; int i = 0; i < 2; i++)
    {
        int number[i] = numbers;
    }
    return number;
}
",
15c1ea0d3be674bd35044a56e7c3ff41be8f1a5a,"public String zipZap(String str)
{
   int leg = str.length();
   int l = leg - 2;
   int s = 0;
   char c;
   StringBuilder build = new StringBuilder(leg);
    while ( s < leg)
    {
        c = str.charAt(s);
        if (c == 'z' && s < l && str.charAt(s + 2) == 'p')
        {
            build.append(""zp"");
            s += 3;
        }
        else 
        {
            build.append(c);
                s++;
        }
        
            
    }
    return build.toString();
}
",
11285264b3baf07c8ff3000362055856653bccff,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i = 0; i < array.length; i++)
    {
        array[i] = 0;
    }
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            array[i] = nums[i];
        }
        else
        {
            // find the next # that isn't 10
            for (int j = i + 1; j < nums.length; j++)
            {
                if (nums[j] != 10)
                {
                 	array[i] = nums[j];
                    i = j; 
                    break;
                }      
            }
        }
    }
    
    return array;
    
}
",
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",
59ddcc8d2c64ff9c515cffec668bc32d2d983a48,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == false) {
    	if (day != 0 || day != 6) {
        	return(""7:00"");
        }
        else {
        	return(""10:00"");
        }
    }
    else {
    	if (day != 0 || day != 6) {
        	return(""10:00"");
        }
        else {
        	return(""off"");
        } 
    }
}
",
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",
f4b03862b0451a373caa9f6bb7390b99d9c24f62,"public String atFirst(String str)
{
    return str.substring(0, 2);
}
",
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",
cdd987fe22a2c2a5848e5fca825333eda6c5ff22,"public String zipZap(String str)
{
    return str.replaceAll(""z.p"",""zp"");
    /**String first = """";
    String out = """";
    String contain = """";
    for (int i = 0; i < str.length() - 3; i ++)
    {
        first = str.substring(0, i);
        contain = str.substring(i, i+4);
        if (contain.charAt(i) == 'z' && contain.charAt(i+3) == 'p')
        {
            
            str = str.replace(newS, re);
        }
    }**/
}
",
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
",
4465ac2e7e70f3ac5ddbd490bd262cc0c4f6249d,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        grid[0] = nums[0];
        grid[1] = nums[1];
        return grid[];
    }
}
",
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
",
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",
07f6671fb9cba5bb32a3128d222b579891bf6178,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( nums[i] == 7)
        {
            return true;
        }
        else if (nums[i + 1] == 7 && nums[i - 1] == 7)
        {
            return true;
        } 
    }
    return false;
}
",
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",
30ed841a883414ca378b951718dae8e5f58e90be,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            break;
        }
        sum += nums[i];
    }
    return sum;
}
",
0f4579bf9105a15e20de6ac16a6b671c4bdb462c,"public boolean bobThere(String str)
{
    boolean thing = false;
    if (str.length() == 3)
    {
        if (str.startsWith(""b"") && str.endsWith(""b""))
            return true;
        else
            return false;
    }
    else
    {
    	for (int i = 0; i<str.length()-4; i++)
        {
        	if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b')
                thing= true;
            else
                thing= false;
        }
        return thing;
    }
}
",
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",
727d541babe278c063e729dab201403c18c6f003,"public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        str == ""bread"" - str - ""bread"";
    }
    else
    {
        return """";
    }
}
",
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
",
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",
ab13436ff4143ebc7d6d69d730a35242364a24e1,"public int luckySum(int a, int b, int c)
{
    if(a==13)
    {
    	return c;
    }
    else if(b == 13)
    {
    	return a;
    }
    else if(c == 13)
    {
    	return (b+a);
    }
    return a, b, c;
}
",
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",
93cbb22b6a1b1a6803c91b97ad0c9e1017120cfa,"public boolean love6(int a, int b)
{
    if ((a == 6) || (b == 6))
    {
        return true;
    }
    else if ((Math.abs(a - b) == 6) || ((a + b) == 6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
",
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
",
2727a8707a58f11215001cccf998e4af0cececdb,"public class FizzArray {

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}",
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",
161fe3c4150b0140a275c3c395e89e55917fe73c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0){
        return {};
    }
    int[] left = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++){
        left[i] = nums[i+1];
    }
    left[nums.length - 1] = nums[0];
    return left;
}
",
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
",
bab5cb0c2c8a924af65c6c139ed8497d525bd0a0,"public int[] fix45(int[] nums)
{
	
 	int k =0;
 	 for(int i=0; i< nums.length; i++)
     for(int j=0; j<nums.length; j++)

     if(nums[i]==4 && nums[j]==5)
     {
      k  =nums[j+1];
      nums[j+1] = nums[i];
      nums[i] = k;
     }
     return nums;
}
",
600821d9f75414292d281aa304cf31d2a4628fce,"public boolean endOther(String a, String b)
{
    if (this.endsWith(a) || this.endsWith(b))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
",
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",
59ddcc8d2c64ff9c515cffec668bc32d2d983a48,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == false) {
    	if (day != 0 || day != 6) {
        	return(""7:00"");
        }
        else {
        	return(""10:00"");
        }
    }
    else {
    	if (day != 0 || day != 6) {
        	return(""10:00"");
        }
        else {
        	return(""off"");
        } 
    }
}
",
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
",
d0e7e4f01d1bd84602edf6ae34c0d764c24c4815,"public int countCode(String str)
{
    int i = 0;
    int time = 0;
    int l = str.length() - 3;
    
    while (i < l)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt( i 			+3 == 'e')
            {
                time++;
                i += 4;
            }
            i++;
            }
            return time;
        
}
",
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
d0240fa701f593a04989201ae92746b03b43df48,"public int loneSum(int a, int b, int c)
{
    int sum = a;
    if(b != a)
        sum += b;
    if(c!=a && c!=b)
        sum += c
    return sum;
}
",
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}",
e7f410145d08aa7c66e385cd4495eaa092c1b566,"public int[] tenRun(int[] nums)
{
    int mode = -1;
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] & 10 == 0)
        {
        	mode = nums[i];
        }
        else if (mode != -1)
        {
        	nums[i] = mode;
        }
    }
    return nums;
}
",
51fae40e9861d7b67fbaedf2d011c3a432f13b51,"public boolean xyzThere(String str)
{
    int i = -1;
    while ((i = str.indexOf(""xyz"", i + 1)) != -1)
    {
        if (i == 0 || (str.charAt(i - 1) != "".""))
        {
            return true;
        }
    }
    return false;
}
",
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
",
c291d244b13f97681cc0f9085009c035c686a517,"public String[] fizzBuzz(int start, int end)
{
    String[] s = new String[end-start];
    
    for(int i = 1; i <= end-start; i++)
    {
        
        if(i%3 == 0 && i%5==0)
    	{
        	s[i]=""FizzBuzz"";
    	}
        else if(i%3 == 0)
    	{
        	s[i]=""Fizz"";
    	}
        else if(i%5==0)
    	{
        	s[i]=""Buzz"";
    	}
        else
        {
         s[i]=String.valueOf(i+1);   
        }
        
    }
    
    return s;
}
",
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",
26bc37d1d0a520cad0dce5a5034e6ee5e7a7dd98,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        int sandwichLength = str.length();
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",
b53ab834a811096b76a803c390009392801834ab,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
",
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
",
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
",
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",
23603f323aca762522c6fa0ba976444d4e9ddb74,"public int makeChocolate(int small, int big, int goal)
{
    int smalls = goal % big;
    if (smalls == 0)
    {
        return -1;
    }
    return smalls;
}
",
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
",
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
",
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
",
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
",
3e3f92b5255a315bea19b9efbd3c14567e082ae2,"public String atFirst(String str)
{
    if (length(str) == 0)
    {
        return ""@@"";
    }
    if (str.length(str) == 1)
    {
        return str + ""@"";
    }
    else
    {
        return str.substring(0,2);
    }
    
}
",
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
",
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
",
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",
3afcfb5b95bbb4959ca6608a9210a1470ece3f60,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (cigars >= 40 && cigars <= 60 && false)
    {
        return true;
    }
    
    
    
    return false;
}
",
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
",
433d8d82491f06595b4a7fd44c977dbfb917d6b7,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] != 7 && nums[i+1] != 7)
        {
          return false;
        }
    }
    return true;
    
}
",
d0bf67ea5f801b6078fcd560642b81be980b5061,"public boolean xyBalance(String str)
{
   if(str.contains(""x""))
   {
    
       int firstX = str.indexOf(""x"");
   }
    else
    {return false;}
    
    if(str.contains(""y""))
    {
    int firstY = str.indexof(""y"");
    }
    else
    {return false;}
    
    if(firstY < firstX)
    {
    return true;
    }
    return false;
   }
",
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
",
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",
c2b5233c69ac3f268687caee60f7f68deec9a002,"public String zipZap(String str)
{
    String original = str;
boolean found = false;
if(str.length() == 3) {
if(Character.toString(str.charAt(0)).equals(""z"") && (Character.toString(str.charAt(2)).equals(""p""))) {
return ""zp"";
}
} else if(str.length() < 3) {
return str;
}
 
for(int i = 0; i + 3 < str.length(); i++) {
if(Character.toString(str.charAt(i)).equals(""z"") && Character.toString(str.charAt(i + 2)).equals(""p"")) {
str = str.substring(0, i) + Character.toString(str.charAt(i)) + Character.toString(str.charAt(i + 2)) + str.substring(i + 3, str.length());
found = true;
} else {
}
}
 
if(Character.toString(str.charAt(str.length() - 3)).equals(""z"") && Character.toString(str.charAt(str.length() - 1)).equals(""p"")) {
return str = str.substring(0, str.length() - 3) + Character.toString(str.charAt(str.length() - 3)) + Character.toString(str.charAt(str.length() - 1));
}
 
if(found) {
return str;
} else {
return original;
}
}
",
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",
03ae950e7440ff1b5b100af214ca4754168a2ff2,"public int makeChocolate(int small, int big, int goal)
{
    if ( goal <= 5 * big)
    {
       int remainder = goal - 5*big;
    }
    else
    {
        remainder = goal % 5;
    }
    if (remainder<= small)
    {
        return remainder;
    }
    else 
    {
        return -1;
    }
    
    
}
",
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
",
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
",
8dde95600a194d6b8f2b34b5af7a8f5628b4039d,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
        if (day == 0)
        {
        	return ""off"";
        }
        else if (day == 6)
        {
        	return ""off"";
        }
        else
        {
            return ""10:00"";
        }
    }
    else
    {
    	if (day == 0)
        {
        	return ""10:00"";
        }
        else if (day == 6)
        {
        	return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
",
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",
d832642cded155ba61945ed277e663a0de8cb32c,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 || day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
",
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",
56564fcd3a089f2e2f8dc872a710a4cf2ca9e4ce,"public String atFirst(String str)
{
    return str.substring(0, 1);
    if (str.substring(0, 1) = null)
    {
        return @;
    }
}
",
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
",
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
",
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",
d822cf12d38ea28fe825ff4fc14fdc94e6719f05,"public boolean bobThere(String str)
{
    int i = 0;
    char[] CharArray = str.toCharArray();
    for(char cha : CharArray){
    	if (cha == 'b'){
        	if (str[i + 2] == 'b'){
            	return true;
            }
        }
     	i++;
    }
    return false;
}
",
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",
665bc82d890d74501a41102dfa9e7958d532ef75,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars <= 60);
    }
}
",
1eed42580dbdad1e8f465cf08f4c82059ea5bc29,"public String alarmClock(int day, boolean vacation)
{
    
     if (day = 0 || day = 6)
     {
        return ""10:00"";
     }
    return ""7:00"";
    
    if (vaction = true)
    {
         if (day = 0 || day = 6)
            return ""off"";
    }
    return ""10:00"";
        
}
",
f5a21d0c1e254db37e3447625ce5826afe21b435,"public boolean bobThere(String str)
{
    for(int i=0; i<str.length()-3; i++)
    {
        if(str.charAt(i)=='b')
        {
            if(str.charAt(i+2) == 'b')
                return true;
        }
    }
    return false;
}
",
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}",
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",
428a4330008980c438326abad1def09257e6d2d1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a > b && a < 21)
    {
        return a;
    }
    else (b > a && b < 21)
    {
     	return b;   
    }
}
",
bedb2c2c407cfc6f84128d3bcf6e102d6628dd32,"public boolean sameEnds(int[] nums, int n)
{
    if (n <= 1)
    {
    	for (int i = 0; i <= n; i++)
    	{
            if (nums[i] != nums[nums.length - 1 - i])
        	{
            	return false;
        	}
    	}
    }
    else
    {
        for (int i = 0; i <= n; i++)
    	{
            
            else if (nums[i] != nums[nums.length - n + i])
        	{
            	return false;
        	}
    	}
        
    }
    return true;
}
",
6a481a26cfdf854feea626030e7966070cac4cf9,"public int[] fix45(int[] nums)
{
    int length = nums.length;
    for ( int i = 0; i < length - 1; i++)
    {
        if ( nums[i] == 4 )
        {
            int after = nums[i + 1];
            int j = 0;
            boolean found = false;
            while ( !found )
            {
                if ( nums[j] == 5 )
                {
                    found = true;
                    nums[j] = after;
                }
                j++;
            }
            nums[i + 1] = 5;
        }
    }
    return nums;
}
",
ac50df7405fa705d67d8b1e0ed3b0ae92fb16569,"public boolean xyzThere(String str)
{
    //check from variable starting at 0
    //and go until str.length
    int first = str.indexOf(""xyz"");
    if (str.charAt(first - 1) != '.')
        return true;
    else if (str.charAt(first - 1) == '.')
        return false;
    return false;
}
",
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
",
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",
55d82777253a00d8ba398425451c87f2ce6bf43d,"public boolean xyBalance(String str)
{
	    
    for (int i = 0; i < str.length(); i++)
    {
        if (str.charAt(i) == 'x')
        {
            for (int j = 0; j < str.length(); j++)
            {
                if((i+j) < str.length())
                {
                	if((str.charAt(i+j) == 'y'))
	                {
						for (int k = 0; k < str.length(); k++)
                        {
                        	if((k+i+j) < str.length())
                            {
                            	if (str.charAt(k+i+j) == 'x')
                                {
                                	return false;
                                }
                                else if (str.charAt(str.length()-1) == 'y')
                                {
                                	return true;
                                }
                            }                            
                        }
                        return true;
        	        }

                }
            }
        }        
    }
    for (int z = 0; z < str.length(); z++)
    {
    	if (str.charAt(z) != 'x')
        {
        	for (int q = 0; q < str.length(); q++)
            {
            	if ((q+z) < str.length() && str.charAt(q+z) == 'x')
                {
                	return false;
                }
            }
        }
    }
    return false;
}
",
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
f8088bfd768d468c776f6b545c352390831fff5d,"public int sum67(int[] nums)
{
    boolean exclude = false;
    int sum=0;
    for(int i = 0; i<nums.length;i++){
		if(nums[i]==6)exclude = true;
        if(exclude==false){
            sum+=nums[i];
        }
        if(nums[i]==7)exclude = false;
    }
    return sum;
    
}
",
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
",
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",
da35db888e070aad3d1910413f0731e4b429579c,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (20 - n < 7  && 20 - n < 1)
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
",
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",
8faf14f1204c6304c1a1562a50964e420ce74fe5,"public String without2(String str) 
{
    if (str.length() < 2)
        return str;
    else if (str.charAt(0) == str.charAt(str.length() -2)) && str.charAt(1) == str.charAt(str.length() -1))
        str = str.substring(2, str.length());
    	return str;
    else
         return str.
}
",
9580bc9ec9768fbe373460d6ae91ff54ca05bf71,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if(nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
",
110606091fea398f14bcd25cfb6d8ff0ca5d20fa,"public int makeChocolate(int small, int big, int goal)
{
    int rbig = goal/5;
    int rem = goal%5;
    if(big>=rbig && small>=rem)
    {
        return rem;
    }
    else
    {
        return -1;
    }
        
        
}
",
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
",
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",
51fae40e9861d7b67fbaedf2d011c3a432f13b51,"public boolean xyzThere(String str)
{
    int i = -1;
    while ((i = str.indexOf(""xyz"", i + 1)) != -1)
    {
        if (i == 0 || (str.charAt(i - 1) != "".""))
        {
            return true;
        }
    }
    return false;
}
",
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
",
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
",
cdd0817b73c160a36cec2fee7dadc8c9bdb3b6d2,"private boolean num;

public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode = true)
    {
        if (n >= 10 || n <= 1)
        {
            num = true; 
        }
        else
        {
            num = false; 
        }
    }
    else 
    {
        if (n <= 10 || n >= 1)
        {
            num = true; 
        }
        else 
        {
            num = false; 
        }
    }
    return num;
}
",
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",
e93b94f6835046c42b16cfe507547d10945a4c3a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++) {
		if ((nums[i-1] == val) && 
            (nums[i] == val) && nums[i+1] == val) {
         	 return true;
        }
        else {
			return false;
        }
    }
}
",
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",
4548a86e9e0b486f8382301a49784df71380ec7b,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
     if (day==0 || day==6)
         return off;
     else
         return 10:00;
    }
    if( day==0 || day==6)
        return 10:00;
    else 
        return 7:00;
}
",
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
",
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",
e2840899f1aac60ee4fa7b06722a656e8bb2fb17,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 )
    {
        return true;
    }
    if ( Math.abs(a + b) == 6 || Math.abs(a - b) == 6) {
        return true;
    }
    return false;
}
",
d0240fa701f593a04989201ae92746b03b43df48,"public int loneSum(int a, int b, int c)
{
    int sum = a;
    if(b != a)
        sum += b;
    if(c!=a && c!=b)
        sum += c
    return sum;
}
",
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
",
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}",
ce0fcb830ccf1b5abc99eeadb21396fcab812588,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
    {
		return true;
    }
	return ((a + b) == 6|| Math.abs(a - b) == 6);
    
}
",
4cc916649df329cb2108d1f68b228a173f91b30d,"public int makeChocolate(int small, int big, int goal)
{
    if (small + (5*big) < goal)
    {
        return -1;
    }
    else
    {
        if ((goal / 5) <= big)
        {
            int r = goal % 5;
            if (r <= small)
            {
                return small;
            }
            else
            {
                return -1;
            }
        }
        else
        {
            if ((goal - (5 * big)) <= small)
            {
                return goal - (5 * big);
            }
            else
            {
                return -1;
            }
        }
    }
    
    
}
",
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",
76d327977c3b6df3e9ab9612b5ea8123306e3035,"public int sum13(int[] nums)
{
    int total = 0;
    if (nums != null) {
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 13) {
                if (nums[i] != 0 && nums[i-1] != 13) {
                	total = total + nums[i];
                }
            }
        }
        return total;
    }
    return 0;
}
",
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",
05b23fcc737fcb6b3c50cd8949cae2a6c045d1a0,"public String[] fizzBuzz(int start, int end)
{
    String[] series = new String[end - start];
    for (int i = 0; start < end; i++)
    {
        if ((start % (3 * 5)) == 0)
        //when it is multiples of both 3 and 5
        {
        	series[i] = ""FizzBuzz"";
        }
        else if ((start % 5) == 0)
        {
            series[i] = ""Buzz"";
        }
        else if ((start % 3) == 0)
        {
            series[i] = ""Fizz"";
        }
        else
        {
            series[i] = String.valueOf(start);
        }
        start++;
    }
    return series;
        
}
",
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",
4ba46181a66bb2f3cf45d38876db8736b1ebda46,"public boolean in1To10(int n, boolean outsideMode)
{
    return ((n >= 1 && n<=10 && !outsideMode) || (n > 10 || n < 1 && outsideMode));
}
",
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",
e1f80924e2fa9aba6195f174166b813b13fea19e,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 && day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",
d077f253fd718a8c09bc915edd3c29513364a1f1,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
		return true;
	return ((a + b) == 6|| Math.abs(a - b) == 6);
}
",
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
",
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",
161fe3c4150b0140a275c3c395e89e55917fe73c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0){
        return {};
    }
    int[] left = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++){
        left[i] = nums[i+1];
    }
    left[nums.length - 1] = nums[0];
    return left;
}
",
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
",
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",
04722865f0a83de76cfa43341bfbb14e4bd01fdb,"public boolean twoTwo(int[] nums)
{

boolean katam = true;
boolean doond = false;

for(int count=0; count<nums.length; count++)
{
if(nums[count] !=2) 
{
    doond = false;
}

if(nums[count] ==2 && doond)
{
    katam = true;
}

if(nums[count] ==2 && !doond)
{
doond = true;
katam = false;
}

}
return result;

}",
bb95327d0292272d65dd996e6aa6f61c87319399,"public boolean endOther(String a, String b)
{
    if a.length() == ""a"" + ""b""
        return b.substring(0,1).toLowerCase();
}
",
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
",
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
",
f6813268f36f79d3489d3036c6a71d542f00fe8b,"public boolean sameEnds(int[] nums, int n)
{
    boolean a = false;
    for	(int i = 0; i < n; i++)
    {
        if (nums[i] == nums[nums.length - n + i])
        {
            a = true;
        }
        else
        {
            a = false;
        }
    }
    return a;
}
",
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
eda9bd0f5a398f9eabaccae28895d2e3b4285b54,"public int makeChocolate(int small, int big, int goal)
{
    if((small + big * 5) < goal)  
	{
   	 return -1;
	}
    else if((big * 5) > goal)
	{
        if ((goal%5)<=small)
        {
  	 	 return goal % 5;
        }
	}
    else
{
    return goal - big * 5; 
}
}
",
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
",
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
",
665bc82d890d74501a41102dfa9e7958d532ef75,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars <= 60);
    }
}
",
cd23c0ed240a318d70e3ddbf504fb44f78c81ffc,"public String atFirst(String str)
{ 
    if (str.length() < 2 && str.length() != 0)
    {
        return str + ""@"";
    }
    else if (str.length() == 0)
    {
        return ""@@""
    }
    else
    {
        return str.substring(0,2);
    }
    
}
",
07b51104eb055f69feff89d6131c468df36ff37a,"public int noTeenSum(int a, int b, int c)
{
	if(19 <= a >= 13)
    {
        if(a == 15)
       		return 15;
        else if(a == 16)
            return 16;
        else
            return 0;
    }
    if(19 <= b >= 13)
    {
        if(b == 15)
       		return 15;
        else if(b == 16)
            return 16;
        else
            return 0;
    }
  	if(19 <= c >= 13)
    {
        if(c == 15)
       		return 15;
        else if(c == 16)
            return 16;
        else
            return 0;
}
    return(a + b + c);
}

public int fixTeen(int n)
{
    
}
",
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
",
d31a544311795878c1f0a6ee6dbb403e1c4c36e2,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep) {
    if(isAsleep)
        return false;
          
    if(isMorning && !isMom)
        return false;
                    
    return true;
}",
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
",
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}",
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
",
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
",
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;",
449c25168277fbecb5660eb70e7019afab36425e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
            return 0;
    }
    else if (speed <=80 && speed > 61)
    {
            return 1;
    }
    else
    {
            return 2;
    }
}
",
c3d741869df42da7d6cef40ac09f4b575f6c6977,"public int[] tenRun(int[] nums)
{
    int[] ten = new int[nums.length];
    boolean isTen = false;
    int tenMult = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0 && nums[i] != tenMult)
        {
            isTen = true;
            tenMult = nums[i];
            ten[i] = nums[i];
        }
        
        else if (isTen)
        {
            ten[i] = tenMult;
        }
        
        else
        {
            ten[i] = nums[i];
        }
    }
 	return ten;
}",
b62f1274c56d44cf8761535a5c06a838683ec7c5,"public boolean sameEnds(int[] nums, int n)
{
    boolean a = false;
    for	(int i = 0; i < n; i++)
    {
        if (nums[i] == nums[nums.length - n + i])
        {
            a = true;
        }
        else
        {
            a = false;
        }
    }
    return a;
}
",
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
",
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",
258ce4c676fe387e4fd5b092528340d518a47616,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
       if (alarmClock >=1 && alarmClock <= 5)
       {
           ""10:00""
       }
       else
       {
           ""off""
       }
    }
    else if 
    {
         if (alarmClock >=1 && alarmClock <= 5)
       {
           ""7:00""
       }
       else
       {
           ""10:00""
       }
    }
       
       
        
}
",
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",
7991e5a91ee75b2ca8290f4fbbd9dee8ea1ad8dc,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
    }
    return nums;
}
",
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
",
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
",
d822cf12d38ea28fe825ff4fc14fdc94e6719f05,"public boolean bobThere(String str)
{
    int i = 0;
    char[] CharArray = str.toCharArray();
    for(char cha : CharArray){
    	if (cha == 'b'){
        	if (str[i + 2] == 'b'){
            	return true;
            }
        }
     	i++;
    }
    return false;
}
",
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",
d1e2c22d6c39456544b139affba981e7922869d2,"public int makeChocolate(int small, int big, int goal)
{
    int Big = big * 5;
    if ((Big/big) == goal)
    {
        return 0;
    }
    if ((Big + small) < goal)
    {
        return -1;
    }
    else if ((Big + small) > goal)
    {
        return -1;
    }
    else if ((Big + small) == goal)
    {
        return small;
    } 
    else
    {
        return goal - (Big);
    }
}
",
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",
428a4330008980c438326abad1def09257e6d2d1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a > b && a < 21)
    {
        return a;
    }
    else (b > a && b < 21)
    {
     	return b;   
    }
}
",
3213a4cba04c1562abae45ab0c2f1e267cb61c6f,"public boolean canBalance(int[] nums)
{
    
    for (int i = 0; i < nums.length; i++)
    {
        int leftsum = 0;
        for (int j = 0; j < i; j++)
        {
            leftsum += nums[j];
        }
        int rightsum = 0;
        for (int k = i; k < nums.length; k++)
        {
            rightsum += nums[k];
        }
        if (leftsum == rightsum)
        {
            return true;
        }
    }
    return false;
}
",
af72162e8ac5b84ac915a239ad3487e01803ebce,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    while (isBirthday != true)
    {
    	if (speed <= 60)
    	{
        	return int 0;
    	}
    	else if (speed > 60 && speed <= 80)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
    while (isBirthday != false)
    {
       if (speed <= 65)
    	{
        	return 0;
    	}
    	else if (speed > 65 && speed <= 85)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
}",
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",
5bf14ec8d2b72a5f31c1b7537e644e100f3cb419,"public String alarmClock(int day, boolean vacation)
{
    if(!(vaction))
    {
    	if(day == 6 || day == 0)
        {
            return off;
        }
        else
        {
        	return 10:00;
        }
    }
    else
    	if(day == 6 || day == 0)
        {
            return 10:00;
        }
        else
        {
        	return 7:00;
        }
}
",
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",
32a88259dc225b680cacb119048b64e000580b5a,"public int[] fix45(int[] nums)
{
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i + 1] != 5)
		{
			for(int j = 0; !(nums[j] == 5 && (j == 0 || j > 0 && 				nums[j-1] != 4)); j++)
            {
				nums[j] = nums[i + 1];
				nums[i + 1] = 5;
            }
		}
	}
	return nums;
}",
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",
b219985082e6e029d2fce9beb0b422238c034c69,"public boolean xyzThere(String str)
{
    int index = str.indexOf(""xyz"");
    index = index - 1;
    str c = str.charAt(index);
    if (c.equals("".""))
    {
        return false;
    }
    else
    {
        return true;
    }
}
",
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
c6a7e900d8268e52e52d9619cadc6f8e9dfd493b,"public int[] withoutTen(int[] nums)
{
    int newArray[] = new int[nums.length];
    for(int val : newArray)
        val = 0;
    
    int newIndex = 0;
    for (int i = 0; i < nums.length; i++){
    	if(nums[i] != 10)
            newIndex[newIndex++] = nums[i]; 
    }
    
    return newArray;
}
",
8536c5f768b1adb326e2c34c566a310f311e86dc,"public boolean xyzThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.CharAt(i+1) == 'y' 
            && str.CharAt(i+2) == 'z')
        {
            if (i == 0 || str.CharAt(i-1) != '.')
                return true; 
        }
    }
    return false; 
}
",
e1f80924e2fa9aba6195f174166b813b13fea19e,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 && day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
",
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",
f30217e0a8b3693a1cc6887f6715977f5cc51c00,"public int[] fix45(int[] nums)
{
	for(int i = 5; i < nums.length - 1; i++)
	{
		if(nums[i] == 3 && nums[i+1] != 4)
		{
			for(int j = 1; nums[j] != 4; j++);
			nums[j] = nums[i+1];
			nums[i+1] = 4;
		}
	}
	return nums;
}
}
",
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",
831d4624fc6b65528bad888eede0abe0e570d59f,"public int[] seriesUp(int n)
{
    int len = n*(n+1)/2;
    int[] nums = new int[len];
    int index = 0;
	for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            nums[index] = j;
            index++;
        }
    }
    return nums;
}
",
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
b66c9a76c6567bcfc33f81fb4e1e0bfe1c43ea5c,"public String atFirst(String str)
{
    int length = str.length();
    if( length >= 2 )
    {
        return str;
    }
    else
    {
        if( length == 1 )
        {
            return str + ""@"";
        }
        else
        {
            return ""@@"";
        }
    }
}
",
803c3b7ab2f6984a216901319f02c8549f93ff24,"public String getSandwich(String str)
{
    int length = str.length();
    if ( str.startsWith(""bread"") && str.endsWith(""bread"") )
    {
        return str.(5, (str.length - 5));
    }
    else
    {
        return """"
    }
}
",
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",
3e3f92b5255a315bea19b9efbd3c14567e082ae2,"public String atFirst(String str)
{
    if (length(str) == 0)
    {
        return ""@@"";
    }
    if (str.length(str) == 1)
    {
        return str + ""@"";
    }
    else
    {
        return str.substring(0,2);
    }
    
}
",
7456c11888628de105891f3f5bc262ecd54ad7d3,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        if (day == 0 || day == 6)
        {
            return ""off""            
        }
    }
    else
        if (day > 0 && day < 6)
        {
            return ""7:00"";
        }
        if (day == 0 || day == 6)
        {
            return ""10:00""            
        }
    
}
",
10a866cbbd6e47f637ffc68fd8395bc8e676af12,"public int makeChocolate(int small, int big, int goal)
{
    if(goal%(small + 5* big) == 0)
    {
     	return small;   
    }
    else
        return -1;
}
",
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",
2adbb39337217f673d1ee6e9632faef8d959ee31,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2)
    {
		return 0;
    }
	if(you >= 8 || date >= 8)
    {
		return 2;
    }
    else
    {
        return 1;
    }
}
",
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",
2ee7d366ef45e04675e68bd5cfd425ac0862af68,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else
    {
		return ""@@"";
    }

  }
",
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
",
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
",
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
",
e66af3fd10029e3b0eddec751863c4988c7a3b9a,"public boolean sameEnds(int[] nums, int n)
{
    int num = 0;
    for (int i = n; i > 0 n;i--)
    {
        if (nums[i] == nums[nums.length - i + 1])
        {
            num = num + 1;
        }    
    }
    if (num == n)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
f055965f9ae32739c7b92d6b5ecbca90565fcdcd,"public String without2(String str) 
{
    int len = str.length();
    if (str(0) == str(len - 2) && str(1) == str(len - 1))
    {
        String sss = null;
        sss.append(str,2,len-1);
            return sss;
    }
    else
    {
        return str;
    }
}
",
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
9222afd237f2a153dec01f15809e88ec81bac994,"public String plusOut(String str, String word)
{
    String trivialEnd = """";
    int n = 0;
    
    while (n <= str.length())
    {
       if (str.substring(n).startsWith(word))
       {
           trivialEnd += word;
           n += word;
           
       }
        else 
        {
            trivialEnd += '+';
            n++
        }   
    }   
    return trivialEnd;
}
",
d866157db78f6eb45be705042a8b581075d47972,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    	if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
            return a.sb;
    	}
    
    
}
",
c77723bd709b08d6e00161ce3c6ef305a61d69c9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length()-2; i++) {
    if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b') {
      return true;
    }
  }
  return false;
}
",
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",
56564fcd3a089f2e2f8dc872a710a4cf2ca9e4ce,"public String atFirst(String str)
{
    return str.substring(0, 1);
    if (str.substring(0, 1) = null)
    {
        return @;
    }
}
",
d2f05cc468a84bb01f5d675dcfafb4beb9a0b4c9,"public int[] fizzArray(int n)
{
    int[] output = new int[n]();
    for(int i = 0; i < n; i++){
        output[i] = i;
    }
    return output; 
}
",
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",
d832642cded155ba61945ed277e663a0de8cb32c,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 || day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
64048f2701869a2bcb7a460416d3ef15f722e6b6,"public int[] fizzArray(int n)
{
    int i;
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",
501aad78d9f445fad6785a696183d9f103460c21,"public int countCode(String str)
{
    int i = 0;
    int j = 0;
    String keyword = ""code"";
    String[] sentence = keyword.split(str);
    for (String word: sentence)
    {
        i++;
    }
    return i;
}
",
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
",
aa7de1c61f3e68959ff7cdfa0fcae118bf83e8ac,"public boolean xyzThere(String str)
{
    int xyzLocation = str.getIndex();
    if (xyzLocation == -1)
    {
    	char ch = str.charAt(xyxLocation-1);
    	if (ch == '.')
        {
        	return false;
        }
        else
        {
            return true;
        }
    else
        return false;
}
",
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",
2ee7d366ef45e04675e68bd5cfd425ac0862af68,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else
    {
		return ""@@"";
    }

  }
",
458df3209fd88a511ec835c27a6b8e785183059c,"public boolean xyzThere(String str)
{
    int len = str.length() - 2;
    for(int i = 0; i < len; i++)
    {
        if (str.charAt(i) == ""x"" && str.charAt == ""y"" && str.charAt(i+2) == ""z"")
        {
            if(str.charAt(i-1) 1= ""."" || i==0)
            {
                return true;
            }
        }
    }
        return false;
}
",
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
",
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}",
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
",
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
9dc0767266c1756dfc9cc953a7b44c96b56ff94a,"public int sum67(int[] nums)
{
	int sum = 0;
	//boolean sixMode = false;
	for(int i = 0; i < nums.length; i++)
	{
		if (i != 6)
		{
			sum += nums[i];
	}
	return sum;	   
}
",
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
",
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
",
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",
87a331d0b690ad01a48575ef537fbbc928271d6f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int x = i + 1; x < nums.length; x++)
            {
                if (nums[i] % 10 == 0 && nums[x] % 10 != 0)
                {
                    nums[x] = nums[i];
                }
            }
        }
    }
    
    return nums;
}
",
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
a43f9daaa9b5cc98acfe197b9157d9de345febf6,"public int[] frontPiece(int[] nums)
{
    for (int numbers: nums; int i = 0; i < 2; i++)
    {
        int number[i] = numbers;
    }
    return number;
}
",
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",
fbd4c23e76bef6c785eaeac729ab320635a7682b,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
",
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
",
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",
3d89f76d27956de3a51e53f7ba12c5aa1fc7e352,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom && isAsleep)
        return true;
    if (isMorning && !isMom && !isAsleep)
        return false;
    if (isMorning && isMom && !isAsleep)
        return false;
    return false;    
}
",
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
",
af72162e8ac5b84ac915a239ad3487e01803ebce,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    while (isBirthday != true)
    {
    	if (speed <= 60)
    	{
        	return int 0;
    	}
    	else if (speed > 60 && speed <= 80)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
    while (isBirthday != false)
    {
       if (speed <= 65)
    	{
        	return 0;
    	}
    	else if (speed > 65 && speed <= 85)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
}",
7991e5a91ee75b2ca8290f4fbbd9dee8ea1ad8dc,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
    }
    return nums;
}
",
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
",
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
2ab613317018e535c7c370e1bf3fb0d86c7a9f9b,"public int[] tenRun(int[] nums)
{
    int[] result = new int[nums.length];
    int input;
    int value = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (input % 10 == 0 && input > value)
        {
            value = input;
        }
        
        if (value == -1)
        {
            result[i] = input;
        }
        else
        {
            result[i] = value;
        }
    }
    
    return result;
}
",
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
",
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",
449c25168277fbecb5660eb70e7019afab36425e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
            return 0;
    }
    else if (speed <=80 && speed > 61)
    {
            return 1;
    }
    else
    {
            return 2;
    }
}
",
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",
083ca5818f3f055e87fb758cb9de020f40601414,"public int[] withoutTen(int[] nums)
{
    int[] ten = new int[nums.length];
    int result = 0;
    for (int i = 0;i<nums.length;i++)
    {
        if (nums[i] == 10)
        {
            nums[i] = 0;
        }
        if (nums[i] != 10)
        {
            ten[result++] = nums[i];
        }
    }
    return nums;
}
",
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
",
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
",
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",
26bc37d1d0a520cad0dce5a5034e6ee5e7a7dd98,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        int sandwichLength = str.length();
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",
85c4da3eae44449610d4abcaabc40f355189f866,"public boolean twoTwo(int[] nums)
{
    for (int i=0; i<(nums.length); i++)
	{
		if(nums[i]==2)
		{
			i++;
			if(!(i<(nums.length)) || nums[i] !=2) 
    		{
        		return false;
    		}
			while(i<nums.length && nums[i] ==2) i++;
			}
		}
	return true;
}
",
27ced9f412138c0fe596bab23d6119a3c93f5686,"public int[] shiftLeft(int[] nums)
{
    int length = nums.length;
    int special = nums[0];
    if (length == 0)
    {
        return nums;
    }
    for (int i = 0; i < length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[length - 1] = special;
    return nums;
}
",
5503ebe8017ceec49242696dfc96bcb8f3fbdb0e,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6)
    {
        return true;
    }
    if (Math.abs(a-b) == 6 || (a + b) == 6)
    {
        return true;
    }
    else 
    {
        return false;
    }
}
",
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
",
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
",
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
",
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
",
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",
c39d1ee94f6a9a0a81bfecf4b8fd083b1fca26c2,"public int[] fizzArray(int n)
{
    int array = new int[n];
    for(int i=0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
b66c9a76c6567bcfc33f81fb4e1e0bfe1c43ea5c,"public String atFirst(String str)
{
    int length = str.length();
    if( length >= 2 )
    {
        return str;
    }
    else
    {
        if( length == 1 )
        {
            return str + ""@"";
        }
        else
        {
            return ""@@"";
        }
    }
}
",
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",
d620f21e27a87e15d05a4f085e8ed51214622697,"public String alarmClock(int day, boolean vacation);
int alarmTime = 0;
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	alarmTime=7;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	alarmTime=10;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=off;
    	}
    }
return alarmTime;    
}
",
e3ca0205d988751a8bcc80a617f048d01dfa7c60,"public int[] tenRun(int[] nums)
{
    int[] ten = new int[nums.length];
    boolean isTen = false;
    int tenMult = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0 && nums[i] != tenMult)
        {
            isTen = true;
            tenMult = nums[i];
            ten[i] = nums[i];
        }
        
        else if (isTen)
        {
            ten[i] = tenMult;
        }
        
        else
        {
            ten[i] = nums[i];
        }
    }
 	return ten;
}",
5455ec6afe437e7506504e1f1428a5a0b96a5669,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
    if (a > b)
    {
       return blackjack(a, 0);
    }
    else if (b > a)
    {
        return blackjack(0, b);
    }
    } 
    return 0;
}

",
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
",
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",
3bfe605f68e12c9d3fe2391ac78c50b7339ea224,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
	b = b.toLowerCase();    
    return(a.lastIndexOf(b)<=a.length()-b.length()||b.lastIndexOf(a)<=b.length()-a.length());
}
",
9dd42aadfb0115da1d172b39dcf85826026630d6,"public boolean endOther(String a, String b)
{
    String aa = a.toLowerCase();
    int aL - a.length();
    int bL = b.length();
    String bb = b.toLowerCase();
     
    return true;
}
",
49c3fe42791682d66a90f553422c9d4f389e55d4,"public boolean has77(int[] nums)
{
    for (int x = 0; x < nums.length; x++)
    {
        if ((nums[x] == 7 && nums[x+1] == 7) || (nums[x] == 7 && nums[x + 2] == 7))
        {
            return true;
        }
    }
    return false;
}
",
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",
4465ac2e7e70f3ac5ddbd490bd262cc0c4f6249d,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        grid[0] = nums[0];
        grid[1] = nums[1];
        return grid[];
    }
}
",
b20d525ead268bb3eced9c95cb88481aa8aab61d,"public int makeChocolate(int small, int big, int goal)
{
	if (goal > 5*big)
    {
       goal = goal - 5 * big); 
    }
    else
    {
        goal = goal % 5;
    }
    if (goal <= small)
    {
        return goal;
    }
    return -1;
}
",
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",
433d8d82491f06595b4a7fd44c977dbfb917d6b7,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] != 7 && nums[i+1] != 7)
        {
          return false;
        }
    }
    return true;
    
}
",
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
",
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",
609cc3f20dd1f3529a02ebbed8384395c8400b2b,"public int countEvens(int[] nums)
{
    int evens = 0;
    for (int number: countEvens)
    {
        if (number % 2 == 0)
        {
            evens = evens + 1;
        }
    }
    return evens;
}
",
054947245110fe21e7c54bf774cacf65261ff180,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) {
        if (i + 2 <= str.length()) {
            if (str.substring(i, i+2)) {
                return (str.charAt(i).equals(""b"") && str.charAt(i+2).equals(""b""));
            }
        }
    }
                return false;
}
",
a43f9daaa9b5cc98acfe197b9157d9de345febf6,"public int[] frontPiece(int[] nums)
{
    for (int numbers: nums; int i = 0; i < 2; i++)
    {
        int number[i] = numbers;
    }
    return number;
}
",
63bc9b6a7e3b8866c3ea0d84d282e25f9716e838,"public String mixString(String a, String b)
{
    String result = """"; 
    int index = 0;
    
    if (a.length() >= b.length()) {
        index = b.length(); 
    }
    if (a.length() <= b.length()) {
        index = a.length(); 
    }
    for (int i = 0; i < index; i++) {
        result += a.substring(i, i + 1) + b.substring(i, i + 1);
    }
    if (a.length() < b.length()) {
        result += b.substring(a.length(), b.length()); 
    }
    if (a.length() > b.length()) {
        result += a.substring(b.length(), a.length()); 
    }
    return result; 
}
",
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
",
09847ceb2f4c5840316c0b5d1a25a60df77928af,"public int dateFashion(int you, int date)
{
    if(you<=2 || date<=2)
    {//just check date or you <=2
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 0;
    }
}
",
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",
ea7b7503d60391606cc84dfdd7b718ed94407df2,"public int makeChocolate(int small, int big, int goal)
{
    if (goal / 5 != big )
        return goal % 5;
    else if (goal / 5 == big && (goal - big * 5) != 0)
        return small;
    else if (goal / 5 == big && (goal - big * 5) == 0)
        return 0;
    else 
        return -1;
}
",
cb7010a4c9eab7a9792ac509d6be84f2a9e8711d,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == 6 || Math.abs(a - b) == 6)
    	return true;
    else 
        return false;
}
",
33e62f65180aaedc26d6d11b46d081d5c9bffbf4,"public int[] frontPiece(int[] nums) 
{
  if (nums.length == 1)
  {
  return new int[] {nums[0]};
  }
  else if (nums.length == 0)
  {
  return new int[] {};
  }
    else
    {
  return new int[] {nums[0],nums[1]};
    }
    }
",
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
",
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
",
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
",
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
",
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",
6a623e78b320858b018881a4c447f0285bde0276,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            int temp = nums[i];
            while (nums[i+1] % 10 != 0 || i == nums.length)
            {
                nums[i] = temp;
                i++;
            }
        }
    }
    return nums;
}",
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
",
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",
57de305af5c397df593d610c754a2029157ce03a,"public int[] tenRun(int[] nums)
{
    for (int i =0; i <nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int j = i+1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i]; 
            }
        }
    }
    
    return nums; 
    
}
",
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",
7e8ebbb04f1a1a60590f6fb959bda51fa984b852,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums.get(i)%2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",
f0258239140a383cf0c0c1e9ac9553390ed81433,"public boolean xyzThere(String str)
{
    int i = 0
    int length = str.length() - 2;
    for( i ; i < length; i++);
    {
     	if(str.charAt(i) == 'x' && str.charAt(i+1) == 'y' && str.charAt(i+2) == 'z')
        {
         	if (i == 0 || str.charAt(i-1) != ""."")
                return true;
        }
    }
    return false;
}
",
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
",
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",
c5d364aebfeaf536888aa2177a5459f2c3dcb34e,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i < nums.length; i++)
    {
    	if (i+1 < nums.length && i-1 >= 0)
        {
        	if (nums[i+1] == val || nums[i] == val)
            {
            	everywhere = true;
                
            }            
        }        
    }
    return everywhere;
}
",
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
",
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",
d1e2c22d6c39456544b139affba981e7922869d2,"public int makeChocolate(int small, int big, int goal)
{
    int Big = big * 5;
    if ((Big/big) == goal)
    {
        return 0;
    }
    if ((Big + small) < goal)
    {
        return -1;
    }
    else if ((Big + small) > goal)
    {
        return -1;
    }
    else if ((Big + small) == goal)
    {
        return small;
    } 
    else
    {
        return goal - (Big);
    }
}
",
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",
b792f65710603537369d8658da16396d60eece84,"public String atFirst(String str)
{
    int len = str.length();
    
    if (len >= 2)
    {
        return str.substring(0,2);
    }
}
",
c6e135a8d819808a2e86f6eb184fd9701ef4cea6,"public int[] withoutTen(int[] nums)
{
    //creates new array
    int[] newArray = new int[nums.length];
	int j = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			newArray[j] = nums[i];
			j++;
		}
	}
	// returns the new array
	return newArray;
}
",
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",
39483c437921abc8fe24406f9d159f633a6ed263,"public boolean xyzThere(String str)
{

    if (str.startsWith(""xyz"") || str.endsWith(""xyz""));
        
    {
        return true;
    }
        for (int x = 0; x < str.length() -2; x++)
        {
   			if (str.charAt(x) == '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return false;
    }
        
        }
    {return false;}

}
",
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",
057708d05798548dcd3cf7408ac3e7596f6cffad,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <=2)
    {
    	return 0;
    }
    
    else if((you >= 8 || date > 2) && (you > 2 || date >= 8))
    {
        return 2;
    }
    
    return 1; 
  

}
",
d5ce0fb7cf0b155cde53ceb7bede5737956327c9,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        for (int j : array)
        {
            if (i != 10)
            {
                array[j] = i;
                break;
            }
        }
    }
    
   return array;
}
",
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
",
d866157db78f6eb45be705042a8b581075d47972,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    	if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
            return a.sb;
    	}
    
    
}
",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
d0240fa701f593a04989201ae92746b03b43df48,"public int loneSum(int a, int b, int c)
{
    int sum = a;
    if(b != a)
        sum += b;
    if(c!=a && c!=b)
        sum += c
    return sum;
}
",
557026f064a89be4df627a611b8a898f7a2fc2f3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if ((nums[i] != val) || (nums[i + 1] != val))
        {
            return flase;
        }          
        
    }
     return false;
}
",
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",
054947245110fe21e7c54bf774cacf65261ff180,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) {
        if (i + 2 <= str.length()) {
            if (str.substring(i, i+2)) {
                return (str.charAt(i).equals(""b"") && str.charAt(i+2).equals(""b""));
            }
        }
    }
                return false;
}
",
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",
fbd4c23e76bef6c785eaeac729ab320635a7682b,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
",
9854a8715c3f2ef0abd481b669c936355c5f9760,"public int sum67(int[] nums)
{
    int sum = 0;
    
    for (int i : nums)
    {
        if (i == 6)
        {
            for (int j = 6; j <= 7; j++)
            {
                i = 0;
            }
        }
        sum = sum + i;
    }
    
    return sum;
}
",
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",
f9d12460b5099608ad1894fabbf8afd8c115fa9a,"public String mixString(String a, String b)
{
    String fullS = """";
    
    if (a.length() >= b.length())
    {
    	for (int i = 0; i<a.length()-1;i++)
    	{
    	    fullS = fullS+a.charAt(i);
            fullS = fullS+b.charAt(i);
    	}
    }
    if (b.length() > a.length())
    {
    	for (int j = 0; j<b.length()-1;j++)
    	{
    	    fullS = fullS+a.charAt(j);
            fullS = fullS+b.charAt(j);
    	}
    }
    return fullS;
}
",
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
",
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
",
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",
51fae40e9861d7b67fbaedf2d011c3a432f13b51,"public boolean xyzThere(String str)
{
    int i = -1;
    while ((i = str.indexOf(""xyz"", i + 1)) != -1)
    {
        if (i == 0 || (str.charAt(i - 1) != "".""))
        {
            return true;
        }
    }
    return false;
}
",
e3ca0205d988751a8bcc80a617f048d01dfa7c60,"public int[] tenRun(int[] nums)
{
    int[] ten = new int[nums.length];
    boolean isTen = false;
    int tenMult = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0 && nums[i] != tenMult)
        {
            isTen = true;
            tenMult = nums[i];
            ten[i] = nums[i];
        }
        
        else if (isTen)
        {
            ten[i] = tenMult;
        }
        
        else
        {
            ten[i] = nums[i];
        }
    }
 	return ten;
}",
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
",
617e080aa52b2079a26ca214e0adcbebaeec5270,"public int makeChocolate(int small, int big, int goal)
{
   int rem = goal % 5;
   if (small + (5 * big) < goal)
   {
       return -1;
   }
  else if (rem <= small + (5 * big) >= goal)
  {
      return -1;
  }
  else
  {
      return small * rem;
  }
}
",
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",
49c3fe42791682d66a90f553422c9d4f389e55d4,"public boolean has77(int[] nums)
{
    for (int x = 0; x < nums.length; x++)
    {
        if ((nums[x] == 7 && nums[x+1] == 7) || (nums[x] == 7 && nums[x + 2] == 7))
        {
            return true;
        }
    }
    return false;
}
",
b17bfa439e0727d5a7ff13ca3877a15c95641f51,"public String zipZap(String str)
{
   	int len = str.length();
    String hol = """";
    while (len>3)
    {
    	if (str.charAt(0)=='z' && str.charAt(2)=='p')
        {
        	hol+=""zp"";
            str = str.substring(3);
           len = str.length();
        }
        else
        {
            hol+=str.charAt(0);
            str = str.substring(1);
            len = str.length();
        }
    }
    if (str.charAt(0)=='z' && str.charAt(2)=='p')
        {
        	hol+=""zp"";
            str = str.substring(2, len);
           len = str.length();
        }
    while (len>2)
    {        hol+=str.charAt(0);
            str = str.substring(1);
            len = str.length();
       
    }
    return hol;
}
",
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
",
33e62f65180aaedc26d6d11b46d081d5c9bffbf4,"public int[] frontPiece(int[] nums) 
{
  if (nums.length == 1)
  {
  return new int[] {nums[0]};
  }
  else if (nums.length == 0)
  {
  return new int[] {};
  }
    else
    {
  return new int[] {nums[0],nums[1]};
    }
    }
",
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",
161fe3c4150b0140a275c3c395e89e55917fe73c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0){
        return {};
    }
    int[] left = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++){
        left[i] = nums[i+1];
    }
    left[nums.length - 1] = nums[0];
    return left;
}
",
4465ac2e7e70f3ac5ddbd490bd262cc0c4f6249d,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        grid[0] = nums[0];
        grid[1] = nums[1];
        return grid[];
    }
}
",
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
",
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
daa2644623a6ac5c117750adb637c687bb00c72d,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6)
    { 
        return true;
    }
    if (Math.abs(a + b) == 6 || Math.abs(a - b) == 6)
    {
        return true;
    }
    else 
    {
        return false;
    }
}
",
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",
418ceebe3b6673017881e22eed19ed28eef4b664,"public String without2(String str) 
{	
    int n = str.length();
    if (str.substring (0, 2) == str.substring(n -2, n))
    {
        return str.substring (2, n);
    }
    else if (n < 2)
    {
        return str;
    }
    else if ( n == 2)
    {
        return """";
    }
    else 
    {
        return str;
    }
}
",
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",
054947245110fe21e7c54bf774cacf65261ff180,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) {
        if (i + 2 <= str.length()) {
            if (str.substring(i, i+2)) {
                return (str.charAt(i).equals(""b"") && str.charAt(i+2).equals(""b""));
            }
        }
    }
                return false;
}
",
51fae40e9861d7b67fbaedf2d011c3a432f13b51,"public boolean xyzThere(String str)
{
    int i = -1;
    while ((i = str.indexOf(""xyz"", i + 1)) != -1)
    {
        if (i == 0 || (str.charAt(i - 1) != "".""))
        {
            return true;
        }
    }
    return false;
}
",
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
c093cac600fc00c29dfe5c59c8ab78dddb9a3f95,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count >= nums.length - 1);            
    
}
",
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
",
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
",
8536c5f768b1adb326e2c34c566a310f311e86dc,"public boolean xyzThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.CharAt(i+1) == 'y' 
            && str.CharAt(i+2) == 'z')
        {
            if (i == 0 || str.CharAt(i-1) != '.')
                return true; 
        }
    }
    return false; 
}
",
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",
c95c93f8d1fa224a7fbbc0fb3c04049e5934f3d4,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            return true;
        }
    }
    return false;
    
}
",
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
",
f1f7b77c1f7f33e64d0bfe57969ef3ab6e7f8ba1,"public int makeChocolate(int small, int big, int goal)
{
    if (goal > 0)
    {
        int bigNum = goal/5;
        if (bigNum > big)
        {
			int smallNum = goal - (bigNum * 5);
        	if (smallNum > small)
        	{
            	return -1;
        	}
        }
        else
        {
            int smallNum = goal - (bigNum * 5);
        	if (smallNum > small)
        	{
            	return -1;
        	}
            else
            {
            	return smallNum;
            }
        }
    }
    return -1;
}
",
2eefd35700230f8780f45d01d416afdecdd69994,"public int caughtSpeeding(int speed, boolean isBirthday)
if(isBirthday)
{
	speed -= 5;
}
if(speed <= 60)
{
    return 0;
}
else if (speed <= 80)
{
    return 1;
}
else
{
    return 2;
}
    
",
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
",
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",
c7972a0c52578814fdc1e75cdf7b2b9b87eaaa39,"public boolean evenlySpaced(int a, int b, int c)
{
    if ( a > b && b > c || c > b && b > a)
    {
        return ( a - b == b - c);
    }
    else if ( b > a && a > c || c > a && a > b)
    {
        return ( b - a == a - c);
    }
    else
    {
        return ( a - c == c - b);
    }
    
}
",
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",
dc3378fef360ec4c5e4c0ddeaace01619067c129,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (is_weekend = true)
    {
        if cigars >= 40:
        {
            return True
        }
    }
    else if (cigars >= 40 && cigars <= 60)
    {
        return True
    }
    else
    {
        return False
    }
}
",
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
50e38ea828c8b0ad18791c7c955b37bad6c9d4bc,"public boolean xyzThere(String str)
{
    int a = str.indexOf(""xyz"");
    int b = str.lastIndexOf(""xyz"");
    return ( a != -1 || b != -1);
}
",
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
",
29a1252f7c0ff20c1a543bc0204b4956f657cce2,"public boolean bobThere(String str)
{
    
    int end = str.length();
	for(int i = 0; i < end; i++)
	{
		if(str.charAt(i) == 'b'
           && str.charAt(i+2) == 'b')
			return true;
	}
    {
	return false;
    }
    
}
",
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",
e773b35c4440baf407292a0e144e90ebd1fab1ce,"public int countCode(String str)
{ 
    int count = 0;
    for (int i = 0; i < str.length(); i++)
    {
  		int co =   str.indexOf(""co"");
        String newStr = str.substring(co, co+4);
        System.out.println(newStr);
        if (newStr.endsWith(""e""))
        {
            count++;
        }  
    }
    return count;
}
",
cdf35248fcf2f5a6190e6be0c36f50876e76b09b,"public boolean bobThere(String str)
{
    for(int i = 0; i < str.length(); i++)
    {
        if(str.charAt(i).equals('b') && str.charAt(i+2).equals('b'))
        {
            return true;
        }
    }
}
",
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",
cf03e7d05ecf19d01f0b0960fcc372a74623be83,"public int[] zeroMax(int[] nums)
{
    int i = nums.length - 1;
    while(i >= 0 && nums[i] % 2 == 0)
    {
        i--;
    } 
    for(int j = i - 1; j >= 0; j--) {
        if(nums[j] == 0)
        {
            nums[j] = nums[i];
        }
        if(nums[j] % 2 == 1 && nums[j] > nums[i])
        {
            i = j;
        }
    }
    return nums;
}
",
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",
f6cfdfcc045d3ced7634c7a0afcbe4afd98d380e,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
        n = 0;
    
    return n;
}
",
d3fc7117bd8d2d3ce23fb6c7b34d1274ad60e27c,"public boolean xyzThere(String str)
{

    if (str.length () >= 3  && str.contains(""xyz""))
        
    {
        return true;
    }
        for (int x = 0; x < str.length() -3; x++)
        {
   			if (str.charAt(x) == '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return false;
    }
        
        }
    {return false;}

}
",
557026f064a89be4df627a611b8a898f7a2fc2f3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if ((nums[i] != val) || (nums[i + 1] != val))
        {
            return flase;
        }          
        
    }
     return false;
}
",
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
",
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",
7f41d3bdfcd6606cda578b2090213e0dfcd23aad,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
    {
        return true;
    }
    
    return((a + b) == 6 || Math.abs(a - b) == 6)
}
",
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",
0be714e6700cd5ad89ad8f1e30daf5c0dc2f6a03,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] != val || nums[i+1] != val)
        {
        	return false;
        }

    }
	return true;
}
",
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
",
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

",
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",
af72162e8ac5b84ac915a239ad3487e01803ebce,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    while (isBirthday != true)
    {
    	if (speed <= 60)
    	{
        	return int 0;
    	}
    	else if (speed > 60 && speed <= 80)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
    while (isBirthday != false)
    {
       if (speed <= 65)
    	{
        	return 0;
    	}
    	else if (speed > 65 && speed <= 85)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
}",
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",
2d93e4072a980ef993907c9526395445c01a414f,"public boolean xyBalance(String str)
{
    boolean t=true;
    for (int i=0; i<str.length()-1; i++)
    {
        if (str.charAt=='y')
        {
            t=true;
        }
        if (str.charAt=='x' && !str.charAt=='y')
        {
            t=false;
        }
    }
    return t;
}
",
0bd7fe95ce9749e4f8a7edf4208f6c161ea14ca1,"public int countCode(String str)
{
    int x = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c')
        {
            if (str.charAt(i+1) == 'o')
            {
                if (str.charAt(i + 3) == 'e')
                {
                    x++;
                }
            }
        }
    }
    return x;
}
",
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
",
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",
f4b03862b0451a373caa9f6bb7390b99d9c24f62,"public String atFirst(String str)
{
    return str.substring(0, 2);
}
",
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",
0f7eb7c6740ccd257c3f6da081cc3f753e5a2516,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int clumpSize = this.sizeClump(nums, nums[i], i);
                i = i + clumpSize;
                counter++;
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int nextNum = 0;
    while (nums[start] == initValue)
    {
        nextNum++;
    }
    return nextNum;
}",
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",
51fae40e9861d7b67fbaedf2d011c3a432f13b51,"public boolean xyzThere(String str)
{
    int i = -1;
    while ((i = str.indexOf(""xyz"", i + 1)) != -1)
    {
        if (i == 0 || (str.charAt(i - 1) != "".""))
        {
            return true;
        }
    }
    return false;
}
",
bfa9ba9f8c1aa8e1ae413c2af6f9ae30af19b8b8,"public int countEvens(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if(nums[i] % 2 == 0)
        {
            count++;
        }
    }
    
    return count;
}
",
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
",
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
a77cf61f1d235b19831c14399114810bc8b89144,"public int[] shiftLeft(int[] nums)
{
    int[] array = new int[nums.length];
    if ( nums.length >= 2 ) {
        for ( int i = 1; i < nums.length; i++ ) {
            array[i-1] = nums[i];
            array[nums.length - 1] = nums[0];
        }
        return array;
    }
    else
    {
        return nums;
    }
}
",
462c32a961f9e37900f45d8ce5b1817ecd8a2c74,"public int noTicket(0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
",
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
",
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
",
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",
11285264b3baf07c8ff3000362055856653bccff,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i = 0; i < array.length; i++)
    {
        array[i] = 0;
    }
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            array[i] = nums[i];
        }
        else
        {
            // find the next # that isn't 10
            for (int j = i + 1; j < nums.length; j++)
            {
                if (nums[j] != 10)
                {
                 	array[i] = nums[j];
                    i = j; 
                    break;
                }      
            }
        }
    }
    
    return array;
    
}
",
f1f7b77c1f7f33e64d0bfe57969ef3ab6e7f8ba1,"public int makeChocolate(int small, int big, int goal)
{
    if (goal > 0)
    {
        int bigNum = goal/5;
        if (bigNum > big)
        {
			int smallNum = goal - (bigNum * 5);
        	if (smallNum > small)
        	{
            	return -1;
        	}
        }
        else
        {
            int smallNum = goal - (bigNum * 5);
        	if (smallNum > small)
        	{
            	return -1;
        	}
            else
            {
            	return smallNum;
            }
        }
    }
    return -1;
}
",
2ff10cecd8d8545349c487d248173bc2054ee147,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( nums[i] == 7 && nums[i + 1] ==7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 				2] == 7)
        {
            return true;
        }    
        return false;
    }
    
}
",
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",
b20d525ead268bb3eced9c95cb88481aa8aab61d,"public int makeChocolate(int small, int big, int goal)
{
	if (goal > 5*big)
    {
       goal = goal - 5 * big); 
    }
    else
    {
        goal = goal % 5;
    }
    if (goal <= small)
    {
        return goal;
    }
    return -1;
}
",
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",
e73f15cebf791aa932347617662e3a6641135a35,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
    //return nums;
    if (nums.length >= 2)
    {
        
   		int start = nums[0];
    	for (int i = 0; i < nums.length - 1; i++)
    	{
     	//int j = 1;
        //nums[i] = nums[j];
        	nums[i] = nums[i + 1];
    	}
    
        	//nums[nums.length - 1] = start;
        /*if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }*/
    
              	
    }
    
    return nums;   
}
",
332c6ec5c84a4b48b155a3ce7e3c41195bbaf8a1,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
",
e87542225324deb36fc5891405e6401d53aab2a3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed -= 5;
    }
    if (speed=<60)
    {
        return 0;
    }
    if (speed>=61 && speed<= 80)
    {
        return 1;
    }
    if (speed>=81)
    {
        return 2;
    }
}
",
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",
bde001ef355c35f06f3da9cad39a299850b21f14,"public String mixString(String a, String b)
{
    String endWord = """";
    int i;
    int max = Math.max(a.length(), b.length());
    for (i = 0; i < max; i++)
         {
             if (i <= b.length() - 1)
             {
                 endWord += b.substring(i, i + 1);
             }
             if (i <= a.length() - 1)
             {
                 endWord += a.substring(i, i + 1);
             }
         }
         return endWord;
}
",
af72162e8ac5b84ac915a239ad3487e01803ebce,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    while (isBirthday != true)
    {
    	if (speed <= 60)
    	{
        	return int 0;
    	}
    	else if (speed > 60 && speed <= 80)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
    while (isBirthday != false)
    {
       if (speed <= 65)
    	{
        	return 0;
    	}
    	else if (speed > 65 && speed <= 85)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
}",
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",
87a331d0b690ad01a48575ef537fbbc928271d6f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int x = i + 1; x < nums.length; x++)
            {
                if (nums[i] % 10 == 0 && nums[x] % 10 != 0)
                {
                    nums[x] = nums[i];
                }
            }
        }
    }
    
    return nums;
}
",
e1f80924e2fa9aba6195f174166b813b13fea19e,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 && day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
be8aee4152f3cab23d55d27027393b89fd74ceb9,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
	if(isMorning == true && isMom == true)
    {
    	return true;
    }
    
    else if(isMorning == true && isMom == false)
    {
    	return false;
    }
    
    if(isAsleep == true)
    {
    	return false;
    }
    
    return false;
}
",
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",
cdd0817b73c160a36cec2fee7dadc8c9bdb3b6d2,"private boolean num;

public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode = true)
    {
        if (n >= 10 || n <= 1)
        {
            num = true; 
        }
        else
        {
            num = false; 
        }
    }
    else 
    {
        if (n <= 10 || n >= 1)
        {
            num = true; 
        }
        else 
        {
            num = false; 
        }
    }
    return num;
}
",
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
604c63018ca4096c9d92c518ed231a4473a28b20,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
	return a + b + c;
}

public int fixTeen(int n)
{
    if ((n >= 13) && (n <= 19) && (n != 15) && (n != 16))
    {
         n = 0;   
    }
    else
    {
         n = n;   
    }
    return n;
}
",
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
",
af90787e933f1486fa7394240c35078e132e9637,"public boolean xyzThere(String str)
{
    int i=0; 
    if(str.length()>=3)
    {
        while (!str.substring(i, i+3).equals (""xyz"") && i+4<= str.length())
   		{
       	 	i=i+1;
    	}
    	return str.substring(i, i+3).equals (""xyz"") && !(char result = s.charAt(i-1).equals("".""));
    }
    else
    {
        return false;
    }
}
",
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
43b70a5866a0d2fd735f1d510fe02fe1e67f82ab,"public boolean xyzThere(String str)
{
    int length = str.length();
    boolean contains = false;
    boolean hasPeriod = false;
    if (length >= 3)
    {
        for (int i = 0; i < length-1; i++)
        {
            if (str.charAt(i) == 'x' && str.charAt(i+2) == 'z')
            {
                contains = true;
            }
            if (str.substring(i, i+4).equals("".xyz""))
            {
                hasPeriod = true;
                int remainder = length - i;
                i = i + remainder;
            }
        }
        if (hasPeriod == true)
        {
            contains = false;
        }
    }
    return contains;
}
",
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
",
49eb57187ce32f7392ba9eb954bfc79921194a03,"public int countCode(String str)
{
    int count = 0;
    int i = 0;
    int length = str.length() - 3;
    while (i < length)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) = ""e"")
        {
            count++;
        }
        else
        {
            i++
        }
    }
    return times;
}
",
8486d888511b0c88a6cdd719c0976a881dec165a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday) {
        if(speed <= 65) {
            return 0;
        } else if(66 <= speed && speed <= 85) {
            return 1;
        } else if(86 <=  speed) {
            return 2;
        }
    }
                                        
    if(speed <= 60) {
        return 0;
    } else if(61 <= speed && speed <= 80) {
        return 1;
    } else {
        return 2;
    }
}
",
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
",
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
",
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",
7856bc992acb7f7b799ac4063e23bfc3598df9e0,"public int sum13(int[] nums)
{
    if(nums.length == 0) {
        return 0;
    }
    
    int sum = 0;
    boolean thirteen = false;
    boolean secondthirteen = false;
    
    for(int i = 0; i < nums.length; i++) {
        if(nums[i] == 13) {
            thirteen = true;
        }
        
        if(!thirteen && !secondthirteen) {
            sum += nums[i];
            thirteen = false;
            secondthirteen = false;
        }
        
        if(thirteen) {
            secondthirteen = true;
        }
    }
    
    return sum;
}
",
54e8d733e91a15a740f7a7e802894add4c55a348,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
        {
			count++;
        }
		else
		{
			if(count == 1)
            {
				return false;
            }
			else
            {
				count = 0;
            }
		}
	}
	return (count != 1);
}
",
a77cf61f1d235b19831c14399114810bc8b89144,"public int[] shiftLeft(int[] nums)
{
    int[] array = new int[nums.length];
    if ( nums.length >= 2 ) {
        for ( int i = 1; i < nums.length; i++ ) {
            array[i-1] = nums[i];
            array[nums.length - 1] = nums[0];
        }
        return array;
    }
    else
    {
        return nums;
    }
}
",
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
",
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
",
c7999fc2fb5642ecb3380186b81ff045d8eb0965,"public boolean sameEnds(int[] nums, int n)
{
    if (n < nums.length)
    {
        int[] firstgroup = new int[n];
        int[] lastgroup = new int[n];
        for (int i = 0; i < n; i++)
        {
            firstgroup[i] = nums[i];
        }
        for (int o = nums.lenght - 1 - n; o < nums.length; o++)
        {
            lastgroup[o] = nums[o];
        }
        if (firstgroup.equals(lastgroup))
        {
            return true;
        }
    }
    return false;
}
",
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",
6b538f7d9eac6f8c54cd2c59a699ca73280e0930,"public class FizzArray {

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
cd36011e020ffc41188de2b7cfe5e55af586b032,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
    {
        return 10;
    }
    else if ((a == b) && (b == c))
    {
        return 5;
    }
    else if ((b != a) && (c != a))
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
7991e5a91ee75b2ca8290f4fbbd9dee8ea1ad8dc,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
    }
    return nums;
}
",
c0bcafd61ce598040aa977b280d46011559cb4c7,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true;
    for( int i = 0; i <= nums.length-2; i++)
    {
        if( nums [i] != val && nums[i+1] != val)
            result = false;
    }
    return result;
}
    
}
",
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",
a07a8703a9cafd5f2dd00f03a9d186fc390e15f9,"public String zipZap(String str)
{
    String s = """";
    int x = 0;
    int y = 0;
    if (str.length() < 3) {
        return str;
    }
    else {
        for (int i = 0; i < str.length() - 2; i++) {
            if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p') {
                x++;
            }
        }
    	while (s.length() != str.length() - x && y < str.length() - 2) {
            if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p') {
                s = s + ""zp"";
                y = y + 2;
            }
            else {
                s = s + str.charAt(y);
            }
            y++;
        }
    }
    return s;
            
        
}
",
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
",
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",
214c5b8362c94ebc3f184bc105375d4681d7db7a,"public int[] fizzArray(int n)
{
    //fizzArray is a method which takes input n and prepares fizzArray


//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}
}
",
f0f93102c0a87bedb16e5c9f188b50916757a30c,"

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}",
95d5b0bdcc5245185cf35c03ad766611a0a87163,"public String mixString(String a, String b)
{
    String endWord = """";
    for (i = o; i < (Math.total(a.length(), b.length()); i++)
         {
             if (i <= b.length() - 1)
             {
                 endWord += b.substring(i,i+1);
             }
             if (i <= a.length() - 1)
             {
                 endWord += a.substring(i,i+1);
             }
         }
         return endWord;
}
",
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
",
64048f2701869a2bcb7a460416d3ef15f722e6b6,"public int[] fizzArray(int n)
{
    int i;
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",
c2b5233c69ac3f268687caee60f7f68deec9a002,"public String zipZap(String str)
{
    String original = str;
boolean found = false;
if(str.length() == 3) {
if(Character.toString(str.charAt(0)).equals(""z"") && (Character.toString(str.charAt(2)).equals(""p""))) {
return ""zp"";
}
} else if(str.length() < 3) {
return str;
}
 
for(int i = 0; i + 3 < str.length(); i++) {
if(Character.toString(str.charAt(i)).equals(""z"") && Character.toString(str.charAt(i + 2)).equals(""p"")) {
str = str.substring(0, i) + Character.toString(str.charAt(i)) + Character.toString(str.charAt(i + 2)) + str.substring(i + 3, str.length());
found = true;
} else {
}
}
 
if(Character.toString(str.charAt(str.length() - 3)).equals(""z"") && Character.toString(str.charAt(str.length() - 1)).equals(""p"")) {
return str = str.substring(0, str.length() - 3) + Character.toString(str.charAt(str.length() - 3)) + Character.toString(str.charAt(str.length() - 1));
}
 
if(found) {
return str;
} else {
return original;
}
}
",
9def91e03cb4c9e4fb5f0472d02e90c8fb23cc26,"public int makeChocolate(int small, int big, int goal)
{
    int amount = (5*big) + small; // Amount possible
    if (amount < goal)
    {
        return -1;
    }
    else if (amount == goal)
    {
        return small;
    }
    else
    {
        int diff = amount - goal;
        int afterBig = diff - (5*big);
        if (afterBig < 0)
        {
            return small;
        }
        else
        {
            return small - afterBig;
        }
    }
}
",
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",
3a2534fb0ac1dc3651141e9a0bd5b1830ff648bb,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""small ticket"";
        }
        else
        {
            return ""big ticket"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""small ticket"";
        }
        else
        {
			return ""big ticket"";
        }
    
    }
}  
",
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
",
64520cbb7c1e44f2b914c32b1d9f62b2e03ce23e,"public boolean twoTwo(int[] nums)
{
    for( int i =0; i<nums.length; i++)
    {
     	if (nums[i] == 2)
        {
            int count = 0;
        	for (int j =i; j<nums.length; j++)
            if (nums[j] ==2)
                count++;
        	else
                break;
        }
        i = i + count;
        if (count < 2)
            return false;
    }
    return true;
}
",
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",
c0f5b70b603edfb55cea6f3a939df372d0d07201,"public int makeChocolate(int small, int big, int goal)
{
    if (goal >= 5 && (goal / 5) >= big && (goal / 5 )
        - small > 0)
        return goal - big * 5; 
    else if (goal / 5 < big ) 
        return goal % 5;
    else 
        return -1;
}
",
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",
b548738b5bfb75d35c000b3dd8701cbe2937ee99,"public String zipZap(String str)
{
    char[] CharArray = str.toCharArray();
    char[] finalArray;
    for(char cha : CharArray){
    	if (cha == 'z'){
            if (CharArray.length > i + 2){
        		if (CharArray[i + 2] == 'p'){
                    
                }
            }
        }
        ;
    }
    int z = 0;
    int p = 0;
    String notFinal = """";
    String finalS = str;
    int lastFound = 0;
    for (int i = 0; i < str.length; i++){
        notFinal += str.charAt(i);
        if (str.charAt(i) == ""z""){
          	if (str.length() > i + 2){
            	if (str.charAt(i + 2) == ""p""){
                    i++;
                }
            }
        }
    }
    
    return notFinal;
}
",
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
",
531bdfd3cc310c2b5e00a692007865c2d4b2f67e,"public int roundSum(int a, int b, int c)
{
    int sum = round10(a) + round10(b) + round10(c);
    return sum;
}

public int round10(int num)
{
    if( num%10 > 5)
    {
     	num = num - num%10 + 10;   
        return num;
    }
    else
    {
        num = num - num%10;
        return num;
    }
}
",
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",
88bf1f7daad113965a8a915b5a25f2a7cc6de986,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
    {
        return 10;
    }
    else
    {
        if ((a == b) && (a == c))
        {
            return 5;
        }
        else
        {
         	if((b != a) && (c != a))   
            {
                return 1;
            }
            else
            {
                return 0;
            }
        }
    }
}
",
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",
bab5cb0c2c8a924af65c6c139ed8497d525bd0a0,"public int[] fix45(int[] nums)
{
	
 	int k =0;
 	 for(int i=0; i< nums.length; i++)
     for(int j=0; j<nums.length; j++)

     if(nums[i]==4 && nums[j]==5)
     {
      k  =nums[j+1];
      nums[j+1] = nums[i];
      nums[i] = k;
     }
     return nums;
}
",
d866157db78f6eb45be705042a8b581075d47972,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    	if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
            return a.sb;
    	}
    
    
}
",
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",
faaaa4b9637f7003d240f0cdc7c5c6bf28c27cdb,"public boolean isEverywhere(int[] nums, int val)
{
    if (nums.length == 0) {
        return true;
    }
    int b = 0;
    for (int i = 1; i < nums.length; i++) {
        if (nums[i] == val || nums[i-1] == val) {
            	b++;
        }
    }
    return b == nums.length - 1;
}
",
0483b1e79e3f05acdb38f49fb36b807ed2e6bb07,"public int[] withoutTen(int[] nums)
{
    int[] done = new int[nums.length];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            count++;
        }
        else
        {
            done[i - count] = nums[i];
        }
    }
    return done;
}
",
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
",
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
",
4ba46181a66bb2f3cf45d38876db8736b1ebda46,"public boolean in1To10(int n, boolean outsideMode)
{
    return ((n >= 1 && n<=10 && !outsideMode) || (n > 10 || n < 1 && outsideMode));
}
",
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
",
4cc916649df329cb2108d1f68b228a173f91b30d,"public int makeChocolate(int small, int big, int goal)
{
    if (small + (5*big) < goal)
    {
        return -1;
    }
    else
    {
        if ((goal / 5) <= big)
        {
            int r = goal % 5;
            if (r <= small)
            {
                return small;
            }
            else
            {
                return -1;
            }
        }
        else
        {
            if ((goal - (5 * big)) <= small)
            {
                return goal - (5 * big);
            }
            else
            {
                return -1;
            }
        }
    }
    
    
}
",
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",
9294b03f96e7ba6c8ebb76fc9437bfadef40b777,"public int sum67(int[] nums)
{
	int sum = 0;
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 6)
        {
            for(int j = nums[i]; nums[i] =! 7; j++)
            {
            	sum + 0;
            }
        }
        else 
        {
        	sum += nums[i];
        }
            
    return sum;
}
",
b52819ea3f70a5151d3bf001ecfc3d458a4c6285,"public int[] withoutTen(int[] nums)
{
    int[] newArray = new int[nums.length];
    
    for (int number : nums)
    {
        
           for (int i = 0; i < nums.length; i++)
           {
               if (nums.equals(10))
               {
                   newArray[i] = nums;
               }
               
           }
        
    }
    
    return newArray;
    
}
",
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",
f0670002de7ee3cc7b5690704d0b2637e2fb224d,"public boolean sameEnds(int[] nums, int n)
{
    int[] jim = new int[n];
    int[] bill = new int[n];
    for (int i = 0; i < n; i++) {
        jim[i] = nums[i];
    }
    
    for (int j = nums.length - n; j < nums.length; j++) {
        bill[j] = nums[j];
    }
    int b = 0;
    for (int c = 0; c < n; c++) {
        if (jim[c] == bill[c]) {
            b++;
        }
    }
    return b == n;
}
",
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
",
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
6bb0ee0ad18b7740337fbdd1e749d82571043674,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return ""@"";
    }
    else
    {
        return ""@@"";
    }
}
",
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
",
0483b1e79e3f05acdb38f49fb36b807ed2e6bb07,"public int[] withoutTen(int[] nums)
{
    int[] done = new int[nums.length];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            count++;
        }
        else
        {
            done[i - count] = nums[i];
        }
    }
    return done;
}
",
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
",
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",
6019a2d927f175c86e134452ff3a3b0ec8aaa33b,"public int[] frontPiece(int[] nums)
{
    if (nums.length >= 2)
    {
        int[] newnums = new int[2];
        newnums.add(nums[0]);
        newnums.add(nums[1]);
        return newnums;
    }
    else
    {
        return nums;
    }
}
",
8a779c37e36e7e7238238f8fa362f496af39a6e3,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    
    
        
        
    if(first != -1 && last != -1 && first != last)
    {
		return str.substring(first + 5, last);
    }
    else return"""";
}
",
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
",
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",
a43f9daaa9b5cc98acfe197b9157d9de345febf6,"public int[] frontPiece(int[] nums)
{
    for (int numbers: nums; int i = 0; i < 2; i++)
    {
        int number[i] = numbers;
    }
    return number;
}
",
f975c769611523b9ff8e0c8e7baa2a5d2b94373c,"public boolean twoTwo(int[] nums)
{
    int i;
    for (i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i+1] != 2)
            {
                return false;
            }
            i = i +2;
        }
    }
    if (nums.length >= 3)
    {
	if (nums[nums.length - 1] == 2 && nums[nums.length - 2] != 2)
        {
            return false;
        }
    }
    else
    return true;
}
",
203f9c47a0738c4f7deb3aa08f1ac17b6d91cac6,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    int index = 0;
    
    for (int i : nums)
    {
        if (i != 10)
        {
            array[index] = i;
            index++;
        }
    }
    
   return array;
}
",
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
",
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",
d5ce0fb7cf0b155cde53ceb7bede5737956327c9,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        for (int j : array)
        {
            if (i != 10)
            {
                array[j] = i;
                break;
            }
        }
    }
    
   return array;
}
",
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

",
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",
5771edb09478591fc879512a4e01c7ace896b913,"public int sum67(int[] nums)
{ 
    int sum = 0;
    for(int i - 0;i < nums.length; i++)
    {
        if( nums[0] == null)
        {
            return 0;
        }
        else
        {
            if(nums[i].charAt(0) == '6' && nums[i].charAt(1) == '7'}
               return sum;}
               return sum + i;
               }

         

",
1607ad1277faa6509f0ec7a5452e0b3f9b1280e4,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        int a = array[0];
            if (i != 10)
            {
                array[a] = i;
                a++;
            }
    }
    
   return array;
}
",
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
",
0bd81a714f85b9f284e05cc169fc136a5202b440,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
			count++;
		else
		{
			if(state == 1)
				return false;
			else
				count = 0;
		}
	}
	return (count != 1);
}
",
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
2ff10cecd8d8545349c487d248173bc2054ee147,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( nums[i] == 7 && nums[i + 1] ==7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 				2] == 7)
        {
            return true;
        }    
        return false;
    }
    
}
",
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
",
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
",
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
",
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
",
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",
d69ef510c9d37986ef9a2c6c494d6a674788e5cf,"public int[] withoutTen(int[] nums)
{
    int[] noTens = new int[];
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            noTens.add(nums[i]);
        }
        
    }
    return noTens;
}
",
b52819ea3f70a5151d3bf001ecfc3d458a4c6285,"public int[] withoutTen(int[] nums)
{
    int[] newArray = new int[nums.length];
    
    for (int number : nums)
    {
        
           for (int i = 0; i < nums.length; i++)
           {
               if (nums.equals(10))
               {
                   newArray[i] = nums;
               }
               
           }
        
    }
    
    return newArray;
    
}
",
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",
5e5840b4728a9e257720a8c46d3285726a2ba053,"public boolean twoTwo(int[] nums)
{
    for(int i = 0; i < nums.length-2; i++)
    {
        if(nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
        if(nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
    }
    return true;
        
}
",
e2840899f1aac60ee4fa7b06722a656e8bb2fb17,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 )
    {
        return true;
    }
    if ( Math.abs(a + b) == 6 || Math.abs(a - b) == 6) {
        return true;
    }
    return false;
}
",
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
",
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",
62f72af3ae154013bd683db3293680707ac4c381,"public boolean xyzThere(String str)
{
    //return(str.indexOf(""xyz"") != -1 && str.indexOf("".xyz"") == -1);
    for(int i = 0; i < str.length()-2; i++){
        if(str.indexOf(""xyz"",i) != -1){
            if(str.lastIndexOf(""."",i) != i){
                return true;
            }
        }
    }
    return false;
}
",
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
",
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
",
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
e73f15cebf791aa932347617662e3a6641135a35,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
    //return nums;
    if (nums.length >= 2)
    {
        
   		int start = nums[0];
    	for (int i = 0; i < nums.length - 1; i++)
    	{
     	//int j = 1;
        //nums[i] = nums[j];
        	nums[i] = nums[i + 1];
    	}
    
        	//nums[nums.length - 1] = start;
        /*if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }*/
    
              	
    }
    
    return nums;   
}
",
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
",
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",
cdd0817b73c160a36cec2fee7dadc8c9bdb3b6d2,"private boolean num;

public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode = true)
    {
        if (n >= 10 || n <= 1)
        {
            num = true; 
        }
        else
        {
            num = false; 
        }
    }
    else 
    {
        if (n <= 10 || n >= 1)
        {
            num = true; 
        }
        else 
        {
            num = false; 
        }
    }
    return num;
}
",
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
d6cae903650a09585ae1bb496e05fc63b9b6524f,"public String plusOut(String str, String word)
{
    int i = 0;
    String sTwo = """";
    while (i < str.length() - word.length() + 1)
    {
        if (!str.substring(i, i + word.length()).equals(word))
        {
            sTwo += ""+"";
            i++;
        }
    	else
    	{
        	sTwo += word;
        	i += word.length();
    	}
    }
    while (str.length() > sTwo.length())
    {
        sTwo += ""+"";
    }
    return sTwo;
}
",
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",
f72e6943b67bc900f6dd84cce332ca6843692622,"public boolean bobThere(String str)
{
    int x = str.indexOf(""b"");
    if ( str.charAt(x + 2) == str.charAt(x))
    {
        
    }
}
",
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}",
b03f6ee58d1c2efbc298c1b090d888a47d5425a9,"public boolean evenlySpaced(int a, int b, int c)
{
    if (b-a <= 1 && c-a >= 2 && c-b >= 2 
        || b-a >= 2 && c-a <= 1 && c-b >=2
        || b-a >=2 && c-a >= 2 && c-b <= 1)
        return true;
    return false;
}
",
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",
63bc9b6a7e3b8866c3ea0d84d282e25f9716e838,"public String mixString(String a, String b)
{
    String result = """"; 
    int index = 0;
    
    if (a.length() >= b.length()) {
        index = b.length(); 
    }
    if (a.length() <= b.length()) {
        index = a.length(); 
    }
    for (int i = 0; i < index; i++) {
        result += a.substring(i, i + 1) + b.substring(i, i + 1);
    }
    if (a.length() < b.length()) {
        result += b.substring(a.length(), b.length()); 
    }
    if (a.length() > b.length()) {
        result += a.substring(b.length(), a.length()); 
    }
    return result; 
}
",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",
449c25168277fbecb5660eb70e7019afab36425e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
            return 0;
    }
    else if (speed <=80 && speed > 61)
    {
            return 1;
    }
    else
    {
            return 2;
    }
}
",
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",
04722865f0a83de76cfa43341bfbb14e4bd01fdb,"public boolean twoTwo(int[] nums)
{

boolean katam = true;
boolean doond = false;

for(int count=0; count<nums.length; count++)
{
if(nums[count] !=2) 
{
    doond = false;
}

if(nums[count] ==2 && doond)
{
    katam = true;
}

if(nums[count] ==2 && !doond)
{
doond = true;
katam = false;
}

}
return result;

}",
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",
e5e657c2181fcc98486e3cc0d5d3eefe6b267e6c,"public boolean isEverywhere(int[] nums, int val)
{
    
    int totalz = nums.length - 1;
    int counter = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {        
		if (nums[i] == val || nums[i+1] == val)
        {
            counter = counter + 1;
        }
        if (1 > nums.length)
        {
            return true;
        }
    }
    
    return (counter == totalz);
    
}
",
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
",
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",
e6bc542b9cbf8d3396f467974901e047732726e6,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if(isAsleep)
		return false;
	else if(isMom)
		return true;
	else
        return (!isMorning);
}
",
684d16d1fe00b522bc43f3c44174bcb4ccab14db,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && b == c && a == c)
    {
        result = 20;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    else
    {
        result = 10;
    }
    return result;
}
",
4bbc3e204cd69131a96c0f7ab0f9c94499406204,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
        {
            return 10;
        }
    else if ((a == b) && (b == c) && (a == c))
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",
fd975fc2b0de30ea1fa6c9ae43f605604231b8a1,"public boolean endOther(String a, String b)
{
    if (a.substring(a.length() - b.length(), a.length()).equals(b) ||
        b.substring(b.length() - a.length(), b.length()).equals(a))
        return true;
    else 
        return false; 
}
",
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",
49eb57187ce32f7392ba9eb954bfc79921194a03,"public int countCode(String str)
{
    int count = 0;
    int i = 0;
    int length = str.length() - 3;
    while (i < length)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) = ""e"")
        {
            count++;
        }
        else
        {
            i++
        }
    }
    return times;
}
",
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
",
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
",
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
",
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
",
c2b5233c69ac3f268687caee60f7f68deec9a002,"public String zipZap(String str)
{
    String original = str;
boolean found = false;
if(str.length() == 3) {
if(Character.toString(str.charAt(0)).equals(""z"") && (Character.toString(str.charAt(2)).equals(""p""))) {
return ""zp"";
}
} else if(str.length() < 3) {
return str;
}
 
for(int i = 0; i + 3 < str.length(); i++) {
if(Character.toString(str.charAt(i)).equals(""z"") && Character.toString(str.charAt(i + 2)).equals(""p"")) {
str = str.substring(0, i) + Character.toString(str.charAt(i)) + Character.toString(str.charAt(i + 2)) + str.substring(i + 3, str.length());
found = true;
} else {
}
}
 
if(Character.toString(str.charAt(str.length() - 3)).equals(""z"") && Character.toString(str.charAt(str.length() - 1)).equals(""p"")) {
return str = str.substring(0, str.length() - 3) + Character.toString(str.charAt(str.length() - 3)) + Character.toString(str.charAt(str.length() - 1));
}
 
if(found) {
return str;
} else {
return original;
}
}
",
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
",
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
",
2e1fe7ee9ce5db110b5eb56d9b4db76087ad5378,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && !isMom)
        return false;
    
    if(isAsleep)
        return false;
    else 
        return true;
}
",
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",
c6fc41318b65c5df43087d7889966c1d4dfe0b52,"public String mixString(String a, String b)
{
    String mix = """";
    
    for (int i = 0; i < a.length(); i++)
    {
        mix = mix + a.valueOf(charAt(i)) + b.valueOf(charAt(i));
    }
    
    return mix;
}
",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
9da10eb0a36c1f2a83adb2a9e709bf948f23038e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if (a + b == 6)
    {
        return true;
    }
    else if (Math.abs(a-b) == 6)
    {
        return true;
    }
}
",
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",
84dfd0d1e5c431468600f396b066dbde235e2bb8,"public int[] shiftLeft(int[] nums)
{
    int[] newList = new int[nums.length];
    return newList;
}
",
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",
0bd81a714f85b9f284e05cc169fc136a5202b440,"public boolean twoTwo(int[] nums)
{
    int count = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 2)
			count++;
		else
		{
			if(state == 1)
				return false;
			else
				count = 0;
		}
	}
	return (count != 1);
}
",
4f020dcb2ebec419aa94d431533df15542e537ec,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
    return false;
}
",
f0258239140a383cf0c0c1e9ac9553390ed81433,"public boolean xyzThere(String str)
{
    int i = 0
    int length = str.length() - 2;
    for( i ; i < length; i++);
    {
     	if(str.charAt(i) == 'x' && str.charAt(i+1) == 'y' && str.charAt(i+2) == 'z')
        {
         	if (i == 0 || str.charAt(i-1) != ""."")
                return true;
        }
    }
    return false;
}
",
4afa993dcfa50e1dfc676d02d355a13166a4eaad,"public int caughtSpeeding(int speed, boolean isBirthday)
{
        
    if (isBirthday)
    {
        speed = speed - 5;
        
    }
    
    if (speed < 60)
    {
        return 0;
    }
    
    else if (60 < speed < 80)
    {
        return 1;
        
    }
    
    else if (speed > 81);
    {
        return 2;
        
    }
    }
    
    
    
        
   

",
73ed1de85d5b22771d0d401395f97178f38186a0,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for (int i = 1; i < nums.length; i++)
	{
		sum += nums[i];
		if (nums[i] > max)
        {
			max = nums[i];
        }
		else if(nums[i] < min)
        {
			min = nums[i];
        }
	}
	return (sum - max - min) / (nums.length - 2)
}
",
8ec5f482e6f6fe23af27069dab01c8e77a3f2c6a,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i < (nums.length - 1); i++)
    {
        if ((nums[i] == val) || (nums[i + 1] == val))
        {
            everywhere = true;
        }
        else
        {
            everywhere = false;
        }
    }
    return everywhere;
}
",
93cbb22b6a1b1a6803c91b97ad0c9e1017120cfa,"public boolean love6(int a, int b)
{
    if ((a == 6) || (b == 6))
    {
        return true;
    }
    else if ((Math.abs(a - b) == 6) || ((a + b) == 6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
03ae950e7440ff1b5b100af214ca4754168a2ff2,"public int makeChocolate(int small, int big, int goal)
{
    if ( goal <= 5 * big)
    {
       int remainder = goal - 5*big;
    }
    else
    {
        remainder = goal % 5;
    }
    if (remainder<= small)
    {
        return remainder;
    }
    else 
    {
        return -1;
    }
    
    
}
",
bedb2c2c407cfc6f84128d3bcf6e102d6628dd32,"public boolean sameEnds(int[] nums, int n)
{
    if (n <= 1)
    {
    	for (int i = 0; i <= n; i++)
    	{
            if (nums[i] != nums[nums.length - 1 - i])
        	{
            	return false;
        	}
    	}
    }
    else
    {
        for (int i = 0; i <= n; i++)
    	{
            
            else if (nums[i] != nums[nums.length - n + i])
        	{
            	return false;
        	}
    	}
        
    }
    return true;
}
",
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",
c6a7e900d8268e52e52d9619cadc6f8e9dfd493b,"public int[] withoutTen(int[] nums)
{
    int newArray[] = new int[nums.length];
    for(int val : newArray)
        val = 0;
    
    int newIndex = 0;
    for (int i = 0; i < nums.length; i++){
    	if(nums[i] != 10)
            newIndex[newIndex++] = nums[i]; 
    }
    
    return newArray;
}
",
5bf14ec8d2b72a5f31c1b7537e644e100f3cb419,"public String alarmClock(int day, boolean vacation)
{
    if(!(vaction))
    {
    	if(day == 6 || day == 0)
        {
            return off;
        }
        else
        {
        	return 10:00;
        }
    }
    else
    	if(day == 6 || day == 0)
        {
            return 10:00;
        }
        else
        {
        	return 7:00;
        }
}
",
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
4cad14f6dc235bb7665a336718b0bc721df9ddd2,"public boolean isEverywhere(int[] nums, int val)
{
    Boolean result = true;
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            result = true;
        }
        else
        {
            result = false;
            break;
        }
    }
    return result;
}
",
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",
cdbd6769faf44b710f4b50d3f75878e7dff820b5,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    return ((a + b) < 10 || (a + b) > 19);
}
",
b52819ea3f70a5151d3bf001ecfc3d458a4c6285,"public int[] withoutTen(int[] nums)
{
    int[] newArray = new int[nums.length];
    
    for (int number : nums)
    {
        
           for (int i = 0; i < nums.length; i++)
           {
               if (nums.equals(10))
               {
                   newArray[i] = nums;
               }
               
           }
        
    }
    
    return newArray;
    
}
",
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",
ab752aa9f041e605c697b86bdcb50aa8b25db534,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
",
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
",
c6a7e900d8268e52e52d9619cadc6f8e9dfd493b,"public int[] withoutTen(int[] nums)
{
    int newArray[] = new int[nums.length];
    for(int val : newArray)
        val = 0;
    
    int newIndex = 0;
    for (int i = 0; i < nums.length; i++){
    	if(nums[i] != 10)
            newIndex[newIndex++] = nums[i]; 
    }
    
    return newArray;
}
",
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
",
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",
b39fe8089a563103c0f642be5647243d61b4c66b,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     if (isAsleep)

    return false;

  if ((isMorning && isMom) || !isMorning)

    return true;

  else return false;
}
",
a2f4dd138e591312ee1e4d2886035072ec1e3cf4,"public boolean xyzThere(String str)
{
    str = str.toLowerCase();
    if (str.indexOf(""xyz"") >= 0)
    {
        if (str.charAt(str.indexOf(""xyz"") - 1).equals("".""))
        {
            return false;
        }
        else
        {
            return true;
        }
    }
    else 
    {
        return false;
    }
}
",
5771edb09478591fc879512a4e01c7ace896b913,"public int sum67(int[] nums)
{ 
    int sum = 0;
    for(int i - 0;i < nums.length; i++)
    {
        if( nums[0] == null)
        {
            return 0;
        }
        else
        {
            if(nums[i].charAt(0) == '6' && nums[i].charAt(1) == '7'}
               return sum;}
               return sum + i;
               }

         

",
04d488931b788707ed548c0a82c9a8973eb6122a,"public boolean xyzThere(String str)
{
    int i=0; 
    if(str.length()>=3)
    {
        while (!str.substring(i, i+3).equals (""xyz"") && i+4<= str.length())
   		{
       	 	i=i+1;
    	}
        //char result = str.charAt(i-1);
    	return str.substring(i, i+3).equals (""xyz"") && 
            !str.substring(i, i+3).equals ("".xyz"")
            
    }
    else
    {
        return false;
    }
}
",
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
",
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",
12941eb615aae98f65aa36224718e48e3383968c,"public int loneSum(int a, int b, int c)
{
    int x = a + b + c;
    if (a == b)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == c)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return a;
        }
    }
    else if (a == c)
    {
        if (b == c)
        {
            return 0;
        }
        else
        {
            return b;
        }
    }
    else
    {
        return x;
    }
}
",
13588bafe7146875aeecd22626679f601f5f7f24,"public boolean bobThere(String str)
{
    int i;
    for (i=0; i < str.length()-3; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",
002254c45164bdf12bfca8a0fe71d68f839bbb7a,"public boolean canBalance(int[] nums)
{
    int sum = 0;
    int other =0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
    
    	for(int j = nums.length-1; j < i; j--)
   		{
        	other += nums[j];
    	}
    }
    if (other == sum)
        return true;
        else
            return false;
}
",
fbd4c23e76bef6c785eaeac729ab320635a7682b,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
",
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",
531bdfd3cc310c2b5e00a692007865c2d4b2f67e,"public int roundSum(int a, int b, int c)
{
    int sum = round10(a) + round10(b) + round10(c);
    return sum;
}

public int round10(int num)
{
    if( num%10 > 5)
    {
     	num = num - num%10 + 10;   
        return num;
    }
    else
    {
        num = num - num%10;
        return num;
    }
}
",
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",
a767440796f740efacb74e1a68a50c6ef184a501,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length - 1; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
",
c77723bd709b08d6e00161ce3c6ef305a61d69c9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length()-2; i++) {
    if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b') {
      return true;
    }
  }
  return false;
}
",
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
",
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
",
f5a21d0c1e254db37e3447625ce5826afe21b435,"public boolean bobThere(String str)
{
    for(int i=0; i<str.length()-3; i++)
    {
        if(str.charAt(i)=='b')
        {
            if(str.charAt(i+2) == 'b')
                return true;
        }
    }
    return false;
}
",
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
",
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",
501aad78d9f445fad6785a696183d9f103460c21,"public int countCode(String str)
{
    int i = 0;
    int j = 0;
    String keyword = ""code"";
    String[] sentence = keyword.split(str);
    for (String word: sentence)
    {
        i++;
    }
    return i;
}
",
3b24fd13da29cf3eaf6ecbfb5f5dfeb4cbdd236e,"public int noTicket(int 0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
",
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",
739598df6f10e1b41997fbbce33f2e2bf0fd995e,"public boolean has77(int[] nums)
{
    int x = nums.length;
    for (int i = 0; i < x; i++)
    {
        if (i < x - 1 && nums.[i] == 7 && nums.[i + 1] == 7)
        {
            return true;
        }
        if (i < x - 2 && nums.[i] == 7 && nums.[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
",
ac50df7405fa705d67d8b1e0ed3b0ae92fb16569,"public boolean xyzThere(String str)
{
    //check from variable starting at 0
    //and go until str.length
    int first = str.indexOf(""xyz"");
    if (str.charAt(first - 1) != '.')
        return true;
    else if (str.charAt(first - 1) == '.')
        return false;
    return false;
}
",
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
d866157db78f6eb45be705042a8b581075d47972,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    	if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
            return a.sb;
    	}
    
    
}
",
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
",
faaaa4b9637f7003d240f0cdc7c5c6bf28c27cdb,"public boolean isEverywhere(int[] nums, int val)
{
    if (nums.length == 0) {
        return true;
    }
    int b = 0;
    for (int i = 1; i < nums.length; i++) {
        if (nums[i] == val || nums[i-1] == val) {
            	b++;
        }
    }
    return b == nums.length - 1;
}
",
fbb1ba5b8e0bd1848e38b6705785113e63a30905,"public boolean bobThere(String str)
{
 	for (int i = 0; i < str.length() - 3; i++)
    {
     	if(str.charAt(i)).equals(""b"") && str.charAt(i+2)).equals(""b""))   
        {
            return true;
        }
    }
    return false;
}
",
094b0e8c960090e5db7e7ed5078935048f600dba,"public String zipZap(String str)
{
    
    for(int x = 0; x< str.length()-2; x++)
    {
     	if(str.charAt(x) == 'z' && str.charAt(x+2) == 'p')
            return ""zp"";
    }
    return ""zpXzp"";
        
}
",
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
d822cf12d38ea28fe825ff4fc14fdc94e6719f05,"public boolean bobThere(String str)
{
    int i = 0;
    char[] CharArray = str.toCharArray();
    for(char cha : CharArray){
    	if (cha == 'b'){
        	if (str[i + 2] == 'b'){
            	return true;
            }
        }
     	i++;
    }
    return false;
}
",
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",
462c32a961f9e37900f45d8ce5b1817ecd8a2c74,"public int noTicket(0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
",
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",
bab5cb0c2c8a924af65c6c139ed8497d525bd0a0,"public int[] fix45(int[] nums)
{
	
 	int k =0;
 	 for(int i=0; i< nums.length; i++)
     for(int j=0; j<nums.length; j++)

     if(nums[i]==4 && nums[j]==5)
     {
      k  =nums[j+1];
      nums[j+1] = nums[i];
      nums[i] = k;
     }
     return nums;
}
",
e6bc542b9cbf8d3396f467974901e047732726e6,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if(isAsleep)
		return false;
	else if(isMom)
		return true;
	else
        return (!isMorning);
}
",
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
",
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;",
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",
a5ea50948f128c48f79acd2dfa83b81c8790a095,"public int sum67(int[] nums)
{
	int sum = 0;
	boolean six = false;
	for(int i = 0; i < nums.length; i++)
	{
		if(six)
		{
			if(nums[i] == 7)
				six = false;
		}
		else if(nums[i] == 6)
			six = true;
		else
			sum += nums[i];
	}
	return sum;
}
",
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
56c06bec7cf7e18244403d9e4f756ec0427933f0,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    if (n <= nums.length)
    {
        int[] firstgroup = new int[n];
        int[] lastgroup = new int[n];
        for (int i = 0; i < n; i++)
        {
            firstgroup[i] = nums[i];
        }
        int p = nums.length;
        for (int o = nums.length - n; o < nums.length; o++)
        {
            int r = nums.length - p;
            lastgroup[r] = nums[o];
            p = p - 1;
        }
        if (firstgroup.equals(lastgroup))
        {
            return true;
        }
    }
    return false;
}
",
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",
1c7f60afbb325cd1bf6ef9300fc570a4b484732e,"public int countEvens(int[] nums)
{	
   int total = 0;
  	for(int i = 0; i < nums.length; i++)
  {
     // int remain = nums[i] % 2;
 		if(nums[i] % 2; == 0)
 			{
 				total = total + 1;
 			}
  }
   return total;
}
",
0cecfb01fbe27f29bd99b59b030edfdabc4b74d6,"public int[] frontPiece(int[] nums)
{
    int size = nums.length;
    int fir;
    if (size < 2)
    {
        return nums;
    }
    fir = new int[2];    
       
        return nums;
    
}
",
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",
91c420fc474ab8277524b2e9bad8d3b89925c125,"public int caughtSpeeding(int speed, boolean isBirthday)
{
        
    if (isBirthday)
    {
        speed = speed - 5;
        
    }
    
    if (speed < 60)
    {
        return 0;
    }
    
    else if (60<speed< 80)
    {
        return 1;
        
    }
    
    else if (speed > 81);
    {
        return 2;
        
    }
    -
    
    
    
        
   

",
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
",
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
",
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",
e1f80924e2fa9aba6195f174166b813b13fea19e,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 && day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
",
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
",
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
",
87b2b1811ad58d7a1fff515864427654134ed8fa,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            if (j == 0)
            {
            	while (nums[j] != 5)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
            
            else
            {
                while (nums[j] != 5 && nums[j - 1] != 4 && j < nums.length)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
        }
    }
    return nums;
}",
850b29b41eb8755b65684da314498e5f9f502ead,"public int[] frontPiece(int[] nums)
{
    if (nums.length .isEqual(1)
        return nums;
    if (nums.length .isEqual(2)
        return nums;  
    else
        int[] sum = new int [nums.length];
        sum[0] = nums[0];
        sum[1] = nums[1];
        return sum;
    
   // int[] sum = new int [nums.length-1];
    //for (int i = 0; i < nums.length; i++)
      //  sum[i] = nums[i];
   //return sum;
}
",
7f41d3bdfcd6606cda578b2090213e0dfcd23aad,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
    {
        return true;
    }
    
    return((a + b) == 6 || Math.abs(a - b) == 6)
}
",
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",
bde001ef355c35f06f3da9cad39a299850b21f14,"public String mixString(String a, String b)
{
    String endWord = """";
    int i;
    int max = Math.max(a.length(), b.length());
    for (i = 0; i < max; i++)
         {
             if (i <= b.length() - 1)
             {
                 endWord += b.substring(i, i + 1);
             }
             if (i <= a.length() - 1)
             {
                 endWord += a.substring(i, i + 1);
             }
         }
         return endWord;
}
",
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
",
8ac25102baee6fadeabcfd2e101ad3f1325bb218,"public String alarmClock(int day, boolean vacation)
{
    if vacation == true
    {
        if day == 0 || 6
        {
            return ""off"";
        }
        else 
            return ""10:00"";
    }
    else 
        if day == 0 || 6
        {
            return ""10:00"";
        }
    	else 
            return ""7:00"";
            
    
}
",
2dc5430cd182c160d91ebc09f7797fb639ddf464,"public boolean has77(int[] nums)
{
   
    boolean result = false;
  for (int i = 0; i < nums.length-1; i++)
  if ((nums[i] == 7 && nums[i+1] == 7))
  result = true;
   for (int i = 0; i < nums.length-2; i++)
  if ((nums[i] == 7 && nums[i+2] == 7))
  result = true;
    

}
return false;
",
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
",
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
",
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
",
30ed841a883414ca378b951718dae8e5f58e90be,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            break;
        }
        sum += nums[i];
    }
    return sum;
}
",
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
",
c913b6794d0cfeb8d39bfe650cfa10f9d6bbc089,"public int noTeenSum(int a, int b, int c)
{
	int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if(n>=13 && n<=19)
    {
        if(n==15 || n==16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    return n;
}
",
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}",
6b538f7d9eac6f8c54cd2c59a699ca73280e0930,"public class FizzArray {

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
",
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
",
9a269dfe1a15130142cd379d93e4125d40376c5c,"public String without2(String str) 
{
    int sizeWord = str.length();
    
    String begin = str.substring(0, 2);
    String end = str.substring((sizeWord - 2), sizeWord);
    
    if (begin == end)
    {
        return str.substring(2);
    }
    else
    {
        return str;
    }
}
",
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",
c0e74847daded5db86a45f95da024ec482c4f9a4,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19}
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
",
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
",
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",
2ab613317018e535c7c370e1bf3fb0d86c7a9f9b,"public int[] tenRun(int[] nums)
{
    int[] result = new int[nums.length];
    int input;
    int value = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (input % 10 == 0 && input > value)
        {
            value = input;
        }
        
        if (value == -1)
        {
            result[i] = input;
        }
        else
        {
            result[i] = value;
        }
    }
    
    return result;
}
",
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
d832642cded155ba61945ed277e663a0de8cb32c,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 || day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
",
2d1d1fb5d01448f6fb807ae2e7396795eba1c3fd,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0
    }
}
",
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
7d59c6f7b74b41fec09dae83bbea25f6ce159f0f,"public int[] frontPiece(int[] nums)
{
    if(nums.length >= 2)
		return (nums[0] + nums[1]);
	if(nums.length == 1)
		return nums[0];
	return 0;
}
",
0cbcdcccb97a84929ef84adcbae98515edde8dfa,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    
   int d = num %10;
    if (d >= 5)
        return num + 10 -d;
    return num -d;
}
",
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
",
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
",
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
",
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",
56564fcd3a089f2e2f8dc872a710a4cf2ca9e4ce,"public String atFirst(String str)
{
    return str.substring(0, 1);
    if (str.substring(0, 1) = null)
    {
        return @;
    }
}
",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
",
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",
7bbe47ddbd540b9999602f687a555456a4122938,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	while (isBirthday == false)
    {
    	if (speed <= 60)
        {
            return 0;
        }
    	else if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    	else if (speed >= 81)
        {
            return 2;
        }
    }
    while (isBirthday == true)
    {
        if (speed <= 65)
        {
            return 0;
        }
    	else if (speed >= 66 && speed <= 85)
        {
            return 1;
        }
    	else if (speed >= 86)
        {
            return 2;
        }
    }
    return 1;
}",
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
",
803c3b7ab2f6984a216901319f02c8549f93ff24,"public String getSandwich(String str)
{
    int length = str.length();
    if ( str.startsWith(""bread"") && str.endsWith(""bread"") )
    {
        return str.(5, (str.length - 5));
    }
    else
    {
        return """"
    }
}
",
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
41c8da13b33e4f2c7ae68912df33bf871bfd1952,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = n;
    for (int i =0; i <n ;i++)
    {
        if (!(nums[i] == nums[nums.length - range + i]))
		result = false;
    }

}
",
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
",
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
",
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
",
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
",
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",
a53827ae6f8593b92d7c9f0fea1847acc9435ac4,"public String alarmClock(int day, boolean vacation)
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	return 7;
    	}
    	else if (day=0 || day=6)
    	{
    	    return 10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	return 10;
    	}
    	else if (day=0 || day=6)
    	{
    	    return off;
    	}
    }
    
}
",
b34be99893fc029dc3d4af3527c8ca5ffa920388,"public String repeatEnd(String str, int n)
{
    String newString = """";
    
    for (int i = 0; i < n; i++)
    {
        for (int z = n - 1; z > -1; z -= 1)
        {
            newString = newString + str.charAt(str.length() - z);
        }
    }
    
    return newString;
}
",
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
",
6f412fb97dacfeab711397d737336f16f8b3a81c,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder();
    for (int i = 0; i < n; i++)
    {
    	sb.append(str.charAt(str.length()-1));
    }
    return sb.toString();
}
",
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
8dde95600a194d6b8f2b34b5af7a8f5628b4039d,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
        if (day == 0)
        {
        	return ""off"";
        }
        else if (day == 6)
        {
        	return ""off"";
        }
        else
        {
            return ""10:00"";
        }
    }
    else
    {
    	if (day == 0)
        {
        	return ""10:00"";
        }
        else if (day == 6)
        {
        	return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",
5e5840b4728a9e257720a8c46d3285726a2ba053,"public boolean twoTwo(int[] nums)
{
    for(int i = 0; i < nums.length-2; i++)
    {
        if(nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
        if(nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
    }
    return true;
        
}
",
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
",
5b9eb535280570f293684ef95c107bc80160a334,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = len;
	for (int i =0; i <range;i++)
    {
		if (!(nums[i] == nums[nums.length - range + i]))
        {
			result = false;
        }
    }
return result;
}
",
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
",
78a59ae37cfd572faf37016467c03ce718cdba5d,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
        if (str.charAt(i) == b && str.charAt(i + 2) == b)
            return true;
    return false;
}
",
eec3b28394fdf34d94959f5b27d3bcb590bc286d,"public boolean xyBalance(String str)
{
    int count = 1;
    char position;
	for (int i = 0; i < str.length(); i++)
    {
        position = str.charAt(i);
    	if (position == 'x')
        	count = 0;
    	if (position == 'y')
        	count = 1;
    }
    return count = 1;
}
",
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",
d822cf12d38ea28fe825ff4fc14fdc94e6719f05,"public boolean bobThere(String str)
{
    int i = 0;
    char[] CharArray = str.toCharArray();
    for(char cha : CharArray){
    	if (cha == 'b'){
        	if (str[i + 2] == 'b'){
            	return true;
            }
        }
     	i++;
    }
    return false;
}
",
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
",
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",
56564fcd3a089f2e2f8dc872a710a4cf2ca9e4ce,"public String atFirst(String str)
{
    return str.substring(0, 1);
    if (str.substring(0, 1) = null)
    {
        return @;
    }
}
",
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
",
b20d525ead268bb3eced9c95cb88481aa8aab61d,"public int makeChocolate(int small, int big, int goal)
{
	if (goal > 5*big)
    {
       goal = goal - 5 * big); 
    }
    else
    {
        goal = goal % 5;
    }
    if (goal <= small)
    {
        return goal;
    }
    return -1;
}
",
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
203f9c47a0738c4f7deb3aa08f1ac17b6d91cac6,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    int index = 0;
    
    for (int i : nums)
    {
        if (i != 10)
        {
            array[index] = i;
            index++;
        }
    }
    
   return array;
}
",
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",
9acc78321e1dd670eb79224bfc19ae337b144ee8,"public boolean in1To10(int n, boolean outsideMode)
{
    int outputValue;
    if (n > 1 && n < 10)
    {
        return true;
    }
    else if (n == 1)
    {
        return ""number is equal to 1"";
    }
    else if (n == 10)
    {
        return ""number is equal to 10"";
    }
    else if (n > 10)
    {
        return ""number is greater than 10"";
    }
    else
    {
        return ""number is less than 1"";
    }
		
}
",
092a37234cccc894d13af9756eed95198aa41a1a,"ublic boolean isEverywhere(int[] nums, int val) {
	boolean result = true;
	for (int i = 0; i <=nums.length-2;i++)
	{
		if ( nums[i] != val && nums[i+1] != val)
			result = false;
	}
  	return result;
}
",
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
f5a21d0c1e254db37e3447625ce5826afe21b435,"public boolean bobThere(String str)
{
    for(int i=0; i<str.length()-3; i++)
    {
        if(str.charAt(i)=='b')
        {
            if(str.charAt(i+2) == 'b')
                return true;
        }
    }
    return false;
}
",
9ab9adfbd148ab36fea8046986a42317f6b53a8e,"public String plusOut(String str, String word)
{
      String output = """";
      int i = 0 ;

      while(i < str.length() ) 
      {
         if (str.substring(i).startsWith(word)) 
         {
            output = output + word;
            i = i + word.length();
         } 
         else 
         {
            result = result + ""+"" ;
            i++;
         }
      }

      return output;
}",
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
21f49c70a5574e177ee0e928d52f7656fb37a03a,"public boolean canBalance(int[] nums)
{
    int same = 0;
    int sum = 0;
    for (int i=0;i<nums.length;i++)
    {
        sum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        same += nums[i];
        sum -= nums[i];
    
    if (same == sum)
    {
        return true;
    }
    }
    return false;
}",
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
",
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
",
1c7d8d1adf4d7007853562f67b9ddc3014f55389,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer == true)
    {
     if (temp >59 && temp<101)
     {
         play = true;
     }
    }
        else
        {
            if (temp> 59 && temp<91)
            {
                play = true;
            }
    }
    
    return play;
    
}
",
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",
e3604130ed0d8066301429b1026d44bbec5d2b4b,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder(n*n);
    for (int i = 0; i < n; i++)
    {
    	sb.append(n);
    }
    return sb.toString();
}
",
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
",
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",
a2f4dd138e591312ee1e4d2886035072ec1e3cf4,"public boolean xyzThere(String str)
{
    str = str.toLowerCase();
    if (str.indexOf(""xyz"") >= 0)
    {
        if (str.charAt(str.indexOf(""xyz"") - 1).equals("".""))
        {
            return false;
        }
        else
        {
            return true;
        }
    }
    else 
    {
        return false;
    }
}
",
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
",
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",
f055965f9ae32739c7b92d6b5ecbca90565fcdcd,"public String without2(String str) 
{
    int len = str.length();
    if (str(0) == str(len - 2) && str(1) == str(len - 1))
    {
        String sss = null;
        sss.append(str,2,len-1);
            return sss;
    }
    else
    {
        return str;
    }
}
",
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
",
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
41a4fe29054912348cfa42c773ea717a9aeca2af,"public boolean xyzThere(String str)
{
    int index = str.indexOf("".xyz"");
    if(index >= 0) 
    {
        return xyzThere(str.substring(0, index)) || xyzThere(str.substring(index + 4));
    } 
    else 
    {
        return (str.contains(""xyz""));
    }
}
",
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",
5771edb09478591fc879512a4e01c7ace896b913,"public int sum67(int[] nums)
{ 
    int sum = 0;
    for(int i - 0;i < nums.length; i++)
    {
        if( nums[0] == null)
        {
            return 0;
        }
        else
        {
            if(nums[i].charAt(0) == '6' && nums[i].charAt(1) == '7'}
               return sum;}
               return sum + i;
               }

         

",
14169fa5cf7228ed6bc8ea2218a09d6b346ae3e8,"public int sortaSum(int a, int b)
{
    if (a + b > 0)
    { 
        return a +b ;
    }
    else if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }   
}
",
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
",
4465ac2e7e70f3ac5ddbd490bd262cc0c4f6249d,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        grid[0] = nums[0];
        grid[1] = nums[1];
        return grid[];
    }
}
",
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
",
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
",
d17244a79757f570de9d8170c3085ee0f6678c21,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom && isAsleep)
        {
            return true;
        }
        else if (isMom && !isAsleep)
        {
            return false;
        }
        else if (!isMom && isAsleep)
        {
            return false;
        }
        else if (!isMom && !isAsleep)
        {
            return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return;
}",
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
",
5e5840b4728a9e257720a8c46d3285726a2ba053,"public boolean twoTwo(int[] nums)
{
    for(int i = 0; i < nums.length-2; i++)
    {
        if(nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
        if(nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
    }
    return true;
        
}
",
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
",
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",
01acf9268203b5b03f89dd9ca245191756ac0d91,"public String mixString(String a, String b)
{
    int aLength = a.length();
	int bLength = b.length();
	int i = 0;
	StringBuilder stbuild = new StringBuilder(aLength + bLength);
	for(; i < aLength && i < bLength; i++)
	{
		stbuild.append(a.charAt(i));
		stbuild.append(b.charAt(i));
    }
	for(; i < aLength; i++)
		stbuild.append(a.charAt(i));
	for(; i < bLength; i++)
		stbuild.append(b.charAt(i));
	return stbuild.toString();
}
",
3cc8ca60a27c5257e39b424583bc44259ffa6619,"public boolean love6(int a, int b)
{
  	if (a==6 || b == 6)
    {
        return true;
    }
    
    else if (a+b ==6)
    {
        return true;
    }
    
    else if (a-b = Math.ab(6))
    {
        return true;
    }
    
    
    
    
    return false;
}
",
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",
787a85062f05f6204afae52da91cfbe56d85e07c,"public String zipZap(String str)
{
    String newString = """";
    for (int i = 0; i < str.length(); i++) 
    {
        if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p') 
        {
            newString += str.charAt(i) + """" + str.charAt(i + 2);
            i = i + 2;
        }
        else 
        {
            newString += str.charAt(i);
        }
    }
    return newString;
}
            

",
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
",
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
",
f1f7b77c1f7f33e64d0bfe57969ef3ab6e7f8ba1,"public int makeChocolate(int small, int big, int goal)
{
    if (goal > 0)
    {
        int bigNum = goal/5;
        if (bigNum > big)
        {
			int smallNum = goal - (bigNum * 5);
        	if (smallNum > small)
        	{
            	return -1;
        	}
        }
        else
        {
            int smallNum = goal - (bigNum * 5);
        	if (smallNum > small)
        	{
            	return -1;
        	}
            else
            {
            	return smallNum;
            }
        }
    }
    return -1;
}
",
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",
e488c354be62310f430c8bfb3021a70df988283b,"public String mixString(String a, String b)
{
    int aLen = a.length();
	int bLen = b.length();
	int i = 0;
	StringBuilder stbuild = new StringBuilder(aLen+bLen);
	for(; i < aLen && i < bLen; i++)
	{
		stbuild.append(a.charAt(i));
		stbuild.append(b.charAt(i));
	}
	// only 1 for loop will actually run
	for(; i < aLen; i++)
		stbuild.append(a.charAt(i));
	for(; i < bLen; i++)
		stbuild.append(b.charAt(i));
	return stbuild.toString();
}
",
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",
c3f9d9c89be8302fbf11a1742a2668305b2fcaf4,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if(10 <= sum && sum <= 19)
        return 20;
              
    return sum;
    
}
",
caec91f2ba0d25b3a96d93bbc7e6ff92f4dfdd72,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off""
        }
    }
    else if (day > 0 && day < 6)
    {
        return ""7:00"";
    }
    else
    {
        return ""10:00"";
    }
}
",
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",
ebebbcd628f8bb7d6584e336ffd2ddf31ba9b356,"public int countCode(String str)
{
    int s = 0;
    for(int i = 1; i < str.length(); i++)
    {
    	if(str.charAt(i) == 'c')
        {
            if(str.charAt(i+1) == 'o')
            {
                if(str.charAt(i+3) == 'e')
                {
                    s++;
                }
            }
        }
    }
    return s;
}
",
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
",
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",
73ed1de85d5b22771d0d401395f97178f38186a0,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for (int i = 1; i < nums.length; i++)
	{
		sum += nums[i];
		if (nums[i] > max)
        {
			max = nums[i];
        }
		else if(nums[i] < min)
        {
			min = nums[i];
        }
	}
	return (sum - max - min) / (nums.length - 2)
}
",
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",
eda9bd0f5a398f9eabaccae28895d2e3b4285b54,"public int makeChocolate(int small, int big, int goal)
{
    if((small + big * 5) < goal)  
	{
   	 return -1;
	}
    else if((big * 5) > goal)
	{
        if ((goal%5)<=small)
        {
  	 	 return goal % 5;
        }
	}
    else
{
    return goal - big * 5; 
}
}
",
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
",
f5a21d0c1e254db37e3447625ce5826afe21b435,"public boolean bobThere(String str)
{
    for(int i=0; i<str.length()-3; i++)
    {
        if(str.charAt(i)=='b')
        {
            if(str.charAt(i+2) == 'b')
                return true;
        }
    }
    return false;
}
",
b63f73f3977c83c5a9326abd2d8514897f04a240,"public String without2(String str) 
{
    int strLen = str.length();
    if (strLen < 2)
    {
        return str;
    }
    else if (strLen == 2)
    {
     return """";   
    }
    else if ((str.charAt(0) == str.charAt(strLen - 1)) && (str.charAt(1) == str.charAt(strLen - 2)))
    {
     	return ""blasblas""; //str.substring(1, strLen - 1);   
    }
    return str;
}
",
ed400b667c4ad78f4fba78a1dbe2665a4aaf4270,"public boolean in1To10(int n, boolean outsideMode)
{
    if ( n>=1 && n<=10 && !outsideMode)
    {
        return true;
    }
    else 
    {
    	return false;
    }
}
",
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
",
3e3f92b5255a315bea19b9efbd3c14567e082ae2,"public String atFirst(String str)
{
    if (length(str) == 0)
    {
        return ""@@"";
    }
    if (str.length(str) == 1)
    {
        return str + ""@"";
    }
    else
    {
        return str.substring(0,2);
    }
    
}
",
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
",
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
",
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
",
f6813268f36f79d3489d3036c6a71d542f00fe8b,"public boolean sameEnds(int[] nums, int n)
{
    boolean a = false;
    for	(int i = 0; i < n; i++)
    {
        if (nums[i] == nums[nums.length - n + i])
        {
            a = true;
        }
        else
        {
            a = false;
        }
    }
    return a;
}
",
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",
26bc37d1d0a520cad0dce5a5034e6ee5e7a7dd98,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        int sandwichLength = str.length();
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",
c7972a0c52578814fdc1e75cdf7b2b9b87eaaa39,"public boolean evenlySpaced(int a, int b, int c)
{
    if ( a > b && b > c || c > b && b > a)
    {
        return ( a - b == b - c);
    }
    else if ( b > a && a > c || c > a && a > b)
    {
        return ( b - a == a - c);
    }
    else
    {
        return ( a - c == c - b);
    }
    
}
",
501aad78d9f445fad6785a696183d9f103460c21,"public int countCode(String str)
{
    int i = 0;
    int j = 0;
    String keyword = ""code"";
    String[] sentence = keyword.split(str);
    for (String word: sentence)
    {
        i++;
    }
    return i;
}
",
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
6fae7f6b8a427d71c76e99f251e08b59c6b293a4,"public boolean has77(int[] nums)
{
    for(int i = 0; i < nums.length-1; i++)
    {
        if (nums[1] == 7)
        {
            if (nums[i+1] == 7)
            {
                return true;
            }
            else if (i < nums.length-2 && nums[i+2] == 7) 
            {
                reutrn true;
            }
        }
    }
    reutrn false;
                
}
",
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",
c5d364aebfeaf536888aa2177a5459f2c3dcb34e,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i < nums.length; i++)
    {
    	if (i+1 < nums.length && i-1 >= 0)
        {
        	if (nums[i+1] == val || nums[i] == val)
            {
            	everywhere = true;
                
            }            
        }        
    }
    return everywhere;
}
",
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",
dd62800fd575243e19f14d265c244ec566ba4e58,"public boolean sameEnds(int[] nums, int n)
{
    for(int i = 0; i < len; i++) {
        if(nums[i] != nums[nums.length - len + i])
            return false;
    }
                
    return true;
}
",
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
",
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",
609cc3f20dd1f3529a02ebbed8384395c8400b2b,"public int countEvens(int[] nums)
{
    int evens = 0;
    for (int number: countEvens)
    {
        if (number % 2 == 0)
        {
            evens = evens + 1;
        }
    }
    return evens;
}
",
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",
3a2534fb0ac1dc3651141e9a0bd5b1830ff648bb,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""small ticket"";
        }
        else
        {
            return ""big ticket"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""small ticket"";
        }
        else
        {
			return ""big ticket"";
        }
    
    }
}  
",
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",
0159ad89caad1930a03fecc239d981db36662d3c,"public String mixString(String a, String b)
{
	int aLen = a.length();
	int bLen = b.length();
	int i = 0;
	StringBuilder stbuild = new StringBuilder(aLen+bLen);
	for(; i < aLen && i < bLen; i++)
	{
		stbuild.append(a.charAt(i));
		stbuild.append(b.charAt(i));
	}
	// only 1 for loop will actually run
	for(; i < aLen; i++)
		stbuild.append(a.charAt(i));
	for(; i < bLen; i++)
		stbuild.append(b.charAt(i));
	return stbuild.toString();
}",
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
",
bab5cb0c2c8a924af65c6c139ed8497d525bd0a0,"public int[] fix45(int[] nums)
{
	
 	int k =0;
 	 for(int i=0; i< nums.length; i++)
     for(int j=0; j<nums.length; j++)

     if(nums[i]==4 && nums[j]==5)
     {
      k  =nums[j+1];
      nums[j+1] = nums[i];
      nums[i] = k;
     }
     return nums;
}
",
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
",
73399e7b1699c43b257d654653ad569a3a026e1d,"public int countEvens(int[] nums)
{
    int count = 0;
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] % 2 == 0)
        {
            count += 1;
        }
    }
    return count;
}
",
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",
84dfd0d1e5c431468600f396b066dbde235e2bb8,"public int[] shiftLeft(int[] nums)
{
    int[] newList = new int[nums.length];
    return newList;
}
",
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",
07f6671fb9cba5bb32a3128d222b579891bf6178,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( nums[i] == 7)
        {
            return true;
        }
        else if (nums[i + 1] == 7 && nums[i - 1] == 7)
        {
            return true;
        } 
    }
    return false;
}
",
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",
f5a21d0c1e254db37e3447625ce5826afe21b435,"public boolean bobThere(String str)
{
    for(int i=0; i<str.length()-3; i++)
    {
        if(str.charAt(i)=='b')
        {
            if(str.charAt(i+2) == 'b')
                return true;
        }
    }
    return false;
}
",
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
",
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
",
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",
414ebd6686fcd084388021a1e851c521dccfe7e8,"public int[] frontPiece(int[] nums)
{
    int[] newArray = new int[2];
    if (nums.size() >= 2) {
    	newArray.add(nums[0]);
        newArray.add(nums[1]);
        return newArray;
    }
    return nums;
}
",
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",
93cbb22b6a1b1a6803c91b97ad0c9e1017120cfa,"public boolean love6(int a, int b)
{
    if ((a == 6) || (b == 6))
    {
        return true;
    }
    else if ((Math.abs(a - b) == 6) || ((a + b) == 6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",
caec91f2ba0d25b3a96d93bbc7e6ff92f4dfdd72,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off""
        }
    }
    else if (day > 0 && day < 6)
    {
        return ""7:00"";
    }
    else
    {
        return ""10:00"";
    }
}
",
433d8d82491f06595b4a7fd44c977dbfb917d6b7,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] != 7 && nums[i+1] != 7)
        {
          return false;
        }
    }
    return true;
    
}
",
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",
083ca5818f3f055e87fb758cb9de020f40601414,"public int[] withoutTen(int[] nums)
{
    int[] ten = new int[nums.length];
    int result = 0;
    for (int i = 0;i<nums.length;i++)
    {
        if (nums[i] == 10)
        {
            nums[i] = 0;
        }
        if (nums[i] != 10)
        {
            ten[result++] = nums[i];
        }
    }
    return nums;
}
",
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
",
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",
1c7f60afbb325cd1bf6ef9300fc570a4b484732e,"public int countEvens(int[] nums)
{	
   int total = 0;
  	for(int i = 0; i < nums.length; i++)
  {
     // int remain = nums[i] % 2;
 		if(nums[i] % 2; == 0)
 			{
 				total = total + 1;
 			}
  }
   return total;
}
",
fb2a3a1cf791c99f1fe761f394a51f3e950c0c25,"public boolean in1To10(int n, boolean outsideMode)
{
    if (n > 1 || n < 10)
    {
        return true;
    }
    else
    {
        return false;
    }
}",
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
",
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
",
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
",
e1f80924e2fa9aba6195f174166b813b13fea19e,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 && day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
",
0615e4e3628f3968baa7039844e88175c1722d19,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend)
    {
        return (cigar >= 40);
    }//end if
    
    return (cigars >= 40 && cigars <= 60);
    
    
}
",
e773b35c4440baf407292a0e144e90ebd1fab1ce,"public int countCode(String str)
{ 
    int count = 0;
    for (int i = 0; i < str.length(); i++)
    {
  		int co =   str.indexOf(""co"");
        String newStr = str.substring(co, co+4);
        System.out.println(newStr);
        if (newStr.endsWith(""e""))
        {
            count++;
        }  
    }
    return count;
}
",
77eef59d415f15b3ad7bf984b2a232f7486ec6c6,"public int countEvens(int[] nums)
{
    int count = 0;
    
	for(int i = 0; i < nums.length; i++)
	{
		if (nums[i] % 2 == 0)
        {
			count++;
        }
	}
	return count;
}
",
1e1c5de578989095aae1aa204ec49af769839064,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (1 <= day <= 5)
        {
            return(""10:00"")
        }
        else
        {
            return(""off"")
        }
    }
    else
    {
        if (1 <= day <= 5)
        {
            return(""7:00"")
        }
        else
        {
            return(""10:00"")
        }
    }
}
",
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",
2adbb39337217f673d1ee6e9632faef8d959ee31,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2)
    {
		return 0;
    }
	if(you >= 8 || date >= 8)
    {
		return 2;
    }
    else
    {
        return 1;
    }
}
",
36ea3ec42efce22bfe7b042c71920e9dca498407,"public String zipZap(String str)
{
    int length = str.length();
    String sub = """";
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i - 1) == 'z' && str.charAt(i + 1) == 			'p')
        {
            
        }
        else
        {
            sub = sub +str.charAt(i);
        }
    }
    return sub;
}
",
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
",
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",
09ef55b983ce1aa4ba6d9bf2dc14bc1c988b8d7c,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int count = 0;
    int tot = 0;
 
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] > max) {
            max = nums[i];
            count = count + nums[i];
        }
        if (nums[i] < min) {
            min = nums[i];
            count = count + nums[i];
        }
        count = count + nums[i];
    }
    return (count - (max + min)) / (tot - 2);
}
",
9da10eb0a36c1f2a83adb2a9e709bf948f23038e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if (a + b == 6)
    {
        return true;
    }
    else if (Math.abs(a-b) == 6)
    {
        return true;
    }
}
",
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",
7f69c4115a9df00204939b23d0bc6db187447e93,"public boolean xyzThere(String str)
{
    //return(str.indexOf(""xyz"") != -1 && str.indexOf("".xyz"") == -1);
    for(int i = 0; i < str.length(); i++){
        if(str.indexOf(""xyz"",i) != -1){
            if(str.lastIndexOf("".xyz"",i+1) != i+1){
                return true;
            }
        }
    }
    return false;
}
",
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",
ed400b667c4ad78f4fba78a1dbe2665a4aaf4270,"public boolean in1To10(int n, boolean outsideMode)
{
    if ( n>=1 && n<=10 && !outsideMode)
    {
        return true;
    }
    else 
    {
    	return false;
    }
}
",
203f9c47a0738c4f7deb3aa08f1ac17b6d91cac6,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    int index = 0;
    
    for (int i : nums)
    {
        if (i != 10)
        {
            array[index] = i;
            index++;
        }
    }
    
   return array;
}
",
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
",
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
bd9842fa74a4999319c411a63ea0b765826626f1,"public boolean in1To10(int n, boolean outsideMode)
{
    if ( n >= 1 && n <= 10 && !outsideMode)
    {
    	return true;
    }
    else
    {
    	return false;
    }
    if ( n <= 1 && n >= 10 && outsideMode)
    {
    	return true;
    }
    else
    {
    	return false;
    }
}
",
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
",
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",
ce1937ad05282feacba9a86e4de83bed75e48a04,"public int greenTicket(int a, int b, int c)
{
    if( a == b && b == c)
    {
        return 20;
    }
    if( a == b || b == c || c == a)
    {
        return 10;
    }
    else
    {
        return 0;
    }
    
}
",
e0fc48a114ea8a2948e43da4eb1342009c283ca3,"public boolean love6(int a, int b)
{
    if (a == b)
    {
        return true
    }
    else if (Math.abs(a - b) == 6)
    {
        return true
    }
    else if (a + b == 6)
    {
        return true
    }
    else
    {
        return false
    }
}
",
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",
99b9efd5a3ff3c0a87317e8d345a47ce902c6b97,"public boolean has77(int[] nums)
{
    for(int i = 0; i < nums.length - 1; i++)
  	{
  		if(nums[i] == 7)
  		{
			if(nums[i+1] == 7)
            {
				return true;
            }
			else if(i < nums.length - 2 && nums[i+2] == 7)
            {
				return true;
            }
		}
	}
	return false;
}
",
f6813268f36f79d3489d3036c6a71d542f00fe8b,"public boolean sameEnds(int[] nums, int n)
{
    boolean a = false;
    for	(int i = 0; i < n; i++)
    {
        if (nums[i] == nums[nums.length - n + i])
        {
            a = true;
        }
        else
        {
            a = false;
        }
    }
    return a;
}
",
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
",
35dde7794b6fddbfa24173cdc0b55b2393660120,"public int makeChocolate(int small, int big, int goal)
{
    int pack = goal % 5;
    if (small + (big*5) < goal)
    {
        return -1;
    }
    else if (pack <= small && goal > big*5 > 4)
    {
        return pack + 5;
    }
    else if (pack <= small)
    {
        return pack;
    }
    else 
    {
        return -1;
    }
}
",
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
",
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
",
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",
9dfb9d8285fed77ebe058ec80bfb80f2f1a5db2a,"public boolean sameEnds(int[] nums, int len) {
    for (int i = 0, j = nums.length - len; i < len; i++, j++)
        if (nums[i] != nums[j]) return false;
    return true;
}
",
d96a0285c6ef424bb4ff5119134143d2d1c7d7b0,"public String alarmClock(int day, boolean vacation)
{
	if (vacation)
    {
       	if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
    {
        if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""10:00"";
        }
		else if (day == 0 || day == 6)
        {
            return ""off"";
        }
    }
}
",
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
",
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
",
07f6671fb9cba5bb32a3128d222b579891bf6178,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( nums[i] == 7)
        {
            return true;
        }
        else if (nums[i + 1] == 7 && nums[i - 1] == 7)
        {
            return true;
        } 
    }
    return false;
}
",
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",
1f5da1cd2474bb70a08ba1ebec2f36fe938b688f,"public String atFirst(String str)
{
    int length = str.length();
    if (length>=2)
    {
        return str.substring(1,2);
    }
    else if (length==1)
    {
        return str.charAt(1) + ""@"";
    }
    else 
    {
        return ""@@"";
    }
}
",
b63f73f3977c83c5a9326abd2d8514897f04a240,"public String without2(String str) 
{
    int strLen = str.length();
    if (strLen < 2)
    {
        return str;
    }
    else if (strLen == 2)
    {
     return """";   
    }
    else if ((str.charAt(0) == str.charAt(strLen - 1)) && (str.charAt(1) == str.charAt(strLen - 2)))
    {
     	return ""blasblas""; //str.substring(1, strLen - 1);   
    }
    return str;
}
",
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",
d866157db78f6eb45be705042a8b581075d47972,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    	if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
            return a.sb;
    	}
    
    
}
",
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
",
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
",
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
",
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
",
b52819ea3f70a5151d3bf001ecfc3d458a4c6285,"public int[] withoutTen(int[] nums)
{
    int[] newArray = new int[nums.length];
    
    for (int number : nums)
    {
        
           for (int i = 0; i < nums.length; i++)
           {
               if (nums.equals(10))
               {
                   newArray[i] = nums;
               }
               
           }
        
    }
    
    return newArray;
    
}
",
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",
21f49c70a5574e177ee0e928d52f7656fb37a03a,"public boolean canBalance(int[] nums)
{
    int same = 0;
    int sum = 0;
    for (int i=0;i<nums.length;i++)
    {
        sum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        same += nums[i];
        sum -= nums[i];
    
    if (same == sum)
    {
        return true;
    }
    }
    return false;
}",
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
",
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",
e3ca0205d988751a8bcc80a617f048d01dfa7c60,"public int[] tenRun(int[] nums)
{
    int[] ten = new int[nums.length];
    boolean isTen = false;
    int tenMult = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0 && nums[i] != tenMult)
        {
            isTen = true;
            tenMult = nums[i];
            ten[i] = nums[i];
        }
        
        else if (isTen)
        {
            ten[i] = tenMult;
        }
        
        else
        {
            ten[i] = nums[i];
        }
    }
 	return ten;
}",
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
",
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
",
fdd5fb950da06ae0b32b17d65aa2c875b7e04663,"public int[] fizzArray(int n)
{
    int[] newArray = new int[n];
    for (int i = 0; i < n; i++)
    {
        newArray[i] = i;
    }
    return newArray;
}",
a23678b6f1ed32125aafce452d7f4f6449fb3591,"public int makeChocolate(int small, int big, int goal)
{
    int numLeft = goal % 5;
    if ((small + (big*5)) < goal) // if total number of bars is not enough
    {
        return -1;
    }
    else if ((big * 5) == goal) 
    {
        return numLeft;
    }
    if (numLeft <= small)
    {
        return numLeft;
    }
    else
    {
        return goal - (big*5);
    }
}
",
ac50df7405fa705d67d8b1e0ed3b0ae92fb16569,"public boolean xyzThere(String str)
{
    //check from variable starting at 0
    //and go until str.length
    int first = str.indexOf(""xyz"");
    if (str.charAt(first - 1) != '.')
        return true;
    else if (str.charAt(first - 1) == '.')
        return false;
    return false;
}
",
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
",
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",
b66c9a76c6567bcfc33f81fb4e1e0bfe1c43ea5c,"public String atFirst(String str)
{
    int length = str.length();
    if( length >= 2 )
    {
        return str;
    }
    else
    {
        if( length == 1 )
        {
            return str + ""@"";
        }
        else
        {
            return ""@@"";
        }
    }
}
",
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
",
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",
c5240e5248fa7617368735b6e27ea2e834004c48,"public boolean has77(int[] nums)
{
  for(int i = 0; i < nums.length - 1; i++)
  {
  	if(nums[i] == 7)
  	{
			if(nums[i+1] == 7)
				return true;
			else if(i < nums.length - 2 && nums[i+2] == 7)
				return true;
		}
	}
	return false;
}
",
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",
cdf35248fcf2f5a6190e6be0c36f50876e76b09b,"public boolean bobThere(String str)
{
    for(int i = 0; i < str.length(); i++)
    {
        if(str.charAt(i).equals('b') && str.charAt(i+2).equals('b'))
        {
            return true;
        }
    }
}
",
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",
06e475a59e49cf50479572d393ff89b78fbe2113,"public int makeChocolate(int small, int big, int goal)
{ int value = goal%5;
        
    if (big * 5 + small < goal)
    {return -1;}
    else if (goal%5 <= small)
    {return goal%5;}
    else if (big*5>goal)
    {return goal%5}
    else 
    {return -1;}
    
}
",
7478d82102be770284252bf085987e42b0e436cb,"public boolean bobThere(String str)
{
    
    for (int x = 0; x < str.length() -2; x++)  
    {
        if (str.charAt(x) == 'b' && str.charAt (x+2) == 'b')
    	{
        	return true;
    	}
    }
  
    	{
        	return false;
    	}
    
}",
6019a2d927f175c86e134452ff3a3b0ec8aaa33b,"public int[] frontPiece(int[] nums)
{
    if (nums.length >= 2)
    {
        int[] newnums = new int[2];
        newnums.add(nums[0]);
        newnums.add(nums[1]);
        return newnums;
    }
    else
    {
        return nums;
    }
}
",
56c06bec7cf7e18244403d9e4f756ec0427933f0,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    if (n <= nums.length)
    {
        int[] firstgroup = new int[n];
        int[] lastgroup = new int[n];
        for (int i = 0; i < n; i++)
        {
            firstgroup[i] = nums[i];
        }
        int p = nums.length;
        for (int o = nums.length - n; o < nums.length; o++)
        {
            int r = nums.length - p;
            lastgroup[r] = nums[o];
            p = p - 1;
        }
        if (firstgroup.equals(lastgroup))
        {
            return true;
        }
    }
    return false;
}
",
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
",
eec3b28394fdf34d94959f5b27d3bcb590bc286d,"public boolean xyBalance(String str)
{
    int count = 1;
    char position;
	for (int i = 0; i < str.length(); i++)
    {
        position = str.charAt(i);
    	if (position == 'x')
        	count = 0;
    	if (position == 'y')
        	count = 1;
    }
    return count = 1;
}
",
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",
a77cf61f1d235b19831c14399114810bc8b89144,"public int[] shiftLeft(int[] nums)
{
    int[] array = new int[nums.length];
    if ( nums.length >= 2 ) {
        for ( int i = 1; i < nums.length; i++ ) {
            array[i-1] = nums[i];
            array[nums.length - 1] = nums[0];
        }
        return array;
    }
    else
    {
        return nums;
    }
}
",
5f0de396365017b80185b81d0904cd472b4f28f8,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if ((a == b && b != c) || (a == c && a != b) || (b == c && b != a))
    {
       return 10;
    }
    else 
    {
        return 0;
    }
}
",
85c4da3eae44449610d4abcaabc40f355189f866,"public boolean twoTwo(int[] nums)
{
    for (int i=0; i<(nums.length); i++)
	{
		if(nums[i]==2)
		{
			i++;
			if(!(i<(nums.length)) || nums[i] !=2) 
    		{
        		return false;
    		}
			while(i<nums.length && nums[i] ==2) i++;
			}
		}
	return true;
}
",
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

",
803c3b7ab2f6984a216901319f02c8549f93ff24,"public String getSandwich(String str)
{
    int length = str.length();
    if ( str.startsWith(""bread"") && str.endsWith(""bread"") )
    {
        return str.(5, (str.length - 5));
    }
    else
    {
        return """"
    }
}
",
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
",
d2f05cc468a84bb01f5d675dcfafb4beb9a0b4c9,"public int[] fizzArray(int n)
{
    int[] output = new int[n]();
    for(int i = 0; i < n; i++){
        output[i] = i;
    }
    return output; 
}
",
c7972a0c52578814fdc1e75cdf7b2b9b87eaaa39,"public boolean evenlySpaced(int a, int b, int c)
{
    if ( a > b && b > c || c > b && b > a)
    {
        return ( a - b == b - c);
    }
    else if ( b > a && a > c || c > a && a > b)
    {
        return ( b - a == a - c);
    }
    else
    {
        return ( a - c == c - b);
    }
    
}
",
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
91c420fc474ab8277524b2e9bad8d3b89925c125,"public int caughtSpeeding(int speed, boolean isBirthday)
{
        
    if (isBirthday)
    {
        speed = speed - 5;
        
    }
    
    if (speed < 60)
    {
        return 0;
    }
    
    else if (60<speed< 80)
    {
        return 1;
        
    }
    
    else if (speed > 81);
    {
        return 2;
        
    }
    -
    
    
    
        
   

",
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
",
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",
311ef7da2f9ee488312dc86c4422f17877db65c7,"public int countCode(String str)
{ 
    if (!str.contains(""co""))
    {
        return 0;
    }
    else if ((str.lastIndexOf(""c"") > (str.length()-4))
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < str.length(); i++)
        {
            if ((str.charAt(i)=='c') && (str.charAt(i+1) == 'o') &		     (str.charAt(i+3) == 'e'))                                    
            {
                counter = counter + 1;
            }
        }
        return counter;
    }
}
",
f0f93102c0a87bedb16e5c9f188b50916757a30c,"

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}",
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",
f5a21d0c1e254db37e3447625ce5826afe21b435,"public boolean bobThere(String str)
{
    for(int i=0; i<str.length()-3; i++)
    {
        if(str.charAt(i)=='b')
        {
            if(str.charAt(i+2) == 'b')
                return true;
        }
    }
    return false;
}
",
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
",
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",
6f412fb97dacfeab711397d737336f16f8b3a81c,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder();
    for (int i = 0; i < n; i++)
    {
    	sb.append(str.charAt(str.length()-1));
    }
    return sb.toString();
}
",
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
",
e773b35c4440baf407292a0e144e90ebd1fab1ce,"public int countCode(String str)
{ 
    int count = 0;
    for (int i = 0; i < str.length(); i++)
    {
  		int co =   str.indexOf(""co"");
        String newStr = str.substring(co, co+4);
        System.out.println(newStr);
        if (newStr.endsWith(""e""))
        {
            count++;
        }  
    }
    return count;
}
",
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
",
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
",
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",
c0bcafd61ce598040aa977b280d46011559cb4c7,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true;
    for( int i = 0; i <= nums.length-2; i++)
    {
        if( nums [i] != val && nums[i+1] != val)
            result = false;
    }
    return result;
}
    
}
",
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
",
d5ce0fb7cf0b155cde53ceb7bede5737956327c9,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        for (int j : array)
        {
            if (i != 10)
            {
                array[j] = i;
                break;
            }
        }
    }
    
   return array;
}
",
8536c5f768b1adb326e2c34c566a310f311e86dc,"public boolean xyzThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.CharAt(i+1) == 'y' 
            && str.CharAt(i+2) == 'z')
        {
            if (i == 0 || str.CharAt(i-1) != '.')
                return true; 
        }
    }
    return false; 
}
",
dcff1be01293f7283af7552132bec80e125070fd,"public boolean love6(int a, int b)
{
 	int s = a + b;
    int d = Math.abs(a - b);
    if ( a == 6 || b == 6)
        return true;
    else if (s == 6 || d == 6)
        return true;
    else 
        return false
}
",
c39d1ee94f6a9a0a81bfecf4b8fd083b1fca26c2,"public int[] fizzArray(int n)
{
    int array = new int[n];
    for(int i=0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",
e0fc48a114ea8a2948e43da4eb1342009c283ca3,"public boolean love6(int a, int b)
{
    if (a == b)
    {
        return true
    }
    else if (Math.abs(a - b) == 6)
    {
        return true
    }
    else if (a + b == 6)
    {
        return true
    }
    else
    {
        return false
    }
}
",
64048f2701869a2bcb7a460416d3ef15f722e6b6,"public int[] fizzArray(int n)
{
    int i;
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",
d866157db78f6eb45be705042a8b581075d47972,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    	if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
            return a.sb;
    	}
    
    
}
",
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
",
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
",
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}",
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",
6019a2d927f175c86e134452ff3a3b0ec8aaa33b,"public int[] frontPiece(int[] nums)
{
    if (nums.length >= 2)
    {
        int[] newnums = new int[2];
        newnums.add(nums[0]);
        newnums.add(nums[1]);
        return newnums;
    }
    else
    {
        return nums;
    }
}
",
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",
b63f73f3977c83c5a9326abd2d8514897f04a240,"public String without2(String str) 
{
    int strLen = str.length();
    if (strLen < 2)
    {
        return str;
    }
    else if (strLen == 2)
    {
     return """";   
    }
    else if ((str.charAt(0) == str.charAt(strLen - 1)) && (str.charAt(1) == str.charAt(strLen - 2)))
    {
     	return ""blasblas""; //str.substring(1, strLen - 1);   
    }
    return str;
}
",
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
",
9294b03f96e7ba6c8ebb76fc9437bfadef40b777,"public int sum67(int[] nums)
{
	int sum = 0;
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 6)
        {
            for(int j = nums[i]; nums[i] =! 7; j++)
            {
            	sum + 0;
            }
        }
        else 
        {
        	sum += nums[i];
        }
            
    return sum;
}
",
c4fa96f9af07e09df6d1f3cc7c42be1e2029eb72,"public boolean sameEnds(int[] nums, int n)
{
        for(int i = 0; i < n; i++) {
        if(nums[i] != nums[nums.length - n + i])
            return false;
    }
                
    return true;
}
",
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",
d6ecef2688242348be94ae9cf4d683dbfee353d2,"public int countClumps(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
        if (nums[i] = nums[i+1])
        {
            
            count += 1;
            
        }
        
    }
    
    
    return count;
    
    
}
",
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",
e5feac9d2e81ca6fe14f6513eaf75e8f6f080104,"public int redTicket(int a, int b, int c)
{
    int result = 0;
    
    if ( a == b == c == 2)
    {
        result = 10;
    }
    else if ( (a == b == c == 1) || (a == b == c == 0))
    {
        result = 5;
    }
    else if ( b != a && c != a)
    {
        result = 1;
    }
    else
    {
        result = 0;
    }
    
    return result;
}
",
c5831ebd40c94307ef20afd4ff326967939b5594,"public boolean twoTwo(int[] nums)
{
    if (nums.length == 1 && nums[0] == 2)
    {return false;}
    
    if (nums.length == 0)
    {
        return true;
    }
    
    
    
    for( int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if ((i-1 >= 0 && nums[i-1] == 2) && (i+1 < nums.length && nums[i+1] == 2))
            {
                return false;
            }
        }
    }
    return true ;
}
",
f6813268f36f79d3489d3036c6a71d542f00fe8b,"public boolean sameEnds(int[] nums, int n)
{
    boolean a = false;
    for	(int i = 0; i < n; i++)
    {
        if (nums[i] == nums[nums.length - n + i])
        {
            a = true;
        }
        else
        {
            a = false;
        }
    }
    return a;
}
",
41fbb0ec3f09d19d78c9bae81f5a75e31cf74218,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
8ac25102baee6fadeabcfd2e101ad3f1325bb218,"public String alarmClock(int day, boolean vacation)
{
    if vacation == true
    {
        if day == 0 || 6
        {
            return ""off"";
        }
        else 
            return ""10:00"";
    }
    else 
        if day == 0 || 6
        {
            return ""10:00"";
        }
    	else 
            return ""7:00"";
            
    
}
",
2216bc569ee8caff75d3702a81475722e85c8551,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 || n == 16)
            return n;
        return 0;
    //return n;
}
",
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
",
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",
49eb57187ce32f7392ba9eb954bfc79921194a03,"public int countCode(String str)
{
    int count = 0;
    int i = 0;
    int length = str.length() - 3;
    while (i < length)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) = ""e"")
        {
            count++;
        }
        else
        {
            i++
        }
    }
    return times;
}
",
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
",
dc3378fef360ec4c5e4c0ddeaace01619067c129,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (is_weekend = true)
    {
        if cigars >= 40:
        {
            return True
        }
    }
    else if (cigars >= 40 && cigars <= 60)
    {
        return True
    }
    else
    {
        return False
    }
}
",
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
",
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",
