ID,Code
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
"
79f2da1916c858f4bd63251e6ec244aad4272418,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
    {
		return n;
    }
    else
    {
		return 0;
    }
}
public int noTeenSum(int a, int b, int c)
{  
    return (fixTeen(a) + fixTeen(b) +fixTeen(c)); 
}
"
9b06d81d2ee2682ba33f3c4251db06a7cfeaf2a8,"public int sum3(int[] nums)
{
    return 8;
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
fdd9c7578eae0199293f5c67050555c877e59579,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
    }
                           
    return (sum - max - min) / (nums.length - 2);
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
"
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
"
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
78a8e8a64b313ff7d1734612cc884e563d6caea4,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b!= 13 && c!= 13)
    {
        return (a+b+c);
    }
    
    else if (a== 13)
    {
        return 0;
    }
    
    else if (b== 13)
    {
        return a;
    }
    
    else if (c==13)
    {
        return (a+b);
    }
    
    return 0;
}
"
34ad16a72b0a75568a00e876dfb72953f291c9ab,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            clumps++;
        }
    }
    return clumps;
}
"
66d81d6a71405ccedc06586970c02dcccae77323,"public int[] fix45(int[] nums)
{
    int k;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(k = 0; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4)); k++)
            {
                k = k;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
a2c77eb2341d2107484dea64721c8eb1fb2b5c9b,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else if (c == 13)
    {
    	sum = a + b;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum;
    }
}
"
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
"
56ac97e6ac311645870c594b750311820db92f19,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        n = 0;
}
"
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
"
328f2f06f07e26aac03e4e4a6df016fc0c620fcc,"public int redTicket(int a, int b, int c)
{
      if (a == 2 && b == 2 && c == 2)
    return 10;
  if ( a == b && b == c)
    return 5;
  if ( a != b && a != c)
    return 1;
  else
    return 0;
}
"
c0bcafd61ce598040aa977b280d46011559cb4c7,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true;
    for( int i = 0; i <= nums.length-2; i++)
    {
        if( nums [i] != val && nums[i+1] != val)
            result = false;
    }
    return result;
}
    
}
"
e503bcd53b6c1b8e1f5bceead47b945857b50e9a,"public int dateFashion(int you, int date)
{
    if ( you >= 8 && date >= 8)
    {
        return 2;
    }
    if ( you <= 2 && date <= 2)
    {
        return 0;
    }
     if ( you >= 8 && date <= 8)
    {
        return 1;
    }
   if ( you <= 8 && date >= 8)
    {
        return 1;
    }
    }
    else 
        return 1;
}
"
6951053422eb1f10e58384407fe2177bd76f6031,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum
    }
}
"
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
"
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
a457e813b62121d4bee7f0cd63ba678e9441866c,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c && b == c){
            result = 10;
        }
     }
    else if ( c == b){
        result == 10;
    }
        
            
    return result;
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
888a63dff1f59fa6a944754dead51bf5ff29d397,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
13e7ebf5b1cb8a39e420140214502a74809a7fad,"public int countCode(String str)
{
    int num = 0;
    for(int i = 0; i < str.length() - 3; i++) {
        if(str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i + 3) == 'e')
            num++;
    }            
    return num;
}
"
ee4708e15be1f13f8c489f277d070e2cddbf6ff4,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length ; i++)
    {
     	if (nums[i] == 13)   
        {
         	i++;
        }
     	sum = sum + nums[i];   
    }
    return sum; 
}
"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
2e007e796e35e7e1dc3f93fe57d7994c06428678,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 && n == 16)
            return n;
        else
        	return 0;
    return n;
}
"
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
"
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
"
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
"
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
06ce870f764275dc4fbe2e7c3328c4f9612d64a7,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 0; i<n; i++)
    {
        last = last + last;
    }
    return last;
        
}
"
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
"
cda4eeee2346e60e72673f13fb06774fb4ec1b1b,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
        int rightSum = 0;
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
4a9806e5d979032eadab4c8d23dec29284441f09,"public int greenTicket(int a, int b, int c)
{	
   	int result = 10;
    if (a != b && b != c && a != c)
    {    
        result = 0;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    return result;
}
"
226b5d8a7b8a50ea1a33a1983fecefe1ef7fa72b,"public boolean canBalance(int[] nums)
{
	int leftNum = 0;
	int rightNum;
	for(int i = 0; i < nums.length - 1; i++)
    {
		leftNum += nums[i];
    }
	rightNum = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(leftNum == rightNum)
        {
			return true;
        }
		leftNum -= nums[i];
		rightNum += nums[i];
	}
	return (leftNum == rightNum);
}"
4690b3990e2eb6dd080ba258226248164f82da78,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh)
        {
            clumps++;
        }
    }
    return clumps;
}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
"
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
"
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
"
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
"
f1718cb6a2aa1704dac4fe8668d12e2c68a62b81,"public int[] fix45(int[] nums)
{
    for	(int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int k = 0;
            while	(nums[k] != 5)
            {
                k++;
            }
            nums[k] = nums[i+1];
            nums[i + 1] = 5;
            
        }
    }
    return nums;
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
bf0fb85d68a871de1263a11b4d6bf089714fa3ce,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0 ; nums.length > i; i++)
    {
        if (nums[i] == val || nums[i+1] == val)
        {
            return true;
        }
    }
    return false;
    
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
44f220b58843152b2c37e892e70f7c52224b3df7,"public int[] zeroMax(int[] nums)
{
    int max = 0; 
    for (int i = 0; i < nums.length - 1; i++) {
        if ( nums[i] == 0) {
            for (int k = i + 1; k <= nums.length - 1; k++) {
                if (nums[k] > max && nums[k] % 2 == 1) {
                    max = nums[k];
                }
                else {
                    nums[k] = max; 
                max = 0;
                }
                 
            }
        }
    }
    return nums; 
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
51d726f3ba7d0bdf6df41f275be7d3e5ae0b21ed,"public String getSandwich(String str)
{
    int firstBread = -1;
    int lastBread = -1;
    for (int i = 0; i < str.length() - 5; i++)
    {
        if (str.substring(i, i+5).equals(""bread""))
        {
            firstBread = i;
            i = str.length();
        }
    }
    for (int j = str.length() - 5; j > 0; j--)
    {
        if (str.substring(j, j+5).equals(""bread""))
        {
            lastBread = j;
            j = 0;
        }
    }
    if(firstBread != -1 && lastBread != -1 && firstBread != lastBread)
        return str.substring(firstBread + 5, lastBread);
    return """";
}
"
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
"
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
"
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
42e52e00ef12b244eddffd0c9e1678918659c4e7,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
f87b721de5fa4f5ff50d17d9cca6a2ce7875ebf3,"public int[] zeroMax(int[] nums) {

  int max = 0;

   

  for (int i = nums.length-1; i >= 0; i--) {

    if (nums[i] % 2 != 0)

      max = Math.max(max, nums[i]);

    if (nums[i] == 0)

          nums[i] = max;

  }

  return nums;

}

"
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
4cad14f6dc235bb7665a336718b0bc721df9ddd2,"public boolean isEverywhere(int[] nums, int val)
{
    Boolean result = true;
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            result = true;
        }
        else
        {
            result = false;
            break;
        }
    }
    return result;
}
"
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
"
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
"
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
"
d6ecef2688242348be94ae9cf4d683dbfee353d2,"public int countClumps(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
        if (nums[i] = nums[i+1])
        {
            
            count += 1;
            
        }
        
    }
    
    
    return count;
    
    
}
"
325eb8d9cda58db31c3a0157abc1cd41245be9e7,"public int sortaSum(int a, int b)
{
    int result = 0;
    int sum = a + b;
    if (sum <= 19 || sum >= 10)
    {
        result = 20;
    }
    else 
    {
        result = sum;
    }
}
"
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
"
2216bc569ee8caff75d3702a81475722e85c8551,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 || n == 16)
            return n;
        return 0;
    //return n;
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
60713369599a785604dd684075e75e7ad783eb9d,"public int countClumps(int[] nums)
{
    int b = 0;
	for (int i = 0; i < nums.length - 1; i++) 
    {
		if (nums[i] == nums[i+1]) {
		b++;
	}
	for (int j = i + 2; j < nums.length; j++) 
    {
		if (nums[j] == nums[i]) 
        {
			i = j - 1;
		}
		else 
        {
			break;
		}
	}
	}
return b;
}
"
f6cfdfcc045d3ced7634c7a0afcbe4afd98d380e,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
        n = 0;
    
    return n;
}
"
2554504cf73dcc772aa6c40d5e1c117584eceb44,"public int sum13(int[] nums)
{
    int total = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i > 0)
        {
            if (nums[i] != 13 && nums[i - 1] != 13)
            {
                total += nums[i];
            }
        }
        else
        {
            if (nums[i] != 13)
            {
                total += nums[i];
            }
        }
    }
    
    return total;
}
"
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
4922371b92b222012e44535853e7674bb94610e3,"public boolean twoTwo(int[] nums)
{
    if (nums.length <= 1)
    {
        return false;
    }
    if (nums.length == 2)
    {
       return (nums[0] == 2 || nums[1] == 2);
            
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
    }
    return true;
}
"
532a012b0ec202d27262b383dc13089aef7e1e3b,"public int dateFashion(int you, int date)
{
   if ((you >= 2 && date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 && date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
"
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
3d11719630fc8c44b85deba0b9752e36fb374a27,"public int luckySum(int a, int b, int c)
{
    if (a = 13)
    {
        return 0;
    }
    else if (b = 13)
    {
        return a;
    }
    else if (c = 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
9eb233b4442526c98e5181cbd698f5839c08adb3,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a == c || b == c || a == c)
        return false;
    if (a == b || b == c)
        return true;
    else
        return ((Math.abs(a - c)==Math.abs(a - b))) ||( Math.abs(c - a)==Math.abs(b - c) || Math.abs(a - b) == Math.abs(b - c));
}
"
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
"
1adf1201d219d6cf2893ea40470b60c2a19806f6,"public int countClumps(int[] nums)
{
    int count = 0;
    int i = 0;
    
    while (i < nums.length)
    {
        int val = nums[i];
        i++;
        int length = 1;
        
        while (i < nums.length && nums[i] == val)
        {
            i++;
            length++;
        }
        if (length > 1);
        {
            count ++;
        }
    }
    return count;
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
5751db3148c8805ad9e482b9dedd7ade5357ba47,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
    {
        return str.substring(first + 5, last);
    }
    else
    {
    return """";
    }
}
"
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
9e2323cd896bf8c878fad40b42eac0e930afede4,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    String str = String.valueOf(num);
    int stringLength = str.length();
    int lastDigit = Integer.parseString(stringLength);
    if (lastDigit >= 0 && lastDigit < 5)
    {
        return num - lastDigit;
    }
    else if (lastDigit >= 5)
    {
        return num + (10 - lastDigit);
    }
}"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
3850876d2c56148eb728593d89548d81773d092d,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                while ((nums[i] == nums[i]) && (i < num.length)
                {
                    i++;
                }
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int sumVal = 1;
    while (nums[start] == initValue)
    {
        sumVal++;
        start++;
    }
    return sumVal;
}"
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
"
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
7e7bf4cc813657543b6b338e6de0cde0e361315b,"public int sum13(int[] nums)
{
    int total = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (num [i] == 13)
        {
            num [i] = 0;
            num [i] + 1 = 0;                
        }
        total = nums [i] + nums [i + 1];
    }
    return total;
}
"
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
a040447a7a4d000d3f8dce6203fbc10a54cdf382,"public int blackjack(int a, int b)
{
    if (a>21)
    {
        a=0;
   		return a;
    }
    if (b>21)
    {
        b=0;
        return b;
    }
    if (a>b)
    {
     return a;   
    }
	else
	{	
    return b;
    }
}
"
63d94094b3bd3e432c48601fe1cde209664933eb,"public int loneSum(int a, int b, int c)
{
	if (a==b || b==c)
    {
        return c;
    }
	else if (a==c)
    {
        return b;
    }
    else 
    {
    	return a + b + c;
    }
}
"
a07a8703a9cafd5f2dd00f03a9d186fc390e15f9,"public String zipZap(String str)
{
    String s = """";
    int x = 0;
    int y = 0;
    if (str.length() < 3) {
        return str;
    }
    else {
        for (int i = 0; i < str.length() - 2; i++) {
            if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p') {
                x++;
            }
        }
    	while (s.length() != str.length() - x && y < str.length() - 2) {
            if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p') {
                s = s + ""zp"";
                y = y + 2;
            }
            else {
                s = s + str.charAt(y);
            }
            y++;
        }
    }
    return s;
            
        
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
22d46f636a2ecaa8a80e55e579500a4ff8e2a188,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            nums[i+1] = 5;
        }
    }
    
    return nums;
}
"
694a9037b08573fdb83bf861651119e9cdc03f82,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 1; i<n; i++)
    {
        last = last + str.substring(str.length()-n);
    }
    return last;
        
}
"
528342efb0a38ace805355f9ecda4f69f0397a23,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
	if (a == 13)
    {
        return sum;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        int sum = a + b;
        return sum;
    }
    else
    {
        int sum = a + b + c;
        return sum;
    }
}
"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
2e24d7549990ee84b78b5ae21f0d94af990870fb,"public int loneSum(int a, int b, int c)
{
    if (a == b){
    	return(cc);
    }else{
    	if (a == c){
        	return (b);
        }else{
        	if (b == c){
            	return(a);
            }else{
            	return(a + b + c);
                
            }
        }
    }
}
"
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
"
3a2534fb0ac1dc3651141e9a0bd5b1830ff648bb,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""small ticket"";
        }
        else
        {
            return ""big ticket"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""small ticket"";
        }
        else
        {
			return ""big ticket"";
        }
    
    }
}  
"
9f7cabb358a67a54ce58c64d4a9845fcc682c8e5,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if (speed <= 60) {
        return 0;
    }
        else if (speed > 60 && speed <81) {
            return 1;
        }
            else {
                return 2;
        }
    if (isBirthday);
    	 if (speed <= 65) {
             return 0;
         }
    else if (speed > 65 && speed < 86) {
        return 1;
    }
    else {
        return 2;
    }
}
       "
8e2fbb177f04d826bcf31a521e3d2d5c0a540cf5,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if(sum >= 10 || sum <= 19)
    {
    	return sum;
    }
    
    else if (sum<=9 || sum>=20) 
    {
    	return 20;
    }
    
    return 20;
}
"
449c25168277fbecb5660eb70e7019afab36425e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
            return 0;
    }
    else if (speed <=80 && speed > 61)
    {
            return 1;
    }
    else
    {
            return 2;
    }
}
"
4621b6d4c1b03a6fd811349559740d32c21bd2b1,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        return false;
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return false;
}
"
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
"
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}"
a354fe94859e5967d2c6bdce8fdb12e90a24f48c,"public int sortaSum(int a, int b)
{
    if(a + b >= 10 || a + b <= 19)
    {
    	return a + b;
    }
    
    else 
    {
    	return 20;
    }
}
"
a2c77eb2341d2107484dea64721c8eb1fb2b5c9b,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else if (c == 13)
    {
    	sum = a + b;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum;
    }
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
"
50f3da72fdd9f01a0c7804b3c9c789cddd8d9b18,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (i = 0; i < num.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count*2 == num.length);            
    
}
"
1202d346fcf0db46d6a29cff9b13366969ee2df1,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0,2));
    }
    else if (str.length() == 1)
    {
        return (str + ""@"");
    }
    else
    {
        return (""@@"");
    }
}
"
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
"
8294d5989bd72ab3256d9b0427b4cace8607d55c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars >= 40)
        {
            return ""true"";
        }
        else
        {
        	return ""false"";   
        }
    }
    else
    {
        if (cigars <=60 && cigars >=40)
        {
            return ""true"";
        }
        else
        {
            return ""false"";
        }
    }
}
"
5ae4f4df981ecd7a8c7c1620b207298fd11eb26f,"public int blackjack(int a, int b)
{
    if (a > 0 && b > 0)
    {
     	if (b > 21 && a <= 21)
        {
         	return a;   
        }
        else if (a > b && a <= 21)
        {
         	return a;  
        }
        else if (a > 21 && b <= 21)
        {
         	return b;   
        }
        else if (b > a && b <= 21)
        {
        	return b;   
        }
    }
    return 0;
}
"
3a244a1b4e96b9b233338061c4229807fb89777c,"public int countCode(String str)
{
    int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
"
694a9037b08573fdb83bf861651119e9cdc03f82,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 1; i<n; i++)
    {
        last = last + str.substring(str.length()-n);
    }
    return last;
        
}
"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
"
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
"
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
"
6bb0ee0ad18b7740337fbdd1e749d82571043674,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
a040447a7a4d000d3f8dce6203fbc10a54cdf382,"public int blackjack(int a, int b)
{
    if (a>21)
    {
        a=0;
   		return a;
    }
    if (b>21)
    {
        b=0;
        return b;
    }
    if (a>b)
    {
     return a;   
    }
	else
	{	
    return b;
    }
}
"
b1cd225c96f83cf234170ea444a1959fbfd4bcde,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    if (b == 13)
        return a;
    if (c == 13)
        return (a + b);
    return (a + b + c);
}
"
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
cd80603c865a5f537dae1c802b4d53681015978e,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}"
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
0615e4e3628f3968baa7039844e88175c1722d19,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend)
    {
        return (cigar >= 40);
    }//end if
    
    return (cigars >= 40 && cigars <= 60);
    
    
}
"
0773313801a191baf1978ea9f3b612da5d247316,"public int caughtSpeeding(int speed, boolean isBirthday)
{
if (!isBirthday)
{
   if ( speed <= 60)
   
       return 0;
   
   else if ( speed > 60 && speed <= 80)
   
       return 1;
   
   else 
   
       return 2;
   
}
    if (isBirthday)
    {
        if ( speed <= 65)
   
       return 0;
   
   else if ( speed >= 65 && speed <= 85)
   
       return 1;
   
   else 
   {
       return 2;
   }
       
}
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
"
558280d818c379f1583db66238398bd41b0d7063,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
4f020dcb2ebec419aa94d431533df15542e537ec,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
    return false;
}
"
f0205df67f010e325ec1614fba0a300d61a74dec,"public int blackjack(int a, int b)
{
    double valueA;
    valueA = (a % 21);
    double valueB;
    valueB =  (b % 21);
    
    if (a < 21 || b < 21)
    {
        if (double valueA > double valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else if (a < 21 && b < 21)
    {
        if (valueA > valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else
    {
        return 0;
    }
}
"
e87542225324deb36fc5891405e6401d53aab2a3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed -= 5;
    }
    if (speed=<60)
    {
        return 0;
    }
    if (speed>=61 && speed<= 80)
    {
        return 1;
    }
    if (speed>=81)
    {
        return 2;
    }
}
"
a6eca60d2ec41fba18ab610a87ee9c66cbb73d19,"public int findOdd(int[] nums, int index)
{
    biggestOdd = 1;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd == nums[j];
    return biggerOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
828a3b0db925adca159220f3e9faf2fb4e24446a,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21){
        return a;
    }else if (b > a && b <= 21){
        return b;
    }else if (a > 21 && b < 22){
        return b;
    }else if (b > 21 && a < 22){
        return a;
    }else{
        return 0;
    }
}
"
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
"
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
fb3b878ff7c89e0940c66e22faadec79ac2996e7,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i: int[])
    {
     	sum = sum + i;
    }
    return sum;
}
"
2e007e796e35e7e1dc3f93fe57d7994c06428678,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 && n == 16)
            return n;
        else
        	return 0;
    return n;
}
"
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
"
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
"
3d5712cd499b5dbbb377c38144436a2980ada53f,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
        	return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return false;
}
"
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
"
5751db3148c8805ad9e482b9dedd7ade5357ba47,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
    {
        return str.substring(first + 5, last);
    }
    else
    {
    return """";
    }
}
"
b16439cf6ef5c619010c64a8fb33444995f538e6,"public String plusOut(String str, String word)
{
    String returnString = """";
    int lastIndex = str.indexOf(word);
    int i = lastIndex;
    
    while (i < str.length())   
    {
        if (i == str.indexOf(word, lastIndex))
        {
            returnString = returnString + word;
            lastIndex = i;
            i += (word.length() - 1);
        }
        
        else
        {
            returnString = returnString + ""+"";
            i++;
        }
    }
	return returnString;
}
"
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
ba8cfb4cad91f6a68d58ca4ab3a88d035f324a8c,"public int sortaSum(int a, int b)
{
    if ( a + b >= 10 && a + b <= 19) {
        retun 20;
    }
    else {
        return a + b;
    }
}
"
bf0fb85d68a871de1263a11b4d6bf089714fa3ce,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0 ; nums.length > i; i++)
    {
        if (nums[i] == val || nums[i+1] == val)
        {
            return true;
        }
    }
    return false;
    
}
"
eadc5df754b07dbc81ee348ee4bbd34ce3b39f20,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
        return 20;
    else
        return (a + b);
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
fae2f7dfe0c7f6a36eed081761f1d04f77387b4b,"

    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }

"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
"
47bcbb118b9820ce001397912cd55ec9c5521a9b,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
        return c;
    }
    if (a == c)
        return b;
    if (b == c)
        return a;
    return (a + b + c);
}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
4951e3e93960ed4399945d8a349ac025dd9fc00d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum<= 19)
    {
     	sum = 20;   
    }
    return sum;
}
"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
269af4075525a2083019b124be38f451bea5eb2d,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            if (isAsleep)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
        else
        {
            return false;
        }
    }
    else if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
"
03963c180ede47baf3cb2a34f74b6ff99ed0fee1,"public int[] zeroMax(int[] nums) {
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--) {
        if (nums[i] % 2 == 1 && nums[i] > largestOdd)
            largestOdd = nums[i];
        if (nums[i] == 0)
            nums[i] = largestOdd;
    }
    return nums;
}"
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
d0e7e4f01d1bd84602edf6ae34c0d764c24c4815,"public int countCode(String str)
{
    int i = 0;
    int time = 0;
    int l = str.length() - 3;
    
    while (i < l)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt( i 			+3 == 'e')
            {
                time++;
                i += 4;
            }
            i++;
            }
            return time;
        
}
"
0294a8f6bb1a1e083b987b4340006b744cb04faf,"public int loneSum(int a, int b, int c)
{
    int sum = 0;
    if (a != b && b!= c)
    {
    	sum = a + b + c;
        return sum;        
    }
    else if (a == b && b != c)
    {
    	sum = c;
        return sum;
    }
    else if (a != b && b == c)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = 0;
        return sum;
    }
}
"
0f7eb7c6740ccd257c3f6da081cc3f753e5a2516,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int clumpSize = this.sizeClump(nums, nums[i], i);
                i = i + clumpSize;
                counter++;
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int nextNum = 0;
    while (nums[start] == initValue)
    {
        nextNum++;
    }
    return nextNum;
}"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
2ee7d366ef45e04675e68bd5cfd425ac0862af68,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else
    {
		return ""@@"";
    }

  }
"
18ab89e18a6ce4e406b204406f6fb94214480bd9,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 10;
    if (a == b && b == c && a == c)
        return 5;
    if (a != b && b != c && a != c)
        return 1;
    else
        return 0;
}
"
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
d7633351c672f26ee19b79bf514fdb0837ec9cb2,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMorning && !isMom)
        return false;
    else
        return true;
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
042c7539e7bbc603f9d999c837f0b4486eeef11a,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n != 15 && n != 16)
    	if (n <= 19 && n >= 13)
        	return 0;
    return n;
}
"
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
"
22fda47732546394dab7ecbb147aa3cdbdb03099,"public boolean xyBalance(String str)
{
  int l = str.length() - 1;
    for (int i = l; i >= 0; i--)
    {
        char n = str.charAt(i);
        if (n == 'x')
        {
            return false;
        }
        if (n == 'y')
        {
            return true;
        }
    }
    return true;
    }
"
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
7c77e6e3fc1b988356518cad44b8ccc44e6c7032,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c){
            result = 10;
        }
        else if (b == c){
        	result = 20;
        }
     }
            
    return result;
}
"
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
ed474f0e054cf58e97af554622596132c6fa3db1,"public int roundSum(int a, int b, int c)
{	
    return(round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
	int digit = num % 10;
    if(digit >= 5)
        return num + (10- digit);
    return num - digit;
}"
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
7bbe47ddbd540b9999602f687a555456a4122938,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	while (isBirthday == false)
    {
    	if (speed <= 60)
        {
            return 0;
        }
    	else if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    	else if (speed >= 81)
        {
            return 2;
        }
    }
    while (isBirthday == true)
    {
        if (speed <= 65)
        {
            return 0;
        }
    	else if (speed >= 66 && speed <= 85)
        {
            return 1;
        }
    	else if (speed >= 86)
        {
            return 2;
        }
    }
    return 1;
}"
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
"
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
"
532a012b0ec202d27262b383dc13089aef7e1e3b,"public int dateFashion(int you, int date)
{
   if ((you >= 2 && date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 && date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
9db9cff5028b4b1cc75f4f5c9a641117debb19ac,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0; 
    }    
    if (b > 21)
    {
        return 0;
    }
    if ( a > b)
    {
        return a;
    }
    else
    {
        return b;
    }
    
}
"
63d94094b3bd3e432c48601fe1cde209664933eb,"public int loneSum(int a, int b, int c)
{
	if (a==b || b==c)
    {
        return c;
    }
	else if (a==c)
    {
        return b;
    }
    else 
    {
    	return a + b + c;
    }
}
"
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
"
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
"
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
"
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
"
b21271e79419b123e5e2d4ff29ca2f214f3fb90e,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if (a==b || a==c || b==c)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
"
325eb8d9cda58db31c3a0157abc1cd41245be9e7,"public int sortaSum(int a, int b)
{
    int result = 0;
    int sum = a + b;
    if (sum <= 19 || sum >= 10)
    {
        result = 20;
    }
    else 
    {
        result = sum;
    }
}
"
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}"
dead7e5e377079599c11bb673bf7c1248fef60fc,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if ( a == b && b == c)
    {
        sum = a;
    }
    else if (a == b || a == c)
    {
        sum = sum - a;
    }
    else if (b == c)
    {
        sum = sum - b;
    }
    return sum;
}
"
9ebe46b9e7a4b3cb16a4423e4af7f17722965213,"public int noTeenSum(int a, int b, int c)
{
    int sum = (fixTeen(a)+fixTeen(b)+fixTeen(c));
        return sum;
}

public int fixTeen(int n)
{
    if (n>=13&&n<=19)
    {
        if (n==15||n==16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }
}
"
2fca6215c9c9afb58d28887169dfe435558d7825,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a <= 21 && a > b)
    {
        return a;
    }
    else if (b <= 21 && b > a)
    {
        return b;
    }
    else if (b <= 21 && a > 21)
    {
        return b;
    }
    else
    {
     	return a;   
    }
}
"
5cd02f6c04c19cfba3433b99e62352d722eab1e6,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
	    if (a > b)
	    {
   		  	return a;
	    }
	    else
    	{
    	 	return b;
    	}
    }
    else
    {
       	return 0;
    }
}
"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
f53fe967f0579e586ca2895910f4b0362cabe181,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
"
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
"
78a8e8a64b313ff7d1734612cc884e563d6caea4,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b!= 13 && c!= 13)
    {
        return (a+b+c);
    }
    
    else if (a== 13)
    {
        return 0;
    }
    
    else if (b== 13)
    {
        return a;
    }
    
    else if (c==13)
    {
        return (a+b);
    }
    
    return 0;
}
"
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
"
50f3da72fdd9f01a0c7804b3c9c789cddd8d9b18,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (i = 0; i < num.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count*2 == num.length);            
    
}
"
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
fae2f7dfe0c7f6a36eed081761f1d04f77387b4b,"

    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }

"
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
"
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
"
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
"
f6cfdfcc045d3ced7634c7a0afcbe4afd98d380e,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
        n = 0;
    
    return n;
}
"
828a3b0db925adca159220f3e9faf2fb4e24446a,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21){
        return a;
    }else if (b > a && b <= 21){
        return b;
    }else if (a > 21 && b < 22){
        return b;
    }else if (b > 21 && a < 22){
        return a;
    }else{
        return 0;
    }
}
"
684d16d1fe00b522bc43f3c44174bcb4ccab14db,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && b == c && a == c)
    {
        result = 20;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    else
    {
        result = 10;
    }
    return result;
}
"
5ae4f4df981ecd7a8c7c1620b207298fd11eb26f,"public int blackjack(int a, int b)
{
    if (a > 0 && b > 0)
    {
     	if (b > 21 && a <= 21)
        {
         	return a;   
        }
        else if (a > b && a <= 21)
        {
         	return a;  
        }
        else if (a > 21 && b <= 21)
        {
         	return b;   
        }
        else if (b > a && b <= 21)
        {
        	return b;   
        }
    }
    return 0;
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
"
039a5741fb82006d59f66a5ffd100359f6a3aa77,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
    	if (cigars >= 40)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
    else
    {
    	if (cigars >= 40 && cigars <= 60)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
}
"
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
"
fe4d9bb980371b0c510eaafdeaad3066de447006,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
		return n;
	return 0;
}
public int noTeenSum(int a, int b, int c)
{  return (fixTeen(a) + fixTeen(b) +fixTeen(c)); }
"
47bcbb118b9820ce001397912cd55ec9c5521a9b,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
        return c;
    }
    if (a == c)
        return b;
    if (b == c)
        return a;
    return (a + b + c);
}
"
b23234bdfab0d909602eff7d91c9461d3957de8f,"public String repeatEnd(String str, int n)
{
    String last = new String();
    for (int i = 0; i <= n; i++)
    {
        last = last.concat(str.substring(str.length() - n, str.length()));
    }
    return last;
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
"
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
0ebd451bd7f1ba5eaaee7cc787359dde169abbc2,"public String getSandwich(String str)
{
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
        return str.substring(first + 5, last);
                                                                    
    return """";
}
"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
"
1dc0a9281fe5c33922d59a28a48a7003fd59765d,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        retrun = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
e7aad59bc0f7416c80deba043153af59de5ea985,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i <= nums.length - 1; i++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            everywhere = true;
            break;
        }
    }
    return everywhere;
}
"
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
"
4690b3990e2eb6dd080ba258226248164f82da78,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh)
        {
            clumps++;
        }
    }
    return clumps;
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
b6ba17f1e789afbf3ef81685a53e5e5f8cc3dfd0,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));	}
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
e842a2d12176ae37228ff69c6c768005b587ac2a,"public int blackjack(int a, int b)
{
    int c = 21 - a;
    int d = 21 - b;
    
    
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else
    {
        if (c > d)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
}
"
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
"
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
"
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
fdd9c7578eae0199293f5c67050555c877e59579,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
    }
                           
    return (sum - max - min) / (nums.length - 2);
}
"
d5ce442602f709f5b69882191e66e3dbc3382576,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21)
    {
        return a;
    }
    else if (b > a && b <= 21)
    {
        return b;
    }
    else if (a > 21 || b > 21)
    {
        return 0;
    }
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
"
79f2da1916c858f4bd63251e6ec244aad4272418,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
    {
		return n;
    }
    else
    {
		return 0;
    }
}
public int noTeenSum(int a, int b, int c)
{  
    return (fixTeen(a) + fixTeen(b) +fixTeen(c)); 
}
"
694a9037b08573fdb83bf861651119e9cdc03f82,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 1; i<n; i++)
    {
        last = last + str.substring(str.length()-n);
    }
    return last;
        
}
"
e503bcd53b6c1b8e1f5bceead47b945857b50e9a,"public int dateFashion(int you, int date)
{
    if ( you >= 8 && date >= 8)
    {
        return 2;
    }
    if ( you <= 2 && date <= 2)
    {
        return 0;
    }
     if ( you >= 8 && date <= 8)
    {
        return 1;
    }
   if ( you <= 8 && date >= 8)
    {
        return 1;
    }
    }
    else 
        return 1;
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
"
b03f6ee58d1c2efbc298c1b090d888a47d5425a9,"public boolean evenlySpaced(int a, int b, int c)
{
    if (b-a <= 1 && c-a >= 2 && c-b >= 2 
        || b-a >= 2 && c-a <= 1 && c-b >=2
        || b-a >=2 && c-a >= 2 && c-b <= 1)
        return true;
    return false;
}
"
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
"
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
"
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
"
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
"
d4bcf6c8e35c1dc33d803d62c4c1abc06da6328d,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] == 13)
        {
         	sum = sum;   
        }
        else if (nums[i - 1] == 13)
        {
         	sum = sum;   
        }
        else
        {
         	sum = sum + nums[i];
        }
    }
    return sum;
}
"
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
c093cac600fc00c29dfe5c59c8ab78dddb9a3f95,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count >= nums.length - 1);            
    
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
"
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
e2468a1fbac0f816c4df8538f0af6626551638b0,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
11e598f7e57d128136db1dfc84b08cbb84493470,"public String atFirst(String str)
{	
    int n = str.length();
    for (int = 0; i < n; i++)
    {
    	if (n > 2)
    	{
     		return str.substring(0, 2);
    	}
    	else
    	{
       	 	return ""@@"";
    	} 
    }
}
"
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
"
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
"
1d6179ccdc1c6fce139143f569025a679c1301a0,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        	largeOdd == nums[i];
        if (nums[i] == 0)
        	nums[i] == largeOdd;
    }
    return nums;
}"
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
3d11719630fc8c44b85deba0b9752e36fb374a27,"public int luckySum(int a, int b, int c)
{
    if (a = 13)
    {
        return 0;
    }
    else if (b = 13)
    {
        return a;
    }
    else if (c = 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
"
9cccc838c6123ff6e830e3f73cb672510aa4de73,"public String atFirst(String str)
{
    if (str.length() >= 2)
    return str.substring(0,2);
  else if (str.length() == 1)
    return str + ""@"";
  else
    return ""@@"";

}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
f1718cb6a2aa1704dac4fe8668d12e2c68a62b81,"public int[] fix45(int[] nums)
{
    for	(int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int k = 0;
            while	(nums[k] != 5)
            {
                k++;
            }
            nums[k] = nums[i+1];
            nums[i + 1] = 5;
            
        }
    }
    return nums;
}
"
b53ab834a811096b76a803c390009392801834ab,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
528342efb0a38ace805355f9ecda4f69f0397a23,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
	if (a == 13)
    {
        return sum;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        int sum = a + b;
        return sum;
    }
    else
    {
        int sum = a + b + c;
        return sum;
    }
}
"
a05e5d98a96c772e1afad34a0ae82871a6e741d0,"public String zipZap(String str)
{
    int num = 0;
    for (int i = 2; i < str.length(); i++)
    {
        if (str.charAt(num) == 'z' && str.charAt(i) == 'p')
        {
            str.replace(str.substring(num, i), ""zp"")
        }
        num += 1;
    }
    return str;
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
34ad16a72b0a75568a00e876dfb72953f291c9ab,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            clumps++;
        }
    }
    return clumps;
}
"
a767440796f740efacb74e1a68a50c6ef184a501,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length - 1; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
a2c77eb2341d2107484dea64721c8eb1fb2b5c9b,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else if (c == 13)
    {
    	sum = a + b;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum;
    }
}
"
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
"
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
"
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
db9b29b114ae85d86c3fe363b9c8f7afce6147c3,"public int countCode(String str)
{
    int count = 0;
    for ( int i = 0; i < str.length() - 3; i++ )
    {
        if ( ""co"".equals( str.substring( i, i + 2 ) ) )
        {
            if ( str.charAt( i + 3 ) == 'e' )
            {
                count++;
            }
        }
    }
    return count;
}
"
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
"
6bc66f51e027f8e766055c5683b57b6d779c2d15,"public String withouEnd2(String str) 
{
if (str.length() <= 2) 
    return """";
return str.substring(1, str.length() - 1);
}
"
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
d8f6de34bbb4daabf4789e4930885c05e8604106,"public int countClumps(int[] nums)
{
    int clumpNum = 0;
    int clump = 0;
    for (int = 0; i < nums.length - 1; i++)
    {
     	if (clump == 0 && nums[i] == nums[i+1])
        {
            clumpNum++;
            clump++;
        }
        else
        {
         	clump = 0;   
        }
    }
    return clumpNum;
}
"
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
a02eb75c4e00dfd8fa09a7d3de1220f22f7a8f27,"public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        return 0;
    }
    if (n == 15)
    {
        return 15;
    }
    if (n == 16)
        {
            return 16;
        }
}

"
04780365d53ec02bf23dee2452c32d0edb7fb12c,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
"
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
c0bcafd61ce598040aa977b280d46011559cb4c7,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true;
    for( int i = 0; i <= nums.length-2; i++)
    {
        if( nums [i] != val && nums[i+1] != val)
            result = false;
    }
    return result;
}
    
}
"
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
828a3b0db925adca159220f3e9faf2fb4e24446a,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21){
        return a;
    }else if (b > a && b <= 21){
        return b;
    }else if (a > 21 && b < 22){
        return b;
    }else if (b > 21 && a < 22){
        return a;
    }else{
        return 0;
    }
}
"
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
"
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
"
86eeb69c66325d7ac263cfba4f58a77188d3d872,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int test = 0;
        int[] testArray = new int[nums.length];
        for (int x = 0; x < nums.length; x++)
        {
            testArray[x] = nums[x];
            test++;
        }
        if (test == nums.length)
        {
            return 1;
        }
        
        
        
        
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i]);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init)
{
    int nextNum = 0;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
"
e842a2d12176ae37228ff69c6c768005b587ac2a,"public int blackjack(int a, int b)
{
    int c = 21 - a;
    int d = 21 - b;
    
    
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else
    {
        if (c > d)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
}
"
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
"
3d89f76d27956de3a51e53f7ba12c5aa1fc7e352,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom && isAsleep)
        return true;
    if (isMorning && !isMom && !isAsleep)
        return false;
    if (isMorning && isMom && !isAsleep)
        return false;
    return false;    
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
092a37234cccc894d13af9756eed95198aa41a1a,"ublic boolean isEverywhere(int[] nums, int val) {
	boolean result = true;
	for (int i = 0; i <=nums.length-2;i++)
	{
		if ( nums[i] != val && nums[i+1] != val)
			result = false;
	}
  	return result;
}
"
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
"
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
"
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
"
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
"
ee4708e15be1f13f8c489f277d070e2cddbf6ff4,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length ; i++)
    {
     	if (nums[i] == 13)   
        {
         	i++;
        }
     	sum = sum + nums[i];   
    }
    return sum; 
}
"
f916727180911437e727e3beb5163e6447d5202b,"public String plusOut(String str, String word)
{
    String plus = new String();
    for (int i = 0; i < str.length(); i++)
    {
        if (i <= str.length() - word.length())
        {
            if (str.substring(i, i + word.length()).equals(word))
            {
                plus += word;
                i += word.length() - 1;
            }
            else
            {
                plus += '+';
            }
        }
    }
    return plus;
}
"
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
"
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
"
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
5a00919d938e7350f9d887a0f3c496f766fa3b49,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
2bc6224c6d864641adc76e92803ba8b015954d7f,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
a457e813b62121d4bee7f0cd63ba678e9441866c,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c && b == c){
            result = 10;
        }
     }
    else if ( c == b){
        result == 10;
    }
        
            
    return result;
}
"
685a1f07697cb907cefcecfa8cf5158825e90e14,"public int countCode(String str)
{
    int length = str.length() - 2;
    int num = 0;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == c && str.charAt(i + 1) == o
            && str.charAt(i + 3) == e)
        {
            num = num + 1;
        }
    }
    return num;
}
"
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
"
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
a354fe94859e5967d2c6bdce8fdb12e90a24f48c,"public int sortaSum(int a, int b)
{
    if(a + b >= 10 || a + b <= 19)
    {
    	return a + b;
    }
    
    else 
    {
    	return 20;
    }
}
"
3c663e6b94b687cf331fb515d865826a263a5a6c,"public int luckySum(int a, int b, int c)
{
    if (a==13)
    {
        return 0;
    }
    else if (b==13)
    {
        return a;
    }
    else if (c==13)
    {
        return a+b;
    }
    else
        return a+b+c;
}
"
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
"
694a9037b08573fdb83bf861651119e9cdc03f82,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 1; i<n; i++)
    {
        last = last + str.substring(str.length()-n);
    }
    return last;
        
}
"
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
226b5d8a7b8a50ea1a33a1983fecefe1ef7fa72b,"public boolean canBalance(int[] nums)
{
	int leftNum = 0;
	int rightNum;
	for(int i = 0; i < nums.length - 1; i++)
    {
		leftNum += nums[i];
    }
	rightNum = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(leftNum == rightNum)
        {
			return true;
        }
		leftNum -= nums[i];
		rightNum += nums[i];
	}
	return (leftNum == rightNum);
}"
512ea4857067bd5d3ac3e3426f861301ee28c2f3,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
            return false;
        }
    }
    else if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
cd23c0ed240a318d70e3ddbf504fb44f78c81ffc,"public String atFirst(String str)
{ 
    if (str.length() < 2 && str.length() != 0)
    {
        return str + ""@"";
    }
    else if (str.length() == 0)
    {
        return ""@@""
    }
    else
    {
        return str.substring(0,2);
    }
    
}
"
684d16d1fe00b522bc43f3c44174bcb4ccab14db,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && b == c && a == c)
    {
        result = 20;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    else
    {
        result = 10;
    }
    return result;
}
"
cc77cf7675005a0bdbc9fe76c75879f1ad156087,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
"
b97e82329cb0c23433c468d538ca5b604bfcba09,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
     	if (nums[i] % 2 == 1 && nums[i] > largestOdd)
        {
            largestOdd = nums[i];
        }
        if (nums[i] == 0)
        {
         	nums[i] = largestOdd;   
        }
    }
    return nums;
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
3d5712cd499b5dbbb377c38144436a2980ada53f,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
        	return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return false;
}
"
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
"
6bb0ee0ad18b7740337fbdd1e749d82571043674,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
"
eb5a4c86cae44656617a26e110011ef8081ffdf1,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else if ( str.length() == 0 )
    {
		return ""@@"";
    }
  }
"
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
"
e6b4e91acab1d81f043b26358d4b2c441fe38e23,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
22db1882535d71f9010b430616081de4d479a931,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
        if (c == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
12941eb615aae98f65aa36224718e48e3383968c,"public int loneSum(int a, int b, int c)
{
    int x = a + b + c;
    if (a == b)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == c)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return a;
        }
    }
    else if (a == c)
    {
        if (b == c)
        {
            return 0;
        }
        else
        {
            return b;
        }
    }
    else
    {
        return x;
    }
}
"
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
e380683c57feefa7fb3a525ba8c8887539b740dc,"public int greenTicket(int a, int b, int c)
{
 	if (a==b && b==c)
    {
        return 20;
    }
    
     if (a==b && a==c)
    {
        return 10;
    }
    
    if (a!=b && b!=c)
    {
        return 0;
    }
    
    
 	return 10;
}
"
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
"
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
"
13e7ebf5b1cb8a39e420140214502a74809a7fad,"public int countCode(String str)
{
    int num = 0;
    for(int i = 0; i < str.length() - 3; i++) {
        if(str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i + 3) == 'e')
            num++;
    }            
    return num;
}
"
47f3a74a254afbf6c445487eff4eb1c0df9e20df,"public boolean has77(int[] nums)
{
    int blob = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (i < nums.length - 2)
        {
            if (nums[i] == nums[i + 1] && nums[i] == 7)
        	{
            	blob = blob + 100;
        	}
            if (nums[i] == nums[i + 2] && nums[i] == 7)
            {
                blob = blob + 100;
            }
        }   
        else if (nums[i] == nums[i + 1] && nums[i] == 7)
        {
            blob = blob + 100;
        }
        else
        {
            blob = blob + 1;
        }
    }
    return blob >= 100;
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
"
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
"
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
"
ebd32bc9d73aea5eb17d579604ff55398843bcff,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1

"
2ee7d366ef45e04675e68bd5cfd425ac0862af68,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else
    {
		return ""@@"";
    }

  }
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
bb95327d0292272d65dd996e6aa6f61c87319399,"public boolean endOther(String a, String b)
{
    if a.length() == ""a"" + ""b""
        return b.substring(0,1).toLowerCase();
}
"
ec440fd647af59cbea91a966ccc1596f685d24fa,"public int blackjack(int a, int b)
{
   if ( a > 21 && b > 21)
   {
      return 0; 
   }
    if (21 - b > a)
    {
        return a;
    }
    else 
        return b;
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
2e007e796e35e7e1dc3f93fe57d7994c06428678,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 && n == 16)
            return n;
        else
        	return 0;
    return n;
}
"
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
"
b23234bdfab0d909602eff7d91c9461d3957de8f,"public String repeatEnd(String str, int n)
{
    String last = new String();
    for (int i = 0; i <= n; i++)
    {
        last = last.concat(str.substring(str.length() - n, str.length()));
    }
    return last;
}
"
da854431fc95a4fda3f5795de985db2ccfd6cecc,"public boolean xyzThere(String str)
{
    if (str.length() >= 3) {
   	 	for (int i = 0; i < str.length() - 3; i++) {
        	if (str.substring(i, i + 3).equals(""xyz"")) {
            	if (i == 0) {
                    return true;
                }
                else if (str.charAt(i - 1) == '.') {
                    return false;
                }
                else {
                    return true;
                }
        	}
            else {
               return false; 
            }
    	}
    }
    else {
        return false;
    }
}
"
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
"
47bcbb118b9820ce001397912cd55ec9c5521a9b,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
        return c;
    }
    if (a == c)
        return b;
    if (b == c)
        return a;
    return (a + b + c);
}
"
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
1dc0a9281fe5c33922d59a28a48a7003fd59765d,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        retrun = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
f0be04df720e45391f559d26dc0955b0202bb87b,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n != 15 && n != 16)
        	return 0;
    return n;
}
"
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
"
940a946f9a0eeb90ac4e79843d3057ce7df5edd9,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length() - 1; i++)
    {
     	if (nums[i] != 13)   
        {
         	nums[i] = 0;   
        }
     	sum = sum + nums[i];   
    }
    return sum; 
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
4bbc3e204cd69131a96c0f7ab0f9c94499406204,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
        {
            return 10;
        }
    else if ((a == b) && (b == c) && (a == c))
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
0ebd451bd7f1ba5eaaee7cc787359dde169abbc2,"public String getSandwich(String str)
{
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
        return str.substring(first + 5, last);
                                                                    
    return """";
}
"
9b06d81d2ee2682ba33f3c4251db06a7cfeaf2a8,"public int sum3(int[] nums)
{
    return 8;
}
"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
"
c386e80b45b1f867ba40aaf3d78f271a5bd2ffe0,"public int noTeenSum(int a, int b, int c)
{
	if(a <= 19 && a >= 13)
    {
    	return b + c;
    }
    
    if(b <= 19 && b >= 13)
    {
    	return a + c;
    }
    
    if(c <= 19 && c >= 13)
    {
    	return a + b;
    }
}

public int fixTeen(int n)
{
	    
}
"
2b976fe20b1e401744827a000d91d5535db7d93b,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <=90);
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
bf0fb85d68a871de1263a11b4d6bf089714fa3ce,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0 ; nums.length > i; i++)
    {
        if (nums[i] == val || nums[i+1] == val)
        {
            return true;
        }
    }
    return false;
    
}
"
b03f6ee58d1c2efbc298c1b090d888a47d5425a9,"public boolean evenlySpaced(int a, int b, int c)
{
    if (b-a <= 1 && c-a >= 2 && c-b >= 2 
        || b-a >= 2 && c-a <= 1 && c-b >=2
        || b-a >=2 && c-a >= 2 && c-b <= 1)
        return true;
    return false;
}
"
5b9eb535280570f293684ef95c107bc80160a334,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = len;
	for (int i =0; i <range;i++)
    {
		if (!(nums[i] == nums[nums.length - range + i]))
        {
			result = false;
        }
    }
return result;
}
"
cda4eeee2346e60e72673f13fb06774fb4ec1b1b,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
        int rightSum = 0;
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
2b64a0277763a3e3aeb7d462893bb8e9e84266a5,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
        
        for (int i = 0; i < nums.length; i++)
        {
            sum += nums[i];
            if (nums[i] < min)
            {
                min = nums[i];
            }
            else if (nums[i] > max)
            {
                max = nums[i];                
            }
        }
    int average = (sum - min - max) / (nums.length - 2);
    
    return average;
}
"
ba8cfb4cad91f6a68d58ca4ab3a88d035f324a8c,"public int sortaSum(int a, int b)
{
    if ( a + b >= 10 && a + b <= 19) {
        retun 20;
    }
    else {
        return a + b;
    }
}
"
95315d4f40fee982b6719168e94180e03704160d,"public int sum3(int[] nums)
{
   return (nums[0] + nums[1] + nums[2]); 
}
"
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
"
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
"
8e2fbb177f04d826bcf31a521e3d2d5c0a540cf5,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if(sum >= 10 || sum <= 19)
    {
    	return sum;
    }
    
    else if (sum<=9 || sum>=20) 
    {
    	return 20;
    }
    
    return 20;
}
"
4f020dcb2ebec419aa94d431533df15542e537ec,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
    return false;
}
"
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
828a3b0db925adca159220f3e9faf2fb4e24446a,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21){
        return a;
    }else if (b > a && b <= 21){
        return b;
    }else if (a > 21 && b < 22){
        return b;
    }else if (b > 21 && a < 22){
        return a;
    }else{
        return 0;
    }
}
"
5cd02f6c04c19cfba3433b99e62352d722eab1e6,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
	    if (a > b)
	    {
   		  	return a;
	    }
	    else
    	{
    	 	return b;
    	}
    }
    else
    {
       	return 0;
    }
}
"
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
"
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
"
64e6a1b1c2176532ea3545edbf85eecc952dbf18,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a;
    return diffOne == diffTwo;
}
"
9854a8715c3f2ef0abd481b669c936355c5f9760,"public int sum67(int[] nums)
{
    int sum = 0;
    
    for (int i : nums)
    {
        if (i == 6)
        {
            for (int j = 6; j <= 7; j++)
            {
                i = 0;
            }
        }
        sum = sum + i;
    }
    
    return sum;
}
"
44f220b58843152b2c37e892e70f7c52224b3df7,"public int[] zeroMax(int[] nums)
{
    int max = 0; 
    for (int i = 0; i < nums.length - 1; i++) {
        if ( nums[i] == 0) {
            for (int k = i + 1; k <= nums.length - 1; k++) {
                if (nums[k] > max && nums[k] % 2 == 1) {
                    max = nums[k];
                }
                else {
                    nums[k] = max; 
                max = 0;
                }
                 
            }
        }
    }
    return nums; 
}
"
cd23c0ed240a318d70e3ddbf504fb44f78c81ffc,"public String atFirst(String str)
{ 
    if (str.length() < 2 && str.length() != 0)
    {
        return str + ""@"";
    }
    else if (str.length() == 0)
    {
        return ""@@""
    }
    else
    {
        return str.substring(0,2);
    }
    
}
"
63d94094b3bd3e432c48601fe1cde209664933eb,"public int loneSum(int a, int b, int c)
{
	if (a==b || b==c)
    {
        return c;
    }
	else if (a==c)
    {
        return b;
    }
    else 
    {
    	return a + b + c;
    }
}
"
b4b80ec23db8730d3a13b7f18055050c22aa3b95,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        else
        {
            return 2;
        }
    }
    else
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}
}"
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
"
0a4d7aee449450431db0efcda5856b22d973b605,"public String getSandwich(String str)
{
    if(str.length() > 10 &&
       str.substring(0, 5) == ""bread"" &&
       str.substring(str.length() - 6, str.length() - 1) == ""bread"")
    {
        return str.substring(5, str.length() - 6);
    }
    else {
        return str.substring(5, str.length() - 6);
    }
}
"
22d46f636a2ecaa8a80e55e579500a4ff8e2a188,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            nums[i+1] = 5;
        }
    }
    
    return nums;
}
"
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
"
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
79f2da1916c858f4bd63251e6ec244aad4272418,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
    {
		return n;
    }
    else
    {
		return 0;
    }
}
public int noTeenSum(int a, int b, int c)
{  
    return (fixTeen(a) + fixTeen(b) +fixTeen(c)); 
}
"
b89935cd76575e88ea3d850c3c4d704f4a06bb09,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b==13)
    {
        return a;
    }
    else if (c==13)
    {
        return a+b;
    }
    else
    {
        return a+b+c;
    }
}
"
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
a767440796f740efacb74e1a68a50c6ef184a501,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length - 1; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
"
c9db41e8ca91d96bee3eb4e5f89bb33135f954df,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
        return 20;
    
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
"
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}"
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
"
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
"
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
"
11b89a5a5c8c4cce3c90dfb984780d1229efc349,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[nums.length - 1] == 7 && nums[nums.length - 2] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
"
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
"
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
1d6179ccdc1c6fce139143f569025a679c1301a0,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        	largeOdd == nums[i];
        if (nums[i] == 0)
        	nums[i] == largeOdd;
    }
    return nums;
}"
ed474f0e054cf58e97af554622596132c6fa3db1,"public int roundSum(int a, int b, int c)
{	
    return(round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
	int digit = num % 10;
    if(digit >= 5)
        return num + (10- digit);
    return num - digit;
}"
aa4d8b44bff62be088c0c94a7829aa410ffa133b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        if (speed >= 81)
        {
            return 2;
        }
    }
    if (!isBirthday)
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}"
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
557026f064a89be4df627a611b8a898f7a2fc2f3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if ((nums[i] != val) || (nums[i + 1] != val))
        {
            return flase;
        }          
        
    }
     return false;
}
"
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
"
06be09e2d8d4ddfe4333697a3feaadf8e8dc3077,"public int countClumps(int[] nums)
{
    int num = 0;
    boolean still = false;
    boolean clump = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i - 1])
        {
            clump = true;
        }
        else if (nums[i] == nums[i + 1])
        {
            still = true;
            continue;
        }
        else
        {
            num++;
        }
    }
}
"
0a9dcd12a12791fe49d782b736769ace72b0d2ed,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else
    {
        if (b == 13)
        {
            return a;
        }
        else
        {
             if (c == 13)
                {
                    int AB = (a + b);
                    return AB;
                }
                else
                {
                    int ABC = (a + b + c);
                    return ABC;
                }
        }
    }
}
"
023ccb9f259b949ab0ec9836b2b130977e17f76a,"public int sum3(int[] nums)
{
    sum = nums[0] + nums[1], nums[2];
}
"
50f3da72fdd9f01a0c7804b3c9c789cddd8d9b18,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (i = 0; i < num.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count*2 == num.length);            
    
}
"
42c1b13dfbc2f7dd20266742451da0be59cbd49a,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (!isBirthday)
    {
    	if (speed <= 60)
    	{return 0;}
        
    	else if (speed >= 61 && <= 80)
    	{ return 1;}
        
    	else 
    	{return 2;}
    }
     else if (isBirthday)
        if (speed <= 65)
    	{return 0;}
    
    	if (speed >= 66 && <= 85)
    	{ return 1;}
    
    	else 
    	{return 2;}
}
"
76a3f2319da117864b8ca1165daa8eb7ace3e99c,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else 
        {
            return false;
        }
    else 
    {
        return true;
    }
}
"
8243c75a69e18cb6c9f02b072995835b37129ed9,"public boolean sameEnds(int[] nums, int len) {
boolean result = true;
int range = len;
for (int i =0; i <range;i++)
if (!(nums[i] == nums[nums.length - range + i]))
result = false;
return result;
}
"
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
c64c9e9c0a786ef3732a68209a390d30d8284fd4,"public int dateFashion(int you, int date)
{
   if ((you >= 2 || date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 || date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
fae2f7dfe0c7f6a36eed081761f1d04f77387b4b,"

    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }

"
3850876d2c56148eb728593d89548d81773d092d,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                while ((nums[i] == nums[i]) && (i < num.length)
                {
                    i++;
                }
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int sumVal = 1;
    while (nums[start] == initValue)
    {
        sumVal++;
        start++;
    }
    return sumVal;
}"
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
62d31dc1d181609f1ad5028901c8db29d61ea2b8,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    else 
    {
        return (a +b);
    }
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
"
dca1f726e64da2460020f1bbac55668502eddba7,"public int roundSum(int a, int b, int c)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
    
}

public int round10(int num)
{
    return (round10(a) + round10(b) + round10(c));
    
}
"
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
fdd9c7578eae0199293f5c67050555c877e59579,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
    }
                           
    return (sum - max - min) / (nums.length - 2);
}
"
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
7bbe47ddbd540b9999602f687a555456a4122938,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	while (isBirthday == false)
    {
    	if (speed <= 60)
        {
            return 0;
        }
    	else if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    	else if (speed >= 81)
        {
            return 2;
        }
    }
    while (isBirthday == true)
    {
        if (speed <= 65)
        {
            return 0;
        }
    	else if (speed >= 66 && speed <= 85)
        {
            return 1;
        }
    	else if (speed >= 86)
        {
            return 2;
        }
    }
    return 1;
}"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
aa4d8b44bff62be088c0c94a7829aa410ffa133b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        if (speed >= 81)
        {
            return 2;
        }
    }
    if (!isBirthday)
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}"
68c510e3ae2a5f68173421badd6c7e8d285e1fd9,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        return 0
    }
    else if (speed >= 61 && speed <= 80)
    {
        return 1
    }
    else if (speed >= 81)
    {
        return 2
    }
}
"
cda4eeee2346e60e72673f13fb06774fb4ec1b1b,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
        int rightSum = 0;
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
"
9eb233b4442526c98e5181cbd698f5839c08adb3,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a == c || b == c || a == c)
        return false;
    if (a == b || b == c)
        return true;
    else
        return ((Math.abs(a - c)==Math.abs(a - b))) ||( Math.abs(c - a)==Math.abs(b - c) || Math.abs(a - b) == Math.abs(b - c));
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
"
f8e2e6bb5d3f455462c4a729ac1c0772ed521c99,"public boolean twoTwo(int[] nums)
{
    if (nums.length < 2 && nums[0] != 2 )
    {
     	return true;   
    }
    else if (nums.length < 1)
    {
     	return false;   
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
42c1b13dfbc2f7dd20266742451da0be59cbd49a,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (!isBirthday)
    {
    	if (speed <= 60)
    	{return 0;}
        
    	else if (speed >= 61 && <= 80)
    	{ return 1;}
        
    	else 
    	{return 2;}
    }
     else if (isBirthday)
        if (speed <= 65)
    	{return 0;}
    
    	if (speed >= 66 && <= 85)
    	{ return 1;}
    
    	else 
    	{return 2;}
}
"
0f838818781093168101b362c3ceaa5ac771a653,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 2;
}
"
c90c3a1e01ce11092849215d094a7f5176711ab5,"public int countClumps(int[] nums)
{
    int clump = 0;
    for (int i = 0; i < nums.length; i++) { 
        if (nums(i) == num(i + 1) {
            clump = clump + 1;
    }
    return clump;
}
"
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
"
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
"
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
"
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
"
089ca3166be0e9056768d2bb5712cd5bd123b58a,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[3]);
}
"
18ab89e18a6ce4e406b204406f6fb94214480bd9,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 10;
    if (a == b && b == c && a == c)
        return 5;
    if (a != b && b != c && a != c)
        return 1;
    else
        return 0;
}
"
2efc3b1d0acaa60b452bf611f88e4f3873fd00aa,"public boolean isEverywhere(int[] nums, int val)
{
    int b = 0;
    for (int i = 1; i < nums.length - 1; i++) {
        if (nums[i] == val || nums[i-1] == val ||
            nums[i+1] == val) {
            	b++;
        }
    }
    return b == nums.length - 2;
}
"
b7a9395b99fe850b2082792560bb36ab00860020,"public int redTicket(int a, int b, int c)
{
    int result = 0;
    if (a == 2 && b == 2 && c == 2)
        result = 10;
    else if (a == b && b == c)
        result = 5;
    else if (a != b && a != c)
        result = 1;
    else
        result = 0;
    return result;
}
"
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
1d6179ccdc1c6fce139143f569025a679c1301a0,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        	largeOdd == nums[i];
        if (nums[i] == 0)
        	nums[i] == largeOdd;
    }
    return nums;
}"
66d85cf0a88bd29710d927fcc5ef0a8a5866b68e,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = a - b;
    int diffTwo = c - b;
    if (diffOne == diffTwo)
    {
        return true;
    }
    else
        return false;

}
"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
226b5d8a7b8a50ea1a33a1983fecefe1ef7fa72b,"public boolean canBalance(int[] nums)
{
	int leftNum = 0;
	int rightNum;
	for(int i = 0; i < nums.length - 1; i++)
    {
		leftNum += nums[i];
    }
	rightNum = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(leftNum == rightNum)
        {
			return true;
        }
		leftNum -= nums[i];
		rightNum += nums[i];
	}
	return (leftNum == rightNum);
}"
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
610dbd70704f6fe7a7fa838ba5850c555c6ec37d,"public String withouEnd2(String str) 
{
        if (str.length() <= 2) 
            return """";
        return str.substring(1, str.length() - 1);
}
"
61705bfd5a5b9bf82e4d10be405cc3a01e829d51,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a +b <= 19)
        return 20;
    else
        return a + b;
}
"
270174ce7d53738e854429dc81bc8b311180b333,"public int[] shiftLeft(int[] nums)
{
    return int[] nums;
}
"
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
"
9854a8715c3f2ef0abd481b669c936355c5f9760,"public int sum67(int[] nums)
{
    int sum = 0;
    
    for (int i : nums)
    {
        if (i == 6)
        {
            for (int j = 6; j <= 7; j++)
            {
                i = 0;
            }
        }
        sum = sum + i;
    }
    
    return sum;
}
"
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
"
fd19ee70b6ed78dc3c5cf345b006e41ad230749d,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
7bbe47ddbd540b9999602f687a555456a4122938,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	while (isBirthday == false)
    {
    	if (speed <= 60)
        {
            return 0;
        }
    	else if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    	else if (speed >= 81)
        {
            return 2;
        }
    }
    while (isBirthday == true)
    {
        if (speed <= 65)
        {
            return 0;
        }
    	else if (speed >= 66 && speed <= 85)
        {
            return 1;
        }
    	else if (speed >= 86)
        {
            return 2;
        }
    }
    return 1;
}"
f3ddf9031a05285f6f9fec49ad403733b0696a3c,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
    	if (speed >= 65)
        {
        	return 0;
        }
    	else if (speed <=85 && speed >= 66)
        {
        	return 1;
        }
    	else if (speed >= 86)
        {
        	return 2;
        }
    }
    else
    {
        if (speed >= 60)
        {
        	return 0;
        }
    	else if (speed <=80 && speed >= 61)
        {
        	return 1;
        }
    	else if (speed >= 81)
        {
        	return 2;
        }
	}
return giveTicket;
    
"
ab752aa9f041e605c697b86bdcb50aa8b25db534,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
"
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
"
a05e5d98a96c772e1afad34a0ae82871a6e741d0,"public String zipZap(String str)
{
    int num = 0;
    for (int i = 2; i < str.length(); i++)
    {
        if (str.charAt(num) == 'z' && str.charAt(i) == 'p')
        {
            str.replace(str.substring(num, i), ""zp"")
        }
        num += 1;
    }
    return str;
}
"
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
"
07bfb6fcfa70e37188bff5b83b62a677ed999984,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
"
31d2de2c4723037a38f2b62dd095d3efaf175d3f,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
}
"
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
"
c72936a1839694da8df5554d66db79bf67bec60c,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (isBirthday)
    {
        speed = speed + 5
    }
	if (speed <= 60)
	{
    	return 0;
	}
    
	if (speed >= 61 && speed <= 80)
	{
    	return 1;
	}
    
	if (speed >= 81)
	{
    	return 2;
	}
	
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
"
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
"
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
563e70492a46c1983409ddc52f1edaf6f8bfba29,"public int countClumps(int[] nums)
{
    int merlin = 0;
    
    for(int i = 0; i < nums.length - 1  ; i++)
    {
        if (nums[i] == nums[i+1])
        {
            merlin++
        }
           
    }
    return merlin;
}
"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
e87542225324deb36fc5891405e6401d53aab2a3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed -= 5;
    }
    if (speed=<60)
    {
        return 0;
    }
    if (speed>=61 && speed<= 80)
    {
        return 1;
    }
    if (speed>=81)
    {
        return 2;
    }
}
"
d0e7e4f01d1bd84602edf6ae34c0d764c24c4815,"public int countCode(String str)
{
    int i = 0;
    int time = 0;
    int l = str.length() - 3;
    
    while (i < l)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt( i 			+3 == 'e')
            {
                time++;
                i += 4;
            }
            i++;
            }
            return time;
        
}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
532a012b0ec202d27262b383dc13089aef7e1e3b,"public int dateFashion(int you, int date)
{
   if ((you >= 2 && date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 && date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
95bc23f4a1f6b717433734c1ec1d9db84c09782c,"public int countEvens(int[] nums)
{
    int i = 0;
    for (int number: nums)
    {
        if (number % 2 == 0)
        {
            i++;
        }
    }
    return i;
}
"
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
"
ebd32bc9d73aea5eb17d579604ff55398843bcff,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1

"
4922371b92b222012e44535853e7674bb94610e3,"public boolean twoTwo(int[] nums)
{
    if (nums.length <= 1)
    {
        return false;
    }
    if (nums.length == 2)
    {
       return (nums[0] == 2 || nums[1] == 2);
            
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
    }
    return true;
}
"
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
"
557026f064a89be4df627a611b8a898f7a2fc2f3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if ((nums[i] != val) || (nums[i + 1] != val))
        {
            return flase;
        }          
        
    }
     return false;
}
"
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
a2a2884e41048d06a4cb030480f7393277c7ec9a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + nums[i];
        if (nums[i] == 13)
        {
            sum = sum - (13 = nums[i + 1]));
        }
    }
    return sum;
}
"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
11b89a5a5c8c4cce3c90dfb984780d1229efc349,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[nums.length - 1] == 7 && nums[nums.length - 2] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
"
b4b80ec23db8730d3a13b7f18055050c22aa3b95,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        else
        {
            return 2;
        }
    }
    else
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}
}"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
22fda47732546394dab7ecbb147aa3cdbdb03099,"public boolean xyBalance(String str)
{
  int l = str.length() - 1;
    for (int i = l; i >= 0; i--)
    {
        char n = str.charAt(i);
        if (n == 'x')
        {
            return false;
        }
        if (n == 'y')
        {
            return true;
        }
    }
    return true;
    }
"
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
"
265dd4458fb43967c87890408a4569ed8e08a397,"public String alarmClock(int day, boolean vacation)
{
    if alarmClock(< 6, false)
    {
        return ""7:00""
    }
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
"
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
02c1f791fb8f450361e3bba08c084c74102eeb61,"public int countEvens(int[] nums)
{
    for (num: int[] nums)
    {}
}
"
528342efb0a38ace805355f9ecda4f69f0397a23,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
	if (a == 13)
    {
        return sum;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        int sum = a + b;
        return sum;
    }
    else
    {
        int sum = a + b + c;
        return sum;
    }
}
"
462c32a961f9e37900f45d8ce5b1817ecd8a2c74,"public int noTicket(0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
"
377d33b5c5fd6194c58592818a016612e427dfc7,"public int[] fix45(int[] nums)
{
    int f45 = 0;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i + 1] != 5)
		{
			for(!(nums[f45] == 5 && (f45 == 0 || f45 > 0 && nums[f45 - 1] != 4)) f45++)
            {
			nums[j] = nums[i + 1];
			nums[i + 1] = 5;
            }
		}
	}
	return nums;
}
"
d50d492ebb2d39ef30d910d235f290f774635c0f,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    if (a == b && a == c && b == c)
        return 0;
    else
        return a + b + c;
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
bedb2c2c407cfc6f84128d3bcf6e102d6628dd32,"public boolean sameEnds(int[] nums, int n)
{
    if (n <= 1)
    {
    	for (int i = 0; i <= n; i++)
    	{
            if (nums[i] != nums[nums.length - 1 - i])
        	{
            	return false;
        	}
    	}
    }
    else
    {
        for (int i = 0; i <= n; i++)
    	{
            
            else if (nums[i] != nums[nums.length - n + i])
        	{
            	return false;
        	}
    	}
        
    }
    return true;
}
"
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
"
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
888a63dff1f59fa6a944754dead51bf5ff29d397,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}"
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}"
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
"
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
"
06ce870f764275dc4fbe2e7c3328c4f9612d64a7,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 0; i<n; i++)
    {
        last = last + last;
    }
    return last;
        
}
"
2e007e796e35e7e1dc3f93fe57d7994c06428678,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 && n == 16)
            return n;
        else
        	return 0;
    return n;
}
"
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
"
66d81d6a71405ccedc06586970c02dcccae77323,"public int[] fix45(int[] nums)
{
    int k;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(k = 0; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4)); k++)
            {
                k = k;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
86eeb69c66325d7ac263cfba4f58a77188d3d872,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int test = 0;
        int[] testArray = new int[nums.length];
        for (int x = 0; x < nums.length; x++)
        {
            testArray[x] = nums[x];
            test++;
        }
        if (test == nums.length)
        {
            return 1;
        }
        
        
        
        
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i]);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init)
{
    int nextNum = 0;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
b6ba17f1e789afbf3ef81685a53e5e5f8cc3dfd0,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));	}
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
"
c9db41e8ca91d96bee3eb4e5f89bb33135f954df,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
        return 20;
    
}
"
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
"
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
6bb0ee0ad18b7740337fbdd1e749d82571043674,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
"
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
a040447a7a4d000d3f8dce6203fbc10a54cdf382,"public int blackjack(int a, int b)
{
    if (a>21)
    {
        a=0;
   		return a;
    }
    if (b>21)
    {
        b=0;
        return b;
    }
    if (a>b)
    {
     return a;   
    }
	else
	{	
    return b;
    }
}
"
9854a8715c3f2ef0abd481b669c936355c5f9760,"public int sum67(int[] nums)
{
    int sum = 0;
    
    for (int i : nums)
    {
        if (i == 6)
        {
            for (int j = 6; j <= 7; j++)
            {
                i = 0;
            }
        }
        sum = sum + i;
    }
    
    return sum;
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
"
b21271e79419b123e5e2d4ff29ca2f214f3fb90e,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if (a==b || a==c || b==c)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
"
f7b456f80d5d6eacf91bd50ba9de7fdff9abbc6f,"public int greenTicket(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 20;
    }    
    
    if ((a == b) || (b == c) || (a == c))
    { 
        return 10;
    } 
    else
    {
    	return 0;
    }
}
"
18ab89e18a6ce4e406b204406f6fb94214480bd9,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 10;
    if (a == b && b == c && a == c)
        return 5;
    if (a != b && b != c && a != c)
        return 1;
    else
        return 0;
}
"
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
"
5f0de396365017b80185b81d0904cd472b4f28f8,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if ((a == b && b != c) || (a == c && a != b) || (b == c && b != a))
    {
       return 10;
    }
    else 
    {
        return 0;
    }
}
"
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
"
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
"
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
"
47bcbb118b9820ce001397912cd55ec9c5521a9b,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
        return c;
    }
    if (a == c)
        return b;
    if (b == c)
        return a;
    return (a + b + c);
}
"
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
"
4f020dcb2ebec419aa94d431533df15542e537ec,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
    return false;
}
"
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
a2a2884e41048d06a4cb030480f7393277c7ec9a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + nums[i];
        if (nums[i] == 13)
        {
            sum = sum - (13 = nums[i + 1]));
        }
    }
    return sum;
}
"
2216bc569ee8caff75d3702a81475722e85c8551,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 || n == 16)
            return n;
        return 0;
    //return n;
}
"
e93ac984fe80d9ff8d2b28a49fe9042f2029629f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] % 10 == 0)
        {
            if (nums[i + 1] % 10 != 0)
            {
                nums[i + 1] = nums[i];
            }
        }
    }
    return nums;
}
"
cd80603c865a5f537dae1c802b4d53681015978e,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
61705bfd5a5b9bf82e4d10be405cc3a01e829d51,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a +b <= 19)
        return 20;
    else
        return a + b;
}
"
a2c77eb2341d2107484dea64721c8eb1fb2b5c9b,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else if (c == 13)
    {
    	sum = a + b;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum;
    }
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
0bd7fe95ce9749e4f8a7edf4208f6c161ea14ca1,"public int countCode(String str)
{
    int x = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c')
        {
            if (str.charAt(i+1) == 'o')
            {
                if (str.charAt(i + 3) == 'e')
                {
                    x++;
                }
            }
        }
    }
    return x;
}
"
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
"
dead7e5e377079599c11bb673bf7c1248fef60fc,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if ( a == b && b == c)
    {
        sum = a;
    }
    else if (a == b || a == c)
    {
        sum = sum - a;
    }
    else if (b == c)
    {
        sum = sum - b;
    }
    return sum;
}
"
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
"
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
CodeStateID,Code
309dc7997e1010df732f8ec41fd34a616365f55d,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if ((str.substring(i, i + 1) == 'co') 
            && (str.substring(i + 3) == 'e'))
        {
            count++;
        }
    }
    return count;
}
"
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
"
34ad16a72b0a75568a00e876dfb72953f291c9ab,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            clumps++;
        }
    }
    return clumps;
}
"
fbd4c23e76bef6c785eaeac729ab320635a7682b,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
"
db9b29b114ae85d86c3fe363b9c8f7afce6147c3,"public int countCode(String str)
{
    int count = 0;
    for ( int i = 0; i < str.length() - 3; i++ )
    {
        if ( ""co"".equals( str.substring( i, i + 2 ) ) )
        {
            if ( str.charAt( i + 3 ) == 'e' )
            {
                count++;
            }
        }
    }
    return count;
}
"
ba8cfb4cad91f6a68d58ca4ab3a88d035f324a8c,"public int sortaSum(int a, int b)
{
    if ( a + b >= 10 && a + b <= 19) {
        retun 20;
    }
    else {
        return a + b;
    }
}
"
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
2d1d1fb5d01448f6fb807ae2e7396795eba1c3fd,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0
    }
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
"
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
"
13e7ebf5b1cb8a39e420140214502a74809a7fad,"public int countCode(String str)
{
    int num = 0;
    for(int i = 0; i < str.length() - 3; i++) {
        if(str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i + 3) == 'e')
            num++;
    }            
    return num;
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
bedb2c2c407cfc6f84128d3bcf6e102d6628dd32,"public boolean sameEnds(int[] nums, int n)
{
    if (n <= 1)
    {
    	for (int i = 0; i <= n; i++)
    	{
            if (nums[i] != nums[nums.length - 1 - i])
        	{
            	return false;
        	}
    	}
    }
    else
    {
        for (int i = 0; i <= n; i++)
    	{
            
            else if (nums[i] != nums[nums.length - n + i])
        	{
            	return false;
        	}
    	}
        
    }
    return true;
}
"
27d92c814ecd587e7e0f54fce86fe8723e8a3974,"public int redTicket(int a, int b, int c)
{
    if (a && b && c == 2)
        return 10;
}
"
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
"
b6ba17f1e789afbf3ef81685a53e5e5f8cc3dfd0,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));	}
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
07bfb6fcfa70e37188bff5b83b62a677ed999984,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
"
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
"
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
"
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
"
328f2f06f07e26aac03e4e4a6df016fc0c620fcc,"public int redTicket(int a, int b, int c)
{
      if (a == 2 && b == 2 && c == 2)
    return 10;
  if ( a == b && b == c)
    return 5;
  if ( a != b && a != c)
    return 1;
  else
    return 0;
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
"
cf6036cc34155af32690c2a41cc6f1def095e657,"public int countClumps(int[] nums)
{
    boolean areSame = false;
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh && !areSame)
        {
            clumps++;
            areSame = true;
        }
        else if (compareLow != compareHigh)
        {
            areSame = false;
        }
    }
    return clumps;
}
"
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
"
66d85cf0a88bd29710d927fcc5ef0a8a5866b68e,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = a - b;
    int diffTwo = c - b;
    if (diffOne == diffTwo)
    {
        return true;
    }
    else
        return false;

}
"
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
"
039a5741fb82006d59f66a5ffd100359f6a3aa77,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
    	if (cigars >= 40)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
    else
    {
    	if (cigars >= 40 && cigars <= 60)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
4690b3990e2eb6dd080ba258226248164f82da78,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh)
        {
            clumps++;
        }
    }
    return clumps;
}
"
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
fdd9c7578eae0199293f5c67050555c877e59579,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
    }
                           
    return (sum - max - min) / (nums.length - 2);
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
64e6a1b1c2176532ea3545edbf85eecc952dbf18,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a;
    return diffOne == diffTwo;
}
"
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
"
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
f0205df67f010e325ec1614fba0a300d61a74dec,"public int blackjack(int a, int b)
{
    double valueA;
    valueA = (a % 21);
    double valueB;
    valueB =  (b % 21);
    
    if (a < 21 || b < 21)
    {
        if (double valueA > double valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else if (a < 21 && b < 21)
    {
        if (valueA > valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else
    {
        return 0;
    }
}
"
9eb233b4442526c98e5181cbd698f5839c08adb3,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a == c || b == c || a == c)
        return false;
    if (a == b || b == c)
        return true;
    else
        return ((Math.abs(a - c)==Math.abs(a - b))) ||( Math.abs(c - a)==Math.abs(b - c) || Math.abs(a - b) == Math.abs(b - c));
}
"
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
"
3bd541a9a74cfbc86ccd7aff7e6e071a6371cb04,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
"
0a4d7aee449450431db0efcda5856b22d973b605,"public String getSandwich(String str)
{
    if(str.length() > 10 &&
       str.substring(0, 5) == ""bread"" &&
       str.substring(str.length() - 6, str.length() - 1) == ""bread"")
    {
        return str.substring(5, str.length() - 6);
    }
    else {
        return str.substring(5, str.length() - 6);
    }
}
"
8dd0ea4aa40c9c74b0f4a3dddd8ecdfabf898186,"public int sortaSum(int a, int b)
{
    sum = a+b;
    if (sum>=10&&sum <=19)
    {
        return 20;
    }
    else
    {
        return sum;
    }
    
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
4bbc3e204cd69131a96c0f7ab0f9c94499406204,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
        {
            return 10;
        }
    else if ((a == b) && (b == c) && (a == c))
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
66d81d6a71405ccedc06586970c02dcccae77323,"public int[] fix45(int[] nums)
{
    int k;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(k = 0; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4)); k++)
            {
                k = k;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
4cad14f6dc235bb7665a336718b0bc721df9ddd2,"public boolean isEverywhere(int[] nums, int val)
{
    Boolean result = true;
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            result = true;
        }
        else
        {
            result = false;
            break;
        }
    }
    return result;
}
"
5b9eb535280570f293684ef95c107bc80160a334,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = len;
	for (int i =0; i <range;i++)
    {
		if (!(nums[i] == nums[nums.length - range + i]))
        {
			result = false;
        }
    }
return result;
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
"
27986e92f636a98dd570597a3cc6cc2f8c45faad,"public int blackjack(int a, int b)
{
    if (int a>21 && int b>21);
    {
        return 0;
    }
    else if (int a > 21);
    {
        return 'b';
    }
    else if (int b > 21);
    {
        return 'a';
    }
    else if ((21-a)>(21-b));
    {
        return 'a';
    }
    else
    {
        return 'b';
    }
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
c8a0be59dec0a41242ebf952c04bb2e31259d489,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
87db562c5af3675b9fcf8cdf88341f5c205a229a,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return 0;
    }
    
    if (b == 13)
    {
        return a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
31d2de2c4723037a38f2b62dd095d3efaf175d3f,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
}
"
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
"
76a3f2319da117864b8ca1165daa8eb7ace3e99c,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else 
        {
            return false;
        }
    else 
    {
        return true;
    }
}
"
0fd5c40c96b7dfad240c5509995b5acc9eccd6b3,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
582b917e4c3a6c8bdf35c427341ab5ddf0ac9d24,"public int sortaSum(int a, int b)
{
    if(a + b >= 10 || a + b <= 19)
    {
    	return a + b;
    }
    
    else 
    {
    	return 20;
    }
}
"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
8f13baf6c1f32fe1e3c57fc757c44293a34e0980,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    if (isAsleep)
    {
        return false;
    }
    else if (!isAsleep)
    {
        return true;
    }
    return false;
    
}
"
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
"
2efc3b1d0acaa60b452bf611f88e4f3873fd00aa,"public boolean isEverywhere(int[] nums, int val)
{
    int b = 0;
    for (int i = 1; i < nums.length - 1; i++) {
        if (nums[i] == val || nums[i-1] == val ||
            nums[i+1] == val) {
            	b++;
        }
    }
    return b == nums.length - 2;
}
"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
c8a0be59dec0a41242ebf952c04bb2e31259d489,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
"
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
"
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
787a85062f05f6204afae52da91cfbe56d85e07c,"public String zipZap(String str)
{
    String newString = """";
    for (int i = 0; i < str.length(); i++) 
    {
        if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p') 
        {
            newString += str.charAt(i) + """" + str.charAt(i + 2);
            i = i + 2;
        }
        else 
        {
            newString += str.charAt(i);
        }
    }
    return newString;
}
            

"
4f020dcb2ebec419aa94d431533df15542e537ec,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
    return false;
}
"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
18ab89e18a6ce4e406b204406f6fb94214480bd9,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 10;
    if (a == b && b == c && a == c)
        return 5;
    if (a != b && b != c && a != c)
        return 1;
    else
        return 0;
}
"
62d31dc1d181609f1ad5028901c8db29d61ea2b8,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    else 
    {
        return (a +b);
    }
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
"
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
8ea314af4ea3aa3a6d57f2c90ff7786608a23927,"public int noTeenSum(int a, int b, int c)
{
	int numA = a;
    int numB = b;
    int numC = c;
    return (fixTeen(numA) + fixTeen(numB) + fixTeen(numC));
}

public int fixTeen(int n)
{
    int num = n;
    if (num == 15 || num == 16)
    {
        return num;
    }
    else if (num >= 13 && num <= 19)
    {
        return 0;
    }
    else
    {
        return num;
    }
}
"
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
"
1a8680cd065c51ad938bf3fdbf24f40af8fe3e8b,"public int roundSum(int a, int b, int c)
{
    a = round10(a);
    b = round10(b);
    c = round10(c);
    int sum = a + b + c;
    return sum;
}

public int round10(int num)
{
    int ending = num % 10;
    if (ending >= 5) {
        num = num + 10 - ending;
    }
    else {
        num = num - ending;
    }
    return num;
}
"
3d89f76d27956de3a51e53f7ba12c5aa1fc7e352,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom && isAsleep)
        return true;
    if (isMorning && !isMom && !isAsleep)
        return false;
    if (isMorning && isMom && !isAsleep)
        return false;
    return false;    
}
"
22d46f636a2ecaa8a80e55e579500a4ff8e2a188,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            nums[i+1] = 5;
        }
    }
    
    return nums;
}
"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
cc77cf7675005a0bdbc9fe76c75879f1ad156087,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
f87b721de5fa4f5ff50d17d9cca6a2ce7875ebf3,"public int[] zeroMax(int[] nums) {

  int max = 0;

   

  for (int i = nums.length-1; i >= 0; i--) {

    if (nums[i] % 2 != 0)

      max = Math.max(max, nums[i]);

    if (nums[i] == 0)

          nums[i] = max;

  }

  return nums;

}

"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
4e651e8df90f087942b32424b07d4257df1ddc47,"public String atFirst(String str)
{
    return '@';
}
"
44f220b58843152b2c37e892e70f7c52224b3df7,"public int[] zeroMax(int[] nums)
{
    int max = 0; 
    for (int i = 0; i < nums.length - 1; i++) {
        if ( nums[i] == 0) {
            for (int k = i + 1; k <= nums.length - 1; k++) {
                if (nums[k] > max && nums[k] % 2 == 1) {
                    max = nums[k];
                }
                else {
                    nums[k] = max; 
                max = 0;
                }
                 
            }
        }
    }
    return nums; 
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
5f0de396365017b80185b81d0904cd472b4f28f8,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if ((a == b && b != c) || (a == c && a != b) || (b == c && b != a))
    {
       return 10;
    }
    else 
    {
        return 0;
    }
}
"
ee4708e15be1f13f8c489f277d070e2cddbf6ff4,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length ; i++)
    {
     	if (nums[i] == 13)   
        {
         	i++;
        }
     	sum = sum + nums[i];   
    }
    return sum; 
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
761faf27118f8d7637200b8140f5a550d392d440,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
     if ( (n >=13 && n < 15) || (n > 16 && n <= 19) )
     {
         return 0;
     }
    else
    {
        return n;
    }
}

"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
493267658ead76f2221aae551e38a001ba5eab78,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep)
    {
        if (isMorning)
        {
            if (isMom)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        else
        {
            return true;
        }
    }
    else
    {
        return false;
    }
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
"
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
"
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
"
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
f53fe967f0579e586ca2895910f4b0362cabe181,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
fd19ee70b6ed78dc3c5cf345b006e41ad230749d,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
f3ddf9031a05285f6f9fec49ad403733b0696a3c,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
    	if (speed >= 65)
        {
        	return 0;
        }
    	else if (speed <=85 && speed >= 66)
        {
        	return 1;
        }
    	else if (speed >= 86)
        {
        	return 2;
        }
    }
    else
    {
        if (speed >= 60)
        {
        	return 0;
        }
    	else if (speed <=80 && speed >= 61)
        {
        	return 1;
        }
    	else if (speed >= 81)
        {
        	return 2;
        }
	}
return giveTicket;
    
"
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
0f838818781093168101b362c3ceaa5ac771a653,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 2;
}
"
09c6de5e29a256d7add784dac3a966346a82e499,"public int countClumps(int[] nums)
{
    int clumps = 0;
    int flag = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == flag)
            continue;
        if (nums[i] == nums[i + 1])
        {
            clumps++;
            flag = nums[i];
        }
        else
        {
            flag = nums[i];
        }
    }
    return clumps;    
}
"
150674542f779f0f080fa72fb20d5088fbe7f75e,"public int sortaSum(int a, int b)
{
    int sum = 0;
    sum = a + b;
    if (sum >= 10 && sum <= 19){
        sum = 20;
    }
    return sum;
}
"
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
"
50f3da72fdd9f01a0c7804b3c9c789cddd8d9b18,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (i = 0; i < num.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count*2 == num.length);            
    
}
"
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
"
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
"
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
b16439cf6ef5c619010c64a8fb33444995f538e6,"public String plusOut(String str, String word)
{
    String returnString = """";
    int lastIndex = str.indexOf(word);
    int i = lastIndex;
    
    while (i < str.length())   
    {
        if (i == str.indexOf(word, lastIndex))
        {
            returnString = returnString + word;
            lastIndex = i;
            i += (word.length() - 1);
        }
        
        else
        {
            returnString = returnString + ""+"";
            i++;
        }
    }
	return returnString;
}
"
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
"
b39fe8089a563103c0f642be5647243d61b4c66b,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     if (isAsleep)

    return false;

  if ((isMorning && isMom) || !isMorning)

    return true;

  else return false;
}
"
377d33b5c5fd6194c58592818a016612e427dfc7,"public int[] fix45(int[] nums)
{
    int f45 = 0;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i + 1] != 5)
		{
			for(!(nums[f45] == 5 && (f45 == 0 || f45 > 0 && nums[f45 - 1] != 4)) f45++)
            {
			nums[j] = nums[i + 1];
			nums[i + 1] = 5;
            }
		}
	}
	return nums;
}
"
8fbb70b4ce6f9c55dcd5d47f50272f1685330601,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
            return true;
        else 
            return false;
    }
    if (isAsleep)
        return false;
}
"
a040447a7a4d000d3f8dce6203fbc10a54cdf382,"public int blackjack(int a, int b)
{
    if (a>21)
    {
        a=0;
   		return a;
    }
    if (b>21)
    {
        b=0;
        return b;
    }
    if (a>b)
    {
     return a;   
    }
	else
	{	
    return b;
    }
}
"
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
"
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
"
b03f6ee58d1c2efbc298c1b090d888a47d5425a9,"public boolean evenlySpaced(int a, int b, int c)
{
    if (b-a <= 1 && c-a >= 2 && c-b >= 2 
        || b-a >= 2 && c-a <= 1 && c-b >=2
        || b-a >=2 && c-a >= 2 && c-b <= 1)
        return true;
    return false;
}
"
762f08246c122eabc1b2c86550fef5a51f4c34a7,"public int round10(int num)
{
	int digit = num % 10;
	if(digit >= 5)
    {
		return num + (10 - digit);
    }
	return num - digit;
}
public int roundSum(int a, int b, int c)
{	
    return (round10(a) + round10(b) + round10(c));	
}"
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
49eb57187ce32f7392ba9eb954bfc79921194a03,"public int countCode(String str)
{
    int count = 0;
    int i = 0;
    int length = str.length() - 3;
    while (i < length)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) = ""e"")
        {
            count++;
        }
        else
        {
            i++
        }
    }
    return times;
}
"
cd727adb54733c5b0e8ec8f90e3a20c4ce931c92,"public int makeChocolate(int small, int big, int goal)
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
    {
        return remainder;
    }
        
    return - 1;
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
332035fab0653a2a928a8daf9a5e4b0b360534a3,"public boolean twoTwo(int[] nums)
{
    int q = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums.length == 1)
        {
            return true;
        }
        if (nums[i] == 2)
        {
            if (nums.length == 1)
            {
                return false;
            }
        else if (i == 0)
        {
            if (nums[i + 1] == 2)
            {
                q = q + 0;
            }
            else
            {
                q = q + 100;
            }
        }
        else if (i == nums.length - 1)
        {
            if (nums[i - 1] == 2)
            {
                q += 0;
            }
            else
            {
                q += 100;
            }
        }
        else
        {
            if (nums[i - 1] == 2 || nums[i + 1] == 2)
            {
                q += 0;
            }
            else
            {
                q += 100;
            }
        }
        }
    }
    if ( q >= 100)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
d96a0285c6ef424bb4ff5119134143d2d1c7d7b0,"public String alarmClock(int day, boolean vacation)
{
	if (vacation)
    {
       	if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
    {
        if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""10:00"";
        }
		else if (day == 0 || day == 6)
        {
            return ""off"";
        }
    }
}
"
bb771f79da2e164515e0325c84eaa2dbd392e69b,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = 0;
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}"
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
cda4eeee2346e60e72673f13fb06774fb4ec1b1b,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
        int rightSum = 0;
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
694a9037b08573fdb83bf861651119e9cdc03f82,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 1; i<n; i++)
    {
        last = last + str.substring(str.length()-n);
    }
    return last;
        
}
"
02c1f791fb8f450361e3bba08c084c74102eeb61,"public int countEvens(int[] nums)
{
    for (num: int[] nums)
    {}
}
"
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
"
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
"
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
"
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
"
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
"
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
"
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
bedb2c2c407cfc6f84128d3bcf6e102d6628dd32,"public boolean sameEnds(int[] nums, int n)
{
    if (n <= 1)
    {
    	for (int i = 0; i <= n; i++)
    	{
            if (nums[i] != nums[nums.length - 1 - i])
        	{
            	return false;
        	}
    	}
    }
    else
    {
        for (int i = 0; i <= n; i++)
    	{
            
            else if (nums[i] != nums[nums.length - n + i])
        	{
            	return false;
        	}
    	}
        
    }
    return true;
}
"
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
1f392835abe1515bae3d0a8fcfedc983a40383fb,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
		return 0;
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
"
309dc7997e1010df732f8ec41fd34a616365f55d,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if ((str.substring(i, i + 1) == 'co') 
            && (str.substring(i + 3) == 'e'))
        {
            count++;
        }
    }
    return count;
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
"
47f3a74a254afbf6c445487eff4eb1c0df9e20df,"public boolean has77(int[] nums)
{
    int blob = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (i < nums.length - 2)
        {
            if (nums[i] == nums[i + 1] && nums[i] == 7)
        	{
            	blob = blob + 100;
        	}
            if (nums[i] == nums[i + 2] && nums[i] == 7)
            {
                blob = blob + 100;
            }
        }   
        else if (nums[i] == nums[i + 1] && nums[i] == 7)
        {
            blob = blob + 100;
        }
        else
        {
            blob = blob + 1;
        }
    }
    return blob >= 100;
}
"
8e2fbb177f04d826bcf31a521e3d2d5c0a540cf5,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if(sum >= 10 || sum <= 19)
    {
    	return sum;
    }
    
    else if (sum<=9 || sum>=20) 
    {
    	return 20;
    }
    
    return 20;
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
a457e813b62121d4bee7f0cd63ba678e9441866c,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c && b == c){
            result = 10;
        }
     }
    else if ( c == b){
        result == 10;
    }
        
            
    return result;
}
"
d8f6de34bbb4daabf4789e4930885c05e8604106,"public int countClumps(int[] nums)
{
    int clumpNum = 0;
    int clump = 0;
    for (int = 0; i < nums.length - 1; i++)
    {
     	if (clump == 0 && nums[i] == nums[i+1])
        {
            clumpNum++;
            clump++;
        }
        else
        {
         	clump = 0;   
        }
    }
    return clumpNum;
}
"
9b06d81d2ee2682ba33f3c4251db06a7cfeaf2a8,"public int sum3(int[] nums)
{
    return 8;
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
b6ba17f1e789afbf3ef81685a53e5e5f8cc3dfd0,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));	}
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
80b80a660b8113337e5dc1d8d8d78cd8c918c58c,"public int[] seriesUp(int n)
{
    int[] result = new int[n*(n+1)/2];
    int m = 0;
    for (int i = 0;i<=n;i++)
    {
        for (int j = 1;j<i;j++, m++)
        {
            result[m] = j;
        }
        return result;
    }
}"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
d438b7d68b37722f5d57579e7078668cf60a8b2b,"public int blackjack(int a, int b)
{
    if (a < b && b <= 21)
    {
        return b;
    }
    else if (b < a && a <=21)
    {
        return a;
    }
    else 
    {
        return 0;
    }
}
"
694a9037b08573fdb83bf861651119e9cdc03f82,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 1; i<n; i++)
    {
        last = last + str.substring(str.length()-n);
    }
    return last;
        
}
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
532a012b0ec202d27262b383dc13089aef7e1e3b,"public int dateFashion(int you, int date)
{
   if ((you >= 2 && date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 && date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
67e32e60ccf94c9e237b1ee60eec88d54337ee46,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (( n > 12 && n < 15) ||( n > 16 && n < 20 )) {
     return 0;
   }
   return n;
}
"
092a37234cccc894d13af9756eed95198aa41a1a,"ublic boolean isEverywhere(int[] nums, int val) {
	boolean result = true;
	for (int i = 0; i <=nums.length-2;i++)
	{
		if ( nums[i] != val && nums[i+1] != val)
			result = false;
	}
  	return result;
}
"
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
"
44f220b58843152b2c37e892e70f7c52224b3df7,"public int[] zeroMax(int[] nums)
{
    int max = 0; 
    for (int i = 0; i < nums.length - 1; i++) {
        if ( nums[i] == 0) {
            for (int k = i + 1; k <= nums.length - 1; k++) {
                if (nums[k] > max && nums[k] % 2 == 1) {
                    max = nums[k];
                }
                else {
                    nums[k] = max; 
                max = 0;
                }
                 
            }
        }
    }
    return nums; 
}
"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
e66af3fd10029e3b0eddec751863c4988c7a3b9a,"public boolean sameEnds(int[] nums, int n)
{
    int num = 0;
    for (int i = n; i > 0 n;i--)
    {
        if (nums[i] == nums[nums.length - i + 1])
        {
            num = num + 1;
        }    
    }
    if (num == n)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
"
7c77e6e3fc1b988356518cad44b8ccc44e6c7032,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c){
            result = 10;
        }
        else if (b == c){
        	result = 20;
        }
     }
            
    return result;
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
b89935cd76575e88ea3d850c3c4d704f4a06bb09,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b==13)
    {
        return a;
    }
    else if (c==13)
    {
        return a+b;
    }
    else
    {
        return a+b+c;
    }
}
"
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
"
bf382bc1d92127f137bb550a9abdea9839167f1f,"public int[] shiftLeft(int[] nums)
{
    int shift = nums[0];
    if (nums.length >= 2)
    {
        //int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
"
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
727d541babe278c063e729dab201403c18c6f003,"public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        str == ""bread"" - str - ""bread"";
    }
    else
    {
        return """";
    }
}
"
d0e7e4f01d1bd84602edf6ae34c0d764c24c4815,"public int countCode(String str)
{
    int i = 0;
    int time = 0;
    int l = str.length() - 3;
    
    while (i < l)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt( i 			+3 == 'e')
            {
                time++;
                i += 4;
            }
            i++;
            }
            return time;
        
}
"
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
"
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
eb3954d897ab04a8ee9649988f3d26e98aae722f,"public String[] fizzBuzz(int start, int end)
{
    String[] result = new String[end - start];
    
    for (int i = 0; i < end - 1; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
"
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
085c90128653ad2d02262a5079a336364fa0a7cb,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || b==c || a == c)
        return 10;
    else 
        return 0;
}
"
1ef1d41cd720754161cc1b953d6c374d6349e857,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)

   return 10;

  if ( a == b && b == c)

    return 5;

  if ( a != b && a != c)

    return 1;

  else

    return 0;

}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
076375a7de31fac4f71067d46b002b33e9533045,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning){
        if (isMom){
            return true;
        }
        return false;
    }
    if (isAsleep){
        return false;
    }
    return true;
}
"
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
"
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
06be09e2d8d4ddfe4333697a3feaadf8e8dc3077,"public int countClumps(int[] nums)
{
    int num = 0;
    boolean still = false;
    boolean clump = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i - 1])
        {
            clump = true;
        }
        else if (nums[i] == nums[i + 1])
        {
            still = true;
            continue;
        }
        else
        {
            num++;
        }
    }
}
"
265dd4458fb43967c87890408a4569ed8e08a397,"public String alarmClock(int day, boolean vacation)
{
    if alarmClock(< 6, false)
    {
        return ""7:00""
    }
}
"
07bfb6fcfa70e37188bff5b83b62a677ed999984,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
"
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
bf0fb85d68a871de1263a11b4d6bf089714fa3ce,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0 ; nums.length > i; i++)
    {
        if (nums[i] == val || nums[i+1] == val)
        {
            return true;
        }
    }
    return false;
    
}
"
d17244a79757f570de9d8170c3085ee0f6678c21,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom && isAsleep)
        {
            return true;
        }
        else if (isMom && !isAsleep)
        {
            return false;
        }
        else if (!isMom && isAsleep)
        {
            return false;
        }
        else if (!isMom && !isAsleep)
        {
            return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return;
}"
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
"
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}"
226b5d8a7b8a50ea1a33a1983fecefe1ef7fa72b,"public boolean canBalance(int[] nums)
{
	int leftNum = 0;
	int rightNum;
	for(int i = 0; i < nums.length - 1; i++)
    {
		leftNum += nums[i];
    }
	rightNum = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(leftNum == rightNum)
        {
			return true;
        }
		leftNum -= nums[i];
		rightNum += nums[i];
	}
	return (leftNum == rightNum);
}"
64e6a1b1c2176532ea3545edbf85eecc952dbf18,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a;
    return diffOne == diffTwo;
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
88111a1b682c4e3263232c7e42baecf389dd8a17,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0)
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
    else
    {
    	return 0;
    }
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
c32e8df18759f85c9ca9cc1ff3051aa396bf5a33,"public boolean evenlySpaced(int a, int b, int c)
{
    int[3] arrInOrder;
    arrInOrder[0] = a;
    arrInOrder[1] = b;
    arrInOrder[2] = c;
    
    int small;
    int med, big;
   /**
    if ((a > b) && (a > c)) // if a is the biggest
   {
		if (b > c)
        {
            big = a;
            med = b;
            small = c;
        }
       else
       {
           
       }
       
   }
   */
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
684d16d1fe00b522bc43f3c44174bcb4ccab14db,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && b == c && a == c)
    {
        result = 20;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    else
    {
        result = 10;
    }
    return result;
}
"
558280d818c379f1583db66238398bd41b0d7063,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
"
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
"
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
"
8bf0c02326a8dece6634c3b907e8da6aa6c7a3cf,"public int countCode(String str)
{
    if (str.length() < 4)
        return 0;
    
    if (str.indexOf(""c"") == -1)
        return 0;
    
    int total = 0;
    
    for (int i = str.indexOf(""c""); i < str.length() - 3; i++)
    {
     	   if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i+3) == 'e')
           {
            	total = total + 1;	   
           }
    }
    return total;
}
"
3d11719630fc8c44b85deba0b9752e36fb374a27,"public int luckySum(int a, int b, int c)
{
    if (a = 13)
    {
        return 0;
    }
    else if (b = 13)
    {
        return a;
    }
    else if (c = 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
"
12941eb615aae98f65aa36224718e48e3383968c,"public int loneSum(int a, int b, int c)
{
    int x = a + b + c;
    if (a == b)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == c)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return a;
        }
    }
    else if (a == c)
    {
        if (b == c)
        {
            return 0;
        }
        else
        {
            return b;
        }
    }
    else
    {
        return x;
    }
}
"
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
"
2b976fe20b1e401744827a000d91d5535db7d93b,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <=90);
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
ed474f0e054cf58e97af554622596132c6fa3db1,"public int roundSum(int a, int b, int c)
{	
    return(round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
	int digit = num % 10;
    if(digit >= 5)
        return num + (10- digit);
    return num - digit;
}"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
0a620bf30b2a7a4fce92e7ea762e2a29a92cd83d,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
3d89f76d27956de3a51e53f7ba12c5aa1fc7e352,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom && isAsleep)
        return true;
    if (isMorning && !isMom && !isAsleep)
        return false;
    if (isMorning && isMom && !isAsleep)
        return false;
    return false;    
}
"
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
"
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
"
34ad16a72b0a75568a00e876dfb72953f291c9ab,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            clumps++;
        }
    }
    return clumps;
}
"
685a1f07697cb907cefcecfa8cf5158825e90e14,"public int countCode(String str)
{
    int length = str.length() - 2;
    int num = 0;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == c && str.charAt(i + 1) == o
            && str.charAt(i + 3) == e)
        {
            num = num + 1;
        }
    }
    return num;
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
"
5cd02f6c04c19cfba3433b99e62352d722eab1e6,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
	    if (a > b)
	    {
   		  	return a;
	    }
	    else
    	{
    	 	return b;
    	}
    }
    else
    {
       	return 0;
    }
}
"
a64b521a43b279d8d198e2e93125bbfc58c0262e,"public String getSandwich(String str)
{
    if (str.startsWith(bread) && st.endsWith(bread))
    {
        return str.substsring(5, str.length() -5))
    }
}
"
b21271e79419b123e5e2d4ff29ca2f214f3fb90e,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if (a==b || a==c || b==c)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
"
cd80603c865a5f537dae1c802b4d53681015978e,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
"
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
"
22fda47732546394dab7ecbb147aa3cdbdb03099,"public boolean xyBalance(String str)
{
  int l = str.length() - 1;
    for (int i = l; i >= 0; i--)
    {
        char n = str.charAt(i);
        if (n == 'x')
        {
            return false;
        }
        if (n == 'y')
        {
            return true;
        }
    }
    return true;
    }
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
d50d492ebb2d39ef30d910d235f290f774635c0f,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    if (a == b && a == c && b == c)
        return 0;
    else
        return a + b + c;
}
"
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}"
8ade95f109e1073acef3d10c10f35e45f9e8fce5,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder    
    return -1
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
"
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
"
493267658ead76f2221aae551e38a001ba5eab78,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep)
    {
        if (isMorning)
        {
            if (isMom)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        else
        {
            return true;
        }
    }
    else
    {
        return false;
    }
}
"
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
"
226b5d8a7b8a50ea1a33a1983fecefe1ef7fa72b,"public boolean canBalance(int[] nums)
{
	int leftNum = 0;
	int rightNum;
	for(int i = 0; i < nums.length - 1; i++)
    {
		leftNum += nums[i];
    }
	rightNum = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(leftNum == rightNum)
        {
			return true;
        }
		leftNum -= nums[i];
		rightNum += nums[i];
	}
	return (leftNum == rightNum);
}"
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
"
9b06d81d2ee2682ba33f3c4251db06a7cfeaf2a8,"public int sum3(int[] nums)
{
    return 8;
}
"
1ef1d41cd720754161cc1b953d6c374d6349e857,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)

   return 10;

  if ( a == b && b == c)

    return 5;

  if ( a != b && a != c)

    return 1;

  else

    return 0;

}
"
2b6fbdd8ffb390e14349649d51e8f312d5db1ba8,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[nums.length - 1] == 2)
        return false;
    return true;
}
"
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
"
1202d346fcf0db46d6a29cff9b13366969ee2df1,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0,2));
    }
    else if (str.length() == 1)
    {
        return (str + ""@"");
    }
    else
    {
        return (""@@"");
    }
}
"
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
"
3efaac71173e97ea6c6ac0f7c521fa1adc7b0572,"public int findOdd(int[] nums, int index)
{
    biggestOdd = 1;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd = nums[j];
    return biggerOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
"
c9db41e8ca91d96bee3eb4e5f89bb33135f954df,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
        return 20;
    
}
"
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
"
f6cfdfcc045d3ced7634c7a0afcbe4afd98d380e,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
        n = 0;
    
    return n;
}
"
d4bcf6c8e35c1dc33d803d62c4c1abc06da6328d,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] == 13)
        {
         	sum = sum;   
        }
        else if (nums[i - 1] == 13)
        {
         	sum = sum;   
        }
        else
        {
         	sum = sum + nums[i];
        }
    }
    return sum;
}
"
f8e2e6bb5d3f455462c4a729ac1c0772ed521c99,"public boolean twoTwo(int[] nums)
{
    if (nums.length < 2 && nums[0] != 2 )
    {
     	return true;   
    }
    else if (nums.length < 1)
    {
     	return false;   
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
c62602f27883f984fbc0551198122402edd6e05d,"public int[] shiftLeft(int[] nums)
{
    return int[];
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
"
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
"
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
bb819a051a15f625b5912634652b195b464f7095,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length + 1 < nums.length - 2)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
"
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
"
1ced7b3ab5f86bf014b0aab47983b280fea0faf5,"public int[] frontPiece(int[] nums)
{
    returnNumber = new int[2]
    for (int i = 0; i < nums.length && i < 2; i++)
    {
        returnNumber[i] = nums[i]
    }
	return returnNumber;
}
"
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
"
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
"
b53ab834a811096b76a803c390009392801834ab,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
"
6bc66f51e027f8e766055c5683b57b6d779c2d15,"public String withouEnd2(String str) 
{
if (str.length() <= 2) 
    return """";
return str.substring(1, str.length() - 1);
}
"
eadc5df754b07dbc81ee348ee4bbd34ce3b39f20,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
        return 20;
    else
        return (a + b);
}
"
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
557026f064a89be4df627a611b8a898f7a2fc2f3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if ((nums[i] != val) || (nums[i + 1] != val))
        {
            return flase;
        }          
        
    }
     return false;
}
"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
87db562c5af3675b9fcf8cdf88341f5c205a229a,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return 0;
    }
    
    if (b == 13)
    {
        return a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
58e149b84e8a69bfecc22c0fb97c85136e4316c3,"public int findOdd(int[] nums, int index)
{
    int biggestOdd = 0;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd = nums[j];
    return biggestOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
"
d5ea2258e6bbd9d86632fcb90f4a201b12aae284,"public int greenTicket(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 20;
    }    
    
    if ((a == b) || (b == c) || (a == c))
    { 
        return 10;
    } 
    else
    {
    	return 0;
    }
}
"
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
"
bf0fb85d68a871de1263a11b4d6bf089714fa3ce,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0 ; nums.length > i; i++)
    {
        if (nums[i] == val || nums[i+1] == val)
        {
            return true;
        }
    }
    return false;
    
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
f3ddf9031a05285f6f9fec49ad403733b0696a3c,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
    	if (speed >= 65)
        {
        	return 0;
        }
    	else if (speed <=85 && speed >= 66)
        {
        	return 1;
        }
    	else if (speed >= 86)
        {
        	return 2;
        }
    }
    else
    {
        if (speed >= 60)
        {
        	return 0;
        }
    	else if (speed <=80 && speed >= 61)
        {
        	return 1;
        }
    	else if (speed >= 81)
        {
        	return 2;
        }
	}
return giveTicket;
    
"
04780365d53ec02bf23dee2452c32d0edb7fb12c,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
50f3da72fdd9f01a0c7804b3c9c789cddd8d9b18,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (i = 0; i < num.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count*2 == num.length);            
    
}
"
da854431fc95a4fda3f5795de985db2ccfd6cecc,"public boolean xyzThere(String str)
{
    if (str.length() >= 3) {
   	 	for (int i = 0; i < str.length() - 3; i++) {
        	if (str.substring(i, i + 3).equals(""xyz"")) {
            	if (i == 0) {
                    return true;
                }
                else if (str.charAt(i - 1) == '.') {
                    return false;
                }
                else {
                    return true;
                }
        	}
            else {
               return false; 
            }
    	}
    }
    else {
        return false;
    }
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
"
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
"
19a5b90083c799114b8bccdc97fb09a69be2aba1,"public int greenTicket(int a, int b, int c)
{
    if (a == b || a == c || b == c)
        return 10;
	if (a == b && a == c || b == c)
        return 20;
    else
        return 0;
}
"
70e8fe1e1559c1588960e28f03cfb0569868a17f,"public boolean evenlySpaced(int a, int b, int c)
{
    if ((Math.abs(a - b) == Math.abs(b - c)) || (Math.abs(a - c) == Math.abs(b -a)))
    {
        return true;
    }
    else
    {
        return false;
    }
        
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
"
2b64a0277763a3e3aeb7d462893bb8e9e84266a5,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
        
        for (int i = 0; i < nums.length; i++)
        {
            sum += nums[i];
            if (nums[i] < min)
            {
                min = nums[i];
            }
            else if (nums[i] > max)
            {
                max = nums[i];                
            }
        }
    int average = (sum - min - max) / (nums.length - 2);
    
    return average;
}
"
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
"
bf382bc1d92127f137bb550a9abdea9839167f1f,"public int[] shiftLeft(int[] nums)
{
    int shift = nums[0];
    if (nums.length >= 2)
    {
        //int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
4690b3990e2eb6dd080ba258226248164f82da78,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh)
        {
            clumps++;
        }
    }
    return clumps;
}
"
309dc7997e1010df732f8ec41fd34a616365f55d,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if ((str.substring(i, i + 1) == 'co') 
            && (str.substring(i + 3) == 'e'))
        {
            count++;
        }
    }
    return count;
}
"
02c1f791fb8f450361e3bba08c084c74102eeb61,"public int countEvens(int[] nums)
{
    for (num: int[] nums)
    {}
}
"
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
"
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
"
31d2de2c4723037a38f2b62dd095d3efaf175d3f,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
}
"
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
"
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
"
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
"
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
"
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
"
d9d0af4a86d3d806a73729146509fcd884212bbe,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 && (a + b) <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
d5b2f12d5cc6c645ca6a7c976d7b61c426c3a538,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
"
5c715bf4981e650031e289e8034aa0032ff99f9a,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
a6eca60d2ec41fba18ab610a87ee9c66cbb73d19,"public int findOdd(int[] nums, int index)
{
    biggestOdd = 1;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd == nums[j];
    return biggerOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
2b976fe20b1e401744827a000d91d5535db7d93b,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <=90);
}
"
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
"
bb95327d0292272d65dd996e6aa6f61c87319399,"public boolean endOther(String a, String b)
{
    if a.length() == ""a"" + ""b""
        return b.substring(0,1).toLowerCase();
}
"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
"
b6ba17f1e789afbf3ef81685a53e5e5f8cc3dfd0,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));	}
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
e2468a1fbac0f816c4df8538f0af6626551638b0,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
"
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}"
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
"
a457e813b62121d4bee7f0cd63ba678e9441866c,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c && b == c){
            result = 10;
        }
     }
    else if ( c == b){
        result == 10;
    }
        
            
    return result;
}
"
afc446a41249ff6f3b831055c3395252d73f682c,"public int findOdd(int[] nums, int index)
{
    int biggestOdd = 1;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd = nums[j];
    return biggerOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
e66af3fd10029e3b0eddec751863c4988c7a3b9a,"public boolean sameEnds(int[] nums, int n)
{
    int num = 0;
    for (int i = n; i > 0 n;i--)
    {
        if (nums[i] == nums[nums.length - i + 1])
        {
            num = num + 1;
        }    
    }
    if (num == n)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
f0be04df720e45391f559d26dc0955b0202bb87b,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n != 15 && n != 16)
        	return 0;
    return n;
}
"
c32e8df18759f85c9ca9cc1ff3051aa396bf5a33,"public boolean evenlySpaced(int a, int b, int c)
{
    int[3] arrInOrder;
    arrInOrder[0] = a;
    arrInOrder[1] = b;
    arrInOrder[2] = c;
    
    int small;
    int med, big;
   /**
    if ((a > b) && (a > c)) // if a is the biggest
   {
		if (b > c)
        {
            big = a;
            med = b;
            small = c;
        }
       else
       {
           
       }
       
   }
   */
}
"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
87b2b1811ad58d7a1fff515864427654134ed8fa,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            if (j == 0)
            {
            	while (nums[j] != 5)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
            
            else
            {
                while (nums[j] != 5 && nums[j - 1] != 4 && j < nums.length)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
        }
    }
    return nums;
}"
9db9cff5028b4b1cc75f4f5c9a641117debb19ac,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0; 
    }    
    if (b > 21)
    {
        return 0;
    }
    if ( a > b)
    {
        return a;
    }
    else
    {
        return b;
    }
    
}
"
265dd4458fb43967c87890408a4569ed8e08a397,"public String alarmClock(int day, boolean vacation)
{
    if alarmClock(< 6, false)
    {
        return ""7:00""
    }
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
9cccc838c6123ff6e830e3f73cb672510aa4de73,"public String atFirst(String str)
{
    if (str.length() >= 2)
    return str.substring(0,2);
  else if (str.length() == 1)
    return str + ""@"";
  else
    return ""@@"";

}
"
f1718cb6a2aa1704dac4fe8668d12e2c68a62b81,"public int[] fix45(int[] nums)
{
    for	(int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int k = 0;
            while	(nums[k] != 5)
            {
                k++;
            }
            nums[k] = nums[i+1];
            nums[i + 1] = 5;
            
        }
    }
    return nums;
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
88111a1b682c4e3263232c7e42baecf389dd8a17,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0)
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
    else
    {
    	return 0;
    }
}
"
d4727621894f4b6e95bac621a23e19a3148b6d8b,"public boolean endOther(String a, String b)
{
    if (a.toLowerCase().endsWith(b.toLowerCase()))
        {
            return true;
        }
    else if (b.toLowerCase().endsWith(a.toLowerCase()))
             {
                 return true;
             }
    else
             {
                 return false;
             }
}
"
6434b911e74e0d2939d97a8820552e19fd926f60,"public int countClumps(int[] nums)
{
      int current = -1, clump = 0;
  for(int i = 0; i < nums.length - 1; i++) {
    if(nums[i] == nums[i + 1] && nums[i] != current) {
       current = nums[i];
       clump++;
    } else {
       if(nums[i] != current) {
          current = -1;
       }
    }
  }
  return clump;
}
"
79f2da1916c858f4bd63251e6ec244aad4272418,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
    {
		return n;
    }
    else
    {
		return 0;
    }
}
public int noTeenSum(int a, int b, int c)
{  
    return (fixTeen(a) + fixTeen(b) +fixTeen(c)); 
}
"
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
"
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
"
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
a02eb75c4e00dfd8fa09a7d3de1220f22f7a8f27,"public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        return 0;
    }
    if (n == 15)
    {
        return 15;
    }
    if (n == 16)
        {
            return 16;
        }
}

"
95315d4f40fee982b6719168e94180e03704160d,"public int sum3(int[] nums)
{
   return (nums[0] + nums[1] + nums[2]); 
}
"
dead7e5e377079599c11bb673bf7c1248fef60fc,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if ( a == b && b == c)
    {
        sum = a;
    }
    else if (a == b || a == c)
    {
        sum = sum - a;
    }
    else if (b == c)
    {
        sum = sum - b;
    }
    return sum;
}
"
1dc0a9281fe5c33922d59a28a48a7003fd59765d,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        retrun = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
"
fae2f7dfe0c7f6a36eed081761f1d04f77387b4b,"

    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }

"
22fda47732546394dab7ecbb147aa3cdbdb03099,"public boolean xyBalance(String str)
{
  int l = str.length() - 1;
    for (int i = l; i >= 0; i--)
    {
        char n = str.charAt(i);
        if (n == 'x')
        {
            return false;
        }
        if (n == 'y')
        {
            return true;
        }
    }
    return true;
    }
"
76a3f2319da117864b8ca1165daa8eb7ace3e99c,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else 
        {
            return false;
        }
    else 
    {
        return true;
    }
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
"
c386e80b45b1f867ba40aaf3d78f271a5bd2ffe0,"public int noTeenSum(int a, int b, int c)
{
	if(a <= 19 && a >= 13)
    {
    	return b + c;
    }
    
    if(b <= 19 && b >= 13)
    {
    	return a + c;
    }
    
    if(c <= 19 && c >= 13)
    {
    	return a + b;
    }
}

public int fixTeen(int n)
{
	    
}
"
d4bcf6c8e35c1dc33d803d62c4c1abc06da6328d,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] == 13)
        {
         	sum = sum;   
        }
        else if (nums[i - 1] == 13)
        {
         	sum = sum;   
        }
        else
        {
         	sum = sum + nums[i];
        }
    }
    return sum;
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
dc77d9f47e20012cfdff686d71cf058927245c62,"public int roundSum(int a, int b, int c)
    return round10(a) + round10(b) + round10(c));

public int round10(int num)
{
    int digit = num % 10;
	if (digit >= 5)
        return num = (10 - digit);
    return num - digit;
}
"
5f0de396365017b80185b81d0904cd472b4f28f8,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if ((a == b && b != c) || (a == c && a != b) || (b == c && b != a))
    {
       return 10;
    }
    else 
    {
        return 0;
    }
}
"
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
"
5f137dbfa54f3c15c65ef24630bad52216763faa,"public int redTicket(int a, int b, int c)
{
    
    if (a== 2 && b==2 && c==2)
    {
        return 10;
    }
    
    if (a==b && a==c && b==c)
    {
        return 5;
    }
    
    if (a!=b && a!=c)
    {
        return 1;
    }
    
    
    
    
    return 0;
}
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
07bfb6fcfa70e37188bff5b83b62a677ed999984,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
"
ec7f457115687180217c5031a741ed0ee5198ec6,"public int noTeenSum(int a, int b, int c)
{
	int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
        return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
    }
}
"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
80b80a660b8113337e5dc1d8d8d78cd8c918c58c,"public int[] seriesUp(int n)
{
    int[] result = new int[n*(n+1)/2];
    int m = 0;
    for (int i = 0;i<=n;i++)
    {
        for (int j = 1;j<i;j++, m++)
        {
            result[m] = j;
        }
        return result;
    }
}"
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
19a5b90083c799114b8bccdc97fb09a69be2aba1,"public int greenTicket(int a, int b, int c)
{
    if (a == b || a == c || b == c)
        return 10;
	if (a == b && a == c || b == c)
        return 20;
    else
        return 0;
}
"
dca1f726e64da2460020f1bbac55668502eddba7,"public int roundSum(int a, int b, int c)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
    
}

public int round10(int num)
{
    return (round10(a) + round10(b) + round10(c));
    
}
"
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
9a762998ef3f0abdaeaa9e34d97d58d792cb6be4,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMom)
        return true;
    return (!isMorning);
}
"
9b06d81d2ee2682ba33f3c4251db06a7cfeaf2a8,"public int sum3(int[] nums)
{
    return 8;
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
"
f6cfdfcc045d3ced7634c7a0afcbe4afd98d380e,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
        n = 0;
    
    return n;
}
"
82c64fa09f2ec4b819acaeb99373996b024cc02e,"public int roundSum(int a, int b, int c)
{
    int roundSum = round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int rem = num % 10;
    if (rem >= 5) {
        num = numb + 10 - rem;
    }
    else {
        num = num - rem;
    }
    return num;    
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
"
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
684d16d1fe00b522bc43f3c44174bcb4ccab14db,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && b == c && a == c)
    {
        result = 20;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    else
    {
        result = 10;
    }
    return result;
}
"
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
"
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
"
b23234bdfab0d909602eff7d91c9461d3957de8f,"public String repeatEnd(String str, int n)
{
    String last = new String();
    for (int i = 0; i <= n; i++)
    {
        last = last.concat(str.substring(str.length() - n, str.length()));
    }
    return last;
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
"
1640df8991aaf52451a547e84295add650af49b6,"public int countCode(String str)
{
    
    int num = 0;
    
    for (int i = 0; i < str.length()-2; i++)
    {
        if ((str.charAt(i) == 'c') && (str.charAt(i+1) == 'o') && (str.charAt(i+3) == 'b'))
        {
            num++;  
        }
    }
    return num; 
}
"
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
"
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
"
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
22db1882535d71f9010b430616081de4d479a931,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
        if (c == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
e72ea831c9a41938966949bb8bbf1a82e784b73b,"public String repeatEnd(String str, int n)
{
    int i = 0;
    for (i = 0; i < n; i++)
    {
    	if (str.length() - n == 0)
    	{
      		System.out.println(str);
   		}
   		else
    	{
       	return str.substring((str.length() - n), str.length());
    	}
    }
    
}
"
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
b7a9395b99fe850b2082792560bb36ab00860020,"public int redTicket(int a, int b, int c)
{
    int result = 0;
    if (a == 2 && b == 2 && c == 2)
        result = 10;
    else if (a == b && b == c)
        result = 5;
    else if (a != b && a != c)
        result = 1;
    else
        result = 0;
    return result;
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
"
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
"
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
b03f6ee58d1c2efbc298c1b090d888a47d5425a9,"public boolean evenlySpaced(int a, int b, int c)
{
    if (b-a <= 1 && c-a >= 2 && c-b >= 2 
        || b-a >= 2 && c-a <= 1 && c-b >=2
        || b-a >=2 && c-a >= 2 && c-b <= 1)
        return true;
    return false;
}
"
309dc7997e1010df732f8ec41fd34a616365f55d,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if ((str.substring(i, i + 1) == 'co') 
            && (str.substring(i + 3) == 'e'))
        {
            count++;
        }
    }
    return count;
}
"
2216bc569ee8caff75d3702a81475722e85c8551,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 || n == 16)
            return n;
        return 0;
    //return n;
}
"
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
"
bde001ef355c35f06f3da9cad39a299850b21f14,"public String mixString(String a, String b)
{
    String endWord = """";
    int i;
    int max = Math.max(a.length(), b.length());
    for (i = 0; i < max; i++)
         {
             if (i <= b.length() - 1)
             {
                 endWord += b.substring(i, i + 1);
             }
             if (i <= a.length() - 1)
             {
                 endWord += a.substring(i, i + 1);
             }
         }
         return endWord;
}
"
50f3da72fdd9f01a0c7804b3c9c789cddd8d9b18,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (i = 0; i < num.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count*2 == num.length);            
    
}
"
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
22d46f636a2ecaa8a80e55e579500a4ff8e2a188,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            nums[i+1] = 5;
        }
    }
    
    return nums;
}
"
c093cac600fc00c29dfe5c59c8ab78dddb9a3f95,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count >= nums.length - 1);            
    
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
"
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
"
694a9037b08573fdb83bf861651119e9cdc03f82,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 1; i<n; i++)
    {
        last = last + str.substring(str.length()-n);
    }
    return last;
        
}
"
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
"
76d9ad72e171ab1f19e180764dff5f4e23e73ffd,"public String without2(String str) 
{
    if (str.length() == 2 || str.length() <= 0)
    {
        return """";
    }
    if (str.length() <2)
    {
        return str;
    }
    else if (str.substring(0,1).equals(str.substring(str.length()-2)))
    {
        return str.substring(2);
    }
    else
    {
        return str;
    }
        
}
"
d8f6de34bbb4daabf4789e4930885c05e8604106,"public int countClumps(int[] nums)
{
    int clumpNum = 0;
    int clump = 0;
    for (int = 0; i < nums.length - 1; i++)
    {
     	if (clump == 0 && nums[i] == nums[i+1])
        {
            clumpNum++;
            clump++;
        }
        else
        {
         	clump = 0;   
        }
    }
    return clumpNum;
}
"
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
"
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
"
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
"
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
"
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
2f0a2b01b8d36b9b41d35269fb9c59a0cd367b3b,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int lastDigit = num % 10;
    if (lastDigit >= 5)
    {
        int roundUp = num + (10 - lastDigit);
        return roundUp;
    }
    else
    {
        int roundDown = num - lastDigit;
        return roundDown;
    }
}"
cace7d6ba2df7803b7856f0a4767813ab512f4c5,"public String without2(String str) 
{
    if (str.length() > 1)
    {
        if (str.substring(0, 1).equals(str.substring(str.length() - 2, str.length() - 1)))
        {
            return str.substring(2, str.length());
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
}
"
bb819a051a15f625b5912634652b195b464f7095,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length + 1 < nums.length - 2)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
da35db888e070aad3d1910413f0731e4b429579c,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (20 - n < 7  && 20 - n < 1)
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
e9b63cad69501d11984221e9a07eff591dedc2b8,"public int roundSum(int a, int b, int c)
{
    a = round10(a);
    b = round10(b);
    c = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int rem = num % 10;
    if (num >= 0 && num < 5)
        num = num - rem;
    else
        num = num + 10 - rem;
    return num;
}
"
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
"
5ae4f4df981ecd7a8c7c1620b207298fd11eb26f,"public int blackjack(int a, int b)
{
    if (a > 0 && b > 0)
    {
     	if (b > 21 && a <= 21)
        {
         	return a;   
        }
        else if (a > b && a <= 21)
        {
         	return a;  
        }
        else if (a > 21 && b <= 21)
        {
         	return b;   
        }
        else if (b > a && b <= 21)
        {
        	return b;   
        }
    }
    return 0;
}
"
a2a2884e41048d06a4cb030480f7393277c7ec9a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + nums[i];
        if (nums[i] == 13)
        {
            sum = sum - (13 = nums[i + 1]));
        }
    }
    return sum;
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
ac791e33437b3b26bd56526f8f1a68c958771022,"public int sum3(int[] nums)
{
    return nums[0]+nums[1]+nums[2];
}
"
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
"
377d33b5c5fd6194c58592818a016612e427dfc7,"public int[] fix45(int[] nums)
{
    int f45 = 0;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i + 1] != 5)
		{
			for(!(nums[f45] == 5 && (f45 == 0 || f45 > 0 && nums[f45 - 1] != 4)) f45++)
            {
			nums[j] = nums[i + 1];
			nums[i + 1] = 5;
            }
		}
	}
	return nums;
}
"
0ebd451bd7f1ba5eaaee7cc787359dde169abbc2,"public String getSandwich(String str)
{
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
        return str.substring(first + 5, last);
                                                                    
    return """";
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
0cb8c025b705f4587b7d469c16c902e554391541,"public int[] frontPiece(int[] nums)
{
    return frontPiece;
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
76a3f2319da117864b8ca1165daa8eb7ace3e99c,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else 
        {
            return false;
        }
    else 
    {
        return true;
    }
}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
bb771f79da2e164515e0325c84eaa2dbd392e69b,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = 0;
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}"
d4bcf6c8e35c1dc33d803d62c4c1abc06da6328d,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] == 13)
        {
         	sum = sum;   
        }
        else if (nums[i - 1] == 13)
        {
         	sum = sum;   
        }
        else
        {
         	sum = sum + nums[i];
        }
    }
    return sum;
}
"
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
"
1dc0a9281fe5c33922d59a28a48a7003fd59765d,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        retrun = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
8dd0ea4aa40c9c74b0f4a3dddd8ecdfabf898186,"public int sortaSum(int a, int b)
{
    sum = a+b;
    if (sum>=10&&sum <=19)
    {
        return 20;
    }
    else
    {
        return sum;
    }
    
}
"
cc60094df561124d3ef73f93baef00cbaa679458,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
       return false;
    }
    else if (isMom)
    {
        return true;
    }
    else if (!isMorning)
    {
        return true;
    }
        return false;
}

"
270174ce7d53738e854429dc81bc8b311180b333,"public int[] shiftLeft(int[] nums)
{
    return int[] nums;
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
12941eb615aae98f65aa36224718e48e3383968c,"public int loneSum(int a, int b, int c)
{
    int x = a + b + c;
    if (a == b)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == c)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return a;
        }
    }
    else if (a == c)
    {
        if (b == c)
        {
            return 0;
        }
        else
        {
            return b;
        }
    }
    else
    {
        return x;
    }
}
"
023ccb9f259b949ab0ec9836b2b130977e17f76a,"public int sum3(int[] nums)
{
    sum = nums[0] + nums[1], nums[2];
}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
fd19ee70b6ed78dc3c5cf345b006e41ad230749d,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
eb3954d897ab04a8ee9649988f3d26e98aae722f,"public String[] fizzBuzz(int start, int end)
{
    String[] result = new String[end - start];
    
    for (int i = 0; i < end - 1; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
e9b63cad69501d11984221e9a07eff591dedc2b8,"public int roundSum(int a, int b, int c)
{
    a = round10(a);
    b = round10(b);
    c = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int rem = num % 10;
    if (num >= 0 && num < 5)
        num = num - rem;
    else
        num = num + 10 - rem;
    return num;
}
"
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
"
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
"
61f82d819ed02008ea7d45f70e7c86937eb58bc3,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (i == 0)
        {
            if (nums[0] == 2 && nums.length < 1)
            {
                return false;
            }
            else if (nums[0] == 2 && nums[1] != 2)
            {
                return false;
            }
        }
        else if (i == nums.length - 1)
        {
            if (nums[i] == 2 && nums[i - 1] != 2)
            {
                return false;
            }
        }
        else
        {
            if (nums[i] == 2)
            {
                if (nums[i - 1] == 2)
                {
                }
                else if (nums[i + 1] == 2)
                {
                }
                else
                {
                    return false;
                }
            }
        }
    }
    return true;
}
"
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
"
f8e2e6bb5d3f455462c4a729ac1c0772ed521c99,"public boolean twoTwo(int[] nums)
{
    if (nums.length < 2 && nums[0] != 2 )
    {
     	return true;   
    }
    else if (nums.length < 1)
    {
     	return false;   
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
e93b94f6835046c42b16cfe507547d10945a4c3a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++) {
		if ((nums[i-1] == val) && 
            (nums[i] == val) && nums[i+1] == val) {
         	 return true;
        }
        else {
			return false;
        }
    }
}
"
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
"
a53827ae6f8593b92d7c9f0fea1847acc9435ac4,"public String alarmClock(int day, boolean vacation)
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	return 7;
    	}
    	else if (day=0 || day=6)
    	{
    	    return 10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	return 10;
    	}
    	else if (day=0 || day=6)
    	{
    	    return off;
    	}
    }
    
}
"
22fda47732546394dab7ecbb147aa3cdbdb03099,"public boolean xyBalance(String str)
{
  int l = str.length() - 1;
    for (int i = l; i >= 0; i--)
    {
        char n = str.charAt(i);
        if (n == 'x')
        {
            return false;
        }
        if (n == 'y')
        {
            return true;
        }
    }
    return true;
    }
"
31d2de2c4723037a38f2b62dd095d3efaf175d3f,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
}
"
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
"
47f3a74a254afbf6c445487eff4eb1c0df9e20df,"public boolean has77(int[] nums)
{
    int blob = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (i < nums.length - 2)
        {
            if (nums[i] == nums[i + 1] && nums[i] == 7)
        	{
            	blob = blob + 100;
        	}
            if (nums[i] == nums[i + 2] && nums[i] == 7)
            {
                blob = blob + 100;
            }
        }   
        else if (nums[i] == nums[i + 1] && nums[i] == 7)
        {
            blob = blob + 100;
        }
        else
        {
            blob = blob + 1;
        }
    }
    return blob >= 100;
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}"
f0be04df720e45391f559d26dc0955b0202bb87b,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n != 15 && n != 16)
        	return 0;
    return n;
}
"
8f13baf6c1f32fe1e3c57fc757c44293a34e0980,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    if (isAsleep)
    {
        return false;
    }
    else if (!isAsleep)
    {
        return true;
    }
    return false;
    
}
"
66d81d6a71405ccedc06586970c02dcccae77323,"public int[] fix45(int[] nums)
{
    int k;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(k = 0; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4)); k++)
            {
                k = k;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
e380683c57feefa7fb3a525ba8c8887539b740dc,"public int greenTicket(int a, int b, int c)
{
 	if (a==b && b==c)
    {
        return 20;
    }
    
     if (a==b && a==c)
    {
        return 10;
    }
    
    if (a!=b && b!=c)
    {
        return 0;
    }
    
    
 	return 10;
}
"
085c90128653ad2d02262a5079a336364fa0a7cb,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || b==c || a == c)
        return 10;
    else 
        return 0;
}
"
2b6fbdd8ffb390e14349649d51e8f312d5db1ba8,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[nums.length - 1] == 2)
        return false;
    return true;
}
"
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
"
4621b6d4c1b03a6fd811349559740d32c21bd2b1,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        return false;
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return false;
}
"
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}"
d6ecef2688242348be94ae9cf4d683dbfee353d2,"public int countClumps(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
        if (nums[i] = nums[i+1])
        {
            
            count += 1;
            
        }
        
    }
    
    
    return count;
    
    
}
"
f6cfdfcc045d3ced7634c7a0afcbe4afd98d380e,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
        n = 0;
    
    return n;
}
"
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
076375a7de31fac4f71067d46b002b33e9533045,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning){
        if (isMom){
            return true;
        }
        return false;
    }
    if (isAsleep){
        return false;
    }
    return true;
}
"
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
"
3d89f76d27956de3a51e53f7ba12c5aa1fc7e352,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom && isAsleep)
        return true;
    if (isMorning && !isMom && !isAsleep)
        return false;
    if (isMorning && isMom && !isAsleep)
        return false;
    return false;    
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
"
4bbc3e204cd69131a96c0f7ab0f9c94499406204,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
        {
            return 10;
        }
    else if ((a == b) && (b == c) && (a == c))
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
c64c9e9c0a786ef3732a68209a390d30d8284fd4,"public int dateFashion(int you, int date)
{
   if ((you >= 2 || date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 || date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
0a620bf30b2a7a4fce92e7ea762e2a29a92cd83d,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
"
3a2534fb0ac1dc3651141e9a0bd5b1830ff648bb,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""small ticket"";
        }
        else
        {
            return ""big ticket"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""small ticket"";
        }
        else
        {
			return ""big ticket"";
        }
    
    }
}  
"
2e007e796e35e7e1dc3f93fe57d7994c06428678,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 && n == 16)
            return n;
        else
        	return 0;
    return n;
}
"
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
"
512ea4857067bd5d3ac3e3426f861301ee28c2f3,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
            return false;
        }
    }
    else if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
"
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
f1718cb6a2aa1704dac4fe8668d12e2c68a62b81,"public int[] fix45(int[] nums)
{
    for	(int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int k = 0;
            while	(nums[k] != 5)
            {
                k++;
            }
            nums[k] = nums[i+1];
            nums[i + 1] = 5;
            
        }
    }
    return nums;
}
"
1f392835abe1515bae3d0a8fcfedc983a40383fb,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
		return 0;
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
c0bcafd61ce598040aa977b280d46011559cb4c7,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true;
    for( int i = 0; i <= nums.length-2; i++)
    {
        if( nums [i] != val && nums[i+1] != val)
            result = false;
    }
    return result;
}
    
}
"
dead7e5e377079599c11bb673bf7c1248fef60fc,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if ( a == b && b == c)
    {
        sum = a;
    }
    else if (a == b || a == c)
    {
        sum = sum - a;
    }
    else if (b == c)
    {
        sum = sum - b;
    }
    return sum;
}
"
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
"
8fbb70b4ce6f9c55dcd5d47f50272f1685330601,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
            return true;
        else 
            return false;
    }
    if (isAsleep)
        return false;
}
"
e7aad59bc0f7416c80deba043153af59de5ea985,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i <= nums.length - 1; i++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            everywhere = true;
            break;
        }
    }
    return everywhere;
}
"
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
cd80603c865a5f537dae1c802b4d53681015978e,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
41c8da13b33e4f2c7ae68912df33bf871bfd1952,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = n;
    for (int i =0; i <n ;i++)
    {
        if (!(nums[i] == nums[nums.length - range + i]))
		result = false;
    }

}
"
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
"
b1cd225c96f83cf234170ea444a1959fbfd4bcde,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    if (b == 13)
        return a;
    if (c == 13)
        return (a + b);
    return (a + b + c);
}
"
7bbe47ddbd540b9999602f687a555456a4122938,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	while (isBirthday == false)
    {
    	if (speed <= 60)
        {
            return 0;
        }
    	else if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    	else if (speed >= 81)
        {
            return 2;
        }
    }
    while (isBirthday == true)
    {
        if (speed <= 65)
        {
            return 0;
        }
    	else if (speed >= 66 && speed <= 85)
        {
            return 1;
        }
    	else if (speed >= 86)
        {
            return 2;
        }
    }
    return 1;
}"
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
"
b53ab834a811096b76a803c390009392801834ab,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
"
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
"
22d46f636a2ecaa8a80e55e579500a4ff8e2a188,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            nums[i+1] = 5;
        }
    }
    
    return nums;
}
"
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
"
7e7bf4cc813657543b6b338e6de0cde0e361315b,"public int sum13(int[] nums)
{
    int total = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (num [i] == 13)
        {
            num [i] = 0;
            num [i] + 1 = 0;                
        }
        total = nums [i] + nums [i + 1];
    }
    return total;
}
"
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
"
88111a1b682c4e3263232c7e42baecf389dd8a17,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0)
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
    else
    {
    	return 0;
    }
}
"
9eb233b4442526c98e5181cbd698f5839c08adb3,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a == c || b == c || a == c)
        return false;
    if (a == b || b == c)
        return true;
    else
        return ((Math.abs(a - c)==Math.abs(a - b))) ||( Math.abs(c - a)==Math.abs(b - c) || Math.abs(a - b) == Math.abs(b - c));
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
"
828a3b0db925adca159220f3e9faf2fb4e24446a,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21){
        return a;
    }else if (b > a && b <= 21){
        return b;
    }else if (a > 21 && b < 22){
        return b;
    }else if (b > 21 && a < 22){
        return a;
    }else{
        return 0;
    }
}
"
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
"
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
"
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
"
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
"
a2a2884e41048d06a4cb030480f7393277c7ec9a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + nums[i];
        if (nums[i] == 13)
        {
            sum = sum - (13 = nums[i + 1]));
        }
    }
    return sum;
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
bb819a051a15f625b5912634652b195b464f7095,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length + 1 < nums.length - 2)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
6838f3a0ca0a4ce80030a9271bafd074a9cf9877,"public boolean evenlySpaced(int a, int b, int c)
{
    if ((Math.abs(a-b) == Math.abs(b-c)) || (Math.abs(a-c) == Math.abs(a-b)) || (Math.abs(c-a) == Math.abs(b-c)))
    {
        return true;
    }
    else if (a == b || a == c || b == c) 
    {
        return false;
    }
    return (a == b && b ==c);
    
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
a05e5d98a96c772e1afad34a0ae82871a6e741d0,"public String zipZap(String str)
{
    int num = 0;
    for (int i = 2; i < str.length(); i++)
    {
        if (str.charAt(num) == 'z' && str.charAt(i) == 'p')
        {
            str.replace(str.substring(num, i), ""zp"")
        }
        num += 1;
    }
    return str;
}
"
761faf27118f8d7637200b8140f5a550d392d440,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
     if ( (n >=13 && n < 15) || (n > 16 && n <= 19) )
     {
         return 0;
     }
    else
    {
        return n;
    }
}

"
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
"
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
"
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
"
309dc7997e1010df732f8ec41fd34a616365f55d,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if ((str.substring(i, i + 1) == 'co') 
            && (str.substring(i + 3) == 'e'))
        {
            count++;
        }
    }
    return count;
}
"
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
"
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
5751db3148c8805ad9e482b9dedd7ade5357ba47,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
    {
        return str.substring(first + 5, last);
    }
    else
    {
    return """";
    }
}
"
fb3b878ff7c89e0940c66e22faadec79ac2996e7,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i: int[])
    {
     	sum = sum + i;
    }
    return sum;
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
684d16d1fe00b522bc43f3c44174bcb4ccab14db,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && b == c && a == c)
    {
        result = 20;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    else
    {
        result = 10;
    }
    return result;
}
"
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
0cb8c025b705f4587b7d469c16c902e554391541,"public int[] frontPiece(int[] nums)
{
    return frontPiece;
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
50f3da72fdd9f01a0c7804b3c9c789cddd8d9b18,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (i = 0; i < num.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count*2 == num.length);            
    
}
"
dead7e5e377079599c11bb673bf7c1248fef60fc,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if ( a == b && b == c)
    {
        sum = a;
    }
    else if (a == b || a == c)
    {
        sum = sum - a;
    }
    else if (b == c)
    {
        sum = sum - b;
    }
    return sum;
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
"
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
"
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
"
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
"
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
"
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
"
3d11719630fc8c44b85deba0b9752e36fb374a27,"public int luckySum(int a, int b, int c)
{
    if (a = 13)
    {
        return 0;
    }
    else if (b = 13)
    {
        return a;
    }
    else if (c = 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
1adf1201d219d6cf2893ea40470b60c2a19806f6,"public int countClumps(int[] nums)
{
    int count = 0;
    int i = 0;
    
    while (i < nums.length)
    {
        int val = nums[i];
        i++;
        int length = 1;
        
        while (i < nums.length && nums[i] == val)
        {
            i++;
            length++;
        }
        if (length > 1);
        {
            count ++;
        }
    }
    return count;
}
"
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
4cad14f6dc235bb7665a336718b0bc721df9ddd2,"public boolean isEverywhere(int[] nums, int val)
{
    Boolean result = true;
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            result = true;
        }
        else
        {
            result = false;
            break;
        }
    }
    return result;
}
"
685a1f07697cb907cefcecfa8cf5158825e90e14,"public int countCode(String str)
{
    int length = str.length() - 2;
    int num = 0;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == c && str.charAt(i + 1) == o
            && str.charAt(i + 3) == e)
        {
            num = num + 1;
        }
    }
    return num;
}
"
4f020dcb2ebec419aa94d431533df15542e537ec,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
    return false;
}
"
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
"
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
"
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
"
23b5ec2ba8fe6b1ec171faaa28bcd140793480f8,"public int[] seriesUp(int n) {
  int[] result = new int[n * (n + 1) / 2];
  int i = 0;
  for (int j = 1; j <= n; ++j)
    for (int k = 1; k <= j; ++k)
      result[i++] = k;
  return result;
}"
22fda47732546394dab7ecbb147aa3cdbdb03099,"public boolean xyBalance(String str)
{
  int l = str.length() - 1;
    for (int i = l; i >= 0; i--)
    {
        char n = str.charAt(i);
        if (n == 'x')
        {
            return false;
        }
        if (n == 'y')
        {
            return true;
        }
    }
    return true;
    }
"
e842a2d12176ae37228ff69c6c768005b587ac2a,"public int blackjack(int a, int b)
{
    int c = 21 - a;
    int d = 21 - b;
    
    
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else
    {
        if (c > d)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
a354fe94859e5967d2c6bdce8fdb12e90a24f48c,"public int sortaSum(int a, int b)
{
    if(a + b >= 10 || a + b <= 19)
    {
    	return a + b;
    }
    
    else 
    {
    	return 20;
    }
}
"
c0e74847daded5db86a45f95da024ec482c4f9a4,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19}
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
b5509f3d8d4bcd8f2b81e75b2c675400125936aa,"public int luckySum(int a, int b, int c)
{
    int luckySum = 0;
    if ( a == 13 )
    {
    	luckySum = c;
    }
    else if ( b == 13)
    {
    	luckySum = b;
    }
    else if (c == 13)
    {
    	luckySum = a + b;
    }
    else
    {
    	luckySum = a + b + c;
    }
    return luckySum;
}
"
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
"
2216bc569ee8caff75d3702a81475722e85c8551,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 || n == 16)
            return n;
        return 0;
    //return n;
}
"
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
"
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
"
f4b03862b0451a373caa9f6bb7390b99d9c24f62,"public String atFirst(String str)
{
    return str.substring(0, 2);
}
"
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
"
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
"
9ebe46b9e7a4b3cb16a4423e4af7f17722965213,"public int noTeenSum(int a, int b, int c)
{
    int sum = (fixTeen(a)+fixTeen(b)+fixTeen(c));
        return sum;
}

public int fixTeen(int n)
{
    if (n>=13&&n<=19)
    {
        if (n==15||n==16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }
}
"
bf0fb85d68a871de1263a11b4d6bf089714fa3ce,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0 ; nums.length > i; i++)
    {
        if (nums[i] == val || nums[i+1] == val)
        {
            return true;
        }
    }
    return false;
    
}
"
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
"
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
"
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
"
fae2f7dfe0c7f6a36eed081761f1d04f77387b4b,"

    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }

"
bd4ab1662bb8f09f26dc5dd978ba13826af43bbe,"public int countCode(String str)
{
 int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
1ced7b3ab5f86bf014b0aab47983b280fea0faf5,"public int[] frontPiece(int[] nums)
{
    returnNumber = new int[2]
    for (int i = 0; i < nums.length && i < 2; i++)
    {
        returnNumber[i] = nums[i]
    }
	return returnNumber;
}
"
13864ac96c4023a6c7e3db73dd0c11750234fe40,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1"
1202d346fcf0db46d6a29cff9b13366969ee2df1,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0,2));
    }
    else if (str.length() == 1)
    {
        return (str + ""@"");
    }
    else
    {
        return (""@@"");
    }
}
"
f3ddf9031a05285f6f9fec49ad403733b0696a3c,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
    	if (speed >= 65)
        {
        	return 0;
        }
    	else if (speed <=85 && speed >= 66)
        {
        	return 1;
        }
    	else if (speed >= 86)
        {
        	return 2;
        }
    }
    else
    {
        if (speed >= 60)
        {
        	return 0;
        }
    	else if (speed <=80 && speed >= 61)
        {
        	return 1;
        }
    	else if (speed >= 81)
        {
        	return 2;
        }
	}
return giveTicket;
    
"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
b7a9395b99fe850b2082792560bb36ab00860020,"public int redTicket(int a, int b, int c)
{
    int result = 0;
    if (a == 2 && b == 2 && c == 2)
        result = 10;
    else if (a == b && b == c)
        result = 5;
    else if (a != b && a != c)
        result = 1;
    else
        result = 0;
    return result;
}
"
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
"
7c77e6e3fc1b988356518cad44b8ccc44e6c7032,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c){
            result = 10;
        }
        else if (b == c){
        	result = 20;
        }
     }
            
    return result;
}
"
4e651e8df90f087942b32424b07d4257df1ddc47,"public String atFirst(String str)
{
    return '@';
}
"
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
"
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
f0be04df720e45391f559d26dc0955b0202bb87b,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n != 15 && n != 16)
        	return 0;
    return n;
}
"
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
"
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
f1718cb6a2aa1704dac4fe8668d12e2c68a62b81,"public int[] fix45(int[] nums)
{
    for	(int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int k = 0;
            while	(nums[k] != 5)
            {
                k++;
            }
            nums[k] = nums[i+1];
            nums[i + 1] = 5;
            
        }
    }
    return nums;
}
"
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
"
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
"
6951053422eb1f10e58384407fe2177bd76f6031,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum
    }
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
22fda47732546394dab7ecbb147aa3cdbdb03099,"public boolean xyBalance(String str)
{
  int l = str.length() - 1;
    for (int i = l; i >= 0; i--)
    {
        char n = str.charAt(i);
        if (n == 'x')
        {
            return false;
        }
        if (n == 'y')
        {
            return true;
        }
    }
    return true;
    }
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
79c58a491312a133e68b505957485ca6a71d8f83,"public int noTeenSum(int a, int b, int c)
{
	fixTeen(a);
    fixTeen(b);
    fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if ( a >= 13 && a <= 19 && a != 15 && a !=16){
        a = 0;
        return a;
    }
    if ( b >= 13 && b <= 19 && b != 15 && b !=16){
        b = 0;
        return b;
    }
    if ( c >= 13 && c <= 19 && c != 15 && c !=16){
        c = 0;
        return c;
    }
    
}
"
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
"
0294a8f6bb1a1e083b987b4340006b744cb04faf,"public int loneSum(int a, int b, int c)
{
    int sum = 0;
    if (a != b && b!= c)
    {
    	sum = a + b + c;
        return sum;        
    }
    else if (a == b && b != c)
    {
    	sum = c;
        return sum;
    }
    else if (a != b && b == c)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = 0;
        return sum;
    }
}
"
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
"
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
3d5712cd499b5dbbb377c38144436a2980ada53f,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
        	return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return false;
}
"
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
"
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
"
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
55008f2ac50ecaccae3a878e34d56a2f00118737,"public int countClumps(int[] nums)
{
	int clump = 0;
    for (int i = 0; i < nums.length;i++)
    {
        
       {
           if ( i + 1 < nums.length)
           {
               if (nums[i] == nums[i + 1])
               {
                   clump = clump + 1;
                   for (int j = 1; j < nums.length; j++)
                   {
                       if (nums[i + 1] == nums[i + 1 + j])
                       {
                           i = i + 1;
                       }
                   }
               }
           }
       }
    }
    return clump;
}
"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
1dc0a9281fe5c33922d59a28a48a7003fd59765d,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        retrun = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}"
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
"
558280d818c379f1583db66238398bd41b0d7063,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
"
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
"
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
"
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
"
1ced7b3ab5f86bf014b0aab47983b280fea0faf5,"public int[] frontPiece(int[] nums)
{
    returnNumber = new int[2]
    for (int i = 0; i < nums.length && i < 2; i++)
    {
        returnNumber[i] = nums[i]
    }
	return returnNumber;
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
"
67b31d44e53f66de27582ca427b2dcf657e7f18c,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a = b && b == c)
        return 10;
    
    if (a = b && b == c)
        return 5;
        
    if (a != b && a != c)
        return 1;
    
    return 0;
}
"
34ad16a72b0a75568a00e876dfb72953f291c9ab,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            clumps++;
        }
    }
    return clumps;
}
"
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
"
5cd02f6c04c19cfba3433b99e62352d722eab1e6,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
	    if (a > b)
	    {
   		  	return a;
	    }
	    else
    	{
    	 	return b;
    	}
    }
    else
    {
       	return 0;
    }
}
"
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
"
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
"
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
"
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
bde001ef355c35f06f3da9cad39a299850b21f14,"public String mixString(String a, String b)
{
    String endWord = """";
    int i;
    int max = Math.max(a.length(), b.length());
    for (i = 0; i < max; i++)
         {
             if (i <= b.length() - 1)
             {
                 endWord += b.substring(i, i + 1);
             }
             if (i <= a.length() - 1)
             {
                 endWord += a.substring(i, i + 1);
             }
         }
         return endWord;
}
"
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
cd80603c865a5f537dae1c802b4d53681015978e,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
68c510e3ae2a5f68173421badd6c7e8d285e1fd9,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        return 0
    }
    else if (speed >= 61 && speed <= 80)
    {
        return 1
    }
    else if (speed >= 81)
    {
        return 2
    }
}
"
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
"
e380683c57feefa7fb3a525ba8c8887539b740dc,"public int greenTicket(int a, int b, int c)
{
 	if (a==b && b==c)
    {
        return 20;
    }
    
     if (a==b && a==c)
    {
        return 10;
    }
    
    if (a!=b && b!=c)
    {
        return 0;
    }
    
    
 	return 10;
}
"
09c6de5e29a256d7add784dac3a966346a82e499,"public int countClumps(int[] nums)
{
    int clumps = 0;
    int flag = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == flag)
            continue;
        if (nums[i] == nums[i + 1])
        {
            clumps++;
            flag = nums[i];
        }
        else
        {
            flag = nums[i];
        }
    }
    return clumps;    
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
"
1202d346fcf0db46d6a29cff9b13366969ee2df1,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0,2));
    }
    else if (str.length() == 1)
    {
        return (str + ""@"");
    }
    else
    {
        return (""@@"");
    }
}
"
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
"
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
"
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
"
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
"
c8a0be59dec0a41242ebf952c04bb2e31259d489,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
"
582b917e4c3a6c8bdf35c427341ab5ddf0ac9d24,"public int sortaSum(int a, int b)
{
    if(a + b >= 10 || a + b <= 19)
    {
    	return a + b;
    }
    
    else 
    {
    	return 20;
    }
}
"
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
"
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
"
2f0a2b01b8d36b9b41d35269fb9c59a0cd367b3b,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int lastDigit = num % 10;
    if (lastDigit >= 5)
    {
        int roundUp = num + (10 - lastDigit);
        return roundUp;
    }
    else
    {
        int roundDown = num - lastDigit;
        return roundDown;
    }
}"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
332c6ec5c84a4b48b155a3ce7e3c41195bbaf8a1,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
"
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
fb3b878ff7c89e0940c66e22faadec79ac2996e7,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i: int[])
    {
     	sum = sum + i;
    }
    return sum;
}
"
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
"
0f838818781093168101b362c3ceaa5ac771a653,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 2;
}
"
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
"
493267658ead76f2221aae551e38a001ba5eab78,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep)
    {
        if (isMorning)
        {
            if (isMom)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        else
        {
            return true;
        }
    }
    else
    {
        return false;
    }
}
"
f53fe967f0579e586ca2895910f4b0362cabe181,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
512ea4857067bd5d3ac3e3426f861301ee28c2f3,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
            return false;
        }
    }
    else if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
b2fb0e812684a35e4e3c4ec904afe7c944ffca87,"public int noTeenSum(int a, int b, int c)
{
	if ( a >= 13 && a <= 19)
        this.fixTeen(a);
    return a;
    if ( b > 12 && b < 20)
        this.fixTeen(b);
    return b;
    if ( c >= 13 && c <= 19)
        this.fixTeen(c);
    return c;
}

public int fixTeen(int n)
{
   if (n == 15)
       return 15;
   else if ( n == 16)
       return 16;
   else 
       return 0;
}
"
cc77cf7675005a0bdbc9fe76c75879f1ad156087,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
c64c9e9c0a786ef3732a68209a390d30d8284fd4,"public int dateFashion(int you, int date)
{
   if ((you >= 2 || date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 || date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}"
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
"
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
"
e66af3fd10029e3b0eddec751863c4988c7a3b9a,"public boolean sameEnds(int[] nums, int n)
{
    int num = 0;
    for (int i = n; i > 0 n;i--)
    {
        if (nums[i] == nums[nums.length - i + 1])
        {
            num = num + 1;
        }    
    }
    if (num == n)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
09c6de5e29a256d7add784dac3a966346a82e499,"public int countClumps(int[] nums)
{
    int clumps = 0;
    int flag = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == flag)
            continue;
        if (nums[i] == nums[i + 1])
        {
            clumps++;
            flag = nums[i];
        }
        else
        {
            flag = nums[i];
        }
    }
    return clumps;    
}
"
ec440fd647af59cbea91a966ccc1596f685d24fa,"public int blackjack(int a, int b)
{
   if ( a > 21 && b > 21)
   {
      return 0; 
   }
    if (21 - b > a)
    {
        return a;
    }
    else 
        return b;
}
"
2e007e796e35e7e1dc3f93fe57d7994c06428678,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 && n == 16)
            return n;
        else
        	return 0;
    return n;
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
8a779c37e36e7e7238238f8fa362f496af39a6e3,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    
    
        
        
    if(first != -1 && last != -1 && first != last)
    {
		return str.substring(first + 5, last);
    }
    else return"""";
}
"
11b89a5a5c8c4cce3c90dfb984780d1229efc349,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[nums.length - 1] == 7 && nums[nums.length - 2] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
"
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
"
039a5741fb82006d59f66a5ffd100359f6a3aa77,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
    	if (cigars >= 40)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
    else
    {
    	if (cigars >= 40 && cigars <= 60)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
}
"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
"
34ad16a72b0a75568a00e876dfb72953f291c9ab,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            clumps++;
        }
    }
    return clumps;
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
"
f8e2e6bb5d3f455462c4a729ac1c0772ed521c99,"public boolean twoTwo(int[] nums)
{
    if (nums.length < 2 && nums[0] != 2 )
    {
     	return true;   
    }
    else if (nums.length < 1)
    {
     	return false;   
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
"
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
"
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
"
fe4d9bb980371b0c510eaafdeaad3066de447006,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
		return n;
	return 0;
}
public int noTeenSum(int a, int b, int c)
{  return (fixTeen(a) + fixTeen(b) +fixTeen(c)); }
"
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
"
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
"
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
"
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
"
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
"
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
"
bb95327d0292272d65dd996e6aa6f61c87319399,"public boolean endOther(String a, String b)
{
    if a.length() == ""a"" + ""b""
        return b.substring(0,1).toLowerCase();
}
"
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
"
61f82d819ed02008ea7d45f70e7c86937eb58bc3,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (i == 0)
        {
            if (nums[0] == 2 && nums.length < 1)
            {
                return false;
            }
            else if (nums[0] == 2 && nums[1] != 2)
            {
                return false;
            }
        }
        else if (i == nums.length - 1)
        {
            if (nums[i] == 2 && nums[i - 1] != 2)
            {
                return false;
            }
        }
        else
        {
            if (nums[i] == 2)
            {
                if (nums[i - 1] == 2)
                {
                }
                else if (nums[i + 1] == 2)
                {
                }
                else
                {
                    return false;
                }
            }
        }
    }
    return true;
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
cda4eeee2346e60e72673f13fb06774fb4ec1b1b,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
        int rightSum = 0;
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
a040447a7a4d000d3f8dce6203fbc10a54cdf382,"public int blackjack(int a, int b)
{
    if (a>21)
    {
        a=0;
   		return a;
    }
    if (b>21)
    {
        b=0;
        return b;
    }
    if (a>b)
    {
     return a;   
    }
	else
	{	
    return b;
    }
}
"
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
"
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
"
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
"
47f3a74a254afbf6c445487eff4eb1c0df9e20df,"public boolean has77(int[] nums)
{
    int blob = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (i < nums.length - 2)
        {
            if (nums[i] == nums[i + 1] && nums[i] == 7)
        	{
            	blob = blob + 100;
        	}
            if (nums[i] == nums[i + 2] && nums[i] == 7)
            {
                blob = blob + 100;
            }
        }   
        else if (nums[i] == nums[i + 1] && nums[i] == 7)
        {
            blob = blob + 100;
        }
        else
        {
            blob = blob + 1;
        }
    }
    return blob >= 100;
}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
1f392835abe1515bae3d0a8fcfedc983a40383fb,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
		return 0;
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
88111a1b682c4e3263232c7e42baecf389dd8a17,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0)
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
    else
    {
    	return 0;
    }
}
"
86eeb69c66325d7ac263cfba4f58a77188d3d872,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int test = 0;
        int[] testArray = new int[nums.length];
        for (int x = 0; x < nums.length; x++)
        {
            testArray[x] = nums[x];
            test++;
        }
        if (test == nums.length)
        {
            return 1;
        }
        
        
        
        
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i]);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init)
{
    int nextNum = 0;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
bb819a051a15f625b5912634652b195b464f7095,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length + 1 < nums.length - 2)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
"
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
"
c72936a1839694da8df5554d66db79bf67bec60c,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (isBirthday)
    {
        speed = speed + 5
    }
	if (speed <= 60)
	{
    	return 0;
	}
    
	if (speed >= 61 && speed <= 80)
	{
    	return 1;
	}
    
	if (speed >= 81)
	{
    	return 2;
	}
	
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
23b5ec2ba8fe6b1ec171faaa28bcd140793480f8,"public int[] seriesUp(int n) {
  int[] result = new int[n * (n + 1) / 2];
  int i = 0;
  for (int j = 1; j <= n; ++j)
    for (int k = 1; k <= j; ++k)
      result[i++] = k;
  return result;
}"
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
"
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
8f13baf6c1f32fe1e3c57fc757c44293a34e0980,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    if (isAsleep)
    {
        return false;
    }
    else if (!isAsleep)
    {
        return true;
    }
    return false;
    
}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
"
8e2fbb177f04d826bcf31a521e3d2d5c0a540cf5,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if(sum >= 10 || sum <= 19)
    {
    	return sum;
    }
    
    else if (sum<=9 || sum>=20) 
    {
    	return 20;
    }
    
    return 20;
}
"
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
332035fab0653a2a928a8daf9a5e4b0b360534a3,"public boolean twoTwo(int[] nums)
{
    int q = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums.length == 1)
        {
            return true;
        }
        if (nums[i] == 2)
        {
            if (nums.length == 1)
            {
                return false;
            }
        else if (i == 0)
        {
            if (nums[i + 1] == 2)
            {
                q = q + 0;
            }
            else
            {
                q = q + 100;
            }
        }
        else if (i == nums.length - 1)
        {
            if (nums[i - 1] == 2)
            {
                q += 0;
            }
            else
            {
                q += 100;
            }
        }
        else
        {
            if (nums[i - 1] == 2 || nums[i + 1] == 2)
            {
                q += 0;
            }
            else
            {
                q += 100;
            }
        }
        }
    }
    if ( q >= 100)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
2b976fe20b1e401744827a000d91d5535db7d93b,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <=90);
}
"
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
f7b47c261f888fe99159f9f86c3bdfa5878c0fe8,"public int[] frontPiece(int[] nums)
{
    int[] first2 = new int[2];
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2[i] = nums[i];
    }
    return first2;
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
"
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
2efc3b1d0acaa60b452bf611f88e4f3873fd00aa,"public boolean isEverywhere(int[] nums, int val)
{
    int b = 0;
    for (int i = 1; i < nums.length - 1; i++) {
        if (nums[i] == val || nums[i-1] == val ||
            nums[i+1] == val) {
            	b++;
        }
    }
    return b == nums.length - 2;
}
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
c386e80b45b1f867ba40aaf3d78f271a5bd2ffe0,"public int noTeenSum(int a, int b, int c)
{
	if(a <= 19 && a >= 13)
    {
    	return b + c;
    }
    
    if(b <= 19 && b >= 13)
    {
    	return a + c;
    }
    
    if(c <= 19 && c >= 13)
    {
    	return a + b;
    }
}

public int fixTeen(int n)
{
	    
}
"
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
"
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
78a8e8a64b313ff7d1734612cc884e563d6caea4,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b!= 13 && c!= 13)
    {
        return (a+b+c);
    }
    
    else if (a== 13)
    {
        return 0;
    }
    
    else if (b== 13)
    {
        return a;
    }
    
    else if (c==13)
    {
        return (a+b);
    }
    
    return 0;
}
"
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
5751db3148c8805ad9e482b9dedd7ade5357ba47,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
    {
        return str.substring(first + 5, last);
    }
    else
    {
    return """";
    }
}
"
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
87db562c5af3675b9fcf8cdf88341f5c205a229a,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return 0;
    }
    
    if (b == 13)
    {
        return a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
449c25168277fbecb5660eb70e7019afab36425e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
            return 0;
    }
    else if (speed <=80 && speed > 61)
    {
            return 1;
    }
    else
    {
            return 2;
    }
}
"
5751db3148c8805ad9e482b9dedd7ade5357ba47,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
    {
        return str.substring(first + 5, last);
    }
    else
    {
    return """";
    }
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
0f838818781093168101b362c3ceaa5ac771a653,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 2;
}
"
79f2da1916c858f4bd63251e6ec244aad4272418,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
    {
		return n;
    }
    else
    {
		return 0;
    }
}
public int noTeenSum(int a, int b, int c)
{  
    return (fixTeen(a) + fixTeen(b) +fixTeen(c)); 
}
"
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
"
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
761faf27118f8d7637200b8140f5a550d392d440,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
     if ( (n >=13 && n < 15) || (n > 16 && n <= 19) )
     {
         return 0;
     }
    else
    {
        return n;
    }
}

"
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
512ea4857067bd5d3ac3e3426f861301ee28c2f3,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
            return false;
        }
    }
    else if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
8ade95f109e1073acef3d10c10f35e45f9e8fce5,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder    
    return -1
}
"
9cccc838c6123ff6e830e3f73cb672510aa4de73,"public String atFirst(String str)
{
    if (str.length() >= 2)
    return str.substring(0,2);
  else if (str.length() == 1)
    return str + ""@"";
  else
    return ""@@"";

}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
3a2534fb0ac1dc3651141e9a0bd5b1830ff648bb,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""small ticket"";
        }
        else
        {
            return ""big ticket"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""small ticket"";
        }
        else
        {
			return ""big ticket"";
        }
    
    }
}  
"
665bc82d890d74501a41102dfa9e7958d532ef75,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars <= 60);
    }
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
62d31dc1d181609f1ad5028901c8db29d61ea2b8,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    else 
    {
        return (a +b);
    }
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
e842a2d12176ae37228ff69c6c768005b587ac2a,"public int blackjack(int a, int b)
{
    int c = 21 - a;
    int d = 21 - b;
    
    
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else
    {
        if (c > d)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
}
"
4ab93bf88b80fa76f8c7c6f5499d40a451e7e897,"public boolean great; 

public boolean love6(int a, int b)
{
    Math.abs(a, b);
}
"
1adf1201d219d6cf2893ea40470b60c2a19806f6,"public int countClumps(int[] nums)
{
    int count = 0;
    int i = 0;
    
    while (i < nums.length)
    {
        int val = nums[i];
        i++;
        int length = 1;
        
        while (i < nums.length && nums[i] == val)
        {
            i++;
            length++;
        }
        if (length > 1);
        {
            count ++;
        }
    }
    return count;
}
"
dca1f726e64da2460020f1bbac55668502eddba7,"public int roundSum(int a, int b, int c)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
    
}

public int round10(int num)
{
    return (round10(a) + round10(b) + round10(c));
    
}
"
fd19ee70b6ed78dc3c5cf345b006e41ad230749d,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
76a3f2319da117864b8ca1165daa8eb7ace3e99c,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else 
        {
            return false;
        }
    else 
    {
        return true;
    }
}
"
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
"
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
"
a767440796f740efacb74e1a68a50c6ef184a501,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length - 1; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
"
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
"
dc77d9f47e20012cfdff686d71cf058927245c62,"public int roundSum(int a, int b, int c)
    return round10(a) + round10(b) + round10(c));

public int round10(int num)
{
    int digit = num % 10;
	if (digit >= 5)
        return num = (10 - digit);
    return num - digit;
}
"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
44f220b58843152b2c37e892e70f7c52224b3df7,"public int[] zeroMax(int[] nums)
{
    int max = 0; 
    for (int i = 0; i < nums.length - 1; i++) {
        if ( nums[i] == 0) {
            for (int k = i + 1; k <= nums.length - 1; k++) {
                if (nums[k] > max && nums[k] % 2 == 1) {
                    max = nums[k];
                }
                else {
                    nums[k] = max; 
                max = 0;
                }
                 
            }
        }
    }
    return nums; 
}
"
bda78f041aeff5c1c99839481d54cb270d0f1529,"public int makeChocolate(int small, int big, int goal)
{
     if goal >= 5 * big
     {
        remainder = goal - 5 * big；
     }
    else
    {
        remainder = goal % 5；
    }
        
    if remainder <= small
    {
        return remainder；
    }
        
    return -1；
}
"
4e651e8df90f087942b32424b07d4257df1ddc47,"public String atFirst(String str)
{
    return '@';
}
"
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
31d2de2c4723037a38f2b62dd095d3efaf175d3f,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
}
"
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
"
22db1882535d71f9010b430616081de4d479a931,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
        if (c == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
eb3954d897ab04a8ee9649988f3d26e98aae722f,"public String[] fizzBuzz(int start, int end)
{
    String[] result = new String[end - start];
    
    for (int i = 0; i < end - 1; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
f0205df67f010e325ec1614fba0a300d61a74dec,"public int blackjack(int a, int b)
{
    double valueA;
    valueA = (a % 21);
    double valueB;
    valueB =  (b % 21);
    
    if (a < 21 || b < 21)
    {
        if (double valueA > double valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else if (a < 21 && b < 21)
    {
        if (valueA > valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else
    {
        return 0;
    }
}
"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;"
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
d438b7d68b37722f5d57579e7078668cf60a8b2b,"public int blackjack(int a, int b)
{
    if (a < b && b <= 21)
    {
        return b;
    }
    else if (b < a && a <=21)
    {
        return a;
    }
    else 
    {
        return 0;
    }
}
"
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
7bbe47ddbd540b9999602f687a555456a4122938,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	while (isBirthday == false)
    {
    	if (speed <= 60)
        {
            return 0;
        }
    	else if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    	else if (speed >= 81)
        {
            return 2;
        }
    }
    while (isBirthday == true)
    {
        if (speed <= 65)
        {
            return 0;
        }
    	else if (speed >= 66 && speed <= 85)
        {
            return 1;
        }
    	else if (speed >= 86)
        {
            return 2;
        }
    }
    return 1;
}"
4cad14f6dc235bb7665a336718b0bc721df9ddd2,"public boolean isEverywhere(int[] nums, int val)
{
    Boolean result = true;
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            result = true;
        }
        else
        {
            result = false;
            break;
        }
    }
    return result;
}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
0ebd451bd7f1ba5eaaee7cc787359dde169abbc2,"public String getSandwich(String str)
{
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
        return str.substring(first + 5, last);
                                                                    
    return """";
}
"
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
"
0773313801a191baf1978ea9f3b612da5d247316,"public int caughtSpeeding(int speed, boolean isBirthday)
{
if (!isBirthday)
{
   if ( speed <= 60)
   
       return 0;
   
   else if ( speed > 60 && speed <= 80)
   
       return 1;
   
   else 
   
       return 2;
   
}
    if (isBirthday)
    {
        if ( speed <= 65)
   
       return 0;
   
   else if ( speed >= 65 && speed <= 85)
   
       return 1;
   
   else 
   {
       return 2;
   }
       
}
}
"
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}"
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}"
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
"
4e250d40f6c8c4899a3eb79ea695e918be5d8a56,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
    	else if (nums[i] == 7 && nums[i + 2] == 7)
            return true;
    return false;
}
"
09c6de5e29a256d7add784dac3a966346a82e499,"public int countClumps(int[] nums)
{
    int clumps = 0;
    int flag = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == flag)
            continue;
        if (nums[i] == nums[i + 1])
        {
            clumps++;
            flag = nums[i];
        }
        else
        {
            flag = nums[i];
        }
    }
    return clumps;    
}
"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
"
d9d0af4a86d3d806a73729146509fcd884212bbe,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 && (a + b) <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
"
61705bfd5a5b9bf82e4d10be405cc3a01e829d51,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a +b <= 19)
        return 20;
    else
        return a + b;
}
"
b1cd225c96f83cf234170ea444a1959fbfd4bcde,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    if (b == 13)
        return a;
    if (c == 13)
        return (a + b);
    return (a + b + c);
}
"
377d33b5c5fd6194c58592818a016612e427dfc7,"public int[] fix45(int[] nums)
{
    int f45 = 0;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i + 1] != 5)
		{
			for(!(nums[f45] == 5 && (f45 == 0 || f45 > 0 && nums[f45 - 1] != 4)) f45++)
            {
			nums[j] = nums[i + 1];
			nums[i + 1] = 5;
            }
		}
	}
	return nums;
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
b39fe8089a563103c0f642be5647243d61b4c66b,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     if (isAsleep)

    return false;

  if ((isMorning && isMom) || !isMorning)

    return true;

  else return false;
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
aa4d8b44bff62be088c0c94a7829aa410ffa133b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        if (speed >= 81)
        {
            return 2;
        }
    }
    if (!isBirthday)
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}"
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
"
3850876d2c56148eb728593d89548d81773d092d,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                while ((nums[i] == nums[i]) && (i < num.length)
                {
                    i++;
                }
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int sumVal = 1;
    while (nums[start] == initValue)
    {
        sumVal++;
        start++;
    }
    return sumVal;
}"
e93ac984fe80d9ff8d2b28a49fe9042f2029629f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] % 10 == 0)
        {
            if (nums[i + 1] % 10 != 0)
            {
                nums[i + 1] = nums[i];
            }
        }
    }
    return nums;
}
"
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
3bd541a9a74cfbc86ccd7aff7e6e071a6371cb04,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
"
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
d50d492ebb2d39ef30d910d235f290f774635c0f,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    if (a == b && a == c && b == c)
        return 0;
    else
        return a + b + c;
}
"
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
bf382bc1d92127f137bb550a9abdea9839167f1f,"public int[] shiftLeft(int[] nums)
{
    int shift = nums[0];
    if (nums.length >= 2)
    {
        //int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
f8e2e6bb5d3f455462c4a729ac1c0772ed521c99,"public boolean twoTwo(int[] nums)
{
    if (nums.length < 2 && nums[0] != 2 )
    {
     	return true;   
    }
    else if (nums.length < 1)
    {
     	return false;   
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
"
33bf743a9707fb874e5447648c48e307607e03de,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 1) == 'co' &&
            str.substring(i + 3) == 'e')
        {
            count = count + 1;
        }
    }
    return count;
}
"
8fbb70b4ce6f9c55dcd5d47f50272f1685330601,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
            return true;
        else 
            return false;
    }
    if (isAsleep)
        return false;
}
"
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
"
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
"
3d5712cd499b5dbbb377c38144436a2980ada53f,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
        	return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return false;
}
"
685a1f07697cb907cefcecfa8cf5158825e90e14,"public int countCode(String str)
{
    int length = str.length() - 2;
    int num = 0;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == c && str.charAt(i + 1) == o
            && str.charAt(i + 3) == e)
        {
            num = num + 1;
        }
    }
    return num;
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
269af4075525a2083019b124be38f451bea5eb2d,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            if (isAsleep)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
        else
        {
            return false;
        }
    }
    else if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
2fca6215c9c9afb58d28887169dfe435558d7825,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a <= 21 && a > b)
    {
        return a;
    }
    else if (b <= 21 && b > a)
    {
        return b;
    }
    else if (b <= 21 && a > 21)
    {
        return b;
    }
    else
    {
     	return a;   
    }
}
"
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
"
12941eb615aae98f65aa36224718e48e3383968c,"public int loneSum(int a, int b, int c)
{
    int x = a + b + c;
    if (a == b)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == c)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return a;
        }
    }
    else if (a == c)
    {
        if (b == c)
        {
            return 0;
        }
        else
        {
            return b;
        }
    }
    else
    {
        return x;
    }
}
"
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
"
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
"
1ced7b3ab5f86bf014b0aab47983b280fea0faf5,"public int[] frontPiece(int[] nums)
{
    returnNumber = new int[2]
    for (int i = 0; i < nums.length && i < 2; i++)
    {
        returnNumber[i] = nums[i]
    }
	return returnNumber;
}
"
328f2f06f07e26aac03e4e4a6df016fc0c620fcc,"public int redTicket(int a, int b, int c)
{
      if (a == 2 && b == 2 && c == 2)
    return 10;
  if ( a == b && b == c)
    return 5;
  if ( a != b && a != c)
    return 1;
  else
    return 0;
}
"
150674542f779f0f080fa72fb20d5088fbe7f75e,"public int sortaSum(int a, int b)
{
    int sum = 0;
    sum = a + b;
    if (sum >= 10 && sum <= 19){
        sum = 20;
    }
    return sum;
}
"
82c64fa09f2ec4b819acaeb99373996b024cc02e,"public int roundSum(int a, int b, int c)
{
    int roundSum = round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int rem = num % 10;
    if (rem >= 5) {
        num = numb + 10 - rem;
    }
    else {
        num = num - rem;
    }
    return num;    
}
"
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
"
31d2de2c4723037a38f2b62dd095d3efaf175d3f,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
}
"
dc77d9f47e20012cfdff686d71cf058927245c62,"public int roundSum(int a, int b, int c)
    return round10(a) + round10(b) + round10(c));

public int round10(int num)
{
    int digit = num % 10;
	if (digit >= 5)
        return num = (10 - digit);
    return num - digit;
}
"
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
1ef1d41cd720754161cc1b953d6c374d6349e857,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)

   return 10;

  if ( a == b && b == c)

    return 5;

  if ( a != b && a != c)

    return 1;

  else

    return 0;

}
"
3a244a1b4e96b9b233338061c4229807fb89777c,"public int countCode(String str)
{
    int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
41c8da13b33e4f2c7ae68912df33bf871bfd1952,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = n;
    for (int i =0; i <n ;i++)
    {
        if (!(nums[i] == nums[nums.length - range + i]))
		result = false;
    }

}
"
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}"
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
"
9e2323cd896bf8c878fad40b42eac0e930afede4,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    String str = String.valueOf(num);
    int stringLength = str.length();
    int lastDigit = Integer.parseString(stringLength);
    if (lastDigit >= 0 && lastDigit < 5)
    {
        return num - lastDigit;
    }
    else if (lastDigit >= 5)
    {
        return num + (10 - lastDigit);
    }
}"
66d81d6a71405ccedc06586970c02dcccae77323,"public int[] fix45(int[] nums)
{
    int k;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(k = 0; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4)); k++)
            {
                k = k;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
d0e7e4f01d1bd84602edf6ae34c0d764c24c4815,"public int countCode(String str)
{
    int i = 0;
    int time = 0;
    int l = str.length() - 3;
    
    while (i < l)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt( i 			+3 == 'e')
            {
                time++;
                i += 4;
            }
            i++;
            }
            return time;
        
}
"
610dbd70704f6fe7a7fa838ba5850c555c6ec37d,"public String withouEnd2(String str) 
{
        if (str.length() <= 2) 
            return """";
        return str.substring(1, str.length() - 1);
}
"
0cb8c025b705f4587b7d469c16c902e554391541,"public int[] frontPiece(int[] nums)
{
    return frontPiece;
}
"
79f2da1916c858f4bd63251e6ec244aad4272418,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
    {
		return n;
    }
    else
    {
		return 0;
    }
}
public int noTeenSum(int a, int b, int c)
{  
    return (fixTeen(a) + fixTeen(b) +fixTeen(c)); 
}
"
1f392835abe1515bae3d0a8fcfedc983a40383fb,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
		return 0;
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
9854a8715c3f2ef0abd481b669c936355c5f9760,"public int sum67(int[] nums)
{
    int sum = 0;
    
    for (int i : nums)
    {
        if (i == 6)
        {
            for (int j = 6; j <= 7; j++)
            {
                i = 0;
            }
        }
        sum = sum + i;
    }
    
    return sum;
}
"
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
"
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
fb63e4d9b9f844eb6f3145768fe6bd59fda4c682,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && a == c)
        result = 20;
    if (a == b || a == c || b == c)
        result = 10;
    else
        result = 0;
    return result;
 
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
a354fe94859e5967d2c6bdce8fdb12e90a24f48c,"public int sortaSum(int a, int b)
{
    if(a + b >= 10 || a + b <= 19)
    {
    	return a + b;
    }
    
    else 
    {
    	return 20;
    }
}
"
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
"
ee4708e15be1f13f8c489f277d070e2cddbf6ff4,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length ; i++)
    {
     	if (nums[i] == 13)   
        {
         	i++;
        }
     	sum = sum + nums[i];   
    }
    return sum; 
}
"
06ce870f764275dc4fbe2e7c3328c4f9612d64a7,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 0; i<n; i++)
    {
        last = last + last;
    }
    return last;
        
}
"
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
"
d7633351c672f26ee19b79bf514fdb0837ec9cb2,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMorning && !isMom)
        return false;
    else
        return true;
}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
"
c093cac600fc00c29dfe5c59c8ab78dddb9a3f95,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count >= nums.length - 1);            
    
}
"
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
e93b94f6835046c42b16cfe507547d10945a4c3a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++) {
		if ((nums[i-1] == val) && 
            (nums[i] == val) && nums[i+1] == val) {
         	 return true;
        }
        else {
			return false;
        }
    }
}
"
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
"
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
"
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
18ab89e18a6ce4e406b204406f6fb94214480bd9,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 10;
    if (a == b && b == c && a == c)
        return 5;
    if (a != b && b != c && a != c)
        return 1;
    else
        return 0;
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
"
cda4eeee2346e60e72673f13fb06774fb4ec1b1b,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
        int rightSum = 0;
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
"
bf0fb85d68a871de1263a11b4d6bf089714fa3ce,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0 ; nums.length > i; i++)
    {
        if (nums[i] == val || nums[i+1] == val)
        {
            return true;
        }
    }
    return false;
    
}
"
0cbcdcccb97a84929ef84adcbae98515edde8dfa,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    
   int d = num %10;
    if (d >= 5)
        return num + 10 -d;
    return num -d;
}
"
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
"
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
"
bb771f79da2e164515e0325c84eaa2dbd392e69b,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = 0;
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}"
19a5b90083c799114b8bccdc97fb09a69be2aba1,"public int greenTicket(int a, int b, int c)
{
    if (a == b || a == c || b == c)
        return 10;
	if (a == b && a == c || b == c)
        return 20;
    else
        return 0;
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
"
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
"
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
"
301bb42c276c9fed8a898bb3ffc4e02f7716cf3e,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        int loneSum = a + c;
    }
    else if (a == c) {
        int loneSum = a + b;
    }
    else if (b == c) {
        int loneSum = a + b;
    }
    else {
        int loneSum = a + b + c;
    }
    return loneSum;
}
"
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
61705bfd5a5b9bf82e4d10be405cc3a01e829d51,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a +b <= 19)
        return 20;
    else
        return a + b;
}
"
493267658ead76f2221aae551e38a001ba5eab78,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep)
    {
        if (isMorning)
        {
            if (isMom)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        else
        {
            return true;
        }
    }
    else
    {
        return false;
    }
}
"
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
"
da854431fc95a4fda3f5795de985db2ccfd6cecc,"public boolean xyzThere(String str)
{
    if (str.length() >= 3) {
   	 	for (int i = 0; i < str.length() - 3; i++) {
        	if (str.substring(i, i + 3).equals(""xyz"")) {
            	if (i == 0) {
                    return true;
                }
                else if (str.charAt(i - 1) == '.') {
                    return false;
                }
                else {
                    return true;
                }
        	}
            else {
               return false; 
            }
    	}
    }
    else {
        return false;
    }
}
"
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
"
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
"
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
828a3b0db925adca159220f3e9faf2fb4e24446a,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21){
        return a;
    }else if (b > a && b <= 21){
        return b;
    }else if (a > 21 && b < 22){
        return b;
    }else if (b > 21 && a < 22){
        return a;
    }else{
        return 0;
    }
}
"
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
4f020dcb2ebec419aa94d431533df15542e537ec,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
    return false;
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
76a3f2319da117864b8ca1165daa8eb7ace3e99c,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else 
        {
            return false;
        }
    else 
    {
        return true;
    }
}
"
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
"
8ce774ddf43260b9faa39499c3a67d91f71fc099,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    { if (!isSummer && temp >= 60 && <= 90)
    {
        return true;
    }}
}
"
c32e8df18759f85c9ca9cc1ff3051aa396bf5a33,"public boolean evenlySpaced(int a, int b, int c)
{
    int[3] arrInOrder;
    arrInOrder[0] = a;
    arrInOrder[1] = b;
    arrInOrder[2] = c;
    
    int small;
    int med, big;
   /**
    if ((a > b) && (a > c)) // if a is the biggest
   {
		if (b > c)
        {
            big = a;
            med = b;
            small = c;
        }
       else
       {
           
       }
       
   }
   */
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
"
0a9dcd12a12791fe49d782b736769ace72b0d2ed,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else
    {
        if (b == 13)
        {
            return a;
        }
        else
        {
             if (c == 13)
                {
                    int AB = (a + b);
                    return AB;
                }
                else
                {
                    int ABC = (a + b + c);
                    return ABC;
                }
        }
    }
}
"
8243c75a69e18cb6c9f02b072995835b37129ed9,"public boolean sameEnds(int[] nums, int len) {
boolean result = true;
int range = len;
for (int i =0; i <range;i++)
if (!(nums[i] == nums[nums.length - range + i]))
result = false;
return result;
}
"
87db562c5af3675b9fcf8cdf88341f5c205a229a,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return 0;
    }
    
    if (b == 13)
    {
        return a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
"
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
"
4cbf8228090da8fc7b21c3ef3a6ecea59b0f8e5f,"public int roundSum(int a, int b, int c)
{
	return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int value = num % 10
    if (value >= 5)
    {
        return num + (10 - value);
    }
}
"
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
"
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
"
2b976fe20b1e401744827a000d91d5535db7d93b,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <=90);
}
"
490ca1a37dcda41e77316b93a43e5fada6c183d5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
    }
    if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
762f08246c122eabc1b2c86550fef5a51f4c34a7,"public int round10(int num)
{
	int digit = num % 10;
	if(digit >= 5)
    {
		return num + (10 - digit);
    }
	return num - digit;
}
public int roundSum(int a, int b, int c)
{	
    return (round10(a) + round10(b) + round10(c));	
}"
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
"
9db9cff5028b4b1cc75f4f5c9a641117debb19ac,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0; 
    }    
    if (b > 21)
    {
        return 0;
    }
    if ( a > b)
    {
        return a;
    }
    else
    {
        return b;
    }
    
}
"
a040447a7a4d000d3f8dce6203fbc10a54cdf382,"public int blackjack(int a, int b)
{
    if (a>21)
    {
        a=0;
   		return a;
    }
    if (b>21)
    {
        b=0;
        return b;
    }
    if (a>b)
    {
     return a;   
    }
	else
	{	
    return b;
    }
}
"
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
"
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
"
62d5d815159b1c7fe5e22f80fa58bfdff30d2d35,"public int[] frontPiece(int[] nums)
{
    int[] firstTwoExtra = new int[nums.length]; 
    
    if (nums.length >= 2)
    {
        int[] firstTwo = new int[2];
        firstTwo[0] = nums[0];
        firstTwo[1] = nums[1];
     	return firstTwo  ;
    }
    else
    {
        int[] firstTwo = new int[nums.length]; 
     	for (int i = 0; i < nums.length; i++)
        {
            firstTwo[i] = nums[i];
            return firstTwo;
        }
    }
    return firstTwoExtra;
}
"
2fca6215c9c9afb58d28887169dfe435558d7825,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a <= 21 && a > b)
    {
        return a;
    }
    else if (b <= 21 && b > a)
    {
        return b;
    }
    else if (b <= 21 && a > 21)
    {
        return b;
    }
    else
    {
     	return a;   
    }
}
"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
270174ce7d53738e854429dc81bc8b311180b333,"public int[] shiftLeft(int[] nums)
{
    return int[] nums;
}
"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
fae2f7dfe0c7f6a36eed081761f1d04f77387b4b,"

    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }

"
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
"
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
"
97df39519ca1ef6b02ae307ac2c9f6c6f42d2e77,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
"
c64c9e9c0a786ef3732a68209a390d30d8284fd4,"public int dateFashion(int you, int date)
{
   if ((you >= 2 || date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 || date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
3bd541a9a74cfbc86ccd7aff7e6e071a6371cb04,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
"
b9fbdeb0d25edd847f75474416127f7deac2ef05,"public int blackjack(int a, int b)
{ assert(a > 0);
 assert(b>0);
    if ((a > 21) && (b > 21)) {
        return 0;
    } else if (a > 21) {
        return b;
    } else if (b > 21) {
        return a;
    }
 int difference_a_21 = 21 - a;
 int difference_b_21 = 21 - b;
 if (difference_a_21 > difference_b_21) {
 return b; 
 } else {
     return a;
 }
}
"
bb819a051a15f625b5912634652b195b464f7095,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length + 1 < nums.length - 2)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
"
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
"
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
"
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
0cbcdcccb97a84929ef84adcbae98515edde8dfa,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    
   int d = num %10;
    if (d >= 5)
        return num + 10 -d;
    return num -d;
}
"
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
"
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
"
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
528342efb0a38ace805355f9ecda4f69f0397a23,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
	if (a == 13)
    {
        return sum;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        int sum = a + b;
        return sum;
    }
    else
    {
        int sum = a + b + c;
        return sum;
    }
}
"
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
"
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
"
2f0a2b01b8d36b9b41d35269fb9c59a0cd367b3b,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int lastDigit = num % 10;
    if (lastDigit >= 5)
    {
        int roundUp = num + (10 - lastDigit);
        return roundUp;
    }
    else
    {
        int roundDown = num - lastDigit;
        return roundDown;
    }
}"
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
"
b53ab834a811096b76a803c390009392801834ab,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
23b5ec2ba8fe6b1ec171faaa28bcd140793480f8,"public int[] seriesUp(int n) {
  int[] result = new int[n * (n + 1) / 2];
  int i = 0;
  for (int j = 1; j <= n; ++j)
    for (int k = 1; k <= j; ++k)
      result[i++] = k;
  return result;
}"
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
"
bf0fb85d68a871de1263a11b4d6bf089714fa3ce,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0 ; nums.length > i; i++)
    {
        if (nums[i] == val || nums[i+1] == val)
        {
            return true;
        }
    }
    return false;
    
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
"
11b89a5a5c8c4cce3c90dfb984780d1229efc349,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[nums.length - 1] == 7 && nums[nums.length - 2] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
"
4951e3e93960ed4399945d8a349ac025dd9fc00d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum<= 19)
    {
     	sum = 20;   
    }
    return sum;
}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
3a2534fb0ac1dc3651141e9a0bd5b1830ff648bb,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""small ticket"";
        }
        else
        {
            return ""big ticket"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""small ticket"";
        }
        else
        {
			return ""big ticket"";
        }
    
    }
}  
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
"
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
"
bb771f79da2e164515e0325c84eaa2dbd392e69b,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = 0;
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
dca1f726e64da2460020f1bbac55668502eddba7,"public int roundSum(int a, int b, int c)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
    
}

public int round10(int num)
{
    return (round10(a) + round10(b) + round10(c));
    
}
"
c3512617ca5c44a2a7c9757943e2944653964b69,"public boolean bobThere(String str)
{
    firstB = str.indexOf(""b"")
}
"
92e96089344e9e0ed22514c1297920394e0f87d6,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length < nums.length - 1)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
"
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
2d1d1fb5d01448f6fb807ae2e7396795eba1c3fd,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0
    }
}
"
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
"
18ab89e18a6ce4e406b204406f6fb94214480bd9,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 10;
    if (a == b && b == c && a == c)
        return 5;
    if (a != b && b != c && a != c)
        return 1;
    else
        return 0;
}
"
55008f2ac50ecaccae3a878e34d56a2f00118737,"public int countClumps(int[] nums)
{
	int clump = 0;
    for (int i = 0; i < nums.length;i++)
    {
        
       {
           if ( i + 1 < nums.length)
           {
               if (nums[i] == nums[i + 1])
               {
                   clump = clump + 1;
                   for (int j = 1; j < nums.length; j++)
                   {
                       if (nums[i + 1] == nums[i + 1 + j])
                       {
                           i = i + 1;
                       }
                   }
               }
           }
       }
    }
    return clump;
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}"
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
"
8fb500466613a34013f0592cc334f444d8a2780d,"public int countClumps(int[] nums)
{
    int num = 0;
    int clumps = 0;
    Boolean clump = false;
    for (int i = 0; i < nums.length; i++)
    {
        num = nums[i];
        while (nums[i] == nums[i + 1])
        {
            i++
        }
        if (clump == true)
        {
            clumps++;
            clump = false;
        i--;
    }
}
"
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
"
22db1882535d71f9010b430616081de4d479a931,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
        if (c == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
7327da2d05b0df4310a26bf88cb8747aa664b1a4,"public int roundSum(int a, int b, int c)
{
    //round10(a);
    //round10(b);
    //round10(c);
    //return a + b + c;
    a = a % 10;
    return a;
}

public int round10(int num)
{
    int rem = 10 % num;
    if (rem > 5)
        num = num - rem;
    else
        num = num + rem;
    return num;
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
"
1f392835abe1515bae3d0a8fcfedc983a40383fb,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
		return 0;
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
d5ce0fb7cf0b155cde53ceb7bede5737956327c9,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i : nums)
    {
        for (int j : array)
        {
            if (i != 10)
            {
                array[j] = i;
                break;
            }
        }
    }
    
   return array;
}
"
e73f15cebf791aa932347617662e3a6641135a35,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
    //return nums;
    if (nums.length >= 2)
    {
        
   		int start = nums[0];
    	for (int i = 0; i < nums.length - 1; i++)
    	{
     	//int j = 1;
        //nums[i] = nums[j];
        	nums[i] = nums[i + 1];
    	}
    
        	//nums[nums.length - 1] = start;
        /*if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }*/
    
              	
    }
    
    return nums;   
}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
"
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
"
dead7e5e377079599c11bb673bf7c1248fef60fc,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if ( a == b && b == c)
    {
        sum = a;
    }
    else if (a == b || a == c)
    {
        sum = sum - a;
    }
    else if (b == c)
    {
        sum = sum - b;
    }
    return sum;
}
"
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
61705bfd5a5b9bf82e4d10be405cc3a01e829d51,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a +b <= 19)
        return 20;
    else
        return a + b;
}
"
ac791e33437b3b26bd56526f8f1a68c958771022,"public int sum3(int[] nums)
{
    return nums[0]+nums[1]+nums[2];
}
"
4cad14f6dc235bb7665a336718b0bc721df9ddd2,"public boolean isEverywhere(int[] nums, int val)
{
    Boolean result = true;
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            result = true;
        }
        else
        {
            result = false;
            break;
        }
    }
    return result;
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
3d11719630fc8c44b85deba0b9752e36fb374a27,"public int luckySum(int a, int b, int c)
{
    if (a = 13)
    {
        return 0;
    }
    else if (b = 13)
    {
        return a;
    }
    else if (c = 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
0fd5c40c96b7dfad240c5509995b5acc9eccd6b3,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
685a1f07697cb907cefcecfa8cf5158825e90e14,"public int countCode(String str)
{
    int length = str.length() - 2;
    int num = 0;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == c && str.charAt(i + 1) == o
            && str.charAt(i + 3) == e)
        {
            num = num + 1;
        }
    }
    return num;
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
"
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
"
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
"
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
"
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
"
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
"
fb3b878ff7c89e0940c66e22faadec79ac2996e7,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i: int[])
    {
     	sum = sum + i;
    }
    return sum;
}
"
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
"
8a779c37e36e7e7238238f8fa362f496af39a6e3,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    
    
        
        
    if(first != -1 && last != -1 && first != last)
    {
		return str.substring(first + 5, last);
    }
    else return"""";
}
"
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
"
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}"
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
"
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
"
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
"
ec440fd647af59cbea91a966ccc1596f685d24fa,"public int blackjack(int a, int b)
{
   if ( a > 21 && b > 21)
   {
      return 0; 
   }
    if (21 - b > a)
    {
        return a;
    }
    else 
        return b;
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
f0be04df720e45391f559d26dc0955b0202bb87b,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n != 15 && n != 16)
        	return 0;
    return n;
}
"
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
"
270174ce7d53738e854429dc81bc8b311180b333,"public int[] shiftLeft(int[] nums)
{
    return int[] nums;
}
"
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
1f392835abe1515bae3d0a8fcfedc983a40383fb,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
		return 0;
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
04780365d53ec02bf23dee2452c32d0edb7fb12c,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
1d6179ccdc1c6fce139143f569025a679c1301a0,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        	largeOdd == nums[i];
        if (nums[i] == 0)
        	nums[i] == largeOdd;
    }
    return nums;
}"
954b684277b4e386b93c914548d0c579aafd6503,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        for (int k = 0; k < nums.length - 1; k++)
        {
            if (i == 4 && k == 5)
            {
                int m = nums[k + 1];
                nums[k + 1] = nums[i];
                    nums[i] = m;
            }
        }
    }
    return nums;
}
"
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
"
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
"
ee4708e15be1f13f8c489f277d070e2cddbf6ff4,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length ; i++)
    {
     	if (nums[i] == 13)   
        {
         	i++;
        }
     	sum = sum + nums[i];   
    }
    return sum; 
}
"
ec440fd647af59cbea91a966ccc1596f685d24fa,"public int blackjack(int a, int b)
{
   if ( a > 21 && b > 21)
   {
      return 0; 
   }
    if (21 - b > a)
    {
        return a;
    }
    else 
        return b;
}
"
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
"
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
d4bcf6c8e35c1dc33d803d62c4c1abc06da6328d,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] == 13)
        {
         	sum = sum;   
        }
        else if (nums[i - 1] == 13)
        {
         	sum = sum;   
        }
        else
        {
         	sum = sum + nums[i];
        }
    }
    return sum;
}
"
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
"
47bcbb118b9820ce001397912cd55ec9c5521a9b,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
        return c;
    }
    if (a == c)
        return b;
    if (b == c)
        return a;
    return (a + b + c);
}
"
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
"
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
8288a998c242f26a309f710f4751d7d5d1e7876c,"public int blackjack(int a, int b)
{
    int aDistance = 21;
    int bDistance = 21;
    if (a > 21 && b > 21)
        return 0;
    if (a < 22)
        aDistance = 21 - a;
    if (b < 22)
        bDistance = 21 - b;
    if (aDistance > bDistance)
        return b;
    else
        return a;
       
        
    
}
"
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
a457e813b62121d4bee7f0cd63ba678e9441866c,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c && b == c){
            result = 10;
        }
     }
    else if ( c == b){
        result == 10;
    }
        
            
    return result;
}
"
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
"
64e6a1b1c2176532ea3545edbf85eecc952dbf18,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a;
    return diffOne == diffTwo;
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
"
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
"
fb3b878ff7c89e0940c66e22faadec79ac2996e7,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i: int[])
    {
     	sum = sum + i;
    }
    return sum;
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
"
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
"
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
"
9b06d81d2ee2682ba33f3c4251db06a7cfeaf2a8,"public int sum3(int[] nums)
{
    return 8;
}
"
6951053422eb1f10e58384407fe2177bd76f6031,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum
    }
}
"
828a3b0db925adca159220f3e9faf2fb4e24446a,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21){
        return a;
    }else if (b > a && b <= 21){
        return b;
    }else if (a > 21 && b < 22){
        return b;
    }else if (b > 21 && a < 22){
        return a;
    }else{
        return 0;
    }
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
a040447a7a4d000d3f8dce6203fbc10a54cdf382,"public int blackjack(int a, int b)
{
    if (a>21)
    {
        a=0;
   		return a;
    }
    if (b>21)
    {
        b=0;
        return b;
    }
    if (a>b)
    {
     return a;   
    }
	else
	{	
    return b;
    }
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
150674542f779f0f080fa72fb20d5088fbe7f75e,"public int sortaSum(int a, int b)
{
    int sum = 0;
    sum = a + b;
    if (sum >= 10 && sum <= 19){
        sum = 20;
    }
    return sum;
}
"
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
"
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
2b6fbdd8ffb390e14349649d51e8f312d5db1ba8,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[nums.length - 1] == 2)
        return false;
    return true;
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
0a620bf30b2a7a4fce92e7ea762e2a29a92cd83d,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
"
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
"
a2c77eb2341d2107484dea64721c8eb1fb2b5c9b,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else if (c == 13)
    {
    	sum = a + b;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum;
    }
}
"
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
"
62d31dc1d181609f1ad5028901c8db29d61ea2b8,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    else 
    {
        return (a +b);
    }
}
"
2ee7d366ef45e04675e68bd5cfd425ac0862af68,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else
    {
		return ""@@"";
    }

  }
"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
2e007e796e35e7e1dc3f93fe57d7994c06428678,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 && n == 16)
            return n;
        else
        	return 0;
    return n;
}
"
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
"
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
cd23c0ed240a318d70e3ddbf504fb44f78c81ffc,"public String atFirst(String str)
{ 
    if (str.length() < 2 && str.length() != 0)
    {
        return str + ""@"";
    }
    else if (str.length() == 0)
    {
        return ""@@""
    }
    else
    {
        return str.substring(0,2);
    }
    
}
"
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
a2a2884e41048d06a4cb030480f7393277c7ec9a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + nums[i];
        if (nums[i] == 13)
        {
            sum = sum - (13 = nums[i + 1]));
        }
    }
    return sum;
}
"
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
9f7cabb358a67a54ce58c64d4a9845fcc682c8e5,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if (speed <= 60) {
        return 0;
    }
        else if (speed > 60 && speed <81) {
            return 1;
        }
            else {
                return 2;
        }
    if (isBirthday);
    	 if (speed <= 65) {
             return 0;
         }
    else if (speed > 65 && speed < 86) {
        return 1;
    }
    else {
        return 2;
    }
}
       "
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
"
47f3a74a254afbf6c445487eff4eb1c0df9e20df,"public boolean has77(int[] nums)
{
    int blob = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (i < nums.length - 2)
        {
            if (nums[i] == nums[i + 1] && nums[i] == 7)
        	{
            	blob = blob + 100;
        	}
            if (nums[i] == nums[i + 2] && nums[i] == 7)
            {
                blob = blob + 100;
            }
        }   
        else if (nums[i] == nums[i + 1] && nums[i] == 7)
        {
            blob = blob + 100;
        }
        else
        {
            blob = blob + 1;
        }
    }
    return blob >= 100;
}
"
02c1f791fb8f450361e3bba08c084c74102eeb61,"public int countEvens(int[] nums)
{
    for (num: int[] nums)
    {}
}
"
8294d5989bd72ab3256d9b0427b4cace8607d55c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars >= 40)
        {
            return ""true"";
        }
        else
        {
        	return ""false"";   
        }
    }
    else
    {
        if (cigars <=60 && cigars >=40)
        {
            return ""true"";
        }
        else
        {
            return ""false"";
        }
    }
}
"
13e7ebf5b1cb8a39e420140214502a74809a7fad,"public int countCode(String str)
{
    int num = 0;
    for(int i = 0; i < str.length() - 3; i++) {
        if(str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i + 3) == 'e')
            num++;
    }            
    return num;
}
"
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
"
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
"
23b5ec2ba8fe6b1ec171faaa28bcd140793480f8,"public int[] seriesUp(int n) {
  int[] result = new int[n * (n + 1) / 2];
  int i = 0;
  for (int j = 1; j <= n; ++j)
    for (int k = 1; k <= j; ++k)
      result[i++] = k;
  return result;
}"
9f98cd5893ed8711953832332cb9e68381d2d182,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str.substring(str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
13588bafe7146875aeecd22626679f601f5f7f24,"public boolean bobThere(String str)
{
    int i;
    for (i=0; i < str.length()-3; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
"
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
"
9e2323cd896bf8c878fad40b42eac0e930afede4,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    String str = String.valueOf(num);
    int stringLength = str.length();
    int lastDigit = Integer.parseString(stringLength);
    if (lastDigit >= 0 && lastDigit < 5)
    {
        return num - lastDigit;
    }
    else if (lastDigit >= 5)
    {
        return num + (10 - lastDigit);
    }
}"
e380683c57feefa7fb3a525ba8c8887539b740dc,"public int greenTicket(int a, int b, int c)
{
 	if (a==b && b==c)
    {
        return 20;
    }
    
     if (a==b && a==c)
    {
        return 10;
    }
    
    if (a!=b && b!=c)
    {
        return 0;
    }
    
    
 	return 10;
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
d13a33582df37d05d65fd78cbbf872a038ff4dd0,"public int blackjack(int a, int b)
{
    int aDistance = 21;
    int bDistance = 21;
    if (a > 21 && b > 21)
        return 0;
    if (a < 21)
        aDistance = 21 - a;
    if (b < 21)
        bDistance = 21 - b;
    if (aDistance > bDistance)
        return b;
    else
        return a;
       
        
    
}
"
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
"
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
"
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
"
f8e2e6bb5d3f455462c4a729ac1c0772ed521c99,"public boolean twoTwo(int[] nums)
{
    if (nums.length < 2 && nums[0] != 2 )
    {
     	return true;   
    }
    else if (nums.length < 1)
    {
     	return false;   
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
33bf743a9707fb874e5447648c48e307607e03de,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 1) == 'co' &&
            str.substring(i + 3) == 'e')
        {
            count = count + 1;
        }
    }
    return count;
}
"
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
86eeb69c66325d7ac263cfba4f58a77188d3d872,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int test = 0;
        int[] testArray = new int[nums.length];
        for (int x = 0; x < nums.length; x++)
        {
            testArray[x] = nums[x];
            test++;
        }
        if (test == nums.length)
        {
            return 1;
        }
        
        
        
        
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i]);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init)
{
    int nextNum = 0;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
03963c180ede47baf3cb2a34f74b6ff99ed0fee1,"public int[] zeroMax(int[] nums) {
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--) {
        if (nums[i] % 2 == 1 && nums[i] > largestOdd)
            largestOdd = nums[i];
        if (nums[i] == 0)
            nums[i] = largestOdd;
    }
    return nums;
}"
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
"
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
"
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
"
0ebd451bd7f1ba5eaaee7cc787359dde169abbc2,"public String getSandwich(String str)
{
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
        return str.substring(first + 5, last);
                                                                    
    return """";
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
f2a0ae7b1e316eb53dc6d43a4369f211fba8f01a,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 < 5)
        return num - (num%10);
    else
        return num + (10 - (num%10));
}
"
888a63dff1f59fa6a944754dead51bf5ff29d397,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
685a1f07697cb907cefcecfa8cf5158825e90e14,"public int countCode(String str)
{
    int length = str.length() - 2;
    int num = 0;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == c && str.charAt(i + 1) == o
            && str.charAt(i + 3) == e)
        {
            num = num + 1;
        }
    }
    return num;
}
"
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
"
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
d5ce442602f709f5b69882191e66e3dbc3382576,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21)
    {
        return a;
    }
    else if (b > a && b <= 21)
    {
        return b;
    }
    else if (a > 21 || b > 21)
    {
        return 0;
    }
}
"
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
"
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
"
c3512617ca5c44a2a7c9757943e2944653964b69,"public boolean bobThere(String str)
{
    firstB = str.indexOf(""b"")
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
"
82c64fa09f2ec4b819acaeb99373996b024cc02e,"public int roundSum(int a, int b, int c)
{
    int roundSum = round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int rem = num % 10;
    if (rem >= 5) {
        num = numb + 10 - rem;
    }
    else {
        num = num - rem;
    }
    return num;    
}
"
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
"
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
"
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
"
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
ec7f457115687180217c5031a741ed0ee5198ec6,"public int noTeenSum(int a, int b, int c)
{
	int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
        return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
    }
}
"
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
"
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
"
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
"
2d1d1fb5d01448f6fb807ae2e7396795eba1c3fd,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if ((a == b && a != c) || (a == c && a != b) || (b == c && a != b))
    {
        return 10;
    }
    else
    {
        return 0
    }
}
"
c9db41e8ca91d96bee3eb4e5f89bb33135f954df,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
        return 20;
    
}
"
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
0cbcdcccb97a84929ef84adcbae98515edde8dfa,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    
   int d = num %10;
    if (d >= 5)
        return num + 10 -d;
    return num -d;
}
"
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
"
bedb2c2c407cfc6f84128d3bcf6e102d6628dd32,"public boolean sameEnds(int[] nums, int n)
{
    if (n <= 1)
    {
    	for (int i = 0; i <= n; i++)
    	{
            if (nums[i] != nums[nums.length - 1 - i])
        	{
            	return false;
        	}
    	}
    }
    else
    {
        for (int i = 0; i <= n; i++)
    	{
            
            else if (nums[i] != nums[nums.length - n + i])
        	{
            	return false;
        	}
    	}
        
    }
    return true;
}
"
a2c77eb2341d2107484dea64721c8eb1fb2b5c9b,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else if (c == 13)
    {
    	sum = a + b;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum;
    }
}
"
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
"
3bd541a9a74cfbc86ccd7aff7e6e071a6371cb04,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
"
c62602f27883f984fbc0551198122402edd6e05d,"public int[] shiftLeft(int[] nums)
{
    return int[];
}
"
f4b03862b0451a373caa9f6bb7390b99d9c24f62,"public String atFirst(String str)
{
    return str.substring(0, 2);
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
e9b63cad69501d11984221e9a07eff591dedc2b8,"public int roundSum(int a, int b, int c)
{
    a = round10(a);
    b = round10(b);
    c = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int rem = num % 10;
    if (num >= 0 && num < 5)
        num = num - rem;
    else
        num = num + 10 - rem;
    return num;
}
"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
"
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
"
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
"
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
"
a457e813b62121d4bee7f0cd63ba678e9441866c,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c && b == c){
            result = 10;
        }
     }
    else if ( c == b){
        result == 10;
    }
        
            
    return result;
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
f6cfdfcc045d3ced7634c7a0afcbe4afd98d380e,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
        n = 0;
    
    return n;
}
"
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
"
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
"
bf0fb85d68a871de1263a11b4d6bf089714fa3ce,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0 ; nums.length > i; i++)
    {
        if (nums[i] == val || nums[i+1] == val)
        {
            return true;
        }
    }
    return false;
    
}
"
042c7539e7bbc603f9d999c837f0b4486eeef11a,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n != 15 && n != 16)
    	if (n <= 19 && n >= 13)
        	return 0;
    return n;
}
"
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
b97e82329cb0c23433c468d538ca5b604bfcba09,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
     	if (nums[i] % 2 == 1 && nums[i] > largestOdd)
        {
            largestOdd = nums[i];
        }
        if (nums[i] == 0)
        {
         	nums[i] = largestOdd;   
        }
    }
    return nums;
}
"
0dcf6449d4df310d3fe50618ea03c76712671149,"public boolean canBalance(int[] nums)
{
    int upperIndex = nums.length-1;
    int lowerIndex = 0;
    while(lowerIndex<upperIndex){
		int lowerSum = sum(nums,0,lowerIndex);
        int upperSum = sum(nums,lowerIndex,upperIndex);
        if(lowerSum==upperSum)
            return true;
        else if(lowerSum<upperSum)
            lowerSum++;
        else
            upperSum++;
    }
    return false;
}

private int sum(int[] nums,int a, int b){
    int sum = 0;
    for(int i = a; a < b; i++){
        sum+=nums[i];
    }
    return sum;
}"
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
"
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
"
665bc82d890d74501a41102dfa9e7958d532ef75,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars <= 60);
    }
}
"
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
"
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
1ef1d41cd720754161cc1b953d6c374d6349e857,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)

   return 10;

  if ( a == b && b == c)

    return 5;

  if ( a != b && a != c)

    return 1;

  else

    return 0;

}
"
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
"
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
"
47bcbb118b9820ce001397912cd55ec9c5521a9b,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
        return c;
    }
    if (a == c)
        return b;
    if (b == c)
        return a;
    return (a + b + c);
}
"
78a8e8a64b313ff7d1734612cc884e563d6caea4,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b!= 13 && c!= 13)
    {
        return (a+b+c);
    }
    
    else if (a== 13)
    {
        return 0;
    }
    
    else if (b== 13)
    {
        return a;
    }
    
    else if (c==13)
    {
        return (a+b);
    }
    
    return 0;
}
"
cda4eeee2346e60e72673f13fb06774fb4ec1b1b,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
        int rightSum = 0;
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
"
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}"
d4727621894f4b6e95bac621a23e19a3148b6d8b,"public boolean endOther(String a, String b)
{
    if (a.toLowerCase().endsWith(b.toLowerCase()))
        {
            return true;
        }
    else if (b.toLowerCase().endsWith(a.toLowerCase()))
             {
                 return true;
             }
    else
             {
                 return false;
             }
}
"
085c90128653ad2d02262a5079a336364fa0a7cb,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || b==c || a == c)
        return 10;
    else 
        return 0;
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
828a3b0db925adca159220f3e9faf2fb4e24446a,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21){
        return a;
    }else if (b > a && b <= 21){
        return b;
    }else if (a > 21 && b < 22){
        return b;
    }else if (b > 21 && a < 22){
        return a;
    }else{
        return 0;
    }
}
"
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
"
9ebe46b9e7a4b3cb16a4423e4af7f17722965213,"public int noTeenSum(int a, int b, int c)
{
    int sum = (fixTeen(a)+fixTeen(b)+fixTeen(c));
        return sum;
}

public int fixTeen(int n)
{
    if (n>=13&&n<=19)
    {
        if (n==15||n==16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }
}
"
761faf27118f8d7637200b8140f5a550d392d440,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
     if ( (n >=13 && n < 15) || (n > 16 && n <= 19) )
     {
         return 0;
     }
    else
    {
        return n;
    }
}

"
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
b5509f3d8d4bcd8f2b81e75b2c675400125936aa,"public int luckySum(int a, int b, int c)
{
    int luckySum = 0;
    if ( a == 13 )
    {
    	luckySum = c;
    }
    else if ( b == 13)
    {
    	luckySum = b;
    }
    else if (c == 13)
    {
    	luckySum = a + b;
    }
    else
    {
    	luckySum = a + b + c;
    }
    return luckySum;
}
"
03963c180ede47baf3cb2a34f74b6ff99ed0fee1,"public int[] zeroMax(int[] nums) {
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--) {
        if (nums[i] % 2 == 1 && nums[i] > largestOdd)
            largestOdd = nums[i];
        if (nums[i] == 0)
            nums[i] = largestOdd;
    }
    return nums;
}"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
150674542f779f0f080fa72fb20d5088fbe7f75e,"public int sortaSum(int a, int b)
{
    int sum = 0;
    sum = a + b;
    if (sum >= 10 && sum <= 19){
        sum = 20;
    }
    return sum;
}
"
aa4d8b44bff62be088c0c94a7829aa410ffa133b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        if (speed >= 81)
        {
            return 2;
        }
    }
    if (!isBirthday)
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}"
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
"
ee4708e15be1f13f8c489f277d070e2cddbf6ff4,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length ; i++)
    {
     	if (nums[i] == 13)   
        {
         	i++;
        }
     	sum = sum + nums[i];   
    }
    return sum; 
}
"
9e2323cd896bf8c878fad40b42eac0e930afede4,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    String str = String.valueOf(num);
    int stringLength = str.length();
    int lastDigit = Integer.parseString(stringLength);
    if (lastDigit >= 0 && lastDigit < 5)
    {
        return num - lastDigit;
    }
    else if (lastDigit >= 5)
    {
        return num + (10 - lastDigit);
    }
}"
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
"
1ced7b3ab5f86bf014b0aab47983b280fea0faf5,"public int[] frontPiece(int[] nums)
{
    returnNumber = new int[2]
    for (int i = 0; i < nums.length && i < 2; i++)
    {
        returnNumber[i] = nums[i]
    }
	return returnNumber;
}
"
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
"
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
"
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}"
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
"
70e8fe1e1559c1588960e28f03cfb0569868a17f,"public boolean evenlySpaced(int a, int b, int c)
{
    if ((Math.abs(a - b) == Math.abs(b - c)) || (Math.abs(a - c) == Math.abs(b -a)))
    {
        return true;
    }
    else
    {
        return false;
    }
        
}
"
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
3a244a1b4e96b9b233338061c4229807fb89777c,"public int countCode(String str)
{
    int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
"
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
"
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
"
d0e7e4f01d1bd84602edf6ae34c0d764c24c4815,"public int countCode(String str)
{
    int i = 0;
    int time = 0;
    int l = str.length() - 3;
    
    while (i < l)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt( i 			+3 == 'e')
            {
                time++;
                i += 4;
            }
            i++;
            }
            return time;
        
}
"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
"
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
"
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
"
18ab89e18a6ce4e406b204406f6fb94214480bd9,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 10;
    if (a == b && b == c && a == c)
        return 5;
    if (a != b && b != c && a != c)
        return 1;
    else
        return 0;
}
"
4f020dcb2ebec419aa94d431533df15542e537ec,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
    return false;
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
2fca6215c9c9afb58d28887169dfe435558d7825,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a <= 21 && a > b)
    {
        return a;
    }
    else if (b <= 21 && b > a)
    {
        return b;
    }
    else if (b <= 21 && a > 21)
    {
        return b;
    }
    else
    {
     	return a;   
    }
}
"
328f2f06f07e26aac03e4e4a6df016fc0c620fcc,"public int redTicket(int a, int b, int c)
{
      if (a == 2 && b == 2 && c == 2)
    return 10;
  if ( a == b && b == c)
    return 5;
  if ( a != b && a != c)
    return 1;
  else
    return 0;
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
4a9806e5d979032eadab4c8d23dec29284441f09,"public int greenTicket(int a, int b, int c)
{	
   	int result = 10;
    if (a != b && b != c && a != c)
    {    
        result = 0;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    return result;
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
a457e813b62121d4bee7f0cd63ba678e9441866c,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c && b == c){
            result = 10;
        }
     }
    else if ( c == b){
        result == 10;
    }
        
            
    return result;
}
"
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
a02eb75c4e00dfd8fa09a7d3de1220f22f7a8f27,"public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        return 0;
    }
    if (n == 15)
    {
        return 15;
    }
    if (n == 16)
        {
            return 16;
        }
}

"
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
"
cda4eeee2346e60e72673f13fb06774fb4ec1b1b,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
        int rightSum = 0;
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
3a244a1b4e96b9b233338061c4229807fb89777c,"public int countCode(String str)
{
    int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
09c6de5e29a256d7add784dac3a966346a82e499,"public int countClumps(int[] nums)
{
    int clumps = 0;
    int flag = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == flag)
            continue;
        if (nums[i] == nums[i + 1])
        {
            clumps++;
            flag = nums[i];
        }
        else
        {
            flag = nums[i];
        }
    }
    return clumps;    
}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
"
86eeb69c66325d7ac263cfba4f58a77188d3d872,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int test = 0;
        int[] testArray = new int[nums.length];
        for (int x = 0; x < nums.length; x++)
        {
            testArray[x] = nums[x];
            test++;
        }
        if (test == nums.length)
        {
            return 1;
        }
        
        
        
        
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i]);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init)
{
    int nextNum = 0;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
5a00919d938e7350f9d887a0f3c496f766fa3b49,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
"
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
"
325eb8d9cda58db31c3a0157abc1cd41245be9e7,"public int sortaSum(int a, int b)
{
    int result = 0;
    int sum = a + b;
    if (sum <= 19 || sum >= 10)
    {
        result = 20;
    }
    else 
    {
        result = sum;
    }
}
"
4922371b92b222012e44535853e7674bb94610e3,"public boolean twoTwo(int[] nums)
{
    if (nums.length <= 1)
    {
        return false;
    }
    if (nums.length == 2)
    {
       return (nums[0] == 2 || nums[1] == 2);
            
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
    }
    return true;
}
"
b89935cd76575e88ea3d850c3c4d704f4a06bb09,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b==13)
    {
        return a;
    }
    else if (c==13)
    {
        return a+b;
    }
    else
    {
        return a+b+c;
    }
}
"
88111a1b682c4e3263232c7e42baecf389dd8a17,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0)
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
    else
    {
    	return 0;
    }
}
"
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
"
762f08246c122eabc1b2c86550fef5a51f4c34a7,"public int round10(int num)
{
	int digit = num % 10;
	if(digit >= 5)
    {
		return num + (10 - digit);
    }
	return num - digit;
}
public int roundSum(int a, int b, int c)
{	
    return (round10(a) + round10(b) + round10(c));	
}"
b03f6ee58d1c2efbc298c1b090d888a47d5425a9,"public boolean evenlySpaced(int a, int b, int c)
{
    if (b-a <= 1 && c-a >= 2 && c-b >= 2 
        || b-a >= 2 && c-a <= 1 && c-b >=2
        || b-a >=2 && c-a >= 2 && c-b <= 1)
        return true;
    return false;
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
c32e8df18759f85c9ca9cc1ff3051aa396bf5a33,"public boolean evenlySpaced(int a, int b, int c)
{
    int[3] arrInOrder;
    arrInOrder[0] = a;
    arrInOrder[1] = b;
    arrInOrder[2] = c;
    
    int small;
    int med, big;
   /**
    if ((a > b) && (a > c)) // if a is the biggest
   {
		if (b > c)
        {
            big = a;
            med = b;
            small = c;
        }
       else
       {
           
       }
       
   }
   */
}
"
610dbd70704f6fe7a7fa838ba5850c555c6ec37d,"public String withouEnd2(String str) 
{
        if (str.length() <= 2) 
            return """";
        return str.substring(1, str.length() - 1);
}
"
fdd9c7578eae0199293f5c67050555c877e59579,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
    }
                           
    return (sum - max - min) / (nums.length - 2);
}
"
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
828a3b0db925adca159220f3e9faf2fb4e24446a,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21){
        return a;
    }else if (b > a && b <= 21){
        return b;
    }else if (a > 21 && b < 22){
        return b;
    }else if (b > 21 && a < 22){
        return a;
    }else{
        return 0;
    }
}
"
61f82d819ed02008ea7d45f70e7c86937eb58bc3,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (i == 0)
        {
            if (nums[0] == 2 && nums.length < 1)
            {
                return false;
            }
            else if (nums[0] == 2 && nums[1] != 2)
            {
                return false;
            }
        }
        else if (i == nums.length - 1)
        {
            if (nums[i] == 2 && nums[i - 1] != 2)
            {
                return false;
            }
        }
        else
        {
            if (nums[i] == 2)
            {
                if (nums[i - 1] == 2)
                {
                }
                else if (nums[i + 1] == 2)
                {
                }
                else
                {
                    return false;
                }
            }
        }
    }
    return true;
}
"
d58abb87ff70ff67a76bba0f3d1f0c3ba071d518,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == false)
    {
    if (speed < 60)
        {
            return 0;
        }
    if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    if (speed >= 81)
        {
            return 2;
        }
    }
    if (isBirthday == true)
    {
        return 0;
    return 0;
    }
}"
684d16d1fe00b522bc43f3c44174bcb4ccab14db,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && b == c && a == c)
    {
        result = 20;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    else
    {
        result = 10;
    }
    return result;
}
"
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
"
22fda47732546394dab7ecbb147aa3cdbdb03099,"public boolean xyBalance(String str)
{
  int l = str.length() - 1;
    for (int i = l; i >= 0; i--)
    {
        char n = str.charAt(i);
        if (n == 'x')
        {
            return false;
        }
        if (n == 'y')
        {
            return true;
        }
    }
    return true;
    }
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
9cccc838c6123ff6e830e3f73cb672510aa4de73,"public String atFirst(String str)
{
    if (str.length() >= 2)
    return str.substring(0,2);
  else if (str.length() == 1)
    return str + ""@"";
  else
    return ""@@"";

}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
"
6434b911e74e0d2939d97a8820552e19fd926f60,"public int countClumps(int[] nums)
{
      int current = -1, clump = 0;
  for(int i = 0; i < nums.length - 1; i++) {
    if(nums[i] == nums[i + 1] && nums[i] != current) {
       current = nums[i];
       clump++;
    } else {
       if(nums[i] != current) {
          current = -1;
       }
    }
  }
  return clump;
}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
"
22d46f636a2ecaa8a80e55e579500a4ff8e2a188,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            nums[i+1] = 5;
        }
    }
    
    return nums;
}
"
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
fb3b878ff7c89e0940c66e22faadec79ac2996e7,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i: int[])
    {
     	sum = sum + i;
    }
    return sum;
}
"
a6eca60d2ec41fba18ab610a87ee9c66cbb73d19,"public int findOdd(int[] nums, int index)
{
    biggestOdd = 1;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd == nums[j];
    return biggerOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
"
7e7bf4cc813657543b6b338e6de0cde0e361315b,"public int sum13(int[] nums)
{
    int total = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (num [i] == 13)
        {
            num [i] = 0;
            num [i] + 1 = 0;                
        }
        total = nums [i] + nums [i + 1];
    }
    return total;
}
"
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
"
87db562c5af3675b9fcf8cdf88341f5c205a229a,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return 0;
    }
    
    if (b == 13)
    {
        return a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
954b684277b4e386b93c914548d0c579aafd6503,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        for (int k = 0; k < nums.length - 1; k++)
        {
            if (i == 4 && k == 5)
            {
                int m = nums[k + 1];
                nums[k + 1] = nums[i];
                    nums[i] = m;
            }
        }
    }
    return nums;
}
"
a53827ae6f8593b92d7c9f0fea1847acc9435ac4,"public String alarmClock(int day, boolean vacation)
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	return 7;
    	}
    	else if (day=0 || day=6)
    	{
    	    return 10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	return 10;
    	}
    	else if (day=0 || day=6)
    	{
    	    return off;
    	}
    }
    
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
"
b9fbdeb0d25edd847f75474416127f7deac2ef05,"public int blackjack(int a, int b)
{ assert(a > 0);
 assert(b>0);
    if ((a > 21) && (b > 21)) {
        return 0;
    } else if (a > 21) {
        return b;
    } else if (b > 21) {
        return a;
    }
 int difference_a_21 = 21 - a;
 int difference_b_21 = 21 - b;
 if (difference_a_21 > difference_b_21) {
 return b; 
 } else {
     return a;
 }
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
62d31dc1d181609f1ad5028901c8db29d61ea2b8,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    else 
    {
        return (a +b);
    }
}
"
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
da35db888e070aad3d1910413f0731e4b429579c,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (20 - n < 7  && 20 - n < 1)
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
269af4075525a2083019b124be38f451bea5eb2d,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            if (isAsleep)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
        else
        {
            return false;
        }
    }
    else if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
8e2fbb177f04d826bcf31a521e3d2d5c0a540cf5,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if(sum >= 10 || sum <= 19)
    {
    	return sum;
    }
    
    else if (sum<=9 || sum>=20) 
    {
    	return 20;
    }
    
    return 20;
}
"
f1718cb6a2aa1704dac4fe8668d12e2c68a62b81,"public int[] fix45(int[] nums)
{
    for	(int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int k = 0;
            while	(nums[k] != 5)
            {
                k++;
            }
            nums[k] = nums[i+1];
            nums[i + 1] = 5;
            
        }
    }
    return nums;
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
e66af3fd10029e3b0eddec751863c4988c7a3b9a,"public boolean sameEnds(int[] nums, int n)
{
    int num = 0;
    for (int i = n; i > 0 n;i--)
    {
        if (nums[i] == nums[nums.length - i + 1])
        {
            num = num + 1;
        }    
    }
    if (num == n)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
0a620bf30b2a7a4fce92e7ea762e2a29a92cd83d,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
"
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
"
bda78f041aeff5c1c99839481d54cb270d0f1529,"public int makeChocolate(int small, int big, int goal)
{
     if goal >= 5 * big
     {
        remainder = goal - 5 * big；
     }
    else
    {
        remainder = goal % 5；
    }
        
    if remainder <= small
    {
        return remainder；
    }
        
    return -1；
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
0fd5c40c96b7dfad240c5509995b5acc9eccd6b3,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
"
76a3f2319da117864b8ca1165daa8eb7ace3e99c,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else 
        {
            return false;
        }
    else 
    {
        return true;
    }
}
"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
d9d0af4a86d3d806a73729146509fcd884212bbe,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 && (a + b) <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
50f3da72fdd9f01a0c7804b3c9c789cddd8d9b18,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (i = 0; i < num.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count*2 == num.length);            
    
}
"
f0205df67f010e325ec1614fba0a300d61a74dec,"public int blackjack(int a, int b)
{
    double valueA;
    valueA = (a % 21);
    double valueB;
    valueB =  (b % 21);
    
    if (a < 21 || b < 21)
    {
        if (double valueA > double valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else if (a < 21 && b < 21)
    {
        if (valueA > valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else
    {
        return 0;
    }
}
"
e2468a1fbac0f816c4df8538f0af6626551638b0,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
4690b3990e2eb6dd080ba258226248164f82da78,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh)
        {
            clumps++;
        }
    }
    return clumps;
}
"
e6b4e91acab1d81f043b26358d4b2c441fe38e23,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
377d33b5c5fd6194c58592818a016612e427dfc7,"public int[] fix45(int[] nums)
{
    int f45 = 0;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i + 1] != 5)
		{
			for(!(nums[f45] == 5 && (f45 == 0 || f45 > 0 && nums[f45 - 1] != 4)) f45++)
            {
			nums[j] = nums[i + 1];
			nums[i + 1] = 5;
            }
		}
	}
	return nums;
}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
"
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
"
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
"
22db1882535d71f9010b430616081de4d479a931,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
        if (c == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
"
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
694a9037b08573fdb83bf861651119e9cdc03f82,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 1; i<n; i++)
    {
        last = last + str.substring(str.length()-n);
    }
    return last;
        
}
"
8bf0c02326a8dece6634c3b907e8da6aa6c7a3cf,"public int countCode(String str)
{
    if (str.length() < 4)
        return 0;
    
    if (str.indexOf(""c"") == -1)
        return 0;
    
    int total = 0;
    
    for (int i = str.indexOf(""c""); i < str.length() - 3; i++)
    {
     	   if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i+3) == 'e')
           {
            	total = total + 1;	   
           }
    }
    return total;
}
"
aa4d8b44bff62be088c0c94a7829aa410ffa133b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        if (speed >= 81)
        {
            return 2;
        }
    }
    if (!isBirthday)
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}"
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
"
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
"
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
"
13e7ebf5b1cb8a39e420140214502a74809a7fad,"public int countCode(String str)
{
    int num = 0;
    for(int i = 0; i < str.length() - 3; i++) {
        if(str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i + 3) == 'e')
            num++;
    }            
    return num;
}
"
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}"
0a9dcd12a12791fe49d782b736769ace72b0d2ed,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else
    {
        if (b == 13)
        {
            return a;
        }
        else
        {
             if (c == 13)
                {
                    int AB = (a + b);
                    return AB;
                }
                else
                {
                    int ABC = (a + b + c);
                    return ABC;
                }
        }
    }
}
"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
f1718cb6a2aa1704dac4fe8668d12e2c68a62b81,"public int[] fix45(int[] nums)
{
    for	(int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int k = 0;
            while	(nums[k] != 5)
            {
                k++;
            }
            nums[k] = nums[i+1];
            nums[i + 1] = 5;
            
        }
    }
    return nums;
}
"
9db9cff5028b4b1cc75f4f5c9a641117debb19ac,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0; 
    }    
    if (b > 21)
    {
        return 0;
    }
    if ( a > b)
    {
        return a;
    }
    else
    {
        return b;
    }
    
}
"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
"
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
34ad16a72b0a75568a00e876dfb72953f291c9ab,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            clumps++;
        }
    }
    return clumps;
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
4e250d40f6c8c4899a3eb79ea695e918be5d8a56,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
    	else if (nums[i] == 7 && nums[i + 2] == 7)
            return true;
    return false;
}
"
a6eca60d2ec41fba18ab610a87ee9c66cbb73d19,"public int findOdd(int[] nums, int index)
{
    biggestOdd = 1;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd == nums[j];
    return biggerOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}"
c77723bd709b08d6e00161ce3c6ef305a61d69c9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length()-2; i++) {
    if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b') {
      return true;
    }
  }
  return false;
}
"
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
"
1ced7b3ab5f86bf014b0aab47983b280fea0faf5,"public int[] frontPiece(int[] nums)
{
    returnNumber = new int[2]
    for (int i = 0; i < nums.length && i < 2; i++)
    {
        returnNumber[i] = nums[i]
    }
	return returnNumber;
}
"
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
"
cd80603c865a5f537dae1c802b4d53681015978e,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
e9b63cad69501d11984221e9a07eff591dedc2b8,"public int roundSum(int a, int b, int c)
{
    a = round10(a);
    b = round10(b);
    c = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int rem = num % 10;
    if (num >= 0 && num < 5)
        num = num - rem;
    else
        num = num + 10 - rem;
    return num;
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
19a5b90083c799114b8bccdc97fb09a69be2aba1,"public int greenTicket(int a, int b, int c)
{
    if (a == b || a == c || b == c)
        return 10;
	if (a == b && a == c || b == c)
        return 20;
    else
        return 0;
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
3efaac71173e97ea6c6ac0f7c521fa1adc7b0572,"public int findOdd(int[] nums, int index)
{
    biggestOdd = 1;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd = nums[j];
    return biggerOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
"
9b06d81d2ee2682ba33f3c4251db06a7cfeaf2a8,"public int sum3(int[] nums)
{
    return 8;
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
e72ea831c9a41938966949bb8bbf1a82e784b73b,"public String repeatEnd(String str, int n)
{
    int i = 0;
    for (i = 0; i < n; i++)
    {
    	if (str.length() - n == 0)
    	{
      		System.out.println(str);
   		}
   		else
    	{
       	return str.substring((str.length() - n), str.length());
    	}
    }
    
}
"
2efc3b1d0acaa60b452bf611f88e4f3873fd00aa,"public boolean isEverywhere(int[] nums, int val)
{
    int b = 0;
    for (int i = 1; i < nums.length - 1; i++) {
        if (nums[i] == val || nums[i-1] == val ||
            nums[i+1] == val) {
            	b++;
        }
    }
    return b == nums.length - 2;
}
"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
"
270174ce7d53738e854429dc81bc8b311180b333,"public int[] shiftLeft(int[] nums)
{
    return int[] nums;
}
"
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
79f2da1916c858f4bd63251e6ec244aad4272418,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
    {
		return n;
    }
    else
    {
		return 0;
    }
}
public int noTeenSum(int a, int b, int c)
{  
    return (fixTeen(a) + fixTeen(b) +fixTeen(c)); 
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
"
1202d346fcf0db46d6a29cff9b13366969ee2df1,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0,2));
    }
    else if (str.length() == 1)
    {
        return (str + ""@"");
    }
    else
    {
        return (""@@"");
    }
}
"
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
"
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
"
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
"
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
"
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
"
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
"
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
"
039a5741fb82006d59f66a5ffd100359f6a3aa77,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
    	if (cigars >= 40)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
    else
    {
    	if (cigars >= 40 && cigars <= 60)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
}
"
fd19ee70b6ed78dc3c5cf345b006e41ad230749d,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
c384cb38b2cffa92ee7bc55feafe1c65d7c5d33e,"public int countCode(String str)
{
int count = 0;

for(int i = 0; i < str.length() - 3; i++)
{
if(str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
count++;
}

return count;  
}
"
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
0bd7fe95ce9749e4f8a7edf4208f6c161ea14ca1,"public int countCode(String str)
{
    int x = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c')
        {
            if (str.charAt(i+1) == 'o')
            {
                if (str.charAt(i + 3) == 'e')
                {
                    x++;
                }
            }
        }
    }
    return x;
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
c531b36cd72156cb65bd26c919a9de7a647ca456,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int x = num % 10;
    if (x >= 5)
    {
        return num + (10 - x);
    }
    else
    {
        return num - x;
    }
}
"
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
66d81d6a71405ccedc06586970c02dcccae77323,"public int[] fix45(int[] nums)
{
    int k;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(k = 0; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4)); k++)
            {
                k = k;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
2f0a2b01b8d36b9b41d35269fb9c59a0cd367b3b,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int lastDigit = num % 10;
    if (lastDigit >= 5)
    {
        int roundUp = num + (10 - lastDigit);
        return roundUp;
    }
    else
    {
        int roundDown = num - lastDigit;
        return roundDown;
    }
}"
55008f2ac50ecaccae3a878e34d56a2f00118737,"public int countClumps(int[] nums)
{
	int clump = 0;
    for (int i = 0; i < nums.length;i++)
    {
        
       {
           if ( i + 1 < nums.length)
           {
               if (nums[i] == nums[i + 1])
               {
                   clump = clump + 1;
                   for (int j = 1; j < nums.length; j++)
                   {
                       if (nums[i + 1] == nums[i + 1 + j])
                       {
                           i = i + 1;
                       }
                   }
               }
           }
       }
    }
    return clump;
}
"
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
9a762998ef3f0abdaeaa9e34d97d58d792cb6be4,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMom)
        return true;
    return (!isMorning);
}
"
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
"
563e70492a46c1983409ddc52f1edaf6f8bfba29,"public int countClumps(int[] nums)
{
    int merlin = 0;
    
    for(int i = 0; i < nums.length - 1  ; i++)
    {
        if (nums[i] == nums[i+1])
        {
            merlin++
        }
           
    }
    return merlin;
}
"
51d726f3ba7d0bdf6df41f275be7d3e5ae0b21ed,"public String getSandwich(String str)
{
    int firstBread = -1;
    int lastBread = -1;
    for (int i = 0; i < str.length() - 5; i++)
    {
        if (str.substring(i, i+5).equals(""bread""))
        {
            firstBread = i;
            i = str.length();
        }
    }
    for (int j = str.length() - 5; j > 0; j--)
    {
        if (str.substring(j, j+5).equals(""bread""))
        {
            lastBread = j;
            j = 0;
        }
    }
    if(firstBread != -1 && lastBread != -1 && firstBread != lastBread)
        return str.substring(firstBread + 5, lastBread);
    return """";
}
"
2b976fe20b1e401744827a000d91d5535db7d93b,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <=90);
}
"
5cd02f6c04c19cfba3433b99e62352d722eab1e6,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
	    if (a > b)
	    {
   		  	return a;
	    }
	    else
    	{
    	 	return b;
    	}
    }
    else
    {
       	return 0;
    }
}
"
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
0615e4e3628f3968baa7039844e88175c1722d19,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend)
    {
        return (cigar >= 40);
    }//end if
    
    return (cigars >= 40 && cigars <= 60);
    
    
}
"
d8f6de34bbb4daabf4789e4930885c05e8604106,"public int countClumps(int[] nums)
{
    int clumpNum = 0;
    int clump = 0;
    for (int = 0; i < nums.length - 1; i++)
    {
     	if (clump == 0 && nums[i] == nums[i+1])
        {
            clumpNum++;
            clump++;
        }
        else
        {
         	clump = 0;   
        }
    }
    return clumpNum;
}
"
a767440796f740efacb74e1a68a50c6ef184a501,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length - 1; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
"
e842a2d12176ae37228ff69c6c768005b587ac2a,"public int blackjack(int a, int b)
{
    int c = 21 - a;
    int d = 21 - b;
    
    
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else
    {
        if (c > d)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
eb5a4c86cae44656617a26e110011ef8081ffdf1,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else if ( str.length() == 0 )
    {
		return ""@@"";
    }
  }
"
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
"
309dc7997e1010df732f8ec41fd34a616365f55d,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if ((str.substring(i, i + 1) == 'co') 
            && (str.substring(i + 3) == 'e'))
        {
            count++;
        }
    }
    return count;
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
00be7b1043e2c0415439828267239eb4f5469e91,"public int countClumps(int[] nums)
{
    int x = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i+1]) {
            x++;
        }
    }
    return x;
}
"
cd23c0ed240a318d70e3ddbf504fb44f78c81ffc,"public String atFirst(String str)
{ 
    if (str.length() < 2 && str.length() != 0)
    {
        return str + ""@"";
    }
    else if (str.length() == 0)
    {
        return ""@@""
    }
    else
    {
        return str.substring(0,2);
    }
    
}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
04780365d53ec02bf23dee2452c32d0edb7fb12c,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
"
6434b911e74e0d2939d97a8820552e19fd926f60,"public int countClumps(int[] nums)
{
      int current = -1, clump = 0;
  for(int i = 0; i < nums.length - 1; i++) {
    if(nums[i] == nums[i + 1] && nums[i] != current) {
       current = nums[i];
       clump++;
    } else {
       if(nums[i] != current) {
          current = -1;
       }
    }
  }
  return clump;
}
"
cda4eeee2346e60e72673f13fb06774fb4ec1b1b,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
        int rightSum = 0;
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
"
c0e74847daded5db86a45f95da024ec482c4f9a4,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19}
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
47f3a74a254afbf6c445487eff4eb1c0df9e20df,"public boolean has77(int[] nums)
{
    int blob = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (i < nums.length - 2)
        {
            if (nums[i] == nums[i + 1] && nums[i] == 7)
        	{
            	blob = blob + 100;
        	}
            if (nums[i] == nums[i + 2] && nums[i] == 7)
            {
                blob = blob + 100;
            }
        }   
        else if (nums[i] == nums[i + 1] && nums[i] == 7)
        {
            blob = blob + 100;
        }
        else
        {
            blob = blob + 1;
        }
    }
    return blob >= 100;
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
332c6ec5c84a4b48b155a3ce7e3c41195bbaf8a1,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
03963c180ede47baf3cb2a34f74b6ff99ed0fee1,"public int[] zeroMax(int[] nums) {
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--) {
        if (nums[i] % 2 == 1 && nums[i] > largestOdd)
            largestOdd = nums[i];
        if (nums[i] == 0)
            nums[i] = largestOdd;
    }
    return nums;
}"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
270174ce7d53738e854429dc81bc8b311180b333,"public int[] shiftLeft(int[] nums)
{
    return int[] nums;
}
"
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
34ad16a72b0a75568a00e876dfb72953f291c9ab,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            clumps++;
        }
    }
    return clumps;
}
"
82c64fa09f2ec4b819acaeb99373996b024cc02e,"public int roundSum(int a, int b, int c)
{
    int roundSum = round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int rem = num % 10;
    if (rem >= 5) {
        num = numb + 10 - rem;
    }
    else {
        num = num - rem;
    }
    return num;    
}
"
ba8cfb4cad91f6a68d58ca4ab3a88d035f324a8c,"public int sortaSum(int a, int b)
{
    if ( a + b >= 10 && a + b <= 19) {
        retun 20;
    }
    else {
        return a + b;
    }
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
"
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}"
bb95327d0292272d65dd996e6aa6f61c87319399,"public boolean endOther(String a, String b)
{
    if a.length() == ""a"" + ""b""
        return b.substring(0,1).toLowerCase();
}
"
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
"
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
"
5ae4f4df981ecd7a8c7c1620b207298fd11eb26f,"public int blackjack(int a, int b)
{
    if (a > 0 && b > 0)
    {
     	if (b > 21 && a <= 21)
        {
         	return a;   
        }
        else if (a > b && a <= 21)
        {
         	return a;  
        }
        else if (a > 21 && b <= 21)
        {
         	return b;   
        }
        else if (b > a && b <= 21)
        {
        	return b;   
        }
    }
    return 0;
}
"
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
"
6434b911e74e0d2939d97a8820552e19fd926f60,"public int countClumps(int[] nums)
{
      int current = -1, clump = 0;
  for(int i = 0; i < nums.length - 1; i++) {
    if(nums[i] == nums[i + 1] && nums[i] != current) {
       current = nums[i];
       clump++;
    } else {
       if(nums[i] != current) {
          current = -1;
       }
    }
  }
  return clump;
}
"
5a00919d938e7350f9d887a0f3c496f766fa3b49,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
"
bf382bc1d92127f137bb550a9abdea9839167f1f,"public int[] shiftLeft(int[] nums)
{
    int shift = nums[0];
    if (nums.length >= 2)
    {
        //int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
61f82d819ed02008ea7d45f70e7c86937eb58bc3,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (i == 0)
        {
            if (nums[0] == 2 && nums.length < 1)
            {
                return false;
            }
            else if (nums[0] == 2 && nums[1] != 2)
            {
                return false;
            }
        }
        else if (i == nums.length - 1)
        {
            if (nums[i] == 2 && nums[i - 1] != 2)
            {
                return false;
            }
        }
        else
        {
            if (nums[i] == 2)
            {
                if (nums[i - 1] == 2)
                {
                }
                else if (nums[i + 1] == 2)
                {
                }
                else
                {
                    return false;
                }
            }
        }
    }
    return true;
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
b1cd225c96f83cf234170ea444a1959fbfd4bcde,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    if (b == 13)
        return a;
    if (c == 13)
        return (a + b);
    return (a + b + c);
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
940a946f9a0eeb90ac4e79843d3057ce7df5edd9,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length() - 1; i++)
    {
     	if (nums[i] != 13)   
        {
         	nums[i] = 0;   
        }
     	sum = sum + nums[i];   
    }
    return sum; 
}
"
64e6a1b1c2176532ea3545edbf85eecc952dbf18,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a;
    return diffOne == diffTwo;
}
"
12941eb615aae98f65aa36224718e48e3383968c,"public int loneSum(int a, int b, int c)
{
    int x = a + b + c;
    if (a == b)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == c)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return a;
        }
    }
    else if (a == c)
    {
        if (b == c)
        {
            return 0;
        }
        else
        {
            return b;
        }
    }
    else
    {
        return x;
    }
}
"
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
"
b97e82329cb0c23433c468d538ca5b604bfcba09,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
     	if (nums[i] % 2 == 1 && nums[i] > largestOdd)
        {
            largestOdd = nums[i];
        }
        if (nums[i] == 0)
        {
         	nums[i] = largestOdd;   
        }
    }
    return nums;
}
"
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
"
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
"
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
"
da35db888e070aad3d1910413f0731e4b429579c,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (20 - n < 7  && 20 - n < 1)
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
150674542f779f0f080fa72fb20d5088fbe7f75e,"public int sortaSum(int a, int b)
{
    int sum = 0;
    sum = a + b;
    if (sum >= 10 && sum <= 19){
        sum = 20;
    }
    return sum;
}
"
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
fd19ee70b6ed78dc3c5cf345b006e41ad230749d,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
1d6179ccdc1c6fce139143f569025a679c1301a0,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        	largeOdd == nums[i];
        if (nums[i] == 0)
        	nums[i] == largeOdd;
    }
    return nums;
}"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
"
13e7ebf5b1cb8a39e420140214502a74809a7fad,"public int countCode(String str)
{
    int num = 0;
    for(int i = 0; i < str.length() - 3; i++) {
        if(str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i + 3) == 'e')
            num++;
    }            
    return num;
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
8ade95f109e1073acef3d10c10f35e45f9e8fce5,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder    
    return -1
}
"
f6cfdfcc045d3ced7634c7a0afcbe4afd98d380e,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
        n = 0;
    
    return n;
}
"
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
"
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
"
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
"
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
cae681aa8e5d7bdd18652a0ab0a2937ce8f351d3,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < 3;i++)
    {
        sum = nums[i] + sum;
    }
    return sum;
}
"
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
"
f4b03862b0451a373caa9f6bb7390b99d9c24f62,"public String atFirst(String str)
{
    return str.substring(0, 2);
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
"
50f3da72fdd9f01a0c7804b3c9c789cddd8d9b18,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (i = 0; i < num.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count*2 == num.length);            
    
}
"
cd23c0ed240a318d70e3ddbf504fb44f78c81ffc,"public String atFirst(String str)
{ 
    if (str.length() < 2 && str.length() != 0)
    {
        return str + ""@"";
    }
    else if (str.length() == 0)
    {
        return ""@@""
    }
    else
    {
        return str.substring(0,2);
    }
    
}
"
528342efb0a38ace805355f9ecda4f69f0397a23,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
	if (a == 13)
    {
        return sum;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        int sum = a + b;
        return sum;
    }
    else
    {
        int sum = a + b + c;
        return sum;
    }
}
"
06ce870f764275dc4fbe2e7c3328c4f9612d64a7,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 0; i<n; i++)
    {
        last = last + last;
    }
    return last;
        
}
"
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
9eb233b4442526c98e5181cbd698f5839c08adb3,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a == c || b == c || a == c)
        return false;
    if (a == b || b == c)
        return true;
    else
        return ((Math.abs(a - c)==Math.abs(a - b))) ||( Math.abs(c - a)==Math.abs(b - c) || Math.abs(a - b) == Math.abs(b - c));
}
"
d4bcf6c8e35c1dc33d803d62c4c1abc06da6328d,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] == 13)
        {
         	sum = sum;   
        }
        else if (nums[i - 1] == 13)
        {
         	sum = sum;   
        }
        else
        {
         	sum = sum + nums[i];
        }
    }
    return sum;
}
"
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}"
dead7e5e377079599c11bb673bf7c1248fef60fc,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if ( a == b && b == c)
    {
        sum = a;
    }
    else if (a == b || a == c)
    {
        sum = sum - a;
    }
    else if (b == c)
    {
        sum = sum - b;
    }
    return sum;
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
"
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
"
a2a2884e41048d06a4cb030480f7393277c7ec9a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + nums[i];
        if (nums[i] == 13)
        {
            sum = sum - (13 = nums[i + 1]));
        }
    }
    return sum;
}
"
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
79c58a491312a133e68b505957485ca6a71d8f83,"public int noTeenSum(int a, int b, int c)
{
	fixTeen(a);
    fixTeen(b);
    fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if ( a >= 13 && a <= 19 && a != 15 && a !=16){
        a = 0;
        return a;
    }
    if ( b >= 13 && b <= 19 && b != 15 && b !=16){
        b = 0;
        return b;
    }
    if ( c >= 13 && c <= 19 && c != 15 && c !=16){
        c = 0;
        return c;
    }
    
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
265dd4458fb43967c87890408a4569ed8e08a397,"public String alarmClock(int day, boolean vacation)
{
    if alarmClock(< 6, false)
    {
        return ""7:00""
    }
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
b16439cf6ef5c619010c64a8fb33444995f538e6,"public String plusOut(String str, String word)
{
    String returnString = """";
    int lastIndex = str.indexOf(word);
    int i = lastIndex;
    
    while (i < str.length())   
    {
        if (i == str.indexOf(word, lastIndex))
        {
            returnString = returnString + word;
            lastIndex = i;
            i += (word.length() - 1);
        }
        
        else
        {
            returnString = returnString + ""+"";
            i++;
        }
    }
	return returnString;
}
"
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
fd19ee70b6ed78dc3c5cf345b006e41ad230749d,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
377d33b5c5fd6194c58592818a016612e427dfc7,"public int[] fix45(int[] nums)
{
    int f45 = 0;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i + 1] != 5)
		{
			for(!(nums[f45] == 5 && (f45 == 0 || f45 > 0 && nums[f45 - 1] != 4)) f45++)
            {
			nums[j] = nums[i + 1];
			nums[i + 1] = 5;
            }
		}
	}
	return nums;
}
"
685a1f07697cb907cefcecfa8cf5158825e90e14,"public int countCode(String str)
{
    int length = str.length() - 2;
    int num = 0;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == c && str.charAt(i + 1) == o
            && str.charAt(i + 3) == e)
        {
            num = num + 1;
        }
    }
    return num;
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
"
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
"
cdbd6769faf44b710f4b50d3f75878e7dff820b5,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    return ((a + b) < 10 || (a + b) > 19);
}
"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}"
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
332c6ec5c84a4b48b155a3ce7e3c41195bbaf8a1,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
e39a25aaad84b1961772be00d43af043549c8980,"public boolean twoTwo(int[] nums)
{
    boolean two = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i + 1] == 2)
        {
            two = true;
        }
    }
    return two;
}
"
3a244a1b4e96b9b233338061c4229807fb89777c,"public int countCode(String str)
{
    int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
b7a9395b99fe850b2082792560bb36ab00860020,"public int redTicket(int a, int b, int c)
{
    int result = 0;
    if (a == 2 && b == 2 && c == 2)
        result = 10;
    else if (a == b && b == c)
        result = 5;
    else if (a != b && a != c)
        result = 1;
    else
        result = 0;
    return result;
}
"
9eb233b4442526c98e5181cbd698f5839c08adb3,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a == c || b == c || a == c)
        return false;
    if (a == b || b == c)
        return true;
    else
        return ((Math.abs(a - c)==Math.abs(a - b))) ||( Math.abs(c - a)==Math.abs(b - c) || Math.abs(a - b) == Math.abs(b - c));
}
"
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
"
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
"
023ccb9f259b949ab0ec9836b2b130977e17f76a,"public int sum3(int[] nums)
{
    sum = nums[0] + nums[1], nums[2];
}
"
bb95327d0292272d65dd996e6aa6f61c87319399,"public boolean endOther(String a, String b)
{
    if a.length() == ""a"" + ""b""
        return b.substring(0,1).toLowerCase();
}
"
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
"
c384cb38b2cffa92ee7bc55feafe1c65d7c5d33e,"public int countCode(String str)
{
int count = 0;

for(int i = 0; i < str.length() - 3; i++)
{
if(str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
count++;
}

return count;  
}
"
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
"
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
"
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
5751db3148c8805ad9e482b9dedd7ade5357ba47,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
    {
        return str.substring(first + 5, last);
    }
    else
    {
    return """";
    }
}
"
63d94094b3bd3e432c48601fe1cde209664933eb,"public int loneSum(int a, int b, int c)
{
	if (a==b || b==c)
    {
        return c;
    }
	else if (a==c)
    {
        return b;
    }
    else 
    {
    	return a + b + c;
    }
}
"
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
aa4d8b44bff62be088c0c94a7829aa410ffa133b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        if (speed >= 81)
        {
            return 2;
        }
    }
    if (!isBirthday)
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}"
150674542f779f0f080fa72fb20d5088fbe7f75e,"public int sortaSum(int a, int b)
{
    int sum = 0;
    sum = a + b;
    if (sum >= 10 && sum <= 19){
        sum = 20;
    }
    return sum;
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
dc77d9f47e20012cfdff686d71cf058927245c62,"public int roundSum(int a, int b, int c)
    return round10(a) + round10(b) + round10(c));

public int round10(int num)
{
    int digit = num % 10;
	if (digit >= 5)
        return num = (10 - digit);
    return num - digit;
}
"
a457e813b62121d4bee7f0cd63ba678e9441866c,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c && b == c){
            result = 10;
        }
     }
    else if ( c == b){
        result == 10;
    }
        
            
    return result;
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
fae2f7dfe0c7f6a36eed081761f1d04f77387b4b,"

    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }

"
085c90128653ad2d02262a5079a336364fa0a7cb,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || b==c || a == c)
        return 10;
    else 
        return 0;
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
"
727d541babe278c063e729dab201403c18c6f003,"public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        str == ""bread"" - str - ""bread"";
    }
    else
    {
        return """";
    }
}
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
"
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
3d11719630fc8c44b85deba0b9752e36fb374a27,"public int luckySum(int a, int b, int c)
{
    if (a = 13)
    {
        return 0;
    }
    else if (b = 13)
    {
        return a;
    }
    else if (c = 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
"
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
"
c90c3a1e01ce11092849215d094a7f5176711ab5,"public int countClumps(int[] nums)
{
    int clump = 0;
    for (int i = 0; i < nums.length; i++) { 
        if (nums(i) == num(i + 1) {
            clump = clump + 1;
    }
    return clump;
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
e66af3fd10029e3b0eddec751863c4988c7a3b9a,"public boolean sameEnds(int[] nums, int n)
{
    int num = 0;
    for (int i = n; i > 0 n;i--)
    {
        if (nums[i] == nums[nums.length - i + 1])
        {
            num = num + 1;
        }    
    }
    if (num == n)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
"
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
8dd0ea4aa40c9c74b0f4a3dddd8ecdfabf898186,"public int sortaSum(int a, int b)
{
    sum = a+b;
    if (sum>=10&&sum <=19)
    {
        return 20;
    }
    else
    {
        return sum;
    }
    
}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
"
b4b80ec23db8730d3a13b7f18055050c22aa3b95,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        else
        {
            return 2;
        }
    }
    else
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}
}"
87db562c5af3675b9fcf8cdf88341f5c205a229a,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return 0;
    }
    
    if (b == 13)
    {
        return a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
1d6179ccdc1c6fce139143f569025a679c1301a0,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        	largeOdd == nums[i];
        if (nums[i] == 0)
        	nums[i] == largeOdd;
    }
    return nums;
}"
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
092a37234cccc894d13af9756eed95198aa41a1a,"ublic boolean isEverywhere(int[] nums, int val) {
	boolean result = true;
	for (int i = 0; i <=nums.length-2;i++)
	{
		if ( nums[i] != val && nums[i+1] != val)
			result = false;
	}
  	return result;
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
fdd9c7578eae0199293f5c67050555c877e59579,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
    }
                           
    return (sum - max - min) / (nums.length - 2);
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
8ea314af4ea3aa3a6d57f2c90ff7786608a23927,"public int noTeenSum(int a, int b, int c)
{
	int numA = a;
    int numB = b;
    int numC = c;
    return (fixTeen(numA) + fixTeen(numB) + fixTeen(numC));
}

public int fixTeen(int n)
{
    int num = n;
    if (num == 15 || num == 16)
    {
        return num;
    }
    else if (num >= 13 && num <= 19)
    {
        return 0;
    }
    else
    {
        return num;
    }
}
"
7e7bf4cc813657543b6b338e6de0cde0e361315b,"public int sum13(int[] nums)
{
    int total = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (num [i] == 13)
        {
            num [i] = 0;
            num [i] + 1 = 0;                
        }
        total = nums [i] + nums [i + 1];
    }
    return total;
}
"
c62602f27883f984fbc0551198122402edd6e05d,"public int[] shiftLeft(int[] nums)
{
    return int[];
}
"
0a4d7aee449450431db0efcda5856b22d973b605,"public String getSandwich(String str)
{
    if(str.length() > 10 &&
       str.substring(0, 5) == ""bread"" &&
       str.substring(str.length() - 6, str.length() - 1) == ""bread"")
    {
        return str.substring(5, str.length() - 6);
    }
    else {
        return str.substring(5, str.length() - 6);
    }
}
"
61f82d819ed02008ea7d45f70e7c86937eb58bc3,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (i == 0)
        {
            if (nums[0] == 2 && nums.length < 1)
            {
                return false;
            }
            else if (nums[0] == 2 && nums[1] != 2)
            {
                return false;
            }
        }
        else if (i == nums.length - 1)
        {
            if (nums[i] == 2 && nums[i - 1] != 2)
            {
                return false;
            }
        }
        else
        {
            if (nums[i] == 2)
            {
                if (nums[i - 1] == 2)
                {
                }
                else if (nums[i + 1] == 2)
                {
                }
                else
                {
                    return false;
                }
            }
        }
    }
    return true;
}
"
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
"
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
"
0a620bf30b2a7a4fce92e7ea762e2a29a92cd83d,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
dc1c18a727a472113299aaf5bc76ffcf6180ee19,"public String[] fizzBuzz(int start, int end)
{
    end--;
    String[] result = new String[end - start];
    
    for (int i = 0; i < end; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
c3512617ca5c44a2a7c9757943e2944653964b69,"public boolean bobThere(String str)
{
    firstB = str.indexOf(""b"")
}
"
f0205df67f010e325ec1614fba0a300d61a74dec,"public int blackjack(int a, int b)
{
    double valueA;
    valueA = (a % 21);
    double valueB;
    valueB =  (b % 21);
    
    if (a < 21 || b < 21)
    {
        if (double valueA > double valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else if (a < 21 && b < 21)
    {
        if (valueA > valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else
    {
        return 0;
    }
}
"
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
"
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
55008f2ac50ecaccae3a878e34d56a2f00118737,"public int countClumps(int[] nums)
{
	int clump = 0;
    for (int i = 0; i < nums.length;i++)
    {
        
       {
           if ( i + 1 < nums.length)
           {
               if (nums[i] == nums[i + 1])
               {
                   clump = clump + 1;
                   for (int j = 1; j < nums.length; j++)
                   {
                       if (nums[i + 1] == nums[i + 1 + j])
                       {
                           i = i + 1;
                       }
                   }
               }
           }
       }
    }
    return clump;
}
"
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
a2c77eb2341d2107484dea64721c8eb1fb2b5c9b,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else if (c == 13)
    {
    	sum = a + b;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum;
    }
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}"
d438b7d68b37722f5d57579e7078668cf60a8b2b,"public int blackjack(int a, int b)
{
    if (a < b && b <= 21)
    {
        return b;
    }
    else if (b < a && a <=21)
    {
        return a;
    }
    else 
    {
        return 0;
    }
}
"
62d31dc1d181609f1ad5028901c8db29d61ea2b8,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    else 
    {
        return (a +b);
    }
}
"
528342efb0a38ace805355f9ecda4f69f0397a23,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
	if (a == 13)
    {
        return sum;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        int sum = a + b;
        return sum;
    }
    else
    {
        int sum = a + b + c;
        return sum;
    }
}
"
e9b63cad69501d11984221e9a07eff591dedc2b8,"public int roundSum(int a, int b, int c)
{
    a = round10(a);
    b = round10(b);
    c = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int rem = num % 10;
    if (num >= 0 && num < 5)
        num = num - rem;
    else
        num = num + 10 - rem;
    return num;
}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
"
ba8cfb4cad91f6a68d58ca4ab3a88d035f324a8c,"public int sortaSum(int a, int b)
{
    if ( a + b >= 10 && a + b <= 19) {
        retun 20;
    }
    else {
        return a + b;
    }
}
"
ee4708e15be1f13f8c489f277d070e2cddbf6ff4,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length ; i++)
    {
     	if (nums[i] == 13)   
        {
         	i++;
        }
     	sum = sum + nums[i];   
    }
    return sum; 
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
c0e74847daded5db86a45f95da024ec482c4f9a4,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19}
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
"
e5f4a1d12a2732c56ffa6463cfe4561bd754d8e2,"public String atFirst(String str)
{
    if (str.length >= 2)
    {
        return (str.substring(0,2));
    }
    else
    {
        return (str + ""@"");
    }
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
f8e2e6bb5d3f455462c4a729ac1c0772ed521c99,"public boolean twoTwo(int[] nums)
{
    if (nums.length < 2 && nums[0] != 2 )
    {
     	return true;   
    }
    else if (nums.length < 1)
    {
     	return false;   
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
a07a8703a9cafd5f2dd00f03a9d186fc390e15f9,"public String zipZap(String str)
{
    String s = """";
    int x = 0;
    int y = 0;
    if (str.length() < 3) {
        return str;
    }
    else {
        for (int i = 0; i < str.length() - 2; i++) {
            if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p') {
                x++;
            }
        }
    	while (s.length() != str.length() - x && y < str.length() - 2) {
            if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p') {
                s = s + ""zp"";
                y = y + 2;
            }
            else {
                s = s + str.charAt(y);
            }
            y++;
        }
    }
    return s;
            
        
}
"
66d85cf0a88bd29710d927fcc5ef0a8a5866b68e,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = a - b;
    int diffTwo = c - b;
    if (diffOne == diffTwo)
    {
        return true;
    }
    else
        return false;

}
"
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
761faf27118f8d7637200b8140f5a550d392d440,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
     if ( (n >=13 && n < 15) || (n > 16 && n <= 19) )
     {
         return 0;
     }
    else
    {
        return n;
    }
}

"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
"
06be09e2d8d4ddfe4333697a3feaadf8e8dc3077,"public int countClumps(int[] nums)
{
    int num = 0;
    boolean still = false;
    boolean clump = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i - 1])
        {
            clump = true;
        }
        else if (nums[i] == nums[i + 1])
        {
            still = true;
            continue;
        }
        else
        {
            num++;
        }
    }
}
"
042c7539e7bbc603f9d999c837f0b4486eeef11a,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n != 15 && n != 16)
    	if (n <= 19 && n >= 13)
        	return 0;
    return n;
}
"
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
"
03963c180ede47baf3cb2a34f74b6ff99ed0fee1,"public int[] zeroMax(int[] nums) {
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--) {
        if (nums[i] % 2 == 1 && nums[i] > largestOdd)
            largestOdd = nums[i];
        if (nums[i] == 0)
            nums[i] = largestOdd;
    }
    return nums;
}"
5cd02f6c04c19cfba3433b99e62352d722eab1e6,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
	    if (a > b)
	    {
   		  	return a;
	    }
	    else
    	{
    	 	return b;
    	}
    }
    else
    {
       	return 0;
    }
}
"
c0bcafd61ce598040aa977b280d46011559cb4c7,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true;
    for( int i = 0; i <= nums.length-2; i++)
    {
        if( nums [i] != val && nums[i+1] != val)
            result = false;
    }
    return result;
}
    
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
d50d492ebb2d39ef30d910d235f290f774635c0f,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    if (a == b && a == c && b == c)
        return 0;
    else
        return a + b + c;
}
"
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
"
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
33bf743a9707fb874e5447648c48e307607e03de,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 1) == 'co' &&
            str.substring(i + 3) == 'e')
        {
            count = count + 1;
        }
    }
    return count;
}
"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
150674542f779f0f080fa72fb20d5088fbe7f75e,"public int sortaSum(int a, int b)
{
    int sum = 0;
    sum = a + b;
    if (sum >= 10 && sum <= 19){
        sum = 20;
    }
    return sum;
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
4cad14f6dc235bb7665a336718b0bc721df9ddd2,"public boolean isEverywhere(int[] nums, int val)
{
    Boolean result = true;
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            result = true;
        }
        else
        {
            result = false;
            break;
        }
    }
    return result;
}
"
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
"
bf0fb85d68a871de1263a11b4d6bf089714fa3ce,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0 ; nums.length > i; i++)
    {
        if (nums[i] == val || nums[i+1] == val)
        {
            return true;
        }
    }
    return false;
    
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
"
e66af3fd10029e3b0eddec751863c4988c7a3b9a,"public boolean sameEnds(int[] nums, int n)
{
    int num = 0;
    for (int i = n; i > 0 n;i--)
    {
        if (nums[i] == nums[nums.length - i + 1])
        {
            num = num + 1;
        }    
    }
    if (num == n)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
512ea4857067bd5d3ac3e3426f861301ee28c2f3,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
            return false;
        }
    }
    else if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
"
828a3b0db925adca159220f3e9faf2fb4e24446a,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21){
        return a;
    }else if (b > a && b <= 21){
        return b;
    }else if (a > 21 && b < 22){
        return b;
    }else if (b > 21 && a < 22){
        return a;
    }else{
        return 0;
    }
}
"
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
"
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
"
e9b63cad69501d11984221e9a07eff591dedc2b8,"public int roundSum(int a, int b, int c)
{
    a = round10(a);
    b = round10(b);
    c = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int rem = num % 10;
    if (num >= 0 && num < 5)
        num = num - rem;
    else
        num = num + 10 - rem;
    return num;
}
"
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
"
2b976fe20b1e401744827a000d91d5535db7d93b,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <=90);
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
0773313801a191baf1978ea9f3b612da5d247316,"public int caughtSpeeding(int speed, boolean isBirthday)
{
if (!isBirthday)
{
   if ( speed <= 60)
   
       return 0;
   
   else if ( speed > 60 && speed <= 80)
   
       return 1;
   
   else 
   
       return 2;
   
}
    if (isBirthday)
    {
        if ( speed <= 65)
   
       return 0;
   
   else if ( speed >= 65 && speed <= 85)
   
       return 1;
   
   else 
   {
       return 2;
   }
       
}
}
"
f0be04df720e45391f559d26dc0955b0202bb87b,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n != 15 && n != 16)
        	return 0;
    return n;
}
"
e7aad59bc0f7416c80deba043153af59de5ea985,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i <= nums.length - 1; i++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            everywhere = true;
            break;
        }
    }
    return everywhere;
}
"
cd80603c865a5f537dae1c802b4d53681015978e,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
546f04c1838d3811aee2ae7cd610c20b84c7609b,"public boolean twoTwo(int[] nums)
{
    if (nums.length == 0)
    {
        return false;
    }
    if (nums.length == 1)
    {
        return false; 
    }
    if (nums.length == 2)
    {
        if (nums[0] == 2 && nums[1] == 2)
        {
            return true;
        }
        else
        {
            return false; 
        }
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2 && nums[i + 1] == 2)
        {
            return true;
        }
        else if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
    }
}
"
1202d346fcf0db46d6a29cff9b13366969ee2df1,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0,2));
    }
    else if (str.length() == 1)
    {
        return (str + ""@"");
    }
    else
    {
        return (""@@"");
    }
}
"
db9b29b114ae85d86c3fe363b9c8f7afce6147c3,"public int countCode(String str)
{
    int count = 0;
    for ( int i = 0; i < str.length() - 3; i++ )
    {
        if ( ""co"".equals( str.substring( i, i + 2 ) ) )
        {
            if ( str.charAt( i + 3 ) == 'e' )
            {
                count++;
            }
        }
    }
    return count;
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
b53ab834a811096b76a803c390009392801834ab,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
325eb8d9cda58db31c3a0157abc1cd41245be9e7,"public int sortaSum(int a, int b)
{
    int result = 0;
    int sum = a + b;
    if (sum <= 19 || sum >= 10)
    {
        result = 20;
    }
    else 
    {
        result = sum;
    }
}
"
18ab89e18a6ce4e406b204406f6fb94214480bd9,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 10;
    if (a == b && b == c && a == c)
        return 5;
    if (a != b && b != c && a != c)
        return 1;
    else
        return 0;
}
"
a457e813b62121d4bee7f0cd63ba678e9441866c,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c && b == c){
            result = 10;
        }
     }
    else if ( c == b){
        result == 10;
    }
        
            
    return result;
}
"
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
34ad16a72b0a75568a00e876dfb72953f291c9ab,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            clumps++;
        }
    }
    return clumps;
}
"
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
4a9806e5d979032eadab4c8d23dec29284441f09,"public int greenTicket(int a, int b, int c)
{	
   	int result = 10;
    if (a != b && b != c && a != c)
    {    
        result = 0;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    return result;
}
"
86eeb69c66325d7ac263cfba4f58a77188d3d872,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int test = 0;
        int[] testArray = new int[nums.length];
        for (int x = 0; x < nums.length; x++)
        {
            testArray[x] = nums[x];
            test++;
        }
        if (test == nums.length)
        {
            return 1;
        }
        
        
        
        
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i]);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init)
{
    int nextNum = 0;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}"
1d6179ccdc1c6fce139143f569025a679c1301a0,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        	largeOdd == nums[i];
        if (nums[i] == 0)
        	nums[i] == largeOdd;
    }
    return nums;
}"
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
"
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
"
bd4ab1662bb8f09f26dc5dd978ba13826af43bbe,"public int countCode(String str)
{
 int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
b4b80ec23db8730d3a13b7f18055050c22aa3b95,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        else
        {
            return 2;
        }
    }
    else
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}
}"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
"
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
"
42e52e00ef12b244eddffd0c9e1678918659c4e7,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
d17244a79757f570de9d8170c3085ee0f6678c21,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom && isAsleep)
        {
            return true;
        }
        else if (isMom && !isAsleep)
        {
            return false;
        }
        else if (!isMom && isAsleep)
        {
            return false;
        }
        else if (!isMom && !isAsleep)
        {
            return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return;
}"
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
"
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
"
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
"
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
9a762998ef3f0abdaeaa9e34d97d58d792cb6be4,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMom)
        return true;
    return (!isMorning);
}
"
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
f53fe967f0579e586ca2895910f4b0362cabe181,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
"
c32e8df18759f85c9ca9cc1ff3051aa396bf5a33,"public boolean evenlySpaced(int a, int b, int c)
{
    int[3] arrInOrder;
    arrInOrder[0] = a;
    arrInOrder[1] = b;
    arrInOrder[2] = c;
    
    int small;
    int med, big;
   /**
    if ((a > b) && (a > c)) // if a is the biggest
   {
		if (b > c)
        {
            big = a;
            med = b;
            small = c;
        }
       else
       {
           
       }
       
   }
   */
}
"
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
"
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
"
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
"
6951053422eb1f10e58384407fe2177bd76f6031,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum
    }
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
bb95327d0292272d65dd996e6aa6f61c87319399,"public boolean endOther(String a, String b)
{
    if a.length() == ""a"" + ""b""
        return b.substring(0,1).toLowerCase();
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
6bc66f51e027f8e766055c5683b57b6d779c2d15,"public String withouEnd2(String str) 
{
if (str.length() <= 2) 
    return """";
return str.substring(1, str.length() - 1);
}
"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
d0e7e4f01d1bd84602edf6ae34c0d764c24c4815,"public int countCode(String str)
{
    int i = 0;
    int time = 0;
    int l = str.length() - 3;
    
    while (i < l)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt( i 			+3 == 'e')
            {
                time++;
                i += 4;
            }
            i++;
            }
            return time;
        
}
"
f0205df67f010e325ec1614fba0a300d61a74dec,"public int blackjack(int a, int b)
{
    double valueA;
    valueA = (a % 21);
    double valueB;
    valueB =  (b % 21);
    
    if (a < 21 || b < 21)
    {
        if (double valueA > double valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else if (a < 21 && b < 21)
    {
        if (valueA > valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else
    {
        return 0;
    }
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
610dbd70704f6fe7a7fa838ba5850c555c6ec37d,"public String withouEnd2(String str) 
{
        if (str.length() <= 2) 
            return """";
        return str.substring(1, str.length() - 1);
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
"
dc77d9f47e20012cfdff686d71cf058927245c62,"public int roundSum(int a, int b, int c)
    return round10(a) + round10(b) + round10(c));

public int round10(int num)
{
    int digit = num % 10;
	if (digit >= 5)
        return num = (10 - digit);
    return num - digit;
}
"
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
"
8ea314af4ea3aa3a6d57f2c90ff7786608a23927,"public int noTeenSum(int a, int b, int c)
{
	int numA = a;
    int numB = b;
    int numC = c;
    return (fixTeen(numA) + fixTeen(numB) + fixTeen(numC));
}

public int fixTeen(int n)
{
    int num = n;
    if (num == 15 || num == 16)
    {
        return num;
    }
    else if (num >= 13 && num <= 19)
    {
        return 0;
    }
    else
    {
        return num;
    }
}
"
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
"
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
"
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
"
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
0f7eb7c6740ccd257c3f6da081cc3f753e5a2516,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int clumpSize = this.sizeClump(nums, nums[i], i);
                i = i + clumpSize;
                counter++;
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int nextNum = 0;
    while (nums[start] == initValue)
    {
        nextNum++;
    }
    return nextNum;
}"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
f3ddf9031a05285f6f9fec49ad403733b0696a3c,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
    	if (speed >= 65)
        {
        	return 0;
        }
    	else if (speed <=85 && speed >= 66)
        {
        	return 1;
        }
    	else if (speed >= 86)
        {
        	return 2;
        }
    }
    else
    {
        if (speed >= 60)
        {
        	return 0;
        }
    	else if (speed <=80 && speed >= 61)
        {
        	return 1;
        }
    	else if (speed >= 81)
        {
        	return 2;
        }
	}
return giveTicket;
    
"
b97e82329cb0c23433c468d538ca5b604bfcba09,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
     	if (nums[i] % 2 == 1 && nums[i] > largestOdd)
        {
            largestOdd = nums[i];
        }
        if (nums[i] == 0)
        {
         	nums[i] = largestOdd;   
        }
    }
    return nums;
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
"
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
"
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
"
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
42c1b13dfbc2f7dd20266742451da0be59cbd49a,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (!isBirthday)
    {
    	if (speed <= 60)
    	{return 0;}
        
    	else if (speed >= 61 && <= 80)
    	{ return 1;}
        
    	else 
    	{return 2;}
    }
     else if (isBirthday)
        if (speed <= 65)
    	{return 0;}
    
    	if (speed >= 66 && <= 85)
    	{ return 1;}
    
    	else 
    	{return 2;}
}
"
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
"
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
"
5f137dbfa54f3c15c65ef24630bad52216763faa,"public int redTicket(int a, int b, int c)
{
    
    if (a== 2 && b==2 && c==2)
    {
        return 10;
    }
    
    if (a==b && a==c && b==c)
    {
        return 5;
    }
    
    if (a!=b && a!=c)
    {
        return 1;
    }
    
    
    
    
    return 0;
}
"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
"
e2468a1fbac0f816c4df8538f0af6626551638b0,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
5cd02f6c04c19cfba3433b99e62352d722eab1e6,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
	    if (a > b)
	    {
   		  	return a;
	    }
	    else
    	{
    	 	return b;
    	}
    }
    else
    {
       	return 0;
    }
}
"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
"
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
"
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
"
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
"
9eb233b4442526c98e5181cbd698f5839c08adb3,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a == c || b == c || a == c)
        return false;
    if (a == b || b == c)
        return true;
    else
        return ((Math.abs(a - c)==Math.abs(a - b))) ||( Math.abs(c - a)==Math.abs(b - c) || Math.abs(a - b) == Math.abs(b - c));
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
c64c9e9c0a786ef3732a68209a390d30d8284fd4,"public int dateFashion(int you, int date)
{
   if ((you >= 2 || date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 || date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
226b5d8a7b8a50ea1a33a1983fecefe1ef7fa72b,"public boolean canBalance(int[] nums)
{
	int leftNum = 0;
	int rightNum;
	for(int i = 0; i < nums.length - 1; i++)
    {
		leftNum += nums[i];
    }
	rightNum = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(leftNum == rightNum)
        {
			return true;
        }
		leftNum -= nums[i];
		rightNum += nums[i];
	}
	return (leftNum == rightNum);
}"
0a620bf30b2a7a4fce92e7ea762e2a29a92cd83d,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
"
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
fdd9c7578eae0199293f5c67050555c877e59579,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
    }
                           
    return (sum - max - min) / (nums.length - 2);
}
"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
"
f0205df67f010e325ec1614fba0a300d61a74dec,"public int blackjack(int a, int b)
{
    double valueA;
    valueA = (a % 21);
    double valueB;
    valueB =  (b % 21);
    
    if (a < 21 || b < 21)
    {
        if (double valueA > double valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else if (a < 21 && b < 21)
    {
        if (valueA > valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else
    {
        return 0;
    }
}
"
fae2f7dfe0c7f6a36eed081761f1d04f77387b4b,"

    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }

"
66d81d6a71405ccedc06586970c02dcccae77323,"public int[] fix45(int[] nums)
{
    int k;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(k = 0; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4)); k++)
            {
                k = k;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
"
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
"
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
eb3954d897ab04a8ee9649988f3d26e98aae722f,"public String[] fizzBuzz(int start, int end)
{
    String[] result = new String[end - start];
    
    for (int i = 0; i < end - 1; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
0f838818781093168101b362c3ceaa5ac771a653,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 2;
}
"
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
22fda47732546394dab7ecbb147aa3cdbdb03099,"public boolean xyBalance(String str)
{
  int l = str.length() - 1;
    for (int i = l; i >= 0; i--)
    {
        char n = str.charAt(i);
        if (n == 'x')
        {
            return false;
        }
        if (n == 'y')
        {
            return true;
        }
    }
    return true;
    }
"
0cb8c025b705f4587b7d469c16c902e554391541,"public int[] frontPiece(int[] nums)
{
    return frontPiece;
}
"
b97e82329cb0c23433c468d538ca5b604bfcba09,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
     	if (nums[i] % 2 == 1 && nums[i] > largestOdd)
        {
            largestOdd = nums[i];
        }
        if (nums[i] == 0)
        {
         	nums[i] = largestOdd;   
        }
    }
    return nums;
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
79f2da1916c858f4bd63251e6ec244aad4272418,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
    {
		return n;
    }
    else
    {
		return 0;
    }
}
public int noTeenSum(int a, int b, int c)
{  
    return (fixTeen(a) + fixTeen(b) +fixTeen(c)); 
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
d8f6de34bbb4daabf4789e4930885c05e8604106,"public int countClumps(int[] nums)
{
    int clumpNum = 0;
    int clump = 0;
    for (int = 0; i < nums.length - 1; i++)
    {
     	if (clump == 0 && nums[i] == nums[i+1])
        {
            clumpNum++;
            clump++;
        }
        else
        {
         	clump = 0;   
        }
    }
    return clumpNum;
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
d4bcf6c8e35c1dc33d803d62c4c1abc06da6328d,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] == 13)
        {
         	sum = sum;   
        }
        else if (nums[i - 1] == 13)
        {
         	sum = sum;   
        }
        else
        {
         	sum = sum + nums[i];
        }
    }
    return sum;
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
"
6bb0ee0ad18b7740337fbdd1e749d82571043674,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
bb771f79da2e164515e0325c84eaa2dbd392e69b,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = 0;
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}"
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
8ade95f109e1073acef3d10c10f35e45f9e8fce5,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder    
    return -1
}
"
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
"
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
"
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
"
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
6bc66f51e027f8e766055c5683b57b6d779c2d15,"public String withouEnd2(String str) 
{
if (str.length() <= 2) 
    return """";
return str.substring(1, str.length() - 1);
}
"
1202d346fcf0db46d6a29cff9b13366969ee2df1,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0,2));
    }
    else if (str.length() == 1)
    {
        return (str + ""@"");
    }
    else
    {
        return (""@@"");
    }
}
"
042c7539e7bbc603f9d999c837f0b4486eeef11a,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n != 15 && n != 16)
    	if (n <= 19 && n >= 13)
        	return 0;
    return n;
}
"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
"
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
"
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
bf382bc1d92127f137bb550a9abdea9839167f1f,"public int[] shiftLeft(int[] nums)
{
    int shift = nums[0];
    if (nums.length >= 2)
    {
        //int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
c093cac600fc00c29dfe5c59c8ab78dddb9a3f95,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count >= nums.length - 1);            
    
}
"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
"
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
"
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
"
8dd0ea4aa40c9c74b0f4a3dddd8ecdfabf898186,"public int sortaSum(int a, int b)
{
    sum = a+b;
    if (sum>=10&&sum <=19)
    {
        return 20;
    }
    else
    {
        return sum;
    }
    
}
"
c384cb38b2cffa92ee7bc55feafe1c65d7c5d33e,"public int countCode(String str)
{
int count = 0;

for(int i = 0; i < str.length() - 3; i++)
{
if(str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
count++;
}

return count;  
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
f8e2e6bb5d3f455462c4a729ac1c0772ed521c99,"public boolean twoTwo(int[] nums)
{
    if (nums.length < 2 && nums[0] != 2 )
    {
     	return true;   
    }
    else if (nums.length < 1)
    {
     	return false;   
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
"
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
"
0a9dcd12a12791fe49d782b736769ace72b0d2ed,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else
    {
        if (b == 13)
        {
            return a;
        }
        else
        {
             if (c == 13)
                {
                    int AB = (a + b);
                    return AB;
                }
                else
                {
                    int ABC = (a + b + c);
                    return ABC;
                }
        }
    }
}
"
e842a2d12176ae37228ff69c6c768005b587ac2a,"public int blackjack(int a, int b)
{
    int c = 21 - a;
    int d = 21 - b;
    
    
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else
    {
        if (c > d)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
}
"
19a5b90083c799114b8bccdc97fb09a69be2aba1,"public int greenTicket(int a, int b, int c)
{
    if (a == b || a == c || b == c)
        return 10;
	if (a == b && a == c || b == c)
        return 20;
    else
        return 0;
}
"
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
"
97df39519ca1ef6b02ae307ac2c9f6c6f42d2e77,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
"
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
"
8ea314af4ea3aa3a6d57f2c90ff7786608a23927,"public int noTeenSum(int a, int b, int c)
{
	int numA = a;
    int numB = b;
    int numC = c;
    return (fixTeen(numA) + fixTeen(numB) + fixTeen(numC));
}

public int fixTeen(int n)
{
    int num = n;
    if (num == 15 || num == 16)
    {
        return num;
    }
    else if (num >= 13 && num <= 19)
    {
        return 0;
    }
    else
    {
        return num;
    }
}
"
0bd7fe95ce9749e4f8a7edf4208f6c161ea14ca1,"public int countCode(String str)
{
    int x = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c')
        {
            if (str.charAt(i+1) == 'o')
            {
                if (str.charAt(i + 3) == 'e')
                {
                    x++;
                }
            }
        }
    }
    return x;
}
"
3a2534fb0ac1dc3651141e9a0bd5b1830ff648bb,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""small ticket"";
        }
        else
        {
            return ""big ticket"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""small ticket"";
        }
        else
        {
			return ""big ticket"";
        }
    
    }
}  
"
4922371b92b222012e44535853e7674bb94610e3,"public boolean twoTwo(int[] nums)
{
    if (nums.length <= 1)
    {
        return false;
    }
    if (nums.length == 2)
    {
       return (nums[0] == 2 || nums[1] == 2);
            
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
    }
    return true;
}
"
da854431fc95a4fda3f5795de985db2ccfd6cecc,"public boolean xyzThere(String str)
{
    if (str.length() >= 3) {
   	 	for (int i = 0; i < str.length() - 3; i++) {
        	if (str.substring(i, i + 3).equals(""xyz"")) {
            	if (i == 0) {
                    return true;
                }
                else if (str.charAt(i - 1) == '.') {
                    return false;
                }
                else {
                    return true;
                }
        	}
            else {
               return false; 
            }
    	}
    }
    else {
        return false;
    }
}
"
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
"
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
b39fe8089a563103c0f642be5647243d61b4c66b,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     if (isAsleep)

    return false;

  if ((isMorning && isMom) || !isMorning)

    return true;

  else return false;
}
"
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
"
82c64fa09f2ec4b819acaeb99373996b024cc02e,"public int roundSum(int a, int b, int c)
{
    int roundSum = round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int rem = num % 10;
    if (rem >= 5) {
        num = numb + 10 - rem;
    }
    else {
        num = num - rem;
    }
    return num;    
}
"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
0294a8f6bb1a1e083b987b4340006b744cb04faf,"public int loneSum(int a, int b, int c)
{
    int sum = 0;
    if (a != b && b!= c)
    {
    	sum = a + b + c;
        return sum;        
    }
    else if (a == b && b != c)
    {
    	sum = c;
        return sum;
    }
    else if (a != b && b == c)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = 0;
        return sum;
    }
}
"
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
"
0a9dcd12a12791fe49d782b736769ace72b0d2ed,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else
    {
        if (b == 13)
        {
            return a;
        }
        else
        {
             if (c == 13)
                {
                    int AB = (a + b);
                    return AB;
                }
                else
                {
                    int ABC = (a + b + c);
                    return ABC;
                }
        }
    }
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
269af4075525a2083019b124be38f451bea5eb2d,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            if (isAsleep)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
        else
        {
            return false;
        }
    }
    else if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
b4b80ec23db8730d3a13b7f18055050c22aa3b95,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        else
        {
            return 2;
        }
    }
    else
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}
}"
f0be04df720e45391f559d26dc0955b0202bb87b,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n != 15 && n != 16)
        	return 0;
    return n;
}
"
b0114cf5376b422979e26b916e9e4831b453f91d,"public String getSandwich(String str)
{
    int firstBread = -1;
    int lastBread = -1;
    for (int i = 0; i < str.length() - 5; i++)
    {
        if (str.substring(i, i+5).equals(""bread"")
        {
        }
    }
}
"
fb63e4d9b9f844eb6f3145768fe6bd59fda4c682,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && a == c)
        result = 20;
    if (a == b || a == c || b == c)
        result = 10;
    else
        result = 0;
    return result;
 
}
"
727d541babe278c063e729dab201403c18c6f003,"public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        str == ""bread"" - str - ""bread"";
    }
    else
    {
        return """";
    }
}
"
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
e73f15cebf791aa932347617662e3a6641135a35,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
    //return nums;
    if (nums.length >= 2)
    {
        
   		int start = nums[0];
    	for (int i = 0; i < nums.length - 1; i++)
    	{
     	//int j = 1;
        //nums[i] = nums[j];
        	nums[i] = nums[i + 1];
    	}
    
        	//nums[nums.length - 1] = start;
        /*if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }*/
    
              	
    }
    
    return nums;   
}
"
68c510e3ae2a5f68173421badd6c7e8d285e1fd9,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        return 0
    }
    else if (speed >= 61 && speed <= 80)
    {
        return 1
    }
    else if (speed >= 81)
    {
        return 2
    }
}
"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
"
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
62d31dc1d181609f1ad5028901c8db29d61ea2b8,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    else 
    {
        return (a +b);
    }
}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
3d11719630fc8c44b85deba0b9752e36fb374a27,"public int luckySum(int a, int b, int c)
{
    if (a = 13)
    {
        return 0;
    }
    else if (b = 13)
    {
        return a;
    }
    else if (c = 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
558280d818c379f1583db66238398bd41b0d7063,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
97df39519ca1ef6b02ae307ac2c9f6c6f42d2e77,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
8243c75a69e18cb6c9f02b072995835b37129ed9,"public boolean sameEnds(int[] nums, int len) {
boolean result = true;
int range = len;
for (int i =0; i <range;i++)
if (!(nums[i] == nums[nums.length - range + i]))
result = false;
return result;
}
"
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
"
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
"
761faf27118f8d7637200b8140f5a550d392d440,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
     if ( (n >=13 && n < 15) || (n > 16 && n <= 19) )
     {
         return 0;
     }
    else
    {
        return n;
    }
}

"
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
"
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
"
9f98cd5893ed8711953832332cb9e68381d2d182,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str.substring(str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
7e7bf4cc813657543b6b338e6de0cde0e361315b,"public int sum13(int[] nums)
{
    int total = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (num [i] == 13)
        {
            num [i] = 0;
            num [i] + 1 = 0;                
        }
        total = nums [i] + nums [i + 1];
    }
    return total;
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
6bc66f51e027f8e766055c5683b57b6d779c2d15,"public String withouEnd2(String str) 
{
if (str.length() <= 2) 
    return """";
return str.substring(1, str.length() - 1);
}
"
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
9e2323cd896bf8c878fad40b42eac0e930afede4,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    String str = String.valueOf(num);
    int stringLength = str.length();
    int lastDigit = Integer.parseString(stringLength);
    if (lastDigit >= 0 && lastDigit < 5)
    {
        return num - lastDigit;
    }
    else if (lastDigit >= 5)
    {
        return num + (10 - lastDigit);
    }
}"
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
"
8ea314af4ea3aa3a6d57f2c90ff7786608a23927,"public int noTeenSum(int a, int b, int c)
{
	int numA = a;
    int numB = b;
    int numC = c;
    return (fixTeen(numA) + fixTeen(numB) + fixTeen(numC));
}

public int fixTeen(int n)
{
    int num = n;
    if (num == 15 || num == 16)
    {
        return num;
    }
    else if (num >= 13 && num <= 19)
    {
        return 0;
    }
    else
    {
        return num;
    }
}
"
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
"
1dc0a9281fe5c33922d59a28a48a7003fd59765d,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        retrun = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
c90c3a1e01ce11092849215d094a7f5176711ab5,"public int countClumps(int[] nums)
{
    int clump = 0;
    for (int i = 0; i < nums.length; i++) { 
        if (nums(i) == num(i + 1) {
            clump = clump + 1;
    }
    return clump;
}
"
55008f2ac50ecaccae3a878e34d56a2f00118737,"public int countClumps(int[] nums)
{
	int clump = 0;
    for (int i = 0; i < nums.length;i++)
    {
        
       {
           if ( i + 1 < nums.length)
           {
               if (nums[i] == nums[i + 1])
               {
                   clump = clump + 1;
                   for (int j = 1; j < nums.length; j++)
                   {
                       if (nums[i + 1] == nums[i + 1 + j])
                       {
                           i = i + 1;
                       }
                   }
               }
           }
       }
    }
    return clump;
}
"
92e96089344e9e0ed22514c1297920394e0f87d6,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length < nums.length - 1)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
"
bb819a051a15f625b5912634652b195b464f7095,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length + 1 < nums.length - 2)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
"
2efc3b1d0acaa60b452bf611f88e4f3873fd00aa,"public boolean isEverywhere(int[] nums, int val)
{
    int b = 0;
    for (int i = 1; i < nums.length - 1; i++) {
        if (nums[i] == val || nums[i-1] == val ||
            nums[i+1] == val) {
            	b++;
        }
    }
    return b == nums.length - 2;
}
"
5f0de396365017b80185b81d0904cd472b4f28f8,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if ((a == b && b != c) || (a == c && a != b) || (b == c && b != a))
    {
       return 10;
    }
    else 
    {
        return 0;
    }
}
"
3d5712cd499b5dbbb377c38144436a2980ada53f,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
        	return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return false;
}
"
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
"
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
fe4d9bb980371b0c510eaafdeaad3066de447006,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
		return n;
	return 0;
}
public int noTeenSum(int a, int b, int c)
{  return (fixTeen(a) + fixTeen(b) +fixTeen(c)); }
"
ec440fd647af59cbea91a966ccc1596f685d24fa,"public int blackjack(int a, int b)
{
   if ( a > 21 && b > 21)
   {
      return 0; 
   }
    if (21 - b > a)
    {
        return a;
    }
    else 
        return b;
}
"
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
"
80b80a660b8113337e5dc1d8d8d78cd8c918c58c,"public int[] seriesUp(int n)
{
    int[] result = new int[n*(n+1)/2];
    int m = 0;
    for (int i = 0;i<=n;i++)
    {
        for (int j = 1;j<i;j++, m++)
        {
            result[m] = j;
        }
        return result;
    }
}"
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
"
863743fea61e06d673131ef705425d4b67d43542,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return b + c;
    if (b == c)
        return a + c;
    if (a == c)
		return b + c;        
}
"
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
"
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
"
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
"
c64c9e9c0a786ef3732a68209a390d30d8284fd4,"public int dateFashion(int you, int date)
{
   if ((you >= 2 || date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 || date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
88111a1b682c4e3263232c7e42baecf389dd8a17,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0)
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
    else
    {
    	return 0;
    }
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
"
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
eb5a4c86cae44656617a26e110011ef8081ffdf1,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else if ( str.length() == 0 )
    {
		return ""@@"";
    }
  }
"
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
ec7f457115687180217c5031a741ed0ee5198ec6,"public int noTeenSum(int a, int b, int c)
{
	int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
        return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
    }
}
"
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}"
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
"
b89935cd76575e88ea3d850c3c4d704f4a06bb09,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b==13)
    {
        return a;
    }
    else if (c==13)
    {
        return a+b;
    }
    else
    {
        return a+b+c;
    }
}
"
301bb42c276c9fed8a898bb3ffc4e02f7716cf3e,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        int loneSum = a + c;
    }
    else if (a == c) {
        int loneSum = a + b;
    }
    else if (b == c) {
        int loneSum = a + b;
    }
    else {
        int loneSum = a + b + c;
    }
    return loneSum;
}
"
11e598f7e57d128136db1dfc84b08cbb84493470,"public String atFirst(String str)
{	
    int n = str.length();
    for (int = 0; i < n; i++)
    {
    	if (n > 2)
    	{
     		return str.substring(0, 2);
    	}
    	else
    	{
       	 	return ""@@"";
    	} 
    }
}
"
18ab89e18a6ce4e406b204406f6fb94214480bd9,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 10;
    if (a == b && b == c && a == c)
        return 5;
    if (a != b && b != c && a != c)
        return 1;
    else
        return 0;
}
"
67b31d44e53f66de27582ca427b2dcf657e7f18c,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a = b && b == c)
        return 10;
    
    if (a = b && b == c)
        return 5;
        
    if (a != b && a != c)
        return 1;
    
    return 0;
}
"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
e7aad59bc0f7416c80deba043153af59de5ea985,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i <= nums.length - 1; i++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            everywhere = true;
            break;
        }
    }
    return everywhere;
}
"
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
"
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
"
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
"
a02eb75c4e00dfd8fa09a7d3de1220f22f7a8f27,"public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        return 0;
    }
    if (n == 15)
    {
        return 15;
    }
    if (n == 16)
        {
            return 16;
        }
}

"
5751db3148c8805ad9e482b9dedd7ade5357ba47,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
    {
        return str.substring(first + 5, last);
    }
    else
    {
    return """";
    }
}
"
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
"
47f3a74a254afbf6c445487eff4eb1c0df9e20df,"public boolean has77(int[] nums)
{
    int blob = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (i < nums.length - 2)
        {
            if (nums[i] == nums[i + 1] && nums[i] == 7)
        	{
            	blob = blob + 100;
        	}
            if (nums[i] == nums[i + 2] && nums[i] == 7)
            {
                blob = blob + 100;
            }
        }   
        else if (nums[i] == nums[i + 1] && nums[i] == 7)
        {
            blob = blob + 100;
        }
        else
        {
            blob = blob + 1;
        }
    }
    return blob >= 100;
}
"
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
"
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
"
da35db888e070aad3d1910413f0731e4b429579c,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (20 - n < 7  && 20 - n < 1)
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
1ef1d41cd720754161cc1b953d6c374d6349e857,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)

   return 10;

  if ( a == b && b == c)

    return 5;

  if ( a != b && a != c)

    return 1;

  else

    return 0;

}
"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
d438b7d68b37722f5d57579e7078668cf60a8b2b,"public int blackjack(int a, int b)
{
    if (a < b && b <= 21)
    {
        return b;
    }
    else if (b < a && a <=21)
    {
        return a;
    }
    else 
    {
        return 0;
    }
}
"
0cbcdcccb97a84929ef84adcbae98515edde8dfa,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    
   int d = num %10;
    if (d >= 5)
        return num + 10 -d;
    return num -d;
}
"
06be09e2d8d4ddfe4333697a3feaadf8e8dc3077,"public int countClumps(int[] nums)
{
    int num = 0;
    boolean still = false;
    boolean clump = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i - 1])
        {
            clump = true;
        }
        else if (nums[i] == nums[i + 1])
        {
            still = true;
            continue;
        }
        else
        {
            num++;
        }
    }
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
"
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
"
f0205df67f010e325ec1614fba0a300d61a74dec,"public int blackjack(int a, int b)
{
    double valueA;
    valueA = (a % 21);
    double valueB;
    valueB =  (b % 21);
    
    if (a < 21 || b < 21)
    {
        if (double valueA > double valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else if (a < 21 && b < 21)
    {
        if (valueA > valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else
    {
        return 0;
    }
}
"
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
"
dc77d9f47e20012cfdff686d71cf058927245c62,"public int roundSum(int a, int b, int c)
    return round10(a) + round10(b) + round10(c));

public int round10(int num)
{
    int digit = num % 10;
	if (digit >= 5)
        return num = (10 - digit);
    return num - digit;
}
"
2b976fe20b1e401744827a000d91d5535db7d93b,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <=90);
}
"
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
085c90128653ad2d02262a5079a336364fa0a7cb,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || b==c || a == c)
        return 10;
    else 
        return 0;
}
"
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
"
0f838818781093168101b362c3ceaa5ac771a653,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 2;
}
"
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
"
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
eadc5df754b07dbc81ee348ee4bbd34ce3b39f20,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
        return 20;
    else
        return (a + b);
}
"
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
"
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
"
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
377d33b5c5fd6194c58592818a016612e427dfc7,"public int[] fix45(int[] nums)
{
    int f45 = 0;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i + 1] != 5)
		{
			for(!(nums[f45] == 5 && (f45 == 0 || f45 > 0 && nums[f45 - 1] != 4)) f45++)
            {
			nums[j] = nums[i + 1];
			nums[i + 1] = 5;
            }
		}
	}
	return nums;
}
"
828a3b0db925adca159220f3e9faf2fb4e24446a,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21){
        return a;
    }else if (b > a && b <= 21){
        return b;
    }else if (a > 21 && b < 22){
        return b;
    }else if (b > 21 && a < 22){
        return a;
    }else{
        return 0;
    }
}
"
e9b63cad69501d11984221e9a07eff591dedc2b8,"public int roundSum(int a, int b, int c)
{
    a = round10(a);
    b = round10(b);
    c = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int rem = num % 10;
    if (num >= 0 && num < 5)
        num = num - rem;
    else
        num = num + 10 - rem;
    return num;
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
"
49eb57187ce32f7392ba9eb954bfc79921194a03,"public int countCode(String str)
{
    int count = 0;
    int i = 0;
    int length = str.length() - 3;
    while (i < length)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) = ""e"")
        {
            count++;
        }
        else
        {
            i++
        }
    }
    return times;
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
6951053422eb1f10e58384407fe2177bd76f6031,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum
    }
}
"
2b6fbdd8ffb390e14349649d51e8f312d5db1ba8,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[nums.length - 1] == 2)
        return false;
    return true;
}
"
f4b03862b0451a373caa9f6bb7390b99d9c24f62,"public String atFirst(String str)
{
    return str.substring(0, 2);
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
bd4ab1662bb8f09f26dc5dd978ba13826af43bbe,"public int countCode(String str)
{
 int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
328f2f06f07e26aac03e4e4a6df016fc0c620fcc,"public int redTicket(int a, int b, int c)
{
      if (a == 2 && b == 2 && c == 2)
    return 10;
  if ( a == b && b == c)
    return 5;
  if ( a != b && a != c)
    return 1;
  else
    return 0;
}
"
b4b80ec23db8730d3a13b7f18055050c22aa3b95,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        else
        {
            return 2;
        }
    }
    else
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}
}"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
"
e842a2d12176ae37228ff69c6c768005b587ac2a,"public int blackjack(int a, int b)
{
    int c = 21 - a;
    int d = 21 - b;
    
    
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else
    {
        if (c > d)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
3c663e6b94b687cf331fb515d865826a263a5a6c,"public int luckySum(int a, int b, int c)
{
    if (a==13)
    {
        return 0;
    }
    else if (b==13)
    {
        return a;
    }
    else if (c==13)
    {
        return a+b;
    }
    else
        return a+b+c;
}
"
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
"
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
"
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
"
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
"
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
694a9037b08573fdb83bf861651119e9cdc03f82,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 1; i<n; i++)
    {
        last = last + str.substring(str.length()-n);
    }
    return last;
        
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
0fd5c40c96b7dfad240c5509995b5acc9eccd6b3,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
a2c77eb2341d2107484dea64721c8eb1fb2b5c9b,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else if (c == 13)
    {
    	sum = a + b;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum;
    }
}
"
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
"
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
"
22db1882535d71f9010b430616081de4d479a931,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
        if (c == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
cd80603c865a5f537dae1c802b4d53681015978e,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
"
4e250d40f6c8c4899a3eb79ea695e918be5d8a56,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
    	else if (nums[i] == 7 && nums[i + 2] == 7)
            return true;
    return false;
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
"
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
"
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
"
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
b16439cf6ef5c619010c64a8fb33444995f538e6,"public String plusOut(String str, String word)
{
    String returnString = """";
    int lastIndex = str.indexOf(word);
    int i = lastIndex;
    
    while (i < str.length())   
    {
        if (i == str.indexOf(word, lastIndex))
        {
            returnString = returnString + word;
            lastIndex = i;
            i += (word.length() - 1);
        }
        
        else
        {
            returnString = returnString + ""+"";
            i++;
        }
    }
	return returnString;
}
"
5a00919d938e7350f9d887a0f3c496f766fa3b49,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
"
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
"
3d89f76d27956de3a51e53f7ba12c5aa1fc7e352,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom && isAsleep)
        return true;
    if (isMorning && !isMom && !isAsleep)
        return false;
    if (isMorning && isMom && !isAsleep)
        return false;
    return false;    
}
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
"
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
"
97df39519ca1ef6b02ae307ac2c9f6c6f42d2e77,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
042c7539e7bbc603f9d999c837f0b4486eeef11a,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n != 15 && n != 16)
    	if (n <= 19 && n >= 13)
        	return 0;
    return n;
}
"
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
"
d96a0285c6ef424bb4ff5119134143d2d1c7d7b0,"public String alarmClock(int day, boolean vacation)
{
	if (vacation)
    {
       	if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
    {
        if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""10:00"";
        }
		else if (day == 0 || day == 6)
        {
            return ""off"";
        }
    }
}
"
c8a0be59dec0a41242ebf952c04bb2e31259d489,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
"
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
"
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
55008f2ac50ecaccae3a878e34d56a2f00118737,"public int countClumps(int[] nums)
{
	int clump = 0;
    for (int i = 0; i < nums.length;i++)
    {
        
       {
           if ( i + 1 < nums.length)
           {
               if (nums[i] == nums[i + 1])
               {
                   clump = clump + 1;
                   for (int j = 1; j < nums.length; j++)
                   {
                       if (nums[i + 1] == nums[i + 1 + j])
                       {
                           i = i + 1;
                       }
                   }
               }
           }
       }
    }
    return clump;
}
"
1ef1d41cd720754161cc1b953d6c374d6349e857,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)

   return 10;

  if ( a == b && b == c)

    return 5;

  if ( a != b && a != c)

    return 1;

  else

    return 0;

}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
3d11719630fc8c44b85deba0b9752e36fb374a27,"public int luckySum(int a, int b, int c)
{
    if (a = 13)
    {
        return 0;
    }
    else if (b = 13)
    {
        return a;
    }
    else if (c = 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
"
c1dc534bc134ac150f2499c964686d5c7968c85a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        System.out.printIn(""0"");
    }
    else if (speed >= 61 && <= 80)
    {
        System.out.printIn(""1"")
    }
    else if (speed >= 81)
    {
        System.out.printIn(""2"")
    }
    
}
"
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
"
e5f4a1d12a2732c56ffa6463cfe4561bd754d8e2,"public String atFirst(String str)
{
    if (str.length >= 2)
    {
        return (str.substring(0,2));
    }
    else
    {
        return (str + ""@"");
    }
}
"
af20cd1af1156a04c4ca530fa1bda65b9cd57682,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning) 
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
03963c180ede47baf3cb2a34f74b6ff99ed0fee1,"public int[] zeroMax(int[] nums) {
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--) {
        if (nums[i] % 2 == 1 && nums[i] > largestOdd)
            largestOdd = nums[i];
        if (nums[i] == 0)
            nums[i] = largestOdd;
    }
    return nums;
}"
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
"
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
"
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
"
c62602f27883f984fbc0551198122402edd6e05d,"public int[] shiftLeft(int[] nums)
{
    return int[];
}
"
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}"
0f838818781093168101b362c3ceaa5ac771a653,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 2;
}
"
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
"
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
"
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
528342efb0a38ace805355f9ecda4f69f0397a23,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
	if (a == 13)
    {
        return sum;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        int sum = a + b;
        return sum;
    }
    else
    {
        int sum = a + b + c;
        return sum;
    }
}
"
8f13baf6c1f32fe1e3c57fc757c44293a34e0980,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    if (isAsleep)
    {
        return false;
    }
    else if (!isAsleep)
    {
        return true;
    }
    return false;
    
}
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
3a2534fb0ac1dc3651141e9a0bd5b1830ff648bb,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""small ticket"";
        }
        else
        {
            return ""big ticket"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""small ticket"";
        }
        else
        {
			return ""big ticket"";
        }
    
    }
}  
"
06be09e2d8d4ddfe4333697a3feaadf8e8dc3077,"public int countClumps(int[] nums)
{
    int num = 0;
    boolean still = false;
    boolean clump = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i - 1])
        {
            clump = true;
        }
        else if (nums[i] == nums[i + 1])
        {
            still = true;
            continue;
        }
        else
        {
            num++;
        }
    }
}
"
b53ab834a811096b76a803c390009392801834ab,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
4cad14f6dc235bb7665a336718b0bc721df9ddd2,"public boolean isEverywhere(int[] nums, int val)
{
    Boolean result = true;
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            result = true;
        }
        else
        {
            result = false;
            break;
        }
    }
    return result;
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
e503bcd53b6c1b8e1f5bceead47b945857b50e9a,"public int dateFashion(int you, int date)
{
    if ( you >= 8 && date >= 8)
    {
        return 2;
    }
    if ( you <= 2 && date <= 2)
    {
        return 0;
    }
     if ( you >= 8 && date <= 8)
    {
        return 1;
    }
   if ( you <= 8 && date >= 8)
    {
        return 1;
    }
    }
    else 
        return 1;
}
"
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}"
28fa55b9521727c1d6984be94a51479b17a2ad86,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }else  (str.length() == 0){
	return ""@@"";
    }
        }
"
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
"
9ebe46b9e7a4b3cb16a4423e4af7f17722965213,"public int noTeenSum(int a, int b, int c)
{
    int sum = (fixTeen(a)+fixTeen(b)+fixTeen(c));
        return sum;
}

public int fixTeen(int n)
{
    if (n>=13&&n<=19)
    {
        if (n==15||n==16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }
}
"
13864ac96c4023a6c7e3db73dd0c11750234fe40,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1"
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
cda4eeee2346e60e72673f13fb06774fb4ec1b1b,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
        int rightSum = 0;
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
"
c5bd32eee7c56679c1bdfee89dfcaddb039a2431,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
       if (speed <= 60)
           return 0;
    	if (speed >= 81)
            return 2;
    	else
            return 1;
	else
        if (speed <= 65)
            return 0;
    	if (speed >= 86) 
            return 2;
    	else 
            return 1;
}
"
0773313801a191baf1978ea9f3b612da5d247316,"public int caughtSpeeding(int speed, boolean isBirthday)
{
if (!isBirthday)
{
   if ( speed <= 60)
   
       return 0;
   
   else if ( speed > 60 && speed <= 80)
   
       return 1;
   
   else 
   
       return 2;
   
}
    if (isBirthday)
    {
        if ( speed <= 65)
   
       return 0;
   
   else if ( speed >= 65 && speed <= 85)
   
       return 1;
   
   else 
   {
       return 2;
   }
       
}
}
"
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
d7633351c672f26ee19b79bf514fdb0837ec9cb2,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMorning && !isMom)
        return false;
    else
        return true;
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
82c64fa09f2ec4b819acaeb99373996b024cc02e,"public int roundSum(int a, int b, int c)
{
    int roundSum = round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int rem = num % 10;
    if (rem >= 5) {
        num = numb + 10 - rem;
    }
    else {
        num = num - rem;
    }
    return num;    
}
"
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
"
23b5ec2ba8fe6b1ec171faaa28bcd140793480f8,"public int[] seriesUp(int n) {
  int[] result = new int[n * (n + 1) / 2];
  int i = 0;
  for (int j = 1; j <= n; ++j)
    for (int k = 1; k <= j; ++k)
      result[i++] = k;
  return result;
}"
8fbb70b4ce6f9c55dcd5d47f50272f1685330601,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
            return true;
        else 
            return false;
    }
    if (isAsleep)
        return false;
}
"
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
332c6ec5c84a4b48b155a3ce7e3c41195bbaf8a1,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
"
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
4e651e8df90f087942b32424b07d4257df1ddc47,"public String atFirst(String str)
{
    return '@';
}
"
d8f6de34bbb4daabf4789e4930885c05e8604106,"public int countClumps(int[] nums)
{
    int clumpNum = 0;
    int clump = 0;
    for (int = 0; i < nums.length - 1; i++)
    {
     	if (clump == 0 && nums[i] == nums[i+1])
        {
            clumpNum++;
            clump++;
        }
        else
        {
         	clump = 0;   
        }
    }
    return clumpNum;
}
"
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
"
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
"
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
"
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
"
67b31d44e53f66de27582ca427b2dcf657e7f18c,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a = b && b == c)
        return 10;
    
    if (a = b && b == c)
        return 5;
        
    if (a != b && a != c)
        return 1;
    
    return 0;
}
"
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
e93b94f6835046c42b16cfe507547d10945a4c3a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++) {
		if ((nums[i-1] == val) && 
            (nums[i] == val) && nums[i+1] == val) {
         	 return true;
        }
        else {
			return false;
        }
    }
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
c72936a1839694da8df5554d66db79bf67bec60c,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (isBirthday)
    {
        speed = speed + 5
    }
	if (speed <= 60)
	{
    	return 0;
	}
    
	if (speed >= 61 && speed <= 80)
	{
    	return 1;
	}
    
	if (speed >= 81)
	{
    	return 2;
	}
	
}
"
eb3954d897ab04a8ee9649988f3d26e98aae722f,"public String[] fizzBuzz(int start, int end)
{
    String[] result = new String[end - start];
    
    for (int i = 0; i < end - 1; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
"
97df39519ca1ef6b02ae307ac2c9f6c6f42d2e77,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
"
4e651e8df90f087942b32424b07d4257df1ddc47,"public String atFirst(String str)
{
    return '@';
}
"
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
"
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
"
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
"
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
"
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
"
11b89a5a5c8c4cce3c90dfb984780d1229efc349,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[nums.length - 1] == 7 && nums[nums.length - 2] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
"
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
"
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
c093cac600fc00c29dfe5c59c8ab78dddb9a3f95,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count >= nums.length - 1);            
    
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
9f7cabb358a67a54ce58c64d4a9845fcc682c8e5,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if (speed <= 60) {
        return 0;
    }
        else if (speed > 60 && speed <81) {
            return 1;
        }
            else {
                return 2;
        }
    if (isBirthday);
    	 if (speed <= 65) {
             return 0;
         }
    else if (speed > 65 && speed < 86) {
        return 1;
    }
    else {
        return 2;
    }
}
       "
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
685a1f07697cb907cefcecfa8cf5158825e90e14,"public int countCode(String str)
{
    int length = str.length() - 2;
    int num = 0;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == c && str.charAt(i + 1) == o
            && str.charAt(i + 3) == e)
        {
            num = num + 1;
        }
    }
    return num;
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
6bc66f51e027f8e766055c5683b57b6d779c2d15,"public String withouEnd2(String str) 
{
if (str.length() <= 2) 
    return """";
return str.substring(1, str.length() - 1);
}
"
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
"
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
aa4d8b44bff62be088c0c94a7829aa410ffa133b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        if (speed >= 81)
        {
            return 2;
        }
    }
    if (!isBirthday)
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
"
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
"
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
"
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
2ee7d366ef45e04675e68bd5cfd425ac0862af68,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else
    {
		return ""@@"";
    }

  }
"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
bedb2c2c407cfc6f84128d3bcf6e102d6628dd32,"public boolean sameEnds(int[] nums, int n)
{
    if (n <= 1)
    {
    	for (int i = 0; i <= n; i++)
    	{
            if (nums[i] != nums[nums.length - 1 - i])
        	{
            	return false;
        	}
    	}
    }
    else
    {
        for (int i = 0; i <= n; i++)
    	{
            
            else if (nums[i] != nums[nums.length - n + i])
        	{
            	return false;
        	}
    	}
        
    }
    return true;
}
"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
"
c8a0be59dec0a41242ebf952c04bb2e31259d489,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
"
d6ecef2688242348be94ae9cf4d683dbfee353d2,"public int countClumps(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
        if (nums[i] = nums[i+1])
        {
            
            count += 1;
            
        }
        
    }
    
    
    return count;
    
    
}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
"
2fca6215c9c9afb58d28887169dfe435558d7825,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a <= 21 && a > b)
    {
        return a;
    }
    else if (b <= 21 && b > a)
    {
        return b;
    }
    else if (b <= 21 && a > 21)
    {
        return b;
    }
    else
    {
     	return a;   
    }
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
b21271e79419b123e5e2d4ff29ca2f214f3fb90e,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if (a==b || a==c || b==c)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
"
b53ab834a811096b76a803c390009392801834ab,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
"
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
"
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
"
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
"
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
"
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
"
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
"
0f7eb7c6740ccd257c3f6da081cc3f753e5a2516,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int clumpSize = this.sizeClump(nums, nums[i], i);
                i = i + clumpSize;
                counter++;
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int nextNum = 0;
    while (nums[start] == initValue)
    {
        nextNum++;
    }
    return nextNum;
}"
22fda47732546394dab7ecbb147aa3cdbdb03099,"public boolean xyBalance(String str)
{
  int l = str.length() - 1;
    for (int i = l; i >= 0; i--)
    {
        char n = str.charAt(i);
        if (n == 'x')
        {
            return false;
        }
        if (n == 'y')
        {
            return true;
        }
    }
    return true;
    }
"
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
"
2b6fbdd8ffb390e14349649d51e8f312d5db1ba8,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[nums.length - 1] == 2)
        return false;
    return true;
}
"
512ea4857067bd5d3ac3e3426f861301ee28c2f3,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
            return false;
        }
    }
    else if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
2b976fe20b1e401744827a000d91d5535db7d93b,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <=90);
}
"
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
"
490ca1a37dcda41e77316b93a43e5fada6c183d5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
    }
    if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
cee57656ca16e1dba36c9adc7d7dbfc622398c9a,"public int sum13(int[] nums)
{
    int sum = 0;
        if (nums.length < 1) {
            return 0;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 13) {
                i++;
                continue;
            }
            sum += nums[i];
        }
        return sum;
}
"
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
"
c62602f27883f984fbc0551198122402edd6e05d,"public int[] shiftLeft(int[] nums)
{
    return int[];
}
"
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
"
039a5741fb82006d59f66a5ffd100359f6a3aa77,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
    	if (cigars >= 40)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
    else
    {
    	if (cigars >= 40 && cigars <= 60)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
}
"
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
"
e842a2d12176ae37228ff69c6c768005b587ac2a,"public int blackjack(int a, int b)
{
    int c = 21 - a;
    int d = 21 - b;
    
    
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else
    {
        if (c > d)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
}
"
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
"
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
"
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
"
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
a5ef4e9ae777060ed56015c4182bbe5b63e80d69,"public boolean evenlySpaced(int a, int b, int c)
{
    return (a == b && b ==c);
    return ((Math.abs(a-b) == Math.abs(b-c)) || (Math.abs(a-c) == Math.abs(a-b)) || (Math.abs(c-a) == Math.abs(b-c)));    
}
"
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
"
0fd5c40c96b7dfad240c5509995b5acc9eccd6b3,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
34ad16a72b0a75568a00e876dfb72953f291c9ab,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            clumps++;
        }
    }
    return clumps;
}
"
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
"
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
"
5a00919d938e7350f9d887a0f3c496f766fa3b49,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
"
97df39519ca1ef6b02ae307ac2c9f6c6f42d2e77,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
67b31d44e53f66de27582ca427b2dcf657e7f18c,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a = b && b == c)
        return 10;
    
    if (a = b && b == c)
        return 5;
        
    if (a != b && a != c)
        return 1;
    
    return 0;
}
"
863743fea61e06d673131ef705425d4b67d43542,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return b + c;
    if (b == c)
        return a + c;
    if (a == c)
		return b + c;        
}
"
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
"
940a946f9a0eeb90ac4e79843d3057ce7df5edd9,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length() - 1; i++)
    {
     	if (nums[i] != 13)   
        {
         	nums[i] = 0;   
        }
     	sum = sum + nums[i];   
    }
    return sum; 
}
"
d5ce442602f709f5b69882191e66e3dbc3382576,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21)
    {
        return a;
    }
    else if (b > a && b <= 21)
    {
        return b;
    }
    else if (a > 21 || b > 21)
    {
        return 0;
    }
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
aa4d8b44bff62be088c0c94a7829aa410ffa133b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        if (speed >= 81)
        {
            return 2;
        }
    }
    if (!isBirthday)
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
cd23c0ed240a318d70e3ddbf504fb44f78c81ffc,"public String atFirst(String str)
{ 
    if (str.length() < 2 && str.length() != 0)
    {
        return str + ""@"";
    }
    else if (str.length() == 0)
    {
        return ""@@""
    }
    else
    {
        return str.substring(0,2);
    }
    
}
"
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
"
9a762998ef3f0abdaeaa9e34d97d58d792cb6be4,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMom)
        return true;
    return (!isMorning);
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
fdd9c7578eae0199293f5c67050555c877e59579,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
    }
                           
    return (sum - max - min) / (nums.length - 2);
}
"
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
0a9dcd12a12791fe49d782b736769ace72b0d2ed,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else
    {
        if (b == 13)
        {
            return a;
        }
        else
        {
             if (c == 13)
                {
                    int AB = (a + b);
                    return AB;
                }
                else
                {
                    int ABC = (a + b + c);
                    return ABC;
                }
        }
    }
}
"
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
e73f15cebf791aa932347617662e3a6641135a35,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
    //return nums;
    if (nums.length >= 2)
    {
        
   		int start = nums[0];
    	for (int i = 0; i < nums.length - 1; i++)
    	{
     	//int j = 1;
        //nums[i] = nums[j];
        	nums[i] = nums[i + 1];
    	}
    
        	//nums[nums.length - 1] = start;
        /*if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }*/
    
              	
    }
    
    return nums;   
}
"
bd4ab1662bb8f09f26dc5dd978ba13826af43bbe,"public int countCode(String str)
{
 int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
4621b6d4c1b03a6fd811349559740d32c21bd2b1,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        return false;
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return false;
}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
13e7726e22c3130d052d705ea6bb06b6b0869917,"public int sortaSum(int a, int b)
{
    if (Math.abs(a + b >= 10) && Math.abs(a + b <= 19))
        {
            return 20;
        }
    else
        {
            return Math.abs(a + b);
        }
}
"
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
04780365d53ec02bf23dee2452c32d0edb7fb12c,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
eb5a4c86cae44656617a26e110011ef8081ffdf1,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else if ( str.length() == 0 )
    {
		return ""@@"";
    }
  }
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
03963c180ede47baf3cb2a34f74b6ff99ed0fee1,"public int[] zeroMax(int[] nums) {
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--) {
        if (nums[i] % 2 == 1 && nums[i] > largestOdd)
            largestOdd = nums[i];
        if (nums[i] == 0)
            nums[i] = largestOdd;
    }
    return nums;
}"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
"
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
"
bb819a051a15f625b5912634652b195b464f7095,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length + 1 < nums.length - 2)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
"
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
"
c72936a1839694da8df5554d66db79bf67bec60c,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (isBirthday)
    {
        speed = speed + 5
    }
	if (speed <= 60)
	{
    	return 0;
	}
    
	if (speed >= 61 && speed <= 80)
	{
    	return 1;
	}
    
	if (speed >= 81)
	{
    	return 2;
	}
	
}
"
7c7466b0671a0616aaa1163d60a5dbc221b19a3b,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    
    return nums;
}

public int largestOdd(int position, int[] array)
{
    int largest = 0;
    
    for (int i = position; i < array.length; i++)
    {
        if (array[i] % 2 == 1 && array[i] > largest)
        {
            largest = array[i];
        }
    }
    
    return largest;
}
"
269af4075525a2083019b124be38f451bea5eb2d,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            if (isAsleep)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
        else
        {
            return false;
        }
    }
    else if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
"
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
3850876d2c56148eb728593d89548d81773d092d,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                while ((nums[i] == nums[i]) && (i < num.length)
                {
                    i++;
                }
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int sumVal = 1;
    while (nums[start] == initValue)
    {
        sumVal++;
        start++;
    }
    return sumVal;
}"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
47f3a74a254afbf6c445487eff4eb1c0df9e20df,"public boolean has77(int[] nums)
{
    int blob = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (i < nums.length - 2)
        {
            if (nums[i] == nums[i + 1] && nums[i] == 7)
        	{
            	blob = blob + 100;
        	}
            if (nums[i] == nums[i + 2] && nums[i] == 7)
            {
                blob = blob + 100;
            }
        }   
        else if (nums[i] == nums[i + 1] && nums[i] == 7)
        {
            blob = blob + 100;
        }
        else
        {
            blob = blob + 1;
        }
    }
    return blob >= 100;
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
4e250d40f6c8c4899a3eb79ea695e918be5d8a56,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
    	else if (nums[i] == 7 && nums[i + 2] == 7)
            return true;
    return false;
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
06ce870f764275dc4fbe2e7c3328c4f9612d64a7,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 0; i<n; i++)
    {
        last = last + last;
    }
    return last;
        
}
"
2fca6215c9c9afb58d28887169dfe435558d7825,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a <= 21 && a > b)
    {
        return a;
    }
    else if (b <= 21 && b > a)
    {
        return b;
    }
    else if (b <= 21 && a > 21)
    {
        return b;
    }
    else
    {
     	return a;   
    }
}
"
3a244a1b4e96b9b233338061c4229807fb89777c,"public int countCode(String str)
{
    int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
610dbd70704f6fe7a7fa838ba5850c555c6ec37d,"public String withouEnd2(String str) 
{
        if (str.length() <= 2) 
            return """";
        return str.substring(1, str.length() - 1);
}
"
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
"
ec440fd647af59cbea91a966ccc1596f685d24fa,"public int blackjack(int a, int b)
{
   if ( a > 21 && b > 21)
   {
      return 0; 
   }
    if (21 - b > a)
    {
        return a;
    }
    else 
        return b;
}
"
2554504cf73dcc772aa6c40d5e1c117584eceb44,"public int sum13(int[] nums)
{
    int total = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i > 0)
        {
            if (nums[i] != 13 && nums[i - 1] != 13)
            {
                total += nums[i];
            }
        }
        else
        {
            if (nums[i] != 13)
            {
                total += nums[i];
            }
        }
    }
    
    return total;
}
"
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
"
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
"
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
328f2f06f07e26aac03e4e4a6df016fc0c620fcc,"public int redTicket(int a, int b, int c)
{
      if (a == 2 && b == 2 && c == 2)
    return 10;
  if ( a == b && b == c)
    return 5;
  if ( a != b && a != c)
    return 1;
  else
    return 0;
}
"
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
"
22d46f636a2ecaa8a80e55e579500a4ff8e2a188,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            nums[i+1] = 5;
        }
    }
    
    return nums;
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
"
9e2323cd896bf8c878fad40b42eac0e930afede4,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    String str = String.valueOf(num);
    int stringLength = str.length();
    int lastDigit = Integer.parseString(stringLength);
    if (lastDigit >= 0 && lastDigit < 5)
    {
        return num - lastDigit;
    }
    else if (lastDigit >= 5)
    {
        return num + (10 - lastDigit);
    }
}"
ac791e33437b3b26bd56526f8f1a68c958771022,"public int sum3(int[] nums)
{
    return nums[0]+nums[1]+nums[2];
}
"
c8a0be59dec0a41242ebf952c04bb2e31259d489,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
"
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
"
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
a2c77eb2341d2107484dea64721c8eb1fb2b5c9b,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else if (c == 13)
    {
    	sum = a + b;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum;
    }
}
"
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
bb819a051a15f625b5912634652b195b464f7095,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length + 1 < nums.length - 2)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
"
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
"
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
a2a2884e41048d06a4cb030480f7393277c7ec9a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + nums[i];
        if (nums[i] == 13)
        {
            sum = sum - (13 = nums[i + 1]));
        }
    }
    return sum;
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
47bcbb118b9820ce001397912cd55ec9c5521a9b,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
        return c;
    }
    if (a == c)
        return b;
    if (b == c)
        return a;
    return (a + b + c);
}
"
ab752aa9f041e605c697b86bdcb50aa8b25db534,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
"
42c1b13dfbc2f7dd20266742451da0be59cbd49a,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (!isBirthday)
    {
    	if (speed <= 60)
    	{return 0;}
        
    	else if (speed >= 61 && <= 80)
    	{ return 1;}
        
    	else 
    	{return 2;}
    }
     else if (isBirthday)
        if (speed <= 65)
    	{return 0;}
    
    	if (speed >= 66 && <= 85)
    	{ return 1;}
    
    	else 
    	{return 2;}
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
762f08246c122eabc1b2c86550fef5a51f4c34a7,"public int round10(int num)
{
	int digit = num % 10;
	if(digit >= 5)
    {
		return num + (10 - digit);
    }
	return num - digit;
}
public int roundSum(int a, int b, int c)
{	
    return (round10(a) + round10(b) + round10(c));	
}"
5cd02f6c04c19cfba3433b99e62352d722eab1e6,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
	    if (a > b)
	    {
   		  	return a;
	    }
	    else
    	{
    	 	return b;
    	}
    }
    else
    {
       	return 0;
    }
}
"
b4b80ec23db8730d3a13b7f18055050c22aa3b95,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        else
        {
            return 2;
        }
    }
    else
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}
}"
727d541babe278c063e729dab201403c18c6f003,"public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        str == ""bread"" - str - ""bread"";
    }
    else
    {
        return """";
    }
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
61f82d819ed02008ea7d45f70e7c86937eb58bc3,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (i == 0)
        {
            if (nums[0] == 2 && nums.length < 1)
            {
                return false;
            }
            else if (nums[0] == 2 && nums[1] != 2)
            {
                return false;
            }
        }
        else if (i == nums.length - 1)
        {
            if (nums[i] == 2 && nums[i - 1] != 2)
            {
                return false;
            }
        }
        else
        {
            if (nums[i] == 2)
            {
                if (nums[i - 1] == 2)
                {
                }
                else if (nums[i + 1] == 2)
                {
                }
                else
                {
                    return false;
                }
            }
        }
    }
    return true;
}
"
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
"
8ade95f109e1073acef3d10c10f35e45f9e8fce5,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder    
    return -1
}
"
c64c9e9c0a786ef3732a68209a390d30d8284fd4,"public int dateFashion(int you, int date)
{
   if ((you >= 2 || date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 || date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
da35db888e070aad3d1910413f0731e4b429579c,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (20 - n < 7  && 20 - n < 1)
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
0ebd451bd7f1ba5eaaee7cc787359dde169abbc2,"public String getSandwich(String str)
{
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
        return str.substring(first + 5, last);
                                                                    
    return """";
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
"
4e250d40f6c8c4899a3eb79ea695e918be5d8a56,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
    	else if (nums[i] == 7 && nums[i + 2] == 7)
            return true;
    return false;
}
"
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
"
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
"
6434b911e74e0d2939d97a8820552e19fd926f60,"public int countClumps(int[] nums)
{
      int current = -1, clump = 0;
  for(int i = 0; i < nums.length - 1; i++) {
    if(nums[i] == nums[i + 1] && nums[i] != current) {
       current = nums[i];
       clump++;
    } else {
       if(nums[i] != current) {
          current = -1;
       }
    }
  }
  return clump;
}
"
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
"
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
9a762998ef3f0abdaeaa9e34d97d58d792cb6be4,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMom)
        return true;
    return (!isMorning);
}
"
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
6951053422eb1f10e58384407fe2177bd76f6031,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum
    }
}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
"
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
"
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
"
f916727180911437e727e3beb5163e6447d5202b,"public String plusOut(String str, String word)
{
    String plus = new String();
    for (int i = 0; i < str.length(); i++)
    {
        if (i <= str.length() - word.length())
        {
            if (str.substring(i, i + word.length()).equals(word))
            {
                plus += word;
                i += word.length() - 1;
            }
            else
            {
                plus += '+';
            }
        }
    }
    return plus;
}
"
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
"
0a620bf30b2a7a4fce92e7ea762e2a29a92cd83d,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
"
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
"
0fd5c40c96b7dfad240c5509995b5acc9eccd6b3,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
"
309dc7997e1010df732f8ec41fd34a616365f55d,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if ((str.substring(i, i + 1) == 'co') 
            && (str.substring(i + 3) == 'e'))
        {
            count++;
        }
    }
    return count;
}
"
954b684277b4e386b93c914548d0c579aafd6503,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        for (int k = 0; k < nums.length - 1; k++)
        {
            if (i == 4 && k == 5)
            {
                int m = nums[k + 1];
                nums[k + 1] = nums[i];
                    nums[i] = m;
            }
        }
    }
    return nums;
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
"
67b31d44e53f66de27582ca427b2dcf657e7f18c,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a = b && b == c)
        return 10;
    
    if (a = b && b == c)
        return 5;
        
    if (a != b && a != c)
        return 1;
    
    return 0;
}
"
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
50f3da72fdd9f01a0c7804b3c9c789cddd8d9b18,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (i = 0; i < num.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count*2 == num.length);            
    
}
"
6bc66f51e027f8e766055c5683b57b6d779c2d15,"public String withouEnd2(String str) 
{
if (str.length() <= 2) 
    return """";
return str.substring(1, str.length() - 1);
}
"
b1ebcb1c30766d8a77bc73f3bcdecfaa18e63176,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
    int rightSum = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
"
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
"
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}"
a6eca60d2ec41fba18ab610a87ee9c66cbb73d19,"public int findOdd(int[] nums, int index)
{
    biggestOdd = 1;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd == nums[j];
    return biggerOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
092a37234cccc894d13af9756eed95198aa41a1a,"ublic boolean isEverywhere(int[] nums, int val) {
	boolean result = true;
	for (int i = 0; i <=nums.length-2;i++)
	{
		if ( nums[i] != val && nums[i+1] != val)
			result = false;
	}
  	return result;
}
"
7c77e6e3fc1b988356518cad44b8ccc44e6c7032,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c){
            result = 10;
        }
        else if (b == c){
        	result = 20;
        }
     }
            
    return result;
}
"
64e6a1b1c2176532ea3545edbf85eecc952dbf18,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a;
    return diffOne == diffTwo;
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
"
c62602f27883f984fbc0551198122402edd6e05d,"public int[] shiftLeft(int[] nums)
{
    return int[];
}
"
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
"
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
"
528342efb0a38ace805355f9ecda4f69f0397a23,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
	if (a == 13)
    {
        return sum;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        int sum = a + b;
        return sum;
    }
    else
    {
        int sum = a + b + c;
        return sum;
    }
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
"
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
7779f17d79d550dbddfe995feba46928008c9d65,"public String without2(String str) 
{
    
    if (str.length() <= 2)
    {
        if (str.length() == 2)
        {
        	return """";
        }
        else
            return str;
    }
    else if (str.substring(0, 2) ==  (str.substring(str.length() - 2, str.length())))
    {
     	return str.substring(2, str.length());  
    }
    else 
    {  
      return str;  
    }
}
"
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
"
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
"
449c25168277fbecb5660eb70e7019afab36425e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
            return 0;
    }
    else if (speed <=80 && speed > 61)
    {
            return 1;
    }
    else
    {
            return 2;
    }
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
470829854090aa3651ae19d0c58c374cca8e169c,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        if (nums[i] > max)
        {
            max = nums[i];
        }
        if (nums[i] < min)
        {
            min = nums[i];
        }
    }
    return (sum - (min + max)) / (nums.length - 2);
}
"
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
0a4d7aee449450431db0efcda5856b22d973b605,"public String getSandwich(String str)
{
    if(str.length() > 10 &&
       str.substring(0, 5) == ""bread"" &&
       str.substring(str.length() - 6, str.length() - 1) == ""bread"")
    {
        return str.substring(5, str.length() - 6);
    }
    else {
        return str.substring(5, str.length() - 6);
    }
}
"
e503bcd53b6c1b8e1f5bceead47b945857b50e9a,"public int dateFashion(int you, int date)
{
    if ( you >= 8 && date >= 8)
    {
        return 2;
    }
    if ( you <= 2 && date <= 2)
    {
        return 0;
    }
     if ( you >= 8 && date <= 8)
    {
        return 1;
    }
   if ( you <= 8 && date >= 8)
    {
        return 1;
    }
    }
    else 
        return 1;
}
"
b6ba17f1e789afbf3ef81685a53e5e5f8cc3dfd0,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));	}
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
"
dc77d9f47e20012cfdff686d71cf058927245c62,"public int roundSum(int a, int b, int c)
    return round10(a) + round10(b) + round10(c));

public int round10(int num)
{
    int digit = num % 10;
	if (digit >= 5)
        return num = (10 - digit);
    return num - digit;
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
"
fd19ee70b6ed78dc3c5cf345b006e41ad230749d,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
4f020dcb2ebec419aa94d431533df15542e537ec,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
    return false;
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
28fa55b9521727c1d6984be94a51479b17a2ad86,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }else  (str.length() == 0){
	return ""@@"";
    }
        }
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
"
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
"
64e6a1b1c2176532ea3545edbf85eecc952dbf18,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a;
    return diffOne == diffTwo;
}
"
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
"
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
"
8fbb70b4ce6f9c55dcd5d47f50272f1685330601,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
            return true;
        else 
            return false;
    }
    if (isAsleep)
        return false;
}
"
d7633351c672f26ee19b79bf514fdb0837ec9cb2,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMorning && !isMom)
        return false;
    else
        return true;
}
"
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
"
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
"
62d31dc1d181609f1ad5028901c8db29d61ea2b8,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    else 
    {
        return (a +b);
    }
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
79f2da1916c858f4bd63251e6ec244aad4272418,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
    {
		return n;
    }
    else
    {
		return 0;
    }
}
public int noTeenSum(int a, int b, int c)
{  
    return (fixTeen(a) + fixTeen(b) +fixTeen(c)); 
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
"
3a2534fb0ac1dc3651141e9a0bd5b1830ff648bb,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""small ticket"";
        }
        else
        {
            return ""big ticket"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""small ticket"";
        }
        else
        {
			return ""big ticket"";
        }
    
    }
}  
"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
328f2f06f07e26aac03e4e4a6df016fc0c620fcc,"public int redTicket(int a, int b, int c)
{
      if (a == 2 && b == 2 && c == 2)
    return 10;
  if ( a == b && b == c)
    return 5;
  if ( a != b && a != c)
    return 1;
  else
    return 0;
}
"
a02eb75c4e00dfd8fa09a7d3de1220f22f7a8f27,"public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        return 0;
    }
    if (n == 15)
    {
        return 15;
    }
    if (n == 16)
        {
            return 16;
        }
}

"
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
"
23b5ec2ba8fe6b1ec171faaa28bcd140793480f8,"public int[] seriesUp(int n) {
  int[] result = new int[n * (n + 1) / 2];
  int i = 0;
  for (int j = 1; j <= n; ++j)
    for (int k = 1; k <= j; ++k)
      result[i++] = k;
  return result;
}"
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
"
50f3da72fdd9f01a0c7804b3c9c789cddd8d9b18,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (i = 0; i < num.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count*2 == num.length);            
    
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
1ef1d41cd720754161cc1b953d6c374d6349e857,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)

   return 10;

  if ( a == b && b == c)

    return 5;

  if ( a != b && a != c)

    return 1;

  else

    return 0;

}
"
493267658ead76f2221aae551e38a001ba5eab78,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep)
    {
        if (isMorning)
        {
            if (isMom)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        else
        {
            return true;
        }
    }
    else
    {
        return false;
    }
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
"
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
"
0bd7fe95ce9749e4f8a7edf4208f6c161ea14ca1,"public int countCode(String str)
{
    int x = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c')
        {
            if (str.charAt(i+1) == 'o')
            {
                if (str.charAt(i + 3) == 'e')
                {
                    x++;
                }
            }
        }
    }
    return x;
}
"
a040447a7a4d000d3f8dce6203fbc10a54cdf382,"public int blackjack(int a, int b)
{
    if (a>21)
    {
        a=0;
   		return a;
    }
    if (b>21)
    {
        b=0;
        return b;
    }
    if (a>b)
    {
     return a;   
    }
	else
	{	
    return b;
    }
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
0773313801a191baf1978ea9f3b612da5d247316,"public int caughtSpeeding(int speed, boolean isBirthday)
{
if (!isBirthday)
{
   if ( speed <= 60)
   
       return 0;
   
   else if ( speed > 60 && speed <= 80)
   
       return 1;
   
   else 
   
       return 2;
   
}
    if (isBirthday)
    {
        if ( speed <= 65)
   
       return 0;
   
   else if ( speed >= 65 && speed <= 85)
   
       return 1;
   
   else 
   {
       return 2;
   }
       
}
}
"
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
"
9f7cabb358a67a54ce58c64d4a9845fcc682c8e5,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if (speed <= 60) {
        return 0;
    }
        else if (speed > 60 && speed <81) {
            return 1;
        }
            else {
                return 2;
        }
    if (isBirthday);
    	 if (speed <= 65) {
             return 0;
         }
    else if (speed > 65 && speed < 86) {
        return 1;
    }
    else {
        return 2;
    }
}
       "
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
68c510e3ae2a5f68173421badd6c7e8d285e1fd9,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        return 0
    }
    else if (speed >= 61 && speed <= 80)
    {
        return 1
    }
    else if (speed >= 81)
    {
        return 2
    }
}
"
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
"
1adf1201d219d6cf2893ea40470b60c2a19806f6,"public int countClumps(int[] nums)
{
    int count = 0;
    int i = 0;
    
    while (i < nums.length)
    {
        int val = nums[i];
        i++;
        int length = 1;
        
        while (i < nums.length && nums[i] == val)
        {
            i++;
            length++;
        }
        if (length > 1);
        {
            count ++;
        }
    }
    return count;
}
"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
"
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
"
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}"
66d81d6a71405ccedc06586970c02dcccae77323,"public int[] fix45(int[] nums)
{
    int k;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(k = 0; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4)); k++)
            {
                k = k;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
226b5d8a7b8a50ea1a33a1983fecefe1ef7fa72b,"public boolean canBalance(int[] nums)
{
	int leftNum = 0;
	int rightNum;
	for(int i = 0; i < nums.length - 1; i++)
    {
		leftNum += nums[i];
    }
	rightNum = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(leftNum == rightNum)
        {
			return true;
        }
		leftNum -= nums[i];
		rightNum += nums[i];
	}
	return (leftNum == rightNum);
}"
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
"
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
"
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
"
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
"
c1dc534bc134ac150f2499c964686d5c7968c85a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        System.out.printIn(""0"");
    }
    else if (speed >= 61 && <= 80)
    {
        System.out.printIn(""1"")
    }
    else if (speed >= 81)
    {
        System.out.printIn(""2"")
    }
    
}
"
9a762998ef3f0abdaeaa9e34d97d58d792cb6be4,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMom)
        return true;
    return (!isMorning);
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
88111a1b682c4e3263232c7e42baecf389dd8a17,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0)
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
    else
    {
    	return 0;
    }
}
"
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
"
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
"
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
"
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
"
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
684d16d1fe00b522bc43f3c44174bcb4ccab14db,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && b == c && a == c)
    {
        result = 20;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    else
    {
        result = 10;
    }
    return result;
}
"
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
"
b97e82329cb0c23433c468d538ca5b604bfcba09,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
     	if (nums[i] % 2 == 1 && nums[i] > largestOdd)
        {
            largestOdd = nums[i];
        }
        if (nums[i] == 0)
        {
         	nums[i] = largestOdd;   
        }
    }
    return nums;
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
042c7539e7bbc603f9d999c837f0b4486eeef11a,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n != 15 && n != 16)
    	if (n <= 19 && n >= 13)
        	return 0;
    return n;
}
"
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
"
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
"
c72936a1839694da8df5554d66db79bf67bec60c,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (isBirthday)
    {
        speed = speed + 5
    }
	if (speed <= 60)
	{
    	return 0;
	}
    
	if (speed >= 61 && speed <= 80)
	{
    	return 1;
	}
    
	if (speed >= 81)
	{
    	return 2;
	}
	
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
af20cd1af1156a04c4ca530fa1bda65b9cd57682,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning) 
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
"
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
"
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
"
0cb8c025b705f4587b7d469c16c902e554391541,"public int[] frontPiece(int[] nums)
{
    return frontPiece;
}
"
d8b584308e862ca1b8b1d55be4b3bdee1015b2ad,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars >= 40)
        {
         	return ""true"";   
        }
    }
    else if (cigars >= 40 && cigars <= 60)
    {
     	return ""true"";   
    }
    else
    {
    	return ""false"";    
    }
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
"
f6cfdfcc045d3ced7634c7a0afcbe4afd98d380e,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
        n = 0;
    
    return n;
}
"
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
"
1dc0a9281fe5c33922d59a28a48a7003fd59765d,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        retrun = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
"
787a85062f05f6204afae52da91cfbe56d85e07c,"public String zipZap(String str)
{
    String newString = """";
    for (int i = 0; i < str.length(); i++) 
    {
        if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p') 
        {
            newString += str.charAt(i) + """" + str.charAt(i + 2);
            i = i + 2;
        }
        else 
        {
            newString += str.charAt(i);
        }
    }
    return newString;
}
            

"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
8dd0ea4aa40c9c74b0f4a3dddd8ecdfabf898186,"public int sortaSum(int a, int b)
{
    sum = a+b;
    if (sum>=10&&sum <=19)
    {
        return 20;
    }
    else
    {
        return sum;
    }
    
}
"
c8a0be59dec0a41242ebf952c04bb2e31259d489,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
51d726f3ba7d0bdf6df41f275be7d3e5ae0b21ed,"public String getSandwich(String str)
{
    int firstBread = -1;
    int lastBread = -1;
    for (int i = 0; i < str.length() - 5; i++)
    {
        if (str.substring(i, i+5).equals(""bread""))
        {
            firstBread = i;
            i = str.length();
        }
    }
    for (int j = str.length() - 5; j > 0; j--)
    {
        if (str.substring(j, j+5).equals(""bread""))
        {
            lastBread = j;
            j = 0;
        }
    }
    if(firstBread != -1 && lastBread != -1 && firstBread != lastBread)
        return str.substring(firstBread + 5, lastBread);
    return """";
}
"
828a3b0db925adca159220f3e9faf2fb4e24446a,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21){
        return a;
    }else if (b > a && b <= 21){
        return b;
    }else if (a > 21 && b < 22){
        return b;
    }else if (b > 21 && a < 22){
        return a;
    }else{
        return 0;
    }
}
"
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
"
f87b721de5fa4f5ff50d17d9cca6a2ce7875ebf3,"public int[] zeroMax(int[] nums) {

  int max = 0;

   

  for (int i = nums.length-1; i >= 0; i--) {

    if (nums[i] % 2 != 0)

      max = Math.max(max, nums[i]);

    if (nums[i] == 0)

          nums[i] = max;

  }

  return nums;

}

"
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
"
888a63dff1f59fa6a944754dead51bf5ff29d397,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}"
a2c77eb2341d2107484dea64721c8eb1fb2b5c9b,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else if (c == 13)
    {
    	sum = a + b;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum;
    }
}
"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
"
2f0a2b01b8d36b9b41d35269fb9c59a0cd367b3b,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int lastDigit = num % 10;
    if (lastDigit >= 5)
    {
        int roundUp = num + (10 - lastDigit);
        return roundUp;
    }
    else
    {
        int roundDown = num - lastDigit;
        return roundDown;
    }
}"
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
"
493267658ead76f2221aae551e38a001ba5eab78,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep)
    {
        if (isMorning)
        {
            if (isMom)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        else
        {
            return true;
        }
    }
    else
    {
        return false;
    }
}
"
6bc66f51e027f8e766055c5683b57b6d779c2d15,"public String withouEnd2(String str) 
{
if (str.length() <= 2) 
    return """";
return str.substring(1, str.length() - 1);
}
"
7c77e6e3fc1b988356518cad44b8ccc44e6c7032,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c){
            result = 10;
        }
        else if (b == c){
        	result = 20;
        }
     }
            
    return result;
}
"
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
"
b7a9395b99fe850b2082792560bb36ab00860020,"public int redTicket(int a, int b, int c)
{
    int result = 0;
    if (a == 2 && b == 2 && c == 2)
        result = 10;
    else if (a == b && b == c)
        result = 5;
    else if (a != b && a != c)
        result = 1;
    else
        result = 0;
    return result;
}
"
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
a05e5d98a96c772e1afad34a0ae82871a6e741d0,"public String zipZap(String str)
{
    int num = 0;
    for (int i = 2; i < str.length(); i++)
    {
        if (str.charAt(num) == 'z' && str.charAt(i) == 'p')
        {
            str.replace(str.substring(num, i), ""zp"")
        }
        num += 1;
    }
    return str;
}
"
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
"
1d6179ccdc1c6fce139143f569025a679c1301a0,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        	largeOdd == nums[i];
        if (nums[i] == 0)
        	nums[i] == largeOdd;
    }
    return nums;
}"
bb771f79da2e164515e0325c84eaa2dbd392e69b,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = 0;
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
"
97df39519ca1ef6b02ae307ac2c9f6c6f42d2e77,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
bb95327d0292272d65dd996e6aa6f61c87319399,"public boolean endOther(String a, String b)
{
    if a.length() == ""a"" + ""b""
        return b.substring(0,1).toLowerCase();
}
"
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
"
150674542f779f0f080fa72fb20d5088fbe7f75e,"public int sortaSum(int a, int b)
{
    int sum = 0;
    sum = a + b;
    if (sum >= 10 && sum <= 19){
        sum = 20;
    }
    return sum;
}
"
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
76a3f2319da117864b8ca1165daa8eb7ace3e99c,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else 
        {
            return false;
        }
    else 
    {
        return true;
    }
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
"
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
"
67b31d44e53f66de27582ca427b2dcf657e7f18c,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a = b && b == c)
        return 10;
    
    if (a = b && b == c)
        return 5;
        
    if (a != b && a != c)
        return 1;
    
    return 0;
}
"
0a9dcd12a12791fe49d782b736769ace72b0d2ed,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else
    {
        if (b == 13)
        {
            return a;
        }
        else
        {
             if (c == 13)
                {
                    int AB = (a + b);
                    return AB;
                }
                else
                {
                    int ABC = (a + b + c);
                    return ABC;
                }
        }
    }
}
"
a07a8703a9cafd5f2dd00f03a9d186fc390e15f9,"public String zipZap(String str)
{
    String s = """";
    int x = 0;
    int y = 0;
    if (str.length() < 3) {
        return str;
    }
    else {
        for (int i = 0; i < str.length() - 2; i++) {
            if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p') {
                x++;
            }
        }
    	while (s.length() != str.length() - x && y < str.length() - 2) {
            if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p') {
                s = s + ""zp"";
                y = y + 2;
            }
            else {
                s = s + str.charAt(y);
            }
            y++;
        }
    }
    return s;
            
        
}
"
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
"
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
557026f064a89be4df627a611b8a898f7a2fc2f3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if ((nums[i] != val) || (nums[i + 1] != val))
        {
            return flase;
        }          
        
    }
     return false;
}
"
44f220b58843152b2c37e892e70f7c52224b3df7,"public int[] zeroMax(int[] nums)
{
    int max = 0; 
    for (int i = 0; i < nums.length - 1; i++) {
        if ( nums[i] == 0) {
            for (int k = i + 1; k <= nums.length - 1; k++) {
                if (nums[k] > max && nums[k] % 2 == 1) {
                    max = nums[k];
                }
                else {
                    nums[k] = max; 
                max = 0;
                }
                 
            }
        }
    }
    return nums; 
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
12941eb615aae98f65aa36224718e48e3383968c,"public int loneSum(int a, int b, int c)
{
    int x = a + b + c;
    if (a == b)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == c)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return a;
        }
    }
    else if (a == c)
    {
        if (b == c)
        {
            return 0;
        }
        else
        {
            return b;
        }
    }
    else
    {
        return x;
    }
}
"
22db1882535d71f9010b430616081de4d479a931,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
        if (c == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
"
b89935cd76575e88ea3d850c3c4d704f4a06bb09,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b==13)
    {
        return a;
    }
    else if (c==13)
    {
        return a+b;
    }
    else
    {
        return a+b+c;
    }
}
"
fdd9c7578eae0199293f5c67050555c877e59579,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
    }
                           
    return (sum - max - min) / (nums.length - 2);
}
"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
e5f4a1d12a2732c56ffa6463cfe4561bd754d8e2,"public String atFirst(String str)
{
    if (str.length >= 2)
    {
        return (str.substring(0,2));
    }
    else
    {
        return (str + ""@"");
    }
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
13e7ebf5b1cb8a39e420140214502a74809a7fad,"public int countCode(String str)
{
    int num = 0;
    for(int i = 0; i < str.length() - 3; i++) {
        if(str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i + 3) == 'e')
            num++;
    }            
    return num;
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}"
4e250d40f6c8c4899a3eb79ea695e918be5d8a56,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
    	else if (nums[i] == 7 && nums[i + 2] == 7)
            return true;
    return false;
}
"
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
"
b97e82329cb0c23433c468d538ca5b604bfcba09,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
     	if (nums[i] % 2 == 1 && nums[i] > largestOdd)
        {
            largestOdd = nums[i];
        }
        if (nums[i] == 0)
        {
         	nums[i] = largestOdd;   
        }
    }
    return nums;
}
"
a2a2884e41048d06a4cb030480f7393277c7ec9a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + nums[i];
        if (nums[i] == 13)
        {
            sum = sum - (13 = nums[i + 1]));
        }
    }
    return sum;
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
2b976fe20b1e401744827a000d91d5535db7d93b,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <=90);
}
"
95bc23f4a1f6b717433734c1ec1d9db84c09782c,"public int countEvens(int[] nums)
{
    int i = 0;
    for (int number: nums)
    {
        if (number % 2 == 0)
        {
            i++;
        }
    }
    return i;
}
"
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
"
685a1f07697cb907cefcecfa8cf5158825e90e14,"public int countCode(String str)
{
    int length = str.length() - 2;
    int num = 0;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == c && str.charAt(i + 1) == o
            && str.charAt(i + 3) == e)
        {
            num = num + 1;
        }
    }
    return num;
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
"
2216bc569ee8caff75d3702a81475722e85c8551,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 || n == 16)
            return n;
        return 0;
    //return n;
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
d0e7e4f01d1bd84602edf6ae34c0d764c24c4815,"public int countCode(String str)
{
    int i = 0;
    int time = 0;
    int l = str.length() - 3;
    
    while (i < l)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt( i 			+3 == 'e')
            {
                time++;
                i += 4;
            }
            i++;
            }
            return time;
        
}
"
092a37234cccc894d13af9756eed95198aa41a1a,"ublic boolean isEverywhere(int[] nums, int val) {
	boolean result = true;
	for (int i = 0; i <=nums.length-2;i++)
	{
		if ( nums[i] != val && nums[i+1] != val)
			result = false;
	}
  	return result;
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
"
dc1c18a727a472113299aaf5bc76ffcf6180ee19,"public String[] fizzBuzz(int start, int end)
{
    end--;
    String[] result = new String[end - start];
    
    for (int i = 0; i < end; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
332c6ec5c84a4b48b155a3ce7e3c41195bbaf8a1,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
ec440fd647af59cbea91a966ccc1596f685d24fa,"public int blackjack(int a, int b)
{
   if ( a > 21 && b > 21)
   {
      return 0; 
   }
    if (21 - b > a)
    {
        return a;
    }
    else 
        return b;
}
"
c384cb38b2cffa92ee7bc55feafe1c65d7c5d33e,"public int countCode(String str)
{
int count = 0;

for(int i = 0; i < str.length() - 3; i++)
{
if(str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
count++;
}

return count;  
}
"
8243c75a69e18cb6c9f02b072995835b37129ed9,"public boolean sameEnds(int[] nums, int len) {
boolean result = true;
int range = len;
for (int i =0; i <range;i++)
if (!(nums[i] == nums[nums.length - range + i]))
result = false;
return result;
}
"
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
"
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
"
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
"
ba8cfb4cad91f6a68d58ca4ab3a88d035f324a8c,"public int sortaSum(int a, int b)
{
    if ( a + b >= 10 && a + b <= 19) {
        retun 20;
    }
    else {
        return a + b;
    }
}
"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
80b80a660b8113337e5dc1d8d8d78cd8c918c58c,"public int[] seriesUp(int n)
{
    int[] result = new int[n*(n+1)/2];
    int m = 0;
    for (int i = 0;i<=n;i++)
    {
        for (int j = 1;j<i;j++, m++)
        {
            result[m] = j;
        }
        return result;
    }
}"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
eadc5df754b07dbc81ee348ee4bbd34ce3b39f20,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
        return 20;
    else
        return (a + b);
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
"
0f7eb7c6740ccd257c3f6da081cc3f753e5a2516,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int clumpSize = this.sizeClump(nums, nums[i], i);
                i = i + clumpSize;
                counter++;
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int nextNum = 0;
    while (nums[start] == initValue)
    {
        nextNum++;
    }
    return nextNum;
}"
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}"
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
"
b7a9395b99fe850b2082792560bb36ab00860020,"public int redTicket(int a, int b, int c)
{
    int result = 0;
    if (a == 2 && b == 2 && c == 2)
        result = 10;
    else if (a == b && b == c)
        result = 5;
    else if (a != b && a != c)
        result = 1;
    else
        result = 0;
    return result;
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
"
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
"
02c1f791fb8f450361e3bba08c084c74102eeb61,"public int countEvens(int[] nums)
{
    for (num: int[] nums)
    {}
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
"
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
"
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
"
c093cac600fc00c29dfe5c59c8ab78dddb9a3f95,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count >= nums.length - 1);            
    
}
"
9ebe46b9e7a4b3cb16a4423e4af7f17722965213,"public int noTeenSum(int a, int b, int c)
{
    int sum = (fixTeen(a)+fixTeen(b)+fixTeen(c));
        return sum;
}

public int fixTeen(int n)
{
    if (n>=13&&n<=19)
    {
        if (n==15||n==16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }
}
"
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
95315d4f40fee982b6719168e94180e03704160d,"public int sum3(int[] nums)
{
   return (nums[0] + nums[1] + nums[2]); 
}
"
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
"
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
"
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
"
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
"
089ca3166be0e9056768d2bb5712cd5bd123b58a,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[3]);
}
"
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
2efc3b1d0acaa60b452bf611f88e4f3873fd00aa,"public boolean isEverywhere(int[] nums, int val)
{
    int b = 0;
    for (int i = 1; i < nums.length - 1; i++) {
        if (nums[i] == val || nums[i-1] == val ||
            nums[i+1] == val) {
            	b++;
        }
    }
    return b == nums.length - 2;
}
"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
fdd9c7578eae0199293f5c67050555c877e59579,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
    }
                           
    return (sum - max - min) / (nums.length - 2);
}
"
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
"
5f47fb8c001a1322e1c2f9dc302a3c4b5c3adef8,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21)
    {
        return a;
    }
    else if (b > a && b <= 21)
    {
        return b;
    }
    else if (a > 21 || b > 21)
    {
        return 0;
    }
    else if (a > b && b > 21)
    {
        return a;
    }
    else if (b > a && a > 21)
    {
        return b;
    }
    return 0;
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
"
4a9806e5d979032eadab4c8d23dec29284441f09,"public int greenTicket(int a, int b, int c)
{	
   	int result = 10;
    if (a != b && b != c && a != c)
    {    
        result = 0;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    return result;
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
"
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
"
e93b94f6835046c42b16cfe507547d10945a4c3a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++) {
		if ((nums[i-1] == val) && 
            (nums[i] == val) && nums[i+1] == val) {
         	 return true;
        }
        else {
			return false;
        }
    }
}
"
d6ecef2688242348be94ae9cf4d683dbfee353d2,"public int countClumps(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
        if (nums[i] = nums[i+1])
        {
            
            count += 1;
            
        }
        
    }
    
    
    return count;
    
    
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
"
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
582b917e4c3a6c8bdf35c427341ab5ddf0ac9d24,"public int sortaSum(int a, int b)
{
    if(a + b >= 10 || a + b <= 19)
    {
    	return a + b;
    }
    
    else 
    {
    	return 20;
    }
}
"
236d7050d3c0a39f9f44cd0b1b6032d1812a8f4a,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i+1] != 5)
        {
            for (int j = 0; !(nums[j] == 5 && (j == 0 || j > 0 && 					nums[j-1] != 4));; j++);
            {
                nums[j] = nums[i + 1];
                nums[i+1] = 5;
            }
        }
    }
    return nums;
}
"
428a4330008980c438326abad1def09257e6d2d1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a > b && a < 21)
    {
        return a;
    }
    else (b > a && b < 21)
    {
     	return b;   
    }
}
"
085c90128653ad2d02262a5079a336364fa0a7cb,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || b==c || a == c)
        return 10;
    else 
        return 0;
}
"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
"
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
bb95327d0292272d65dd996e6aa6f61c87319399,"public boolean endOther(String a, String b)
{
    if a.length() == ""a"" + ""b""
        return b.substring(0,1).toLowerCase();
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
79c58a491312a133e68b505957485ca6a71d8f83,"public int noTeenSum(int a, int b, int c)
{
	fixTeen(a);
    fixTeen(b);
    fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if ( a >= 13 && a <= 19 && a != 15 && a !=16){
        a = 0;
        return a;
    }
    if ( b >= 13 && b <= 19 && b != 15 && b !=16){
        b = 0;
        return b;
    }
    if ( c >= 13 && c <= 19 && c != 15 && c !=16){
        c = 0;
        return c;
    }
    
}
"
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
"
b1ebcb1c30766d8a77bc73f3bcdecfaa18e63176,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
    int rightSum = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
66d81d6a71405ccedc06586970c02dcccae77323,"public int[] fix45(int[] nums)
{
    int k;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(k = 0; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4)); k++)
            {
                k = k;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
a354fe94859e5967d2c6bdce8fdb12e90a24f48c,"public int sortaSum(int a, int b)
{
    if(a + b >= 10 || a + b <= 19)
    {
    	return a + b;
    }
    
    else 
    {
    	return 20;
    }
}
"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
"
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
42e52e00ef12b244eddffd0c9e1678918659c4e7,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
2bc6224c6d864641adc76e92803ba8b015954d7f,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
67b31d44e53f66de27582ca427b2dcf657e7f18c,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a = b && b == c)
        return 10;
    
    if (a = b && b == c)
        return 5;
        
    if (a != b && a != c)
        return 1;
    
    return 0;
}
"
03963c180ede47baf3cb2a34f74b6ff99ed0fee1,"public int[] zeroMax(int[] nums) {
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--) {
        if (nums[i] % 2 == 1 && nums[i] > largestOdd)
            largestOdd = nums[i];
        if (nums[i] == 0)
            nums[i] = largestOdd;
    }
    return nums;
}"
a05e5d98a96c772e1afad34a0ae82871a6e741d0,"public String zipZap(String str)
{
    int num = 0;
    for (int i = 2; i < str.length(); i++)
    {
        if (str.charAt(num) == 'z' && str.charAt(i) == 'p')
        {
            str.replace(str.substring(num, i), ""zp"")
        }
        num += 1;
    }
    return str;
}
"
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
d5ce442602f709f5b69882191e66e3dbc3382576,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21)
    {
        return a;
    }
    else if (b > a && b <= 21)
    {
        return b;
    }
    else if (a > 21 || b > 21)
    {
        return 0;
    }
}
"
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
"
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
"
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
f6cfdfcc045d3ced7634c7a0afcbe4afd98d380e,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
        n = 0;
    
    return n;
}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
8ea314af4ea3aa3a6d57f2c90ff7786608a23927,"public int noTeenSum(int a, int b, int c)
{
	int numA = a;
    int numB = b;
    int numC = c;
    return (fixTeen(numA) + fixTeen(numB) + fixTeen(numC));
}

public int fixTeen(int n)
{
    int num = n;
    if (num == 15 || num == 16)
    {
        return num;
    }
    else if (num >= 13 && num <= 19)
    {
        return 0;
    }
    else
    {
        return num;
    }
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
"
11e598f7e57d128136db1dfc84b08cbb84493470,"public String atFirst(String str)
{	
    int n = str.length();
    for (int = 0; i < n; i++)
    {
    	if (n > 2)
    	{
     		return str.substring(0, 2);
    	}
    	else
    	{
       	 	return ""@@"";
    	} 
    }
}
"
bc09c16b358c849617c92c4ea257b6ef268a29a1,"public int sortaSum(int a, int b)
{
    if (10 <= a + b && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a+b;
    }
    
    
}
"
47f3a74a254afbf6c445487eff4eb1c0df9e20df,"public boolean has77(int[] nums)
{
    int blob = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (i < nums.length - 2)
        {
            if (nums[i] == nums[i + 1] && nums[i] == 7)
        	{
            	blob = blob + 100;
        	}
            if (nums[i] == nums[i + 2] && nums[i] == 7)
            {
                blob = blob + 100;
            }
        }   
        else if (nums[i] == nums[i + 1] && nums[i] == 7)
        {
            blob = blob + 100;
        }
        else
        {
            blob = blob + 1;
        }
    }
    return blob >= 100;
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
1d6179ccdc1c6fce139143f569025a679c1301a0,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        	largeOdd == nums[i];
        if (nums[i] == 0)
        	nums[i] == largeOdd;
    }
    return nums;
}"
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
0a4d7aee449450431db0efcda5856b22d973b605,"public String getSandwich(String str)
{
    if(str.length() > 10 &&
       str.substring(0, 5) == ""bread"" &&
       str.substring(str.length() - 6, str.length() - 1) == ""bread"")
    {
        return str.substring(5, str.length() - 6);
    }
    else {
        return str.substring(5, str.length() - 6);
    }
}
"
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
5751db3148c8805ad9e482b9dedd7ade5357ba47,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
    {
        return str.substring(first + 5, last);
    }
    else
    {
    return """";
    }
}
"
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
22d46f636a2ecaa8a80e55e579500a4ff8e2a188,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            nums[i+1] = 5;
        }
    }
    
    return nums;
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
33bf743a9707fb874e5447648c48e307607e03de,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 1) == 'co' &&
            str.substring(i + 3) == 'e')
        {
            count = count + 1;
        }
    }
    return count;
}
"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
6bb0ee0ad18b7740337fbdd1e749d82571043674,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
"
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
"
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
"
06be09e2d8d4ddfe4333697a3feaadf8e8dc3077,"public int countClumps(int[] nums)
{
    int num = 0;
    boolean still = false;
    boolean clump = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i - 1])
        {
            clump = true;
        }
        else if (nums[i] == nums[i + 1])
        {
            still = true;
            continue;
        }
        else
        {
            num++;
        }
    }
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
23b5ec2ba8fe6b1ec171faaa28bcd140793480f8,"public int[] seriesUp(int n) {
  int[] result = new int[n * (n + 1) / 2];
  int i = 0;
  for (int j = 1; j <= n; ++j)
    for (int k = 1; k <= j; ++k)
      result[i++] = k;
  return result;
}"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
bf382bc1d92127f137bb550a9abdea9839167f1f,"public int[] shiftLeft(int[] nums)
{
    int shift = nums[0];
    if (nums.length >= 2)
    {
        //int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
f53fe967f0579e586ca2895910f4b0362cabe181,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
f6cfdfcc045d3ced7634c7a0afcbe4afd98d380e,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
        n = 0;
    
    return n;
}
"
0f838818781093168101b362c3ceaa5ac771a653,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 2;
}
"
bb95327d0292272d65dd996e6aa6f61c87319399,"public boolean endOther(String a, String b)
{
    if a.length() == ""a"" + ""b""
        return b.substring(0,1).toLowerCase();
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
"
b6ba17f1e789afbf3ef81685a53e5e5f8cc3dfd0,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));	}
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
5751db3148c8805ad9e482b9dedd7ade5357ba47,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
    {
        return str.substring(first + 5, last);
    }
    else
    {
    return """";
    }
}
"
dead7e5e377079599c11bb673bf7c1248fef60fc,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if ( a == b && b == c)
    {
        sum = a;
    }
    else if (a == b || a == c)
    {
        sum = sum - a;
    }
    else if (b == c)
    {
        sum = sum - b;
    }
    return sum;
}
"
79f2da1916c858f4bd63251e6ec244aad4272418,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
    {
		return n;
    }
    else
    {
		return 0;
    }
}
public int noTeenSum(int a, int b, int c)
{  
    return (fixTeen(a) + fixTeen(b) +fixTeen(c)); 
}
"
fae2f7dfe0c7f6a36eed081761f1d04f77387b4b,"

    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }

"
a457e813b62121d4bee7f0cd63ba678e9441866c,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c && b == c){
            result = 10;
        }
     }
    else if ( c == b){
        result == 10;
    }
        
            
    return result;
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
3a244a1b4e96b9b233338061c4229807fb89777c,"public int countCode(String str)
{
    int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
332035fab0653a2a928a8daf9a5e4b0b360534a3,"public boolean twoTwo(int[] nums)
{
    int q = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums.length == 1)
        {
            return true;
        }
        if (nums[i] == 2)
        {
            if (nums.length == 1)
            {
                return false;
            }
        else if (i == 0)
        {
            if (nums[i + 1] == 2)
            {
                q = q + 0;
            }
            else
            {
                q = q + 100;
            }
        }
        else if (i == nums.length - 1)
        {
            if (nums[i - 1] == 2)
            {
                q += 0;
            }
            else
            {
                q += 100;
            }
        }
        else
        {
            if (nums[i - 1] == 2 || nums[i + 1] == 2)
            {
                q += 0;
            }
            else
            {
                q += 100;
            }
        }
        }
    }
    if ( q >= 100)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
1202d346fcf0db46d6a29cff9b13366969ee2df1,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0,2));
    }
    else if (str.length() == 1)
    {
        return (str + ""@"");
    }
    else
    {
        return (""@@"");
    }
}
"
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
"
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
"
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
cd80603c865a5f537dae1c802b4d53681015978e,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
eadc5df754b07dbc81ee348ee4bbd34ce3b39f20,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
        return 20;
    else
        return (a + b);
}
"
2ee7d366ef45e04675e68bd5cfd425ac0862af68,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else
    {
		return ""@@"";
    }

  }
"
4690b3990e2eb6dd080ba258226248164f82da78,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh)
        {
            clumps++;
        }
    }
    return clumps;
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
2554504cf73dcc772aa6c40d5e1c117584eceb44,"public int sum13(int[] nums)
{
    int total = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i > 0)
        {
            if (nums[i] != 13 && nums[i - 1] != 13)
            {
                total += nums[i];
            }
        }
        else
        {
            if (nums[i] != 13)
            {
                total += nums[i];
            }
        }
    }
    
    return total;
}
"
490ca1a37dcda41e77316b93a43e5fada6c183d5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
    }
    if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
b16439cf6ef5c619010c64a8fb33444995f538e6,"public String plusOut(String str, String word)
{
    String returnString = """";
    int lastIndex = str.indexOf(word);
    int i = lastIndex;
    
    while (i < str.length())   
    {
        if (i == str.indexOf(word, lastIndex))
        {
            returnString = returnString + word;
            lastIndex = i;
            i += (word.length() - 1);
        }
        
        else
        {
            returnString = returnString + ""+"";
            i++;
        }
    }
	return returnString;
}
"
ec7f457115687180217c5031a741ed0ee5198ec6,"public int noTeenSum(int a, int b, int c)
{
	int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
        return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
    }
}
"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
d9d0af4a86d3d806a73729146509fcd884212bbe,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 && (a + b) <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
"
bb819a051a15f625b5912634652b195b464f7095,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length + 1 < nums.length - 2)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
"
0a4d7aee449450431db0efcda5856b22d973b605,"public String getSandwich(String str)
{
    if(str.length() > 10 &&
       str.substring(0, 5) == ""bread"" &&
       str.substring(str.length() - 6, str.length() - 1) == ""bread"")
    {
        return str.substring(5, str.length() - 6);
    }
    else {
        return str.substring(5, str.length() - 6);
    }
}
"
04fc4021576eaece15c0484d4f837b6ea46138e0,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] == 5 && i == 0 || 
            nums[i] == 5 && nums[i - 1] != 4) {
            int positionOf5 = i; 
        }
        for (int k = 0; k < nums.length;k++) {
            if (nums[k] == 4 && nums[k+1) != 5) {
                int hold = num[k];
                nums[k + 1] = 5;
                nums[positionOf5] = hold; 
                break; 
            }
        }
    }
    return nums; 
}
"
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
"
1f392835abe1515bae3d0a8fcfedc983a40383fb,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
		return 0;
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
66d81d6a71405ccedc06586970c02dcccae77323,"public int[] fix45(int[] nums)
{
    int k;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(k = 0; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4)); k++)
            {
                k = k;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
8ea314af4ea3aa3a6d57f2c90ff7786608a23927,"public int noTeenSum(int a, int b, int c)
{
	int numA = a;
    int numB = b;
    int numC = c;
    return (fixTeen(numA) + fixTeen(numB) + fixTeen(numC));
}

public int fixTeen(int n)
{
    int num = n;
    if (num == 15 || num == 16)
    {
        return num;
    }
    else if (num >= 13 && num <= 19)
    {
        return 0;
    }
    else
    {
        return num;
    }
}
"
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
"
b1cd225c96f83cf234170ea444a1959fbfd4bcde,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    if (b == 13)
        return a;
    if (c == 13)
        return (a + b);
    return (a + b + c);
}
"
51d726f3ba7d0bdf6df41f275be7d3e5ae0b21ed,"public String getSandwich(String str)
{
    int firstBread = -1;
    int lastBread = -1;
    for (int i = 0; i < str.length() - 5; i++)
    {
        if (str.substring(i, i+5).equals(""bread""))
        {
            firstBread = i;
            i = str.length();
        }
    }
    for (int j = str.length() - 5; j > 0; j--)
    {
        if (str.substring(j, j+5).equals(""bread""))
        {
            lastBread = j;
            j = 0;
        }
    }
    if(firstBread != -1 && lastBread != -1 && firstBread != lastBread)
        return str.substring(firstBread + 5, lastBread);
    return """";
}
"
bd4ab1662bb8f09f26dc5dd978ba13826af43bbe,"public int countCode(String str)
{
 int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
"
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
"
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
"
a767440796f740efacb74e1a68a50c6ef184a501,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length - 1; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
dca1f726e64da2460020f1bbac55668502eddba7,"public int roundSum(int a, int b, int c)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
    
}

public int round10(int num)
{
    return (round10(a) + round10(b) + round10(c));
    
}
"
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
c0e74847daded5db86a45f95da024ec482c4f9a4,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19}
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
"
dc77d9f47e20012cfdff686d71cf058927245c62,"public int roundSum(int a, int b, int c)
    return round10(a) + round10(b) + round10(c));

public int round10(int num)
{
    int digit = num % 10;
	if (digit >= 5)
        return num = (10 - digit);
    return num - digit;
}
"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
"
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
"
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
092a37234cccc894d13af9756eed95198aa41a1a,"ublic boolean isEverywhere(int[] nums, int val) {
	boolean result = true;
	for (int i = 0; i <=nums.length-2;i++)
	{
		if ( nums[i] != val && nums[i+1] != val)
			result = false;
	}
  	return result;
}
"
a07a8703a9cafd5f2dd00f03a9d186fc390e15f9,"public String zipZap(String str)
{
    String s = """";
    int x = 0;
    int y = 0;
    if (str.length() < 3) {
        return str;
    }
    else {
        for (int i = 0; i < str.length() - 2; i++) {
            if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p') {
                x++;
            }
        }
    	while (s.length() != str.length() - x && y < str.length() - 2) {
            if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p') {
                s = s + ""zp"";
                y = y + 2;
            }
            else {
                s = s + str.charAt(y);
            }
            y++;
        }
    }
    return s;
            
        
}
"
6bc66f51e027f8e766055c5683b57b6d779c2d15,"public String withouEnd2(String str) 
{
if (str.length() <= 2) 
    return """";
return str.substring(1, str.length() - 1);
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
c64c9e9c0a786ef3732a68209a390d30d8284fd4,"public int dateFashion(int you, int date)
{
   if ((you >= 2 || date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 || date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
e2468a1fbac0f816c4df8538f0af6626551638b0,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
97df39519ca1ef6b02ae307ac2c9f6c6f42d2e77,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}"
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
"
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
"
4e250d40f6c8c4899a3eb79ea695e918be5d8a56,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
    	else if (nums[i] == 7 && nums[i + 2] == 7)
            return true;
    return false;
}
"
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
"
23b5ec2ba8fe6b1ec171faaa28bcd140793480f8,"public int[] seriesUp(int n) {
  int[] result = new int[n * (n + 1) / 2];
  int i = 0;
  for (int j = 1; j <= n; ++j)
    for (int k = 1; k <= j; ++k)
      result[i++] = k;
  return result;
}"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
532a012b0ec202d27262b383dc13089aef7e1e3b,"public int dateFashion(int you, int date)
{
   if ((you >= 2 && date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 && date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
a02eb75c4e00dfd8fa09a7d3de1220f22f7a8f27,"public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        return 0;
    }
    if (n == 15)
    {
        return 15;
    }
    if (n == 16)
        {
            return 16;
        }
}

"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
076375a7de31fac4f71067d46b002b33e9533045,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning){
        if (isMom){
            return true;
        }
        return false;
    }
    if (isAsleep){
        return false;
    }
    return true;
}
"
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
"
af20cd1af1156a04c4ca530fa1bda65b9cd57682,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning) 
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
63d94094b3bd3e432c48601fe1cde209664933eb,"public int loneSum(int a, int b, int c)
{
	if (a==b || b==c)
    {
        return c;
    }
	else if (a==c)
    {
        return b;
    }
    else 
    {
    	return a + b + c;
    }
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
d17244a79757f570de9d8170c3085ee0f6678c21,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom && isAsleep)
        {
            return true;
        }
        else if (isMom && !isAsleep)
        {
            return false;
        }
        else if (!isMom && isAsleep)
        {
            return false;
        }
        else if (!isMom && !isAsleep)
        {
            return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return;
}"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
70e8fe1e1559c1588960e28f03cfb0569868a17f,"public boolean evenlySpaced(int a, int b, int c)
{
    if ((Math.abs(a - b) == Math.abs(b - c)) || (Math.abs(a - c) == Math.abs(b -a)))
    {
        return true;
    }
    else
    {
        return false;
    }
        
}
"
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
41c8da13b33e4f2c7ae68912df33bf871bfd1952,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = n;
    for (int i =0; i <n ;i++)
    {
        if (!(nums[i] == nums[nums.length - range + i]))
		result = false;
    }

}
"
5b9eb535280570f293684ef95c107bc80160a334,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = len;
	for (int i =0; i <range;i++)
    {
		if (!(nums[i] == nums[nums.length - range + i]))
        {
			result = false;
        }
    }
return result;
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
"
c32e8df18759f85c9ca9cc1ff3051aa396bf5a33,"public boolean evenlySpaced(int a, int b, int c)
{
    int[3] arrInOrder;
    arrInOrder[0] = a;
    arrInOrder[1] = b;
    arrInOrder[2] = c;
    
    int small;
    int med, big;
   /**
    if ((a > b) && (a > c)) // if a is the biggest
   {
		if (b > c)
        {
            big = a;
            med = b;
            small = c;
        }
       else
       {
           
       }
       
   }
   */
}
"
fb3b878ff7c89e0940c66e22faadec79ac2996e7,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i: int[])
    {
     	sum = sum + i;
    }
    return sum;
}
"
9db9cff5028b4b1cc75f4f5c9a641117debb19ac,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0; 
    }    
    if (b > 21)
    {
        return 0;
    }
    if ( a > b)
    {
        return a;
    }
    else
    {
        return b;
    }
    
}
"
eadc5df754b07dbc81ee348ee4bbd34ce3b39f20,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
        return 20;
    else
        return (a + b);
}
"
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
"
449c25168277fbecb5660eb70e7019afab36425e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
            return 0;
    }
    else if (speed <=80 && speed > 61)
    {
            return 1;
    }
    else
    {
            return 2;
    }
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
5ae4f4df981ecd7a8c7c1620b207298fd11eb26f,"public int blackjack(int a, int b)
{
    if (a > 0 && b > 0)
    {
     	if (b > 21 && a <= 21)
        {
         	return a;   
        }
        else if (a > b && a <= 21)
        {
         	return a;  
        }
        else if (a > 21 && b <= 21)
        {
         	return b;   
        }
        else if (b > a && b <= 21)
        {
        	return b;   
        }
    }
    return 0;
}
"
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
"
dca1f726e64da2460020f1bbac55668502eddba7,"public int roundSum(int a, int b, int c)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
    
}

public int round10(int num)
{
    return (round10(a) + round10(b) + round10(c));
    
}
"
0615e4e3628f3968baa7039844e88175c1722d19,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend)
    {
        return (cigar >= 40);
    }//end if
    
    return (cigars >= 40 && cigars <= 60);
    
    
}
"
4ab93bf88b80fa76f8c7c6f5499d40a451e7e897,"public boolean great; 

public boolean love6(int a, int b)
{
    Math.abs(a, b);
}
"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
c1dc534bc134ac150f2499c964686d5c7968c85a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        System.out.printIn(""0"");
    }
    else if (speed >= 61 && <= 80)
    {
        System.out.printIn(""1"")
    }
    else if (speed >= 81)
    {
        System.out.printIn(""2"")
    }
    
}
"
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}"
8ea314af4ea3aa3a6d57f2c90ff7786608a23927,"public int noTeenSum(int a, int b, int c)
{
	int numA = a;
    int numB = b;
    int numC = c;
    return (fixTeen(numA) + fixTeen(numB) + fixTeen(numC));
}

public int fixTeen(int n)
{
    int num = n;
    if (num == 15 || num == 16)
    {
        return num;
    }
    else if (num >= 13 && num <= 19)
    {
        return 0;
    }
    else
    {
        return num;
    }
}
"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
"
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
"
bf382bc1d92127f137bb550a9abdea9839167f1f,"public int[] shiftLeft(int[] nums)
{
    int shift = nums[0];
    if (nums.length >= 2)
    {
        //int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
28fa55b9521727c1d6984be94a51479b17a2ad86,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }else  (str.length() == 0){
	return ""@@"";
    }
        }
"
22db1882535d71f9010b430616081de4d479a931,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
        if (c == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
dc1c18a727a472113299aaf5bc76ffcf6180ee19,"public String[] fizzBuzz(int start, int end)
{
    end--;
    String[] result = new String[end - start];
    
    for (int i = 0; i < end; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
4690b3990e2eb6dd080ba258226248164f82da78,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh)
        {
            clumps++;
        }
    }
    return clumps;
}
"
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}"
13e7726e22c3130d052d705ea6bb06b6b0869917,"public int sortaSum(int a, int b)
{
    if (Math.abs(a + b >= 10) && Math.abs(a + b <= 19))
        {
            return 20;
        }
    else
        {
            return Math.abs(a + b);
        }
}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
0bd7fe95ce9749e4f8a7edf4208f6c161ea14ca1,"public int countCode(String str)
{
    int x = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c')
        {
            if (str.charAt(i+1) == 'o')
            {
                if (str.charAt(i + 3) == 'e')
                {
                    x++;
                }
            }
        }
    }
    return x;
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
fb63e4d9b9f844eb6f3145768fe6bd59fda4c682,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && a == c)
        result = 20;
    if (a == b || a == c || b == c)
        result = 10;
    else
        result = 0;
    return result;
 
}
"
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
c0bcafd61ce598040aa977b280d46011559cb4c7,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true;
    for( int i = 0; i <= nums.length-2; i++)
    {
        if( nums [i] != val && nums[i+1] != val)
            result = false;
    }
    return result;
}
    
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
a2a2884e41048d06a4cb030480f7393277c7ec9a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + nums[i];
        if (nums[i] == 13)
        {
            sum = sum - (13 = nums[i + 1]));
        }
    }
    return sum;
}
"
d58abb87ff70ff67a76bba0f3d1f0c3ba071d518,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == false)
    {
    if (speed < 60)
        {
            return 0;
        }
    if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    if (speed >= 81)
        {
            return 2;
        }
    }
    if (isBirthday == true)
    {
        return 0;
    return 0;
    }
}"
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
"
557026f064a89be4df627a611b8a898f7a2fc2f3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if ((nums[i] != val) || (nums[i + 1] != val))
        {
            return flase;
        }          
        
    }
     return false;
}
"
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
"
6bc66f51e027f8e766055c5683b57b6d779c2d15,"public String withouEnd2(String str) 
{
if (str.length() <= 2) 
    return """";
return str.substring(1, str.length() - 1);
}
"
b7a9395b99fe850b2082792560bb36ab00860020,"public int redTicket(int a, int b, int c)
{
    int result = 0;
    if (a == 2 && b == 2 && c == 2)
        result = 10;
    else if (a == b && b == c)
        result = 5;
    else if (a != b && a != c)
        result = 1;
    else
        result = 0;
    return result;
}
"
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
"
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
ec7f457115687180217c5031a741ed0ee5198ec6,"public int noTeenSum(int a, int b, int c)
{
	int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
        return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
    }
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
03963c180ede47baf3cb2a34f74b6ff99ed0fee1,"public int[] zeroMax(int[] nums) {
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--) {
        if (nums[i] % 2 == 1 && nums[i] > largestOdd)
            largestOdd = nums[i];
        if (nums[i] == 0)
            nums[i] = largestOdd;
    }
    return nums;
}"
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
4cbf8228090da8fc7b21c3ef3a6ecea59b0f8e5f,"public int roundSum(int a, int b, int c)
{
	return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int value = num % 10
    if (value >= 5)
    {
        return num + (10 - value);
    }
}
"
dc77d9f47e20012cfdff686d71cf058927245c62,"public int roundSum(int a, int b, int c)
    return round10(a) + round10(b) + round10(c));

public int round10(int num)
{
    int digit = num % 10;
	if (digit >= 5)
        return num = (10 - digit);
    return num - digit;
}
"
512ea4857067bd5d3ac3e3426f861301ee28c2f3,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
            return false;
        }
    }
    else if (isAsleep)
    {
        return false;
    }
    else
    {
        return true;
    }
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
eb5a4c86cae44656617a26e110011ef8081ffdf1,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else if ( str.length() == 0 )
    {
		return ""@@"";
    }
  }
"
06ce870f764275dc4fbe2e7c3328c4f9612d64a7,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 0; i<n; i++)
    {
        last = last + last;
    }
    return last;
        
}
"
cc77cf7675005a0bdbc9fe76c75879f1ad156087,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
34ad16a72b0a75568a00e876dfb72953f291c9ab,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            clumps++;
        }
    }
    return clumps;
}
"
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
"
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
a5ef4e9ae777060ed56015c4182bbe5b63e80d69,"public boolean evenlySpaced(int a, int b, int c)
{
    return (a == b && b ==c);
    return ((Math.abs(a-b) == Math.abs(b-c)) || (Math.abs(a-c) == Math.abs(a-b)) || (Math.abs(c-a) == Math.abs(b-c)));    
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
bb95327d0292272d65dd996e6aa6f61c87319399,"public boolean endOther(String a, String b)
{
    if a.length() == ""a"" + ""b""
        return b.substring(0,1).toLowerCase();
}
"
5f137dbfa54f3c15c65ef24630bad52216763faa,"public int redTicket(int a, int b, int c)
{
    
    if (a== 2 && b==2 && c==2)
    {
        return 10;
    }
    
    if (a==b && a==c && b==c)
    {
        return 5;
    }
    
    if (a!=b && a!=c)
    {
        return 1;
    }
    
    
    
    
    return 0;
}
"
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
"
95315d4f40fee982b6719168e94180e03704160d,"public int sum3(int[] nums)
{
   return (nums[0] + nums[1] + nums[2]); 
}
"
b21271e79419b123e5e2d4ff29ca2f214f3fb90e,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if (a==b || a==c || b==c)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
"
f3ddf9031a05285f6f9fec49ad403733b0696a3c,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
    	if (speed >= 65)
        {
        	return 0;
        }
    	else if (speed <=85 && speed >= 66)
        {
        	return 1;
        }
    	else if (speed >= 86)
        {
        	return 2;
        }
    }
    else
    {
        if (speed >= 60)
        {
        	return 0;
        }
    	else if (speed <=80 && speed >= 61)
        {
        	return 1;
        }
    	else if (speed >= 81)
        {
        	return 2;
        }
	}
return giveTicket;
    
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
"
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
"
06be09e2d8d4ddfe4333697a3feaadf8e8dc3077,"public int countClumps(int[] nums)
{
    int num = 0;
    boolean still = false;
    boolean clump = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i - 1])
        {
            clump = true;
        }
        else if (nums[i] == nums[i + 1])
        {
            still = true;
            continue;
        }
        else
        {
            num++;
        }
    }
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
76a3f2319da117864b8ca1165daa8eb7ace3e99c,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else 
        {
            return false;
        }
    else 
    {
        return true;
    }
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
5a00919d938e7350f9d887a0f3c496f766fa3b49,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
"
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
cd727adb54733c5b0e8ec8f90e3a20c4ce931c92,"public int makeChocolate(int small, int big, int goal)
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
    {
        return remainder;
    }
        
    return - 1;
}
"
f0be04df720e45391f559d26dc0955b0202bb87b,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n != 15 && n != 16)
        	return 0;
    return n;
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}"
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
"
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
"
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
47bcbb118b9820ce001397912cd55ec9c5521a9b,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
        return c;
    }
    if (a == c)
        return b;
    if (b == c)
        return a;
    return (a + b + c);
}
"
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
fb63e4d9b9f844eb6f3145768fe6bd59fda4c682,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && a == c)
        result = 20;
    if (a == b || a == c || b == c)
        result = 10;
    else
        result = 0;
    return result;
 
}
"
7bbe47ddbd540b9999602f687a555456a4122938,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	while (isBirthday == false)
    {
    	if (speed <= 60)
        {
            return 0;
        }
    	else if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    	else if (speed >= 81)
        {
            return 2;
        }
    }
    while (isBirthday == true)
    {
        if (speed <= 65)
        {
            return 0;
        }
    	else if (speed >= 66 && speed <= 85)
        {
            return 1;
        }
    	else if (speed >= 86)
        {
            return 2;
        }
    }
    return 1;
}"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
9f7cabb358a67a54ce58c64d4a9845fcc682c8e5,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if (speed <= 60) {
        return 0;
    }
        else if (speed > 60 && speed <81) {
            return 1;
        }
            else {
                return 2;
        }
    if (isBirthday);
    	 if (speed <= 65) {
             return 0;
         }
    else if (speed > 65 && speed < 86) {
        return 1;
    }
    else {
        return 2;
    }
}
       "
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
28fa55b9521727c1d6984be94a51479b17a2ad86,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }else  (str.length() == 0){
	return ""@@"";
    }
        }
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
c9db41e8ca91d96bee3eb4e5f89bb33135f954df,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
        return 20;
    
}
"
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
3d89f76d27956de3a51e53f7ba12c5aa1fc7e352,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom && isAsleep)
        return true;
    if (isMorning && !isMom && !isAsleep)
        return false;
    if (isMorning && isMom && !isAsleep)
        return false;
    return false;    
}
"
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
1f392835abe1515bae3d0a8fcfedc983a40383fb,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
		return 0;
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
cd23c0ed240a318d70e3ddbf504fb44f78c81ffc,"public String atFirst(String str)
{ 
    if (str.length() < 2 && str.length() != 0)
    {
        return str + ""@"";
    }
    else if (str.length() == 0)
    {
        return ""@@""
    }
    else
    {
        return str.substring(0,2);
    }
    
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
78a8e8a64b313ff7d1734612cc884e563d6caea4,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b!= 13 && c!= 13)
    {
        return (a+b+c);
    }
    
    else if (a== 13)
    {
        return 0;
    }
    
    else if (b== 13)
    {
        return a;
    }
    
    else if (c==13)
    {
        return (a+b);
    }
    
    return 0;
}
"
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
"
cee57656ca16e1dba36c9adc7d7dbfc622398c9a,"public int sum13(int[] nums)
{
    int sum = 0;
        if (nums.length < 1) {
            return 0;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 13) {
                i++;
                continue;
            }
            sum += nums[i];
        }
        return sum;
}
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
7c77e6e3fc1b988356518cad44b8ccc44e6c7032,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c){
            result = 10;
        }
        else if (b == c){
        	result = 20;
        }
     }
            
    return result;
}
"
b53ab834a811096b76a803c390009392801834ab,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
"
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
"
462c32a961f9e37900f45d8ce5b1817ecd8a2c74,"public int noTicket(0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
"
2bc6224c6d864641adc76e92803ba8b015954d7f,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
"
039a5741fb82006d59f66a5ffd100359f6a3aa77,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
    	if (cigars >= 40)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
    else
    {
    	if (cigars >= 40 && cigars <= 60)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
"
1202d346fcf0db46d6a29cff9b13366969ee2df1,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0,2));
    }
    else if (str.length() == 1)
    {
        return (str + ""@"");
    }
    else
    {
        return (""@@"");
    }
}
"
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
"
e5f4a1d12a2732c56ffa6463cfe4561bd754d8e2,"public String atFirst(String str)
{
    if (str.length >= 2)
    {
        return (str.substring(0,2));
    }
    else
    {
        return (str + ""@"");
    }
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
0fd5c40c96b7dfad240c5509995b5acc9eccd6b3,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
68c510e3ae2a5f68173421badd6c7e8d285e1fd9,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        return 0
    }
    else if (speed >= 61 && speed <= 80)
    {
        return 1
    }
    else if (speed >= 81)
    {
        return 2
    }
}
"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
325eb8d9cda58db31c3a0157abc1cd41245be9e7,"public int sortaSum(int a, int b)
{
    int result = 0;
    int sum = a + b;
    if (sum <= 19 || sum >= 10)
    {
        result = 20;
    }
    else 
    {
        result = sum;
    }
}
"
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
"
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
"
2b6fbdd8ffb390e14349649d51e8f312d5db1ba8,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[nums.length - 1] == 2)
        return false;
    return true;
}
"
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
"
226b5d8a7b8a50ea1a33a1983fecefe1ef7fa72b,"public boolean canBalance(int[] nums)
{
	int leftNum = 0;
	int rightNum;
	for(int i = 0; i < nums.length - 1; i++)
    {
		leftNum += nums[i];
    }
	rightNum = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(leftNum == rightNum)
        {
			return true;
        }
		leftNum -= nums[i];
		rightNum += nums[i];
	}
	return (leftNum == rightNum);
}"
4cad14f6dc235bb7665a336718b0bc721df9ddd2,"public boolean isEverywhere(int[] nums, int val)
{
    Boolean result = true;
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            result = true;
        }
        else
        {
            result = false;
            break;
        }
    }
    return result;
}
"
2ee7d366ef45e04675e68bd5cfd425ac0862af68,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else
    {
		return ""@@"";
    }

  }
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
"
270174ce7d53738e854429dc81bc8b311180b333,"public int[] shiftLeft(int[] nums)
{
    return int[] nums;
}
"
5a00919d938e7350f9d887a0f3c496f766fa3b49,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
"
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
06be09e2d8d4ddfe4333697a3feaadf8e8dc3077,"public int countClumps(int[] nums)
{
    int num = 0;
    boolean still = false;
    boolean clump = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i - 1])
        {
            clump = true;
        }
        else if (nums[i] == nums[i + 1])
        {
            still = true;
            continue;
        }
        else
        {
            num++;
        }
    }
}
"
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
"
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
f0205df67f010e325ec1614fba0a300d61a74dec,"public int blackjack(int a, int b)
{
    double valueA;
    valueA = (a % 21);
    double valueB;
    valueB =  (b % 21);
    
    if (a < 21 || b < 21)
    {
        if (double valueA > double valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else if (a < 21 && b < 21)
    {
        if (valueA > valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else
    {
        return 0;
    }
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
b4b80ec23db8730d3a13b7f18055050c22aa3b95,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        else
        {
            return 2;
        }
    }
    else
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}
}"
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
8ade95f109e1073acef3d10c10f35e45f9e8fce5,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder    
    return -1
}
"
d5ea2258e6bbd9d86632fcb90f4a201b12aae284,"public int greenTicket(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 20;
    }    
    
    if ((a == b) || (b == c) || (a == c))
    { 
        return 10;
    } 
    else
    {
    	return 0;
    }
}
"
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
"
528342efb0a38ace805355f9ecda4f69f0397a23,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
	if (a == 13)
    {
        return sum;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        int sum = a + b;
        return sum;
    }
    else
    {
        int sum = a + b + c;
        return sum;
    }
}
"
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
"
cda4eeee2346e60e72673f13fb06774fb4ec1b1b,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
        int rightSum = 0;
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
"
3c663e6b94b687cf331fb515d865826a263a5a6c,"public int luckySum(int a, int b, int c)
{
    if (a==13)
    {
        return 0;
    }
    else if (b==13)
    {
        return a;
    }
    else if (c==13)
    {
        return a+b;
    }
    else
        return a+b+c;
}
"
b03f6ee58d1c2efbc298c1b090d888a47d5425a9,"public boolean evenlySpaced(int a, int b, int c)
{
    if (b-a <= 1 && c-a >= 2 && c-b >= 2 
        || b-a >= 2 && c-a <= 1 && c-b >=2
        || b-a >=2 && c-a >= 2 && c-b <= 1)
        return true;
    return false;
}
"
42e52e00ef12b244eddffd0c9e1678918659c4e7,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
13e7ebf5b1cb8a39e420140214502a74809a7fad,"public int countCode(String str)
{
    int num = 0;
    for(int i = 0; i < str.length() - 3; i++) {
        if(str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i + 3) == 'e')
            num++;
    }            
    return num;
}
"
34ad16a72b0a75568a00e876dfb72953f291c9ab,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            clumps++;
        }
    }
    return clumps;
}
"
332c6ec5c84a4b48b155a3ce7e3c41195bbaf8a1,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
"
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
"
64e6a1b1c2176532ea3545edbf85eecc952dbf18,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a;
    return diffOne == diffTwo;
}
"
4922371b92b222012e44535853e7674bb94610e3,"public boolean twoTwo(int[] nums)
{
    if (nums.length <= 1)
    {
        return false;
    }
    if (nums.length == 2)
    {
       return (nums[0] == 2 || nums[1] == 2);
            
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
    }
    return true;
}
"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
13864ac96c4023a6c7e3db73dd0c11750234fe40,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1"
b1cd225c96f83cf234170ea444a1959fbfd4bcde,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    if (b == 13)
        return a;
    if (c == 13)
        return (a + b);
    return (a + b + c);
}
"
fb3b878ff7c89e0940c66e22faadec79ac2996e7,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i: int[])
    {
     	sum = sum + i;
    }
    return sum;
}
"
c72936a1839694da8df5554d66db79bf67bec60c,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (isBirthday)
    {
        speed = speed + 5
    }
	if (speed <= 60)
	{
    	return 0;
	}
    
	if (speed >= 61 && speed <= 80)
	{
    	return 1;
	}
    
	if (speed >= 81)
	{
    	return 2;
	}
	
}
"
532a012b0ec202d27262b383dc13089aef7e1e3b,"public int dateFashion(int you, int date)
{
   if ((you >= 2 && date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 && date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
"
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
e93ac984fe80d9ff8d2b28a49fe9042f2029629f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] % 10 == 0)
        {
            if (nums[i + 1] % 10 != 0)
            {
                nums[i + 1] = nums[i];
            }
        }
    }
    return nums;
}
"
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
"
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
"
2e007e796e35e7e1dc3f93fe57d7994c06428678,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 && n == 16)
            return n;
        else
        	return 0;
    return n;
}
"
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
"
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
"
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
f8e2e6bb5d3f455462c4a729ac1c0772ed521c99,"public boolean twoTwo(int[] nums)
{
    if (nums.length < 2 && nums[0] != 2 )
    {
     	return true;   
    }
    else if (nums.length < 1)
    {
     	return false;   
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
fb3b878ff7c89e0940c66e22faadec79ac2996e7,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i: int[])
    {
     	sum = sum + i;
    }
    return sum;
}
"
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
4bbc3e204cd69131a96c0f7ab0f9c94499406204,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
        {
            return 10;
        }
    else if ((a == b) && (b == c) && (a == c))
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
"
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
"
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
"
22db1882535d71f9010b430616081de4d479a931,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
        if (c == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
f53fe967f0579e586ca2895910f4b0362cabe181,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
"
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
"
13864ac96c4023a6c7e3db73dd0c11750234fe40,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1"
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
"
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
"
02c1f791fb8f450361e3bba08c084c74102eeb61,"public int countEvens(int[] nums)
{
    for (num: int[] nums)
    {}
}
"
039a5741fb82006d59f66a5ffd100359f6a3aa77,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
    	if (cigars >= 40)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
    else
    {
    	if (cigars >= 40 && cigars <= 60)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
}
"
a05e5d98a96c772e1afad34a0ae82871a6e741d0,"public String zipZap(String str)
{
    int num = 0;
    for (int i = 2; i < str.length(); i++)
    {
        if (str.charAt(num) == 'z' && str.charAt(i) == 'p')
        {
            str.replace(str.substring(num, i), ""zp"")
        }
        num += 1;
    }
    return str;
}
"
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
"
b97e82329cb0c23433c468d538ca5b604bfcba09,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
     	if (nums[i] % 2 == 1 && nums[i] > largestOdd)
        {
            largestOdd = nums[i];
        }
        if (nums[i] == 0)
        {
         	nums[i] = largestOdd;   
        }
    }
    return nums;
}
"
a2a2884e41048d06a4cb030480f7393277c7ec9a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + nums[i];
        if (nums[i] == 13)
        {
            sum = sum - (13 = nums[i + 1]));
        }
    }
    return sum;
}
"
13e7ebf5b1cb8a39e420140214502a74809a7fad,"public int countCode(String str)
{
    int num = 0;
    for(int i = 0; i < str.length() - 3; i++) {
        if(str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i + 3) == 'e')
            num++;
    }            
    return num;
}
"
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
"
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
"
a64b521a43b279d8d198e2e93125bbfc58c0262e,"public String getSandwich(String str)
{
    if (str.startsWith(bread) && st.endsWith(bread))
    {
        return str.substsring(5, str.length() -5))
    }
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
"
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
"
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
"
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
"
9a762998ef3f0abdaeaa9e34d97d58d792cb6be4,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMom)
        return true;
    return (!isMorning);
}
"
b6ba17f1e789afbf3ef81685a53e5e5f8cc3dfd0,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));	}
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
"
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
"
0a9dcd12a12791fe49d782b736769ace72b0d2ed,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else
    {
        if (b == 13)
        {
            return a;
        }
        else
        {
             if (c == 13)
                {
                    int AB = (a + b);
                    return AB;
                }
                else
                {
                    int ABC = (a + b + c);
                    return ABC;
                }
        }
    }
}
"
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
"
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
"
b1ebcb1c30766d8a77bc73f3bcdecfaa18e63176,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
    int rightSum = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
0615e4e3628f3968baa7039844e88175c1722d19,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend)
    {
        return (cigar >= 40);
    }//end if
    
    return (cigars >= 40 && cigars <= 60);
    
    
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
"
1ced7b3ab5f86bf014b0aab47983b280fea0faf5,"public int[] frontPiece(int[] nums)
{
    returnNumber = new int[2]
    for (int i = 0; i < nums.length && i < 2; i++)
    {
        returnNumber[i] = nums[i]
    }
	return returnNumber;
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
8243c75a69e18cb6c9f02b072995835b37129ed9,"public boolean sameEnds(int[] nums, int len) {
boolean result = true;
int range = len;
for (int i =0; i <range;i++)
if (!(nums[i] == nums[nums.length - range + i]))
result = false;
return result;
}
"
9854a8715c3f2ef0abd481b669c936355c5f9760,"public int sum67(int[] nums)
{
    int sum = 0;
    
    for (int i : nums)
    {
        if (i == 6)
        {
            for (int j = 6; j <= 7; j++)
            {
                i = 0;
            }
        }
        sum = sum + i;
    }
    
    return sum;
}
"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
f3ddf9031a05285f6f9fec49ad403733b0696a3c,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
    	if (speed >= 65)
        {
        	return 0;
        }
    	else if (speed <=85 && speed >= 66)
        {
        	return 1;
        }
    	else if (speed >= 86)
        {
        	return 2;
        }
    }
    else
    {
        if (speed >= 60)
        {
        	return 0;
        }
    	else if (speed <=80 && speed >= 61)
        {
        	return 1;
        }
    	else if (speed >= 81)
        {
        	return 2;
        }
	}
return giveTicket;
    
"
b4b80ec23db8730d3a13b7f18055050c22aa3b95,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        else
        {
            return 2;
        }
    }
    else
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}
}"
cda4eeee2346e60e72673f13fb06774fb4ec1b1b,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
        int rightSum = 0;
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
"
aa4d8b44bff62be088c0c94a7829aa410ffa133b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        if (speed >= 81)
        {
            return 2;
        }
    }
    if (!isBirthday)
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}"
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
"
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
"
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
"
a767440796f740efacb74e1a68a50c6ef184a501,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length - 1; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
"
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
762f08246c122eabc1b2c86550fef5a51f4c34a7,"public int round10(int num)
{
	int digit = num % 10;
	if(digit >= 5)
    {
		return num + (10 - digit);
    }
	return num - digit;
}
public int roundSum(int a, int b, int c)
{	
    return (round10(a) + round10(b) + round10(c));	
}"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
a2c77eb2341d2107484dea64721c8eb1fb2b5c9b,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else if (c == 13)
    {
    	sum = a + b;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum;
    }
}
"
22d46f636a2ecaa8a80e55e579500a4ff8e2a188,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            nums[i+1] = 5;
        }
    }
    
    return nums;
}
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
"
b5509f3d8d4bcd8f2b81e75b2c675400125936aa,"public int luckySum(int a, int b, int c)
{
    int luckySum = 0;
    if ( a == 13 )
    {
    	luckySum = c;
    }
    else if ( b == 13)
    {
    	luckySum = b;
    }
    else if (c == 13)
    {
    	luckySum = a + b;
    }
    else
    {
    	luckySum = a + b + c;
    }
    return luckySum;
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
9ebe46b9e7a4b3cb16a4423e4af7f17722965213,"public int noTeenSum(int a, int b, int c)
{
    int sum = (fixTeen(a)+fixTeen(b)+fixTeen(c));
        return sum;
}

public int fixTeen(int n)
{
    if (n>=13&&n<=19)
    {
        if (n==15||n==16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }
}
"
76a3f2319da117864b8ca1165daa8eb7ace3e99c,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else 
        {
            return false;
        }
    else 
    {
        return true;
    }
}
"
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
"
fae2f7dfe0c7f6a36eed081761f1d04f77387b4b,"

    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }

"
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
377d33b5c5fd6194c58592818a016612e427dfc7,"public int[] fix45(int[] nums)
{
    int f45 = 0;
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i + 1] != 5)
		{
			for(!(nums[f45] == 5 && (f45 == 0 || f45 > 0 && nums[f45 - 1] != 4)) f45++)
            {
			nums[j] = nums[i + 1];
			nums[i + 1] = 5;
            }
		}
	}
	return nums;
}
"
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
"
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
"
22fda47732546394dab7ecbb147aa3cdbdb03099,"public boolean xyBalance(String str)
{
  int l = str.length() - 1;
    for (int i = l; i >= 0; i--)
    {
        char n = str.charAt(i);
        if (n == 'x')
        {
            return false;
        }
        if (n == 'y')
        {
            return true;
        }
    }
    return true;
    }
"
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
4690b3990e2eb6dd080ba258226248164f82da78,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh)
        {
            clumps++;
        }
    }
    return clumps;
}
"
4e250d40f6c8c4899a3eb79ea695e918be5d8a56,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
    	else if (nums[i] == 7 && nums[i + 2] == 7)
            return true;
    return false;
}
"
12941eb615aae98f65aa36224718e48e3383968c,"public int loneSum(int a, int b, int c)
{
    int x = a + b + c;
    if (a == b)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == c)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return a;
        }
    }
    else if (a == c)
    {
        if (b == c)
        {
            return 0;
        }
        else
        {
            return b;
        }
    }
    else
    {
        return x;
    }
}
"
557026f064a89be4df627a611b8a898f7a2fc2f3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if ((nums[i] != val) || (nums[i + 1] != val))
        {
            return flase;
        }          
        
    }
     return false;
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}"
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
"
328f2f06f07e26aac03e4e4a6df016fc0c620fcc,"public int redTicket(int a, int b, int c)
{
      if (a == 2 && b == 2 && c == 2)
    return 10;
  if ( a == b && b == c)
    return 5;
  if ( a != b && a != c)
    return 1;
  else
    return 0;
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
"
70e8fe1e1559c1588960e28f03cfb0569868a17f,"public boolean evenlySpaced(int a, int b, int c)
{
    if ((Math.abs(a - b) == Math.abs(b - c)) || (Math.abs(a - c) == Math.abs(b -a)))
    {
        return true;
    }
    else
    {
        return false;
    }
        
}
"
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
"
270174ce7d53738e854429dc81bc8b311180b333,"public int[] shiftLeft(int[] nums)
{
    return int[] nums;
}
"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
5b9eb535280570f293684ef95c107bc80160a334,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = len;
	for (int i =0; i <range;i++)
    {
		if (!(nums[i] == nums[nums.length - range + i]))
        {
			result = false;
        }
    }
return result;
}
"
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
"
f7b456f80d5d6eacf91bd50ba9de7fdff9abbc6f,"public int greenTicket(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 20;
    }    
    
    if ((a == b) || (b == c) || (a == c))
    { 
        return 10;
    } 
    else
    {
    	return 0;
    }
}
"
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
"
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
"
563e70492a46c1983409ddc52f1edaf6f8bfba29,"public int countClumps(int[] nums)
{
    int merlin = 0;
    
    for(int i = 0; i < nums.length - 1  ; i++)
    {
        if (nums[i] == nums[i+1])
        {
            merlin++
        }
           
    }
    return merlin;
}
"
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
727d541babe278c063e729dab201403c18c6f003,"public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        str == ""bread"" - str - ""bread"";
    }
    else
    {
        return """";
    }
}
"
610dbd70704f6fe7a7fa838ba5850c555c6ec37d,"public String withouEnd2(String str) 
{
        if (str.length() <= 2) 
            return """";
        return str.substring(1, str.length() - 1);
}
"
dca1f726e64da2460020f1bbac55668502eddba7,"public int roundSum(int a, int b, int c)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
    
}

public int round10(int num)
{
    return (round10(a) + round10(b) + round10(c));
    
}
"
d8f6de34bbb4daabf4789e4930885c05e8604106,"public int countClumps(int[] nums)
{
    int clumpNum = 0;
    int clump = 0;
    for (int = 0; i < nums.length - 1; i++)
    {
     	if (clump == 0 && nums[i] == nums[i+1])
        {
            clumpNum++;
            clump++;
        }
        else
        {
         	clump = 0;   
        }
    }
    return clumpNum;
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
d4bcf6c8e35c1dc33d803d62c4c1abc06da6328d,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] == 13)
        {
         	sum = sum;   
        }
        else if (nums[i - 1] == 13)
        {
         	sum = sum;   
        }
        else
        {
         	sum = sum + nums[i];
        }
    }
    return sum;
}
"
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
c384cb38b2cffa92ee7bc55feafe1c65d7c5d33e,"public int countCode(String str)
{
int count = 0;

for(int i = 0; i < str.length() - 3; i++)
{
if(str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
count++;
}

return count;  
}
"
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
"
86eeb69c66325d7ac263cfba4f58a77188d3d872,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int test = 0;
        int[] testArray = new int[nums.length];
        for (int x = 0; x < nums.length; x++)
        {
            testArray[x] = nums[x];
            test++;
        }
        if (test == nums.length)
        {
            return 1;
        }
        
        
        
        
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i]);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init)
{
    int nextNum = 0;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
309dc7997e1010df732f8ec41fd34a616365f55d,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if ((str.substring(i, i + 1) == 'co') 
            && (str.substring(i + 3) == 'e'))
        {
            count++;
        }
    }
    return count;
}
"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
"
bda78f041aeff5c1c99839481d54cb270d0f1529,"public int makeChocolate(int small, int big, int goal)
{
     if goal >= 5 * big
     {
        remainder = goal - 5 * big；
     }
    else
    {
        remainder = goal % 5；
    }
        
    if remainder <= small
    {
        return remainder；
    }
        
    return -1；
}
"
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
bedb2c2c407cfc6f84128d3bcf6e102d6628dd32,"public boolean sameEnds(int[] nums, int n)
{
    if (n <= 1)
    {
    	for (int i = 0; i <= n; i++)
    	{
            if (nums[i] != nums[nums.length - 1 - i])
        	{
            	return false;
        	}
    	}
    }
    else
    {
        for (int i = 0; i <= n; i++)
    	{
            
            else if (nums[i] != nums[nums.length - n + i])
        	{
            	return false;
        	}
    	}
        
    }
    return true;
}
"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
"
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
"
a02eb75c4e00dfd8fa09a7d3de1220f22f7a8f27,"public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        return 0;
    }
    if (n == 15)
    {
        return 15;
    }
    if (n == 16)
        {
            return 16;
        }
}

"
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
"
18ab89e18a6ce4e406b204406f6fb94214480bd9,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 10;
    if (a == b && b == c && a == c)
        return 5;
    if (a != b && b != c && a != c)
        return 1;
    else
        return 0;
}
"
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
"
04780365d53ec02bf23dee2452c32d0edb7fb12c,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
64e6a1b1c2176532ea3545edbf85eecc952dbf18,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a;
    return diffOne == diffTwo;
}
"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
"
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
"
b97e82329cb0c23433c468d538ca5b604bfcba09,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
     	if (nums[i] % 2 == 1 && nums[i] > largestOdd)
        {
            largestOdd = nums[i];
        }
        if (nums[i] == 0)
        {
         	nums[i] = largestOdd;   
        }
    }
    return nums;
}
"
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
"
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
9db9cff5028b4b1cc75f4f5c9a641117debb19ac,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0; 
    }    
    if (b > 21)
    {
        return 0;
    }
    if ( a > b)
    {
        return a;
    }
    else
    {
        return b;
    }
    
}
"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
"
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
b1cd225c96f83cf234170ea444a1959fbfd4bcde,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    if (b == 13)
        return a;
    if (c == 13)
        return (a + b);
    return (a + b + c);
}
"
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
"
b16439cf6ef5c619010c64a8fb33444995f538e6,"public String plusOut(String str, String word)
{
    String returnString = """";
    int lastIndex = str.indexOf(word);
    int i = lastIndex;
    
    while (i < str.length())   
    {
        if (i == str.indexOf(word, lastIndex))
        {
            returnString = returnString + word;
            lastIndex = i;
            i += (word.length() - 1);
        }
        
        else
        {
            returnString = returnString + ""+"";
            i++;
        }
    }
	return returnString;
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
e7aad59bc0f7416c80deba043153af59de5ea985,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i <= nums.length - 1; i++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            everywhere = true;
            break;
        }
    }
    return everywhere;
}
"
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
50f3da72fdd9f01a0c7804b3c9c789cddd8d9b18,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (i = 0; i < num.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count*2 == num.length);            
    
}
"
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
"
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
a040447a7a4d000d3f8dce6203fbc10a54cdf382,"public int blackjack(int a, int b)
{
    if (a>21)
    {
        a=0;
   		return a;
    }
    if (b>21)
    {
        b=0;
        return b;
    }
    if (a>b)
    {
     return a;   
    }
	else
	{	
    return b;
    }
}
"
1dc0a9281fe5c33922d59a28a48a7003fd59765d,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        retrun = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
"
888a63dff1f59fa6a944754dead51bf5ff29d397,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}"
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
cd80603c865a5f537dae1c802b4d53681015978e,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
62d31dc1d181609f1ad5028901c8db29d61ea2b8,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    else 
    {
        return (a +b);
    }
}
"
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
3a2534fb0ac1dc3651141e9a0bd5b1830ff648bb,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""small ticket"";
        }
        else
        {
            return ""big ticket"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""small ticket"";
        }
        else
        {
			return ""big ticket"";
        }
    
    }
}  
"
3d5712cd499b5dbbb377c38144436a2980ada53f,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
        	return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return false;
}
"
8ade95f109e1073acef3d10c10f35e45f9e8fce5,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder    
    return -1
}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
"
a05e5d98a96c772e1afad34a0ae82871a6e741d0,"public String zipZap(String str)
{
    int num = 0;
    for (int i = 2; i < str.length(); i++)
    {
        if (str.charAt(num) == 'z' && str.charAt(i) == 'p')
        {
            str.replace(str.substring(num, i), ""zp"")
        }
        num += 1;
    }
    return str;
}
"
ebd32bc9d73aea5eb17d579604ff55398843bcff,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1

"
13864ac96c4023a6c7e3db73dd0c11750234fe40,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1"
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
b1ebcb1c30766d8a77bc73f3bcdecfaa18e63176,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
    int rightSum = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
2e007e796e35e7e1dc3f93fe57d7994c06428678,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 && n == 16)
            return n;
        else
        	return 0;
    return n;
}
"
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
"
6434b911e74e0d2939d97a8820552e19fd926f60,"public int countClumps(int[] nums)
{
      int current = -1, clump = 0;
  for(int i = 0; i < nums.length - 1; i++) {
    if(nums[i] == nums[i + 1] && nums[i] != current) {
       current = nums[i];
       clump++;
    } else {
       if(nums[i] != current) {
          current = -1;
       }
    }
  }
  return clump;
}
"
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
"
0f7eb7c6740ccd257c3f6da081cc3f753e5a2516,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int clumpSize = this.sizeClump(nums, nums[i], i);
                i = i + clumpSize;
                counter++;
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int nextNum = 0;
    while (nums[start] == initValue)
    {
        nextNum++;
    }
    return nextNum;
}"
f8e2e6bb5d3f455462c4a729ac1c0772ed521c99,"public boolean twoTwo(int[] nums)
{
    if (nums.length < 2 && nums[0] != 2 )
    {
     	return true;   
    }
    else if (nums.length < 1)
    {
     	return false;   
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
76a3f2319da117864b8ca1165daa8eb7ace3e99c,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else 
        {
            return false;
        }
    else 
    {
        return true;
    }
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
"
c32e8df18759f85c9ca9cc1ff3051aa396bf5a33,"public boolean evenlySpaced(int a, int b, int c)
{
    int[3] arrInOrder;
    arrInOrder[0] = a;
    arrInOrder[1] = b;
    arrInOrder[2] = c;
    
    int small;
    int med, big;
   /**
    if ((a > b) && (a > c)) // if a is the biggest
   {
		if (b > c)
        {
            big = a;
            med = b;
            small = c;
        }
       else
       {
           
       }
       
   }
   */
}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
"
727d541babe278c063e729dab201403c18c6f003,"public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        str == ""bread"" - str - ""bread"";
    }
    else
    {
        return """";
    }
}
"
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
c8a0be59dec0a41242ebf952c04bb2e31259d489,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
"
270174ce7d53738e854429dc81bc8b311180b333,"public int[] shiftLeft(int[] nums)
{
    return int[] nums;
}
"
67b31d44e53f66de27582ca427b2dcf657e7f18c,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a = b && b == c)
        return 10;
    
    if (a = b && b == c)
        return 5;
        
    if (a != b && a != c)
        return 1;
    
    return 0;
}
"
19a5b90083c799114b8bccdc97fb09a69be2aba1,"public int greenTicket(int a, int b, int c)
{
    if (a == b || a == c || b == c)
        return 10;
	if (a == b && a == c || b == c)
        return 20;
    else
        return 0;
}
"
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
0a4d7aee449450431db0efcda5856b22d973b605,"public String getSandwich(String str)
{
    if(str.length() > 10 &&
       str.substring(0, 5) == ""bread"" &&
       str.substring(str.length() - 6, str.length() - 1) == ""bread"")
    {
        return str.substring(5, str.length() - 6);
    }
    else {
        return str.substring(5, str.length() - 6);
    }
}
"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
c64c9e9c0a786ef3732a68209a390d30d8284fd4,"public int dateFashion(int you, int date)
{
   if ((you >= 2 || date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 || date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
8dd0ea4aa40c9c74b0f4a3dddd8ecdfabf898186,"public int sortaSum(int a, int b)
{
    sum = a+b;
    if (sum>=10&&sum <=19)
    {
        return 20;
    }
    else
    {
        return sum;
    }
    
}
"
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
"
c62602f27883f984fbc0551198122402edd6e05d,"public int[] shiftLeft(int[] nums)
{
    return int[];
}
"
eb5a4c86cae44656617a26e110011ef8081ffdf1,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else if ( str.length() == 0 )
    {
		return ""@@"";
    }
  }
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
67e32e60ccf94c9e237b1ee60eec88d54337ee46,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (( n > 12 && n < 15) ||( n > 16 && n < 20 )) {
     return 0;
   }
   return n;
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
6434b911e74e0d2939d97a8820552e19fd926f60,"public int countClumps(int[] nums)
{
      int current = -1, clump = 0;
  for(int i = 0; i < nums.length - 1; i++) {
    if(nums[i] == nums[i + 1] && nums[i] != current) {
       current = nums[i];
       clump++;
    } else {
       if(nums[i] != current) {
          current = -1;
       }
    }
  }
  return clump;
}
"
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
"
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
"
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
07bfb6fcfa70e37188bff5b83b62a677ed999984,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
"
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
5cd02f6c04c19cfba3433b99e62352d722eab1e6,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
	    if (a > b)
	    {
   		  	return a;
	    }
	    else
    	{
    	 	return b;
    	}
    }
    else
    {
       	return 0;
    }
}
"
68c510e3ae2a5f68173421badd6c7e8d285e1fd9,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        return 0
    }
    else if (speed >= 61 && speed <= 80)
    {
        return 1
    }
    else if (speed >= 81)
    {
        return 2
    }
}
"
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
"
b1cd225c96f83cf234170ea444a1959fbfd4bcde,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    if (b == 13)
        return a;
    if (c == 13)
        return (a + b);
    return (a + b + c);
}
"
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
"
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
2e007e796e35e7e1dc3f93fe57d7994c06428678,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 && n == 16)
            return n;
        else
        	return 0;
    return n;
}
"
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
"
0cb8c025b705f4587b7d469c16c902e554391541,"public int[] frontPiece(int[] nums)
{
    return frontPiece;
}
"
63d94094b3bd3e432c48601fe1cde209664933eb,"public int loneSum(int a, int b, int c)
{
	if (a==b || b==c)
    {
        return c;
    }
	else if (a==c)
    {
        return b;
    }
    else 
    {
    	return a + b + c;
    }
}
"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
"
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
78a8e8a64b313ff7d1734612cc884e563d6caea4,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b!= 13 && c!= 13)
    {
        return (a+b+c);
    }
    
    else if (a== 13)
    {
        return 0;
    }
    
    else if (b== 13)
    {
        return a;
    }
    
    else if (c==13)
    {
        return (a+b);
    }
    
    return 0;
}
"
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
"
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
"
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
"
0294a8f6bb1a1e083b987b4340006b744cb04faf,"public int loneSum(int a, int b, int c)
{
    int sum = 0;
    if (a != b && b!= c)
    {
    	sum = a + b + c;
        return sum;        
    }
    else if (a == b && b != c)
    {
    	sum = c;
        return sum;
    }
    else if (a != b && b == c)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = 0;
        return sum;
    }
}
"
d4727621894f4b6e95bac621a23e19a3148b6d8b,"public boolean endOther(String a, String b)
{
    if (a.toLowerCase().endsWith(b.toLowerCase()))
        {
            return true;
        }
    else if (b.toLowerCase().endsWith(a.toLowerCase()))
             {
                 return true;
             }
    else
             {
                 return false;
             }
}
"
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
4cad14f6dc235bb7665a336718b0bc721df9ddd2,"public boolean isEverywhere(int[] nums, int val)
{
    Boolean result = true;
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            result = true;
        }
        else
        {
            result = false;
            break;
        }
    }
    return result;
}
"
14bae45e226cf80e5a5d823493bf787de23fd8af,"public boolean xyBalance(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
    if (str.charAt(i) == 'x'&& str.contains('y'))
    {
        return true;
    }
    return false;
    }
}
"
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
f0205df67f010e325ec1614fba0a300d61a74dec,"public int blackjack(int a, int b)
{
    double valueA;
    valueA = (a % 21);
    double valueB;
    valueB =  (b % 21);
    
    if (a < 21 || b < 21)
    {
        if (double valueA > double valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else if (a < 21 && b < 21)
    {
        if (valueA > valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else
    {
        return 0;
    }
}
"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}"
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
"
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
"
5f0de396365017b80185b81d0904cd472b4f28f8,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if ((a == b && b != c) || (a == c && a != b) || (b == c && b != a))
    {
       return 10;
    }
    else 
    {
        return 0;
    }
}
"
da35db888e070aad3d1910413f0731e4b429579c,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (20 - n < 7  && 20 - n < 1)
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
d4bcf6c8e35c1dc33d803d62c4c1abc06da6328d,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] == 13)
        {
         	sum = sum;   
        }
        else if (nums[i - 1] == 13)
        {
         	sum = sum;   
        }
        else
        {
         	sum = sum + nums[i];
        }
    }
    return sum;
}
"
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
"
f53fe967f0579e586ca2895910f4b0362cabe181,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
"
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
41c8da13b33e4f2c7ae68912df33bf871bfd1952,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = n;
    for (int i =0; i <n ;i++)
    {
        if (!(nums[i] == nums[nums.length - range + i]))
		result = false;
    }

}
"
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
"
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
"
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
"
06be09e2d8d4ddfe4333697a3feaadf8e8dc3077,"public int countClumps(int[] nums)
{
    int num = 0;
    boolean still = false;
    boolean clump = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i - 1])
        {
            clump = true;
        }
        else if (nums[i] == nums[i + 1])
        {
            still = true;
            continue;
        }
        else
        {
            num++;
        }
    }
}
"
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
ec7f457115687180217c5031a741ed0ee5198ec6,"public int noTeenSum(int a, int b, int c)
{
	int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
        return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
    }
}
"
610dbd70704f6fe7a7fa838ba5850c555c6ec37d,"public String withouEnd2(String str) 
{
        if (str.length() <= 2) 
            return """";
        return str.substring(1, str.length() - 1);
}
"
9854a8715c3f2ef0abd481b669c936355c5f9760,"public int sum67(int[] nums)
{
    int sum = 0;
    
    for (int i : nums)
    {
        if (i == 6)
        {
            for (int j = 6; j <= 7; j++)
            {
                i = 0;
            }
        }
        sum = sum + i;
    }
    
    return sum;
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
"
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
"
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
11e598f7e57d128136db1dfc84b08cbb84493470,"public String atFirst(String str)
{	
    int n = str.length();
    for (int = 0; i < n; i++)
    {
    	if (n > 2)
    	{
     		return str.substring(0, 2);
    	}
    	else
    	{
       	 	return ""@@"";
    	} 
    }
}
"
d58abb87ff70ff67a76bba0f3d1f0c3ba071d518,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == false)
    {
    if (speed < 60)
        {
            return 0;
        }
    if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    if (speed >= 81)
        {
            return 2;
        }
    }
    if (isBirthday == true)
    {
        return 0;
    return 0;
    }
}"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
f4b03862b0451a373caa9f6bb7390b99d9c24f62,"public String atFirst(String str)
{
    return str.substring(0, 2);
}
"
44f220b58843152b2c37e892e70f7c52224b3df7,"public int[] zeroMax(int[] nums)
{
    int max = 0; 
    for (int i = 0; i < nums.length - 1; i++) {
        if ( nums[i] == 0) {
            for (int k = i + 1; k <= nums.length - 1; k++) {
                if (nums[k] > max && nums[k] % 2 == 1) {
                    max = nums[k];
                }
                else {
                    nums[k] = max; 
                max = 0;
                }
                 
            }
        }
    }
    return nums; 
}
"
03963c180ede47baf3cb2a34f74b6ff99ed0fee1,"public int[] zeroMax(int[] nums) {
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--) {
        if (nums[i] % 2 == 1 && nums[i] > largestOdd)
            largestOdd = nums[i];
        if (nums[i] == 0)
            nums[i] = largestOdd;
    }
    return nums;
}"
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
"
d0e7e4f01d1bd84602edf6ae34c0d764c24c4815,"public int countCode(String str)
{
    int i = 0;
    int time = 0;
    int l = str.length() - 3;
    
    while (i < l)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt( i 			+3 == 'e')
            {
                time++;
                i += 4;
            }
            i++;
            }
            return time;
        
}
"
cdd987fe22a2c2a5848e5fca825333eda6c5ff22,"public String zipZap(String str)
{
    return str.replaceAll(""z.p"",""zp"");
    /**String first = """";
    String out = """";
    String contain = """";
    for (int i = 0; i < str.length() - 3; i ++)
    {
        first = str.substring(0, i);
        contain = str.substring(i, i+4);
        if (contain.charAt(i) == 'z' && contain.charAt(i+3) == 'p')
        {
            
            str = str.replace(newS, re);
        }
    }**/
}
"
761faf27118f8d7637200b8140f5a550d392d440,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
     if ( (n >=13 && n < 15) || (n > 16 && n <= 19) )
     {
         return 0;
     }
    else
    {
        return n;
    }
}

"
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
7e7bf4cc813657543b6b338e6de0cde0e361315b,"public int sum13(int[] nums)
{
    int total = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (num [i] == 13)
        {
            num [i] = 0;
            num [i] + 1 = 0;                
        }
        total = nums [i] + nums [i + 1];
    }
    return total;
}
"
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
"
62d31dc1d181609f1ad5028901c8db29d61ea2b8,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    else 
    {
        return (a +b);
    }
}
"
3850876d2c56148eb728593d89548d81773d092d,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                while ((nums[i] == nums[i]) && (i < num.length)
                {
                    i++;
                }
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int sumVal = 1;
    while (nums[start] == initValue)
    {
        sumVal++;
        start++;
    }
    return sumVal;
}"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
9854a8715c3f2ef0abd481b669c936355c5f9760,"public int sum67(int[] nums)
{
    int sum = 0;
    
    for (int i : nums)
    {
        if (i == 6)
        {
            for (int j = 6; j <= 7; j++)
            {
                i = 0;
            }
        }
        sum = sum + i;
    }
    
    return sum;
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
054947245110fe21e7c54bf774cacf65261ff180,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) {
        if (i + 2 <= str.length()) {
            if (str.substring(i, i+2)) {
                return (str.charAt(i).equals(""b"") && str.charAt(i+2).equals(""b""));
            }
        }
    }
                return false;
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
b1cd225c96f83cf234170ea444a1959fbfd4bcde,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    if (b == 13)
        return a;
    if (c == 13)
        return (a + b);
    return (a + b + c);
}
"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
2216bc569ee8caff75d3702a81475722e85c8551,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 || n == 16)
            return n;
        return 0;
    //return n;
}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
03963c180ede47baf3cb2a34f74b6ff99ed0fee1,"public int[] zeroMax(int[] nums) {
    int largestOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--) {
        if (nums[i] % 2 == 1 && nums[i] > largestOdd)
            largestOdd = nums[i];
        if (nums[i] == 0)
            nums[i] = largestOdd;
    }
    return nums;
}"
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
b03f6ee58d1c2efbc298c1b090d888a47d5425a9,"public boolean evenlySpaced(int a, int b, int c)
{
    if (b-a <= 1 && c-a >= 2 && c-b >= 2 
        || b-a >= 2 && c-a <= 1 && c-b >=2
        || b-a >=2 && c-a >= 2 && c-b <= 1)
        return true;
    return false;
}
"
332c6ec5c84a4b48b155a3ce7e3c41195bbaf8a1,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
"
6bb0ee0ad18b7740337fbdd1e749d82571043674,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
"
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
23b5ec2ba8fe6b1ec171faaa28bcd140793480f8,"public int[] seriesUp(int n) {
  int[] result = new int[n * (n + 1) / 2];
  int i = 0;
  for (int j = 1; j <= n; ++j)
    for (int k = 1; k <= j; ++k)
      result[i++] = k;
  return result;
}"
d7633351c672f26ee19b79bf514fdb0837ec9cb2,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMorning && !isMom)
        return false;
    else
        return true;
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
"
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
cd23c0ed240a318d70e3ddbf504fb44f78c81ffc,"public String atFirst(String str)
{ 
    if (str.length() < 2 && str.length() != 0)
    {
        return str + ""@"";
    }
    else if (str.length() == 0)
    {
        return ""@@""
    }
    else
    {
        return str.substring(0,2);
    }
    
}
"
685a1f07697cb907cefcecfa8cf5158825e90e14,"public int countCode(String str)
{
    int length = str.length() - 2;
    int num = 0;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == c && str.charAt(i + 1) == o
            && str.charAt(i + 3) == e)
        {
            num = num + 1;
        }
    }
    return num;
}
"
309dc7997e1010df732f8ec41fd34a616365f55d,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if ((str.substring(i, i + 1) == 'co') 
            && (str.substring(i + 3) == 'e'))
        {
            count++;
        }
    }
    return count;
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
"
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
"
8fb500466613a34013f0592cc334f444d8a2780d,"public int countClumps(int[] nums)
{
    int num = 0;
    int clumps = 0;
    Boolean clump = false;
    for (int i = 0; i < nums.length; i++)
    {
        num = nums[i];
        while (nums[i] == nums[i + 1])
        {
            i++
        }
        if (clump == true)
        {
            clumps++;
            clump = false;
        i--;
    }
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
c093cac600fc00c29dfe5c59c8ab78dddb9a3f95,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count >= nums.length - 1);            
    
}
"
47f3a74a254afbf6c445487eff4eb1c0df9e20df,"public boolean has77(int[] nums)
{
    int blob = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (i < nums.length - 2)
        {
            if (nums[i] == nums[i + 1] && nums[i] == 7)
        	{
            	blob = blob + 100;
        	}
            if (nums[i] == nums[i + 2] && nums[i] == 7)
            {
                blob = blob + 100;
            }
        }   
        else if (nums[i] == nums[i + 1] && nums[i] == 7)
        {
            blob = blob + 100;
        }
        else
        {
            blob = blob + 1;
        }
    }
    return blob >= 100;
}
"
4922371b92b222012e44535853e7674bb94610e3,"public boolean twoTwo(int[] nums)
{
    if (nums.length <= 1)
    {
        return false;
    }
    if (nums.length == 2)
    {
       return (nums[0] == 2 || nums[1] == 2);
            
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
    }
    return true;
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
c3512617ca5c44a2a7c9757943e2944653964b69,"public boolean bobThere(String str)
{
    firstB = str.indexOf(""b"")
}
"
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
"
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
"
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
"
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
"
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
02c1f791fb8f450361e3bba08c084c74102eeb61,"public int countEvens(int[] nums)
{
    for (num: int[] nums)
    {}
}
"
888a63dff1f59fa6a944754dead51bf5ff29d397,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}"
fdd9c7578eae0199293f5c67050555c877e59579,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
    }
                           
    return (sum - max - min) / (nums.length - 2);
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
64e6a1b1c2176532ea3545edbf85eecc952dbf18,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a;
    return diffOne == diffTwo;
}
"
e93b94f6835046c42b16cfe507547d10945a4c3a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++) {
		if ((nums[i-1] == val) && 
            (nums[i] == val) && nums[i+1] == val) {
         	 return true;
        }
        else {
			return false;
        }
    }
}
"
ec440fd647af59cbea91a966ccc1596f685d24fa,"public int blackjack(int a, int b)
{
   if ( a > 21 && b > 21)
   {
      return 0; 
   }
    if (21 - b > a)
    {
        return a;
    }
    else 
        return b;
}
"
f0205df67f010e325ec1614fba0a300d61a74dec,"public int blackjack(int a, int b)
{
    double valueA;
    valueA = (a % 21);
    double valueB;
    valueB =  (b % 21);
    
    if (a < 21 || b < 21)
    {
        if (double valueA > double valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else if (a < 21 && b < 21)
    {
        if (valueA > valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else
    {
        return 0;
    }
}
"
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
"
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
ed474f0e054cf58e97af554622596132c6fa3db1,"public int roundSum(int a, int b, int c)
{	
    return(round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
	int digit = num % 10;
    if(digit >= 5)
        return num + (10- digit);
    return num - digit;
}"
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
"
e93ac984fe80d9ff8d2b28a49fe9042f2029629f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] % 10 == 0)
        {
            if (nums[i + 1] % 10 != 0)
            {
                nums[i + 1] = nums[i];
            }
        }
    }
    return nums;
}
"
12941eb615aae98f65aa36224718e48e3383968c,"public int loneSum(int a, int b, int c)
{
    int x = a + b + c;
    if (a == b)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == c)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return a;
        }
    }
    else if (a == c)
    {
        if (b == c)
        {
            return 0;
        }
        else
        {
            return b;
        }
    }
    else
    {
        return x;
    }
}
"
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
d58abb87ff70ff67a76bba0f3d1f0c3ba071d518,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == false)
    {
    if (speed < 60)
        {
            return 0;
        }
    if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    if (speed >= 81)
        {
            return 2;
        }
    }
    if (isBirthday == true)
    {
        return 0;
    return 0;
    }
}"
e9b63cad69501d11984221e9a07eff591dedc2b8,"public int roundSum(int a, int b, int c)
{
    a = round10(a);
    b = round10(b);
    c = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int rem = num % 10;
    if (num >= 0 && num < 5)
        num = num - rem;
    else
        num = num + 10 - rem;
    return num;
}
"
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
"
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
"
a457e813b62121d4bee7f0cd63ba678e9441866c,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c && b == c){
            result = 10;
        }
     }
    else if ( c == b){
        result == 10;
    }
        
            
    return result;
}
"
bb819a051a15f625b5912634652b195b464f7095,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length + 1 < nums.length - 2)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
"
428a4330008980c438326abad1def09257e6d2d1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a > b && a < 21)
    {
        return a;
    }
    else (b > a && b < 21)
    {
     	return b;   
    }
}
"
0bd7fe95ce9749e4f8a7edf4208f6c161ea14ca1,"public int countCode(String str)
{
    int x = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c')
        {
            if (str.charAt(i+1) == 'o')
            {
                if (str.charAt(i + 3) == 'e')
                {
                    x++;
                }
            }
        }
    }
    return x;
}
"
0fd5c40c96b7dfad240c5509995b5acc9eccd6b3,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
"
6951053422eb1f10e58384407fe2177bd76f6031,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum
    }
}
"
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
"
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
"
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
"
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
"
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
"
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
"
11b89a5a5c8c4cce3c90dfb984780d1229efc349,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[nums.length - 1] == 7 && nums[nums.length - 2] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
"
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
"
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
"
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
61f82d819ed02008ea7d45f70e7c86937eb58bc3,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (i == 0)
        {
            if (nums[0] == 2 && nums.length < 1)
            {
                return false;
            }
            else if (nums[0] == 2 && nums[1] != 2)
            {
                return false;
            }
        }
        else if (i == nums.length - 1)
        {
            if (nums[i] == 2 && nums[i - 1] != 2)
            {
                return false;
            }
        }
        else
        {
            if (nums[i] == 2)
            {
                if (nums[i - 1] == 2)
                {
                }
                else if (nums[i + 1] == 2)
                {
                }
                else
                {
                    return false;
                }
            }
        }
    }
    return true;
}
"
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
"
ba8cfb4cad91f6a68d58ca4ab3a88d035f324a8c,"public int sortaSum(int a, int b)
{
    if ( a + b >= 10 && a + b <= 19) {
        retun 20;
    }
    else {
        return a + b;
    }
}
"
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
"
fb63e4d9b9f844eb6f3145768fe6bd59fda4c682,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && a == c)
        result = 20;
    if (a == b || a == c || b == c)
        result = 10;
    else
        result = 0;
    return result;
 
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
"
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
"
8f13baf6c1f32fe1e3c57fc757c44293a34e0980,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    if (isAsleep)
    {
        return false;
    }
    else if (!isAsleep)
    {
        return true;
    }
    return false;
    
}
"
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
"
95315d4f40fee982b6719168e94180e03704160d,"public int sum3(int[] nums)
{
   return (nums[0] + nums[1] + nums[2]); 
}
"
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
"
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
e6b4e91acab1d81f043b26358d4b2c441fe38e23,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
cc77cf7675005a0bdbc9fe76c75879f1ad156087,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
"
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
79c58a491312a133e68b505957485ca6a71d8f83,"public int noTeenSum(int a, int b, int c)
{
	fixTeen(a);
    fixTeen(b);
    fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if ( a >= 13 && a <= 19 && a != 15 && a !=16){
        a = 0;
        return a;
    }
    if ( b >= 13 && b <= 19 && b != 15 && b !=16){
        b = 0;
        return b;
    }
    if ( c >= 13 && c <= 19 && c != 15 && c !=16){
        c = 0;
        return c;
    }
    
}
"
c093cac600fc00c29dfe5c59c8ab78dddb9a3f95,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count >= nums.length - 1);            
    
}
"
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
"
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
"
4621b6d4c1b03a6fd811349559740d32c21bd2b1,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        return false;
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return false;
}
"
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
34ad16a72b0a75568a00e876dfb72953f291c9ab,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            clumps++;
        }
    }
    return clumps;
}
"
c62602f27883f984fbc0551198122402edd6e05d,"public int[] shiftLeft(int[] nums)
{
    return int[];
}
"
309dc7997e1010df732f8ec41fd34a616365f55d,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if ((str.substring(i, i + 1) == 'co') 
            && (str.substring(i + 3) == 'e'))
        {
            count++;
        }
    }
    return count;
}
"
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
"
e503bcd53b6c1b8e1f5bceead47b945857b50e9a,"public int dateFashion(int you, int date)
{
    if ( you >= 8 && date >= 8)
    {
        return 2;
    }
    if ( you <= 2 && date <= 2)
    {
        return 0;
    }
     if ( you >= 8 && date <= 8)
    {
        return 1;
    }
   if ( you <= 8 && date >= 8)
    {
        return 1;
    }
    }
    else 
        return 1;
}
"
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
"
d17244a79757f570de9d8170c3085ee0f6678c21,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom && isAsleep)
        {
            return true;
        }
        else if (isMom && !isAsleep)
        {
            return false;
        }
        else if (!isMom && isAsleep)
        {
            return false;
        }
        else if (!isMom && !isAsleep)
        {
            return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return;
}"
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
"
d58abb87ff70ff67a76bba0f3d1f0c3ba071d518,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == false)
    {
    if (speed < 60)
        {
            return 0;
        }
    if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    if (speed >= 81)
        {
            return 2;
        }
    }
    if (isBirthday == true)
    {
        return 0;
    return 0;
    }
}"
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
684d16d1fe00b522bc43f3c44174bcb4ccab14db,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && b == c && a == c)
    {
        result = 20;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    else
    {
        result = 10;
    }
    return result;
}
"
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
87db562c5af3675b9fcf8cdf88341f5c205a229a,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return 0;
    }
    
    if (b == 13)
    {
        return a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
"
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
"
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
"
e2468a1fbac0f816c4df8538f0af6626551638b0,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
bf382bc1d92127f137bb550a9abdea9839167f1f,"public int[] shiftLeft(int[] nums)
{
    int shift = nums[0];
    if (nums.length >= 2)
    {
        //int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
78a8e8a64b313ff7d1734612cc884e563d6caea4,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b!= 13 && c!= 13)
    {
        return (a+b+c);
    }
    
    else if (a== 13)
    {
        return 0;
    }
    
    else if (b== 13)
    {
        return a;
    }
    
    else if (c==13)
    {
        return (a+b);
    }
    
    return 0;
}
"
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}"
68c510e3ae2a5f68173421badd6c7e8d285e1fd9,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        return 0
    }
    else if (speed >= 61 && speed <= 80)
    {
        return 1
    }
    else if (speed >= 81)
    {
        return 2
    }
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
"
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
"
092a37234cccc894d13af9756eed95198aa41a1a,"ublic boolean isEverywhere(int[] nums, int val) {
	boolean result = true;
	for (int i = 0; i <=nums.length-2;i++)
	{
		if ( nums[i] != val && nums[i+1] != val)
			result = false;
	}
  	return result;
}
"
532a012b0ec202d27262b383dc13089aef7e1e3b,"public int dateFashion(int you, int date)
{
   if ((you >= 2 && date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 && date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
f0be04df720e45391f559d26dc0955b0202bb87b,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n != 15 && n != 16)
        	return 0;
    return n;
}
"
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
"
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
"
22db1882535d71f9010b430616081de4d479a931,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
        if (c == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
"
d7633351c672f26ee19b79bf514fdb0837ec9cb2,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMorning && !isMom)
        return false;
    else
        return true;
}
"
d50d492ebb2d39ef30d910d235f290f774635c0f,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    if (a == b && a == c && b == c)
        return 0;
    else
        return a + b + c;
}
"
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
"
265dd4458fb43967c87890408a4569ed8e08a397,"public String alarmClock(int day, boolean vacation)
{
    if alarmClock(< 6, false)
    {
        return ""7:00""
    }
}
"
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
e93b94f6835046c42b16cfe507547d10945a4c3a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++) {
		if ((nums[i-1] == val) && 
            (nums[i] == val) && nums[i+1] == val) {
         	 return true;
        }
        else {
			return false;
        }
    }
}
"
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
"
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
"
23b5ec2ba8fe6b1ec171faaa28bcd140793480f8,"public int[] seriesUp(int n) {
  int[] result = new int[n * (n + 1) / 2];
  int i = 0;
  for (int j = 1; j <= n; ++j)
    for (int k = 1; k <= j; ++k)
      result[i++] = k;
  return result;
}"
dc1c18a727a472113299aaf5bc76ffcf6180ee19,"public String[] fizzBuzz(int start, int end)
{
    end--;
    String[] result = new String[end - start];
    
    for (int i = 0; i < end; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
3a2534fb0ac1dc3651141e9a0bd5b1830ff648bb,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""small ticket"";
        }
        else
        {
            return ""big ticket"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""no ticket"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""small ticket"";
        }
        else
        {
			return ""big ticket"";
        }
    
    }
}  
"
685a1f07697cb907cefcecfa8cf5158825e90e14,"public int countCode(String str)
{
    int length = str.length() - 2;
    int num = 0;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == c && str.charAt(i + 1) == o
            && str.charAt(i + 3) == e)
        {
            num = num + 1;
        }
    }
    return num;
}
"
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
"
470829854090aa3651ae19d0c58c374cca8e169c,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        if (nums[i] > max)
        {
            max = nums[i];
        }
        if (nums[i] < min)
        {
            min = nums[i];
        }
    }
    return (sum - (min + max)) / (nums.length - 2);
}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
eb3954d897ab04a8ee9649988f3d26e98aae722f,"public String[] fizzBuzz(int start, int end)
{
    String[] result = new String[end - start];
    
    for (int i = 0; i < end - 1; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
"
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
"
97df39519ca1ef6b02ae307ac2c9f6c6f42d2e77,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
076375a7de31fac4f71067d46b002b33e9533045,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning){
        if (isMom){
            return true;
        }
        return false;
    }
    if (isAsleep){
        return false;
    }
    return true;
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
"
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
"
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
"
270174ce7d53738e854429dc81bc8b311180b333,"public int[] shiftLeft(int[] nums)
{
    return int[] nums;
}
"
696c1ec0e96f1b96a6fd94367b67e62dffae0047,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0; 
    for (int i = 0; i < nums.length; i++) 
    {
        sum += nums[i];
        if (nums[i] > max) 
        {
            max = nums[i];
        }
        if (nums[i] < min) 
        {
            min = nums[i];
        }
    }
    return (sum - (max + min)) / (nums.length - 2);
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
d5b2f12d5cc6c645ca6a7c976d7b61c426c3a538,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
b23234bdfab0d909602eff7d91c9461d3957de8f,"public String repeatEnd(String str, int n)
{
    String last = new String();
    for (int i = 0; i <= n; i++)
    {
        last = last.concat(str.substring(str.length() - n, str.length()));
    }
    return last;
}
"
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
"
50f3da72fdd9f01a0c7804b3c9c789cddd8d9b18,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (i = 0; i < num.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count*2 == num.length);            
    
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
"
b2fb0e812684a35e4e3c4ec904afe7c944ffca87,"public int noTeenSum(int a, int b, int c)
{
	if ( a >= 13 && a <= 19)
        this.fixTeen(a);
    return a;
    if ( b > 12 && b < 20)
        this.fixTeen(b);
    return b;
    if ( c >= 13 && c <= 19)
        this.fixTeen(c);
    return c;
}

public int fixTeen(int n)
{
   if (n == 15)
       return 15;
   else if ( n == 16)
       return 16;
   else 
       return 0;
}
"
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
"
727d541babe278c063e729dab201403c18c6f003,"public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        str == ""bread"" - str - ""bread"";
    }
    else
    {
        return """";
    }
}
"
a354fe94859e5967d2c6bdce8fdb12e90a24f48c,"public int sortaSum(int a, int b)
{
    if(a + b >= 10 || a + b <= 19)
    {
    	return a + b;
    }
    
    else 
    {
    	return 20;
    }
}
"
4e250d40f6c8c4899a3eb79ea695e918be5d8a56,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
    	else if (nums[i] == 7 && nums[i + 2] == 7)
            return true;
    return false;
}
"
2b64a0277763a3e3aeb7d462893bb8e9e84266a5,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
        
        for (int i = 0; i < nums.length; i++)
        {
            sum += nums[i];
            if (nums[i] < min)
            {
                min = nums[i];
            }
            else if (nums[i] > max)
            {
                max = nums[i];                
            }
        }
    int average = (sum - min - max) / (nums.length - 2);
    
    return average;
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
f87b721de5fa4f5ff50d17d9cca6a2ce7875ebf3,"public int[] zeroMax(int[] nums) {

  int max = 0;

   

  for (int i = nums.length-1; i >= 0; i--) {

    if (nums[i] % 2 != 0)

      max = Math.max(max, nums[i]);

    if (nums[i] == 0)

          nums[i] = max;

  }

  return nums;

}

"
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
"
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
226b5d8a7b8a50ea1a33a1983fecefe1ef7fa72b,"public boolean canBalance(int[] nums)
{
	int leftNum = 0;
	int rightNum;
	for(int i = 0; i < nums.length - 1; i++)
    {
		leftNum += nums[i];
    }
	rightNum = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(leftNum == rightNum)
        {
			return true;
        }
		leftNum -= nums[i];
		rightNum += nums[i];
	}
	return (leftNum == rightNum);
}"
b21271e79419b123e5e2d4ff29ca2f214f3fb90e,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if (a==b || a==c || b==c)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
"
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
"
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
ac791e33437b3b26bd56526f8f1a68c958771022,"public int sum3(int[] nums)
{
    return nums[0]+nums[1]+nums[2];
}
"
cd23c0ed240a318d70e3ddbf504fb44f78c81ffc,"public String atFirst(String str)
{ 
    if (str.length() < 2 && str.length() != 0)
    {
        return str + ""@"";
    }
    else if (str.length() == 0)
    {
        return ""@@""
    }
    else
    {
        return str.substring(0,2);
    }
    
}
"
9f98cd5893ed8711953832332cb9e68381d2d182,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str.substring(str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
73f5812129581e308755fc1f0718e0316e0cb337,"public int sum3(int[] nums)
{
    return (num[0] + num[1] + num[2]);
}
"
c9db41e8ca91d96bee3eb4e5f89bb33135f954df,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
        return 20;
    
}
"
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
"
1d6179ccdc1c6fce139143f569025a679c1301a0,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        	largeOdd == nums[i];
        if (nums[i] == 0)
        	nums[i] == largeOdd;
    }
    return nums;
}"
5c715bf4981e650031e289e8034aa0032ff99f9a,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
"
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
"
4c1142050564d6fd24a50c0eba830e56d9f3c3cb,"public int sum3(int[] nums)
{
    int total = nums[1] + nums[2] + nums[3];
    return total;
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
dca1f726e64da2460020f1bbac55668502eddba7,"public int roundSum(int a, int b, int c)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
    
}

public int round10(int num)
{
    return (round10(a) + round10(b) + round10(c));
    
}
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
a05e5d98a96c772e1afad34a0ae82871a6e741d0,"public String zipZap(String str)
{
    int num = 0;
    for (int i = 2; i < str.length(); i++)
    {
        if (str.charAt(num) == 'z' && str.charAt(i) == 'p')
        {
            str.replace(str.substring(num, i), ""zp"")
        }
        num += 1;
    }
    return str;
}
"
2b976fe20b1e401744827a000d91d5535db7d93b,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <=90);
}
"
761faf27118f8d7637200b8140f5a550d392d440,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
     if ( (n >=13 && n < 15) || (n > 16 && n <= 19) )
     {
         return 0;
     }
    else
    {
        return n;
    }
}

"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
dc1c18a727a472113299aaf5bc76ffcf6180ee19,"public String[] fizzBuzz(int start, int end)
{
    end--;
    String[] result = new String[end - start];
    
    for (int i = 0; i < end; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
"
4a9806e5d979032eadab4c8d23dec29284441f09,"public int greenTicket(int a, int b, int c)
{	
   	int result = 10;
    if (a != b && b != c && a != c)
    {    
        result = 0;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    return result;
}
"
c8a0be59dec0a41242ebf952c04bb2e31259d489,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
4e651e8df90f087942b32424b07d4257df1ddc47,"public String atFirst(String str)
{
    return '@';
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
50f3da72fdd9f01a0c7804b3c9c789cddd8d9b18,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (i = 0; i < num.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count*2 == num.length);            
    
}
"
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
55008f2ac50ecaccae3a878e34d56a2f00118737,"public int countClumps(int[] nums)
{
	int clump = 0;
    for (int i = 0; i < nums.length;i++)
    {
        
       {
           if ( i + 1 < nums.length)
           {
               if (nums[i] == nums[i + 1])
               {
                   clump = clump + 1;
                   for (int j = 1; j < nums.length; j++)
                   {
                       if (nums[i + 1] == nums[i + 1 + j])
                       {
                           i = i + 1;
                       }
                   }
               }
           }
       }
    }
    return clump;
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
3a244a1b4e96b9b233338061c4229807fb89777c,"public int countCode(String str)
{
    int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
226b5d8a7b8a50ea1a33a1983fecefe1ef7fa72b,"public boolean canBalance(int[] nums)
{
	int leftNum = 0;
	int rightNum;
	for(int i = 0; i < nums.length - 1; i++)
    {
		leftNum += nums[i];
    }
	rightNum = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(leftNum == rightNum)
        {
			return true;
        }
		leftNum -= nums[i];
		rightNum += nums[i];
	}
	return (leftNum == rightNum);
}"
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
dc77d9f47e20012cfdff686d71cf058927245c62,"public int roundSum(int a, int b, int c)
    return round10(a) + round10(b) + round10(c));

public int round10(int num)
{
    int digit = num % 10;
	if (digit >= 5)
        return num = (10 - digit);
    return num - digit;
}
"
66d81d6a71405ccedc06586970c02dcccae77323,"public int[] fix45(int[] nums)
{
    int k;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(k = 0; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4)); k++)
            {
                k = k;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
62d31dc1d181609f1ad5028901c8db29d61ea2b8,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    else 
    {
        return (a +b);
    }
}
"
32a88259dc225b680cacb119048b64e000580b5a,"public int[] fix45(int[] nums)
{
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i + 1] != 5)
		{
			for(int j = 0; !(nums[j] == 5 && (j == 0 || j > 0 && 				nums[j-1] != 4)); j++)
            {
				nums[j] = nums[i + 1];
				nums[i + 1] = 5;
            }
		}
	}
	return nums;
}"
085c90128653ad2d02262a5079a336364fa0a7cb,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || b==c || a == c)
        return 10;
    else 
        return 0;
}
"
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
"
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
"
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
"
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
"
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
22fda47732546394dab7ecbb147aa3cdbdb03099,"public boolean xyBalance(String str)
{
  int l = str.length() - 1;
    for (int i = l; i >= 0; i--)
    {
        char n = str.charAt(i);
        if (n == 'x')
        {
            return false;
        }
        if (n == 'y')
        {
            return true;
        }
    }
    return true;
    }
"
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
"
ab752aa9f041e605c697b86bdcb50aa8b25db534,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
"
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
"
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
"
328f2f06f07e26aac03e4e4a6df016fc0c620fcc,"public int redTicket(int a, int b, int c)
{
      if (a == 2 && b == 2 && c == 2)
    return 10;
  if ( a == b && b == c)
    return 5;
  if ( a != b && a != c)
    return 1;
  else
    return 0;
}
"
ac791e33437b3b26bd56526f8f1a68c958771022,"public int sum3(int[] nums)
{
    return nums[0]+nums[1]+nums[2];
}
"
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
"
23b5ec2ba8fe6b1ec171faaa28bcd140793480f8,"public int[] seriesUp(int n) {
  int[] result = new int[n * (n + 1) / 2];
  int i = 0;
  for (int j = 1; j <= n; ++j)
    for (int k = 1; k <= j; ++k)
      result[i++] = k;
  return result;
}"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
bc09c16b358c849617c92c4ea257b6ef268a29a1,"public int sortaSum(int a, int b)
{
    if (10 <= a + b && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a+b;
    }
    
    
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
2bc6224c6d864641adc76e92803ba8b015954d7f,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
"
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
"
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
"
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
"
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
"
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
47f3a74a254afbf6c445487eff4eb1c0df9e20df,"public boolean has77(int[] nums)
{
    int blob = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (i < nums.length - 2)
        {
            if (nums[i] == nums[i + 1] && nums[i] == 7)
        	{
            	blob = blob + 100;
        	}
            if (nums[i] == nums[i + 2] && nums[i] == 7)
            {
                blob = blob + 100;
            }
        }   
        else if (nums[i] == nums[i + 1] && nums[i] == 7)
        {
            blob = blob + 100;
        }
        else
        {
            blob = blob + 1;
        }
    }
    return blob >= 100;
}
"
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
"
8dd0ea4aa40c9c74b0f4a3dddd8ecdfabf898186,"public int sortaSum(int a, int b)
{
    sum = a+b;
    if (sum>=10&&sum <=19)
    {
        return 20;
    }
    else
    {
        return sum;
    }
    
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
"
2216bc569ee8caff75d3702a81475722e85c8551,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 || n == 16)
            return n;
        return 0;
    //return n;
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
78a8e8a64b313ff7d1734612cc884e563d6caea4,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b!= 13 && c!= 13)
    {
        return (a+b+c);
    }
    
    else if (a== 13)
    {
        return 0;
    }
    
    else if (b== 13)
    {
        return a;
    }
    
    else if (c==13)
    {
        return (a+b);
    }
    
    return 0;
}
"
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
9cccc838c6123ff6e830e3f73cb672510aa4de73,"public String atFirst(String str)
{
    if (str.length() >= 2)
    return str.substring(0,2);
  else if (str.length() == 1)
    return str + ""@"";
  else
    return ""@@"";

}
"
87db562c5af3675b9fcf8cdf88341f5c205a229a,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return 0;
    }
    
    if (b == 13)
    {
        return a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
d5b2f12d5cc6c645ca6a7c976d7b61c426c3a538,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
19a5b90083c799114b8bccdc97fb09a69be2aba1,"public int greenTicket(int a, int b, int c)
{
    if (a == b || a == c || b == c)
        return 10;
	if (a == b && a == c || b == c)
        return 20;
    else
        return 0;
}
"
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
"
d6ecef2688242348be94ae9cf4d683dbfee353d2,"public int countClumps(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
        if (nums[i] = nums[i+1])
        {
            
            count += 1;
            
        }
        
    }
    
    
    return count;
    
    
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
0cb8c025b705f4587b7d469c16c902e554391541,"public int[] frontPiece(int[] nums)
{
    return frontPiece;
}
"
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
"
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
"
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}"
bf0fb85d68a871de1263a11b4d6bf089714fa3ce,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0 ; nums.length > i; i++)
    {
        if (nums[i] == val || nums[i+1] == val)
        {
            return true;
        }
    }
    return false;
    
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
c72936a1839694da8df5554d66db79bf67bec60c,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (isBirthday)
    {
        speed = speed + 5
    }
	if (speed <= 60)
	{
    	return 0;
	}
    
	if (speed >= 61 && speed <= 80)
	{
    	return 1;
	}
    
	if (speed >= 81)
	{
    	return 2;
	}
	
}
"
acf68ee14e8bbbb4c7037ac6430a44a2a7624ef8,"public int roundSum(int a, int b, int c)
{
      return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int n = num % 10;
    
    if(n >= 5)
    {
        num = num + (10-n);
    }
    else
    {
        num = num - n;
    }
    return num;
}
"
c386e80b45b1f867ba40aaf3d78f271a5bd2ffe0,"public int noTeenSum(int a, int b, int c)
{
	if(a <= 19 && a >= 13)
    {
    	return b + c;
    }
    
    if(b <= 19 && b >= 13)
    {
    	return a + c;
    }
    
    if(c <= 19 && c >= 13)
    {
    	return a + b;
    }
}

public int fixTeen(int n)
{
	    
}
"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
727d541babe278c063e729dab201403c18c6f003,"public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        str == ""bread"" - str - ""bread"";
    }
    else
    {
        return """";
    }
}
"
8ea314af4ea3aa3a6d57f2c90ff7786608a23927,"public int noTeenSum(int a, int b, int c)
{
	int numA = a;
    int numB = b;
    int numC = c;
    return (fixTeen(numA) + fixTeen(numB) + fixTeen(numC));
}

public int fixTeen(int n)
{
    int num = n;
    if (num == 15 || num == 16)
    {
        return num;
    }
    else if (num >= 13 && num <= 19)
    {
        return 0;
    }
    else
    {
        return num;
    }
}
"
037d9cfb7e70b9ec11a3da816118f6d729a3b257,"public boolean has77(int[] nums)
{
	for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
"
c093cac600fc00c29dfe5c59c8ab78dddb9a3f95,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count >= nums.length - 1);            
    
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
150674542f779f0f080fa72fb20d5088fbe7f75e,"public int sortaSum(int a, int b)
{
    int sum = 0;
    sum = a + b;
    if (sum >= 10 && sum <= 19){
        sum = 20;
    }
    return sum;
}
"
7bbe47ddbd540b9999602f687a555456a4122938,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	while (isBirthday == false)
    {
    	if (speed <= 60)
        {
            return 0;
        }
    	else if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    	else if (speed >= 81)
        {
            return 2;
        }
    }
    while (isBirthday == true)
    {
        if (speed <= 65)
        {
            return 0;
        }
    	else if (speed >= 66 && speed <= 85)
        {
            return 1;
        }
    	else if (speed >= 86)
        {
            return 2;
        }
    }
    return 1;
}"
6434b911e74e0d2939d97a8820552e19fd926f60,"public int countClumps(int[] nums)
{
      int current = -1, clump = 0;
  for(int i = 0; i < nums.length - 1; i++) {
    if(nums[i] == nums[i + 1] && nums[i] != current) {
       current = nums[i];
       clump++;
    } else {
       if(nums[i] != current) {
          current = -1;
       }
    }
  }
  return clump;
}
"
04780365d53ec02bf23dee2452c32d0edb7fb12c,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
3850876d2c56148eb728593d89548d81773d092d,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                while ((nums[i] == nums[i]) && (i < num.length)
                {
                    i++;
                }
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int sumVal = 1;
    while (nums[start] == initValue)
    {
        sumVal++;
        start++;
    }
    return sumVal;
}"
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
"
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
"
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
"
054947245110fe21e7c54bf774cacf65261ff180,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) {
        if (i + 2 <= str.length()) {
            if (str.substring(i, i+2)) {
                return (str.charAt(i).equals(""b"") && str.charAt(i+2).equals(""b""));
            }
        }
    }
                return false;
}
"
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
"
13864ac96c4023a6c7e3db73dd0c11750234fe40,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
5751db3148c8805ad9e482b9dedd7ade5357ba47,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
    {
        return str.substring(first + 5, last);
    }
    else
    {
    return """";
    }
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
"
532a012b0ec202d27262b383dc13089aef7e1e3b,"public int dateFashion(int you, int date)
{
   if ((you >= 2 && date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 && date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
e7aad59bc0f7416c80deba043153af59de5ea985,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i <= nums.length - 1; i++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            everywhere = true;
            break;
        }
    }
    return everywhere;
}
"
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
7bbe47ddbd540b9999602f687a555456a4122938,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	while (isBirthday == false)
    {
    	if (speed <= 60)
        {
            return 0;
        }
    	else if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    	else if (speed >= 81)
        {
            return 2;
        }
    }
    while (isBirthday == true)
    {
        if (speed <= 65)
        {
            return 0;
        }
    	else if (speed >= 66 && speed <= 85)
        {
            return 1;
        }
    	else if (speed >= 86)
        {
            return 2;
        }
    }
    return 1;
}"
8dd0ea4aa40c9c74b0f4a3dddd8ecdfabf898186,"public int sortaSum(int a, int b)
{
    sum = a+b;
    if (sum>=10&&sum <=19)
    {
        return 20;
    }
    else
    {
        return sum;
    }
    
}
"
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
"
d6ecef2688242348be94ae9cf4d683dbfee353d2,"public int countClumps(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
        if (nums[i] = nums[i+1])
        {
            
            count += 1;
            
        }
        
    }
    
    
    return count;
    
    
}
"
19a5b90083c799114b8bccdc97fb09a69be2aba1,"public int greenTicket(int a, int b, int c)
{
    if (a == b || a == c || b == c)
        return 10;
	if (a == b && a == c || b == c)
        return 20;
    else
        return 0;
}
"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
c386e80b45b1f867ba40aaf3d78f271a5bd2ffe0,"public int noTeenSum(int a, int b, int c)
{
	if(a <= 19 && a >= 13)
    {
    	return b + c;
    }
    
    if(b <= 19 && b >= 13)
    {
    	return a + c;
    }
    
    if(c <= 19 && c >= 13)
    {
    	return a + b;
    }
}

public int fixTeen(int n)
{
	    
}
"
e380683c57feefa7fb3a525ba8c8887539b740dc,"public int greenTicket(int a, int b, int c)
{
 	if (a==b && b==c)
    {
        return 20;
    }
    
     if (a==b && a==c)
    {
        return 10;
    }
    
    if (a!=b && b!=c)
    {
        return 0;
    }
    
    
 	return 10;
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
"
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
da854431fc95a4fda3f5795de985db2ccfd6cecc,"public boolean xyzThere(String str)
{
    if (str.length() >= 3) {
   	 	for (int i = 0; i < str.length() - 3; i++) {
        	if (str.substring(i, i + 3).equals(""xyz"")) {
            	if (i == 0) {
                    return true;
                }
                else if (str.charAt(i - 1) == '.') {
                    return false;
                }
                else {
                    return true;
                }
        	}
            else {
               return false; 
            }
    	}
    }
    else {
        return false;
    }
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
c62602f27883f984fbc0551198122402edd6e05d,"public int[] shiftLeft(int[] nums)
{
    return int[];
}
"
3bd541a9a74cfbc86ccd7aff7e6e071a6371cb04,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
"
9cccc838c6123ff6e830e3f73cb672510aa4de73,"public String atFirst(String str)
{
    if (str.length() >= 2)
    return str.substring(0,2);
  else if (str.length() == 1)
    return str + ""@"";
  else
    return ""@@"";

}
"
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
e66af3fd10029e3b0eddec751863c4988c7a3b9a,"public boolean sameEnds(int[] nums, int n)
{
    int num = 0;
    for (int i = n; i > 0 n;i--)
    {
        if (nums[i] == nums[nums.length - i + 1])
        {
            num = num + 1;
        }    
    }
    if (num == n)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
47bcbb118b9820ce001397912cd55ec9c5521a9b,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
        return c;
    }
    if (a == c)
        return b;
    if (b == c)
        return a;
    return (a + b + c);
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
e2468a1fbac0f816c4df8538f0af6626551638b0,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
"
67b31d44e53f66de27582ca427b2dcf657e7f18c,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a = b && b == c)
        return 10;
    
    if (a = b && b == c)
        return 5;
        
    if (a != b && a != c)
        return 1;
    
    return 0;
}
"
1dc0a9281fe5c33922d59a28a48a7003fd59765d,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        retrun = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
"
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
"
63c16bfedccd87efec3a9615707b53bae96e87cb,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
      
    for(int i = 0; i < str.length() - 5; i++) {
        if(str.substring(i, i + 5).equals(""bread"")) {
            first = i;
            break;
        }
    }
                                
    for(int i = str.length() - 5; i >= 0; i--) {
        if(str.substring(i, i + 5).equals(""bread"")) {
            last = i;
            break;
        }
    }
                                                          
    if(first != -1 && last != -1 && first != last)
        return str.substring(first + 5, last);
                                                                    
    return """";
}
"
cc77cf7675005a0bdbc9fe76c75879f1ad156087,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
bd4ab1662bb8f09f26dc5dd978ba13826af43bbe,"public int countCode(String str)
{
 int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
a767440796f740efacb74e1a68a50c6ef184a501,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length - 1; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
"
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
"
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
"
0615e4e3628f3968baa7039844e88175c1722d19,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend)
    {
        return (cigar >= 40);
    }//end if
    
    return (cigars >= 40 && cigars <= 60);
    
    
}
"
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
c9db41e8ca91d96bee3eb4e5f89bb33135f954df,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
        return 20;
    
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
"
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
"
f0205df67f010e325ec1614fba0a300d61a74dec,"public int blackjack(int a, int b)
{
    double valueA;
    valueA = (a % 21);
    double valueB;
    valueB =  (b % 21);
    
    if (a < 21 || b < 21)
    {
        if (double valueA > double valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else if (a < 21 && b < 21)
    {
        if (valueA > valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else
    {
        return 0;
    }
}
"
c093cac600fc00c29dfe5c59c8ab78dddb9a3f95,"public boolean isEverywhere(int[] nums, int val)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int el1 = nums[i];
        int el2 = nums[i + 1];
        if ( el1 == val || el2 == val)
        {
            count ++;
        }
    }
    return (count >= nums.length - 1);            
    
}
"
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
"
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
"
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
"
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
d9d0af4a86d3d806a73729146509fcd884212bbe,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 && (a + b) <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
3d11719630fc8c44b85deba0b9752e36fb374a27,"public int luckySum(int a, int b, int c)
{
    if (a = 13)
    {
        return 0;
    }
    else if (b = 13)
    {
        return a;
    }
    else if (c = 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
309dc7997e1010df732f8ec41fd34a616365f55d,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if ((str.substring(i, i + 1) == 'co') 
            && (str.substring(i + 3) == 'e'))
        {
            count++;
        }
    }
    return count;
}
"
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
a05e5d98a96c772e1afad34a0ae82871a6e741d0,"public String zipZap(String str)
{
    int num = 0;
    for (int i = 2; i < str.length(); i++)
    {
        if (str.charAt(num) == 'z' && str.charAt(i) == 'p')
        {
            str.replace(str.substring(num, i), ""zp"")
        }
        num += 1;
    }
    return str;
}
"
a040447a7a4d000d3f8dce6203fbc10a54cdf382,"public int blackjack(int a, int b)
{
    if (a>21)
    {
        a=0;
   		return a;
    }
    if (b>21)
    {
        b=0;
        return b;
    }
    if (a>b)
    {
     return a;   
    }
	else
	{	
    return b;
    }
}
"
06ce870f764275dc4fbe2e7c3328c4f9612d64a7,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 0; i<n; i++)
    {
        last = last + last;
    }
    return last;
        
}
"
eb3954d897ab04a8ee9649988f3d26e98aae722f,"public String[] fizzBuzz(int start, int end)
{
    String[] result = new String[end - start];
    
    for (int i = 0; i < end - 1; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
b53ab834a811096b76a803c390009392801834ab,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
56ac97e6ac311645870c594b750311820db92f19,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        n = 0;
}
"
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
"
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
f53fe967f0579e586ca2895910f4b0362cabe181,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
22fda47732546394dab7ecbb147aa3cdbdb03099,"public boolean xyBalance(String str)
{
  int l = str.length() - 1;
    for (int i = l; i >= 0; i--)
    {
        char n = str.charAt(i);
        if (n == 'x')
        {
            return false;
        }
        if (n == 'y')
        {
            return true;
        }
    }
    return true;
    }
"
68c510e3ae2a5f68173421badd6c7e8d285e1fd9,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        return 0
    }
    else if (speed >= 61 && speed <= 80)
    {
        return 1
    }
    else if (speed >= 81)
    {
        return 2
    }
}
"
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
"
ec440fd647af59cbea91a966ccc1596f685d24fa,"public int blackjack(int a, int b)
{
   if ( a > 21 && b > 21)
   {
      return 0; 
   }
    if (21 - b > a)
    {
        return a;
    }
    else 
        return b;
}
"
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
"
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
"
a354fe94859e5967d2c6bdce8fdb12e90a24f48c,"public int sortaSum(int a, int b)
{
    if(a + b >= 10 || a + b <= 19)
    {
    	return a + b;
    }
    
    else 
    {
    	return 20;
    }
}
"
039a5741fb82006d59f66a5ffd100359f6a3aa77,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
    	if (cigars >= 40)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
    else
    {
    	if (cigars >= 40 && cigars <= 60)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
f4b03862b0451a373caa9f6bb7390b99d9c24f62,"public String atFirst(String str)
{
    return str.substring(0, 2);
}
"
684d16d1fe00b522bc43f3c44174bcb4ccab14db,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && b == c && a == c)
    {
        result = 20;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    else
    {
        result = 10;
    }
    return result;
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
8ea314af4ea3aa3a6d57f2c90ff7786608a23927,"public int noTeenSum(int a, int b, int c)
{
	int numA = a;
    int numB = b;
    int numC = c;
    return (fixTeen(numA) + fixTeen(numB) + fixTeen(numC));
}

public int fixTeen(int n)
{
    int num = n;
    if (num == 15 || num == 16)
    {
        return num;
    }
    else if (num >= 13 && num <= 19)
    {
        return 0;
    }
    else
    {
        return num;
    }
}
"
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
d5ea2258e6bbd9d86632fcb90f4a201b12aae284,"public int greenTicket(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 20;
    }    
    
    if ((a == b) || (b == c) || (a == c))
    { 
        return 10;
    } 
    else
    {
    	return 0;
    }
}
"
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
"
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
"
5a00919d938e7350f9d887a0f3c496f766fa3b49,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
"
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
"
61f82d819ed02008ea7d45f70e7c86937eb58bc3,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (i == 0)
        {
            if (nums[0] == 2 && nums.length < 1)
            {
                return false;
            }
            else if (nums[0] == 2 && nums[1] != 2)
            {
                return false;
            }
        }
        else if (i == nums.length - 1)
        {
            if (nums[i] == 2 && nums[i - 1] != 2)
            {
                return false;
            }
        }
        else
        {
            if (nums[i] == 2)
            {
                if (nums[i - 1] == 2)
                {
                }
                else if (nums[i + 1] == 2)
                {
                }
                else
                {
                    return false;
                }
            }
        }
    }
    return true;
}
"
2554504cf73dcc772aa6c40d5e1c117584eceb44,"public int sum13(int[] nums)
{
    int total = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i > 0)
        {
            if (nums[i] != 13 && nums[i - 1] != 13)
            {
                total += nums[i];
            }
        }
        else
        {
            if (nums[i] != 13)
            {
                total += nums[i];
            }
        }
    }
    
    return total;
}
"
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
"
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
"
47bcbb118b9820ce001397912cd55ec9c5521a9b,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
        return c;
    }
    if (a == c)
        return b;
    if (b == c)
        return a;
    return (a + b + c);
}
"
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
"
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
"
c9db41e8ca91d96bee3eb4e5f89bb33135f954df,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
        return 20;
    
}
"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
"
2fca6215c9c9afb58d28887169dfe435558d7825,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a <= 21 && a > b)
    {
        return a;
    }
    else if (b <= 21 && b > a)
    {
        return b;
    }
    else if (b <= 21 && a > 21)
    {
        return b;
    }
    else
    {
     	return a;   
    }
}
"
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
"
8bf0c02326a8dece6634c3b907e8da6aa6c7a3cf,"public int countCode(String str)
{
    if (str.length() < 4)
        return 0;
    
    if (str.indexOf(""c"") == -1)
        return 0;
    
    int total = 0;
    
    for (int i = str.indexOf(""c""); i < str.length() - 3; i++)
    {
     	   if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i+3) == 'e')
           {
            	total = total + 1;	   
           }
    }
    return total;
}
"
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
"
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}"
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
"
761faf27118f8d7637200b8140f5a550d392d440,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
     if ( (n >=13 && n < 15) || (n > 16 && n <= 19) )
     {
         return 0;
     }
    else
    {
        return n;
    }
}

"
eadc5df754b07dbc81ee348ee4bbd34ce3b39f20,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
        return 20;
    else
        return (a + b);
}
"
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
b21271e79419b123e5e2d4ff29ca2f214f3fb90e,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if (a==b || a==c || b==c)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
"
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
ab752aa9f041e605c697b86bdcb50aa8b25db534,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
cd727adb54733c5b0e8ec8f90e3a20c4ce931c92,"public int makeChocolate(int small, int big, int goal)
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
    {
        return remainder;
    }
        
    return - 1;
}
"
09c6de5e29a256d7add784dac3a966346a82e499,"public int countClumps(int[] nums)
{
    int clumps = 0;
    int flag = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == flag)
            continue;
        if (nums[i] == nums[i + 1])
        {
            clumps++;
            flag = nums[i];
        }
        else
        {
            flag = nums[i];
        }
    }
    return clumps;    
}
"
9f98cd5893ed8711953832332cb9e68381d2d182,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str.substring(str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
"
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
"
2bc6224c6d864641adc76e92803ba8b015954d7f,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
a05e5d98a96c772e1afad34a0ae82871a6e741d0,"public String zipZap(String str)
{
    int num = 0;
    for (int i = 2; i < str.length(); i++)
    {
        if (str.charAt(num) == 'z' && str.charAt(i) == 'p')
        {
            str.replace(str.substring(num, i), ""zp"")
        }
        num += 1;
    }
    return str;
}
"
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
06ce870f764275dc4fbe2e7c3328c4f9612d64a7,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 0; i<n; i++)
    {
        last = last + last;
    }
    return last;
        
}
"
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
"
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
f1718cb6a2aa1704dac4fe8668d12e2c68a62b81,"public int[] fix45(int[] nums)
{
    for	(int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int k = 0;
            while	(nums[k] != 5)
            {
                k++;
            }
            nums[k] = nums[i+1];
            nums[i + 1] = 5;
            
        }
    }
    return nums;
}
"
aa4d8b44bff62be088c0c94a7829aa410ffa133b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        if (speed >= 81)
        {
            return 2;
        }
    }
    if (!isBirthday)
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}"
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
"
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
"
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
"
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
"
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
"
6a4ae6473f6985821bb7fa611600b6f86a3b1e44,"public int findOdd(int[] nums, int index)
{
    int biggestOdd = 1;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd = nums[j];
    return biggestOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
a457e813b62121d4bee7f0cd63ba678e9441866c,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    
    if (a == b){
        result = 10;
        if (a == c && b == c){
            result = 10;
        }
     }
    else if ( c == b){
        result == 10;
    }
        
            
    return result;
}
"
bda78f041aeff5c1c99839481d54cb270d0f1529,"public int makeChocolate(int small, int big, int goal)
{
     if goal >= 5 * big
     {
        remainder = goal - 5 * big；
     }
    else
    {
        remainder = goal % 5；
    }
        
    if remainder <= small
    {
        return remainder；
    }
        
    return -1；
}
"
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
089ca3166be0e9056768d2bb5712cd5bd123b58a,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[3]);
}
"
cd80603c865a5f537dae1c802b4d53681015978e,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
092a37234cccc894d13af9756eed95198aa41a1a,"ublic boolean isEverywhere(int[] nums, int val) {
	boolean result = true;
	for (int i = 0; i <=nums.length-2;i++)
	{
		if ( nums[i] != val && nums[i+1] != val)
			result = false;
	}
  	return result;
}
"
4bbc3e204cd69131a96c0f7ab0f9c94499406204,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
        {
            return 10;
        }
    else if ((a == b) && (b == c) && (a == c))
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
ec7f457115687180217c5031a741ed0ee5198ec6,"public int noTeenSum(int a, int b, int c)
{
	int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
        return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
    }
}
"
66d81d6a71405ccedc06586970c02dcccae77323,"public int[] fix45(int[] nums)
{
    int k;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(k = 0; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4)); k++)
            {
                k = k;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
13864ac96c4023a6c7e3db73dd0c11750234fe40,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1"
55008f2ac50ecaccae3a878e34d56a2f00118737,"public int countClumps(int[] nums)
{
	int clump = 0;
    for (int i = 0; i < nums.length;i++)
    {
        
       {
           if ( i + 1 < nums.length)
           {
               if (nums[i] == nums[i + 1])
               {
                   clump = clump + 1;
                   for (int j = 1; j < nums.length; j++)
                   {
                       if (nums[i + 1] == nums[i + 1 + j])
                       {
                           i = i + 1;
                       }
                   }
               }
           }
       }
    }
    return clump;
}
"
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
309dc7997e1010df732f8ec41fd34a616365f55d,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if ((str.substring(i, i + 1) == 'co') 
            && (str.substring(i + 3) == 'e'))
        {
            count++;
        }
    }
    return count;
}
"
dead7e5e377079599c11bb673bf7c1248fef60fc,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if ( a == b && b == c)
    {
        sum = a;
    }
    else if (a == b || a == c)
    {
        sum = sum - a;
    }
    else if (b == c)
    {
        sum = sum - b;
    }
    return sum;
}
"
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
2ee7d366ef45e04675e68bd5cfd425ac0862af68,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else
    {
		return ""@@"";
    }

  }
"
a6eca60d2ec41fba18ab610a87ee9c66cbb73d19,"public int findOdd(int[] nums, int index)
{
    biggestOdd = 1;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd == nums[j];
    return biggerOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
"
4d384fd87638ed186323e848f2ec5a09c96e1c17,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
        // do nothing
    }
    else if (b == 13)
    {
        sum = sum + a;
    }
    else if (c == 13)
    {
        sum = sum + a + b;
    }
    else 
    {
        sum = sum +a + b + c;
    }
    return sum;
}
"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
afc446a41249ff6f3b831055c3395252d73f682c,"public int findOdd(int[] nums, int index)
{
    int biggestOdd = 1;
    for (int j = index + 1; j < nums.length; j++)
        if (nums[j] % 2 == 1)
            if (biggestOdd < nums[j])
                biggestOdd = nums[j];
    return biggerOdd;
        
}

public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
        if (nums[i] == 0)
            nums[i] = findOdd(nums, i);
    return nums;
    
}

"
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
"
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
"
80b80a660b8113337e5dc1d8d8d78cd8c918c58c,"public int[] seriesUp(int n)
{
    int[] result = new int[n*(n+1)/2];
    int m = 0;
    for (int i = 0;i<=n;i++)
    {
        for (int j = 1;j<i;j++, m++)
        {
            result[m] = j;
        }
        return result;
    }
}"
d5b2f12d5cc6c645ca6a7c976d7b61c426c3a538,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
02c1f791fb8f450361e3bba08c084c74102eeb61,"public int countEvens(int[] nums)
{
    for (num: int[] nums)
    {}
}
"
79f2da1916c858f4bd63251e6ec244aad4272418,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
    {
		return n;
    }
    else
    {
		return 0;
    }
}
public int noTeenSum(int a, int b, int c)
{  
    return (fixTeen(a) + fixTeen(b) +fixTeen(c)); 
}
"
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
"
150674542f779f0f080fa72fb20d5088fbe7f75e,"public int sortaSum(int a, int b)
{
    int sum = 0;
    sum = a + b;
    if (sum >= 10 && sum <= 19){
        sum = 20;
    }
    return sum;
}
"
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
"
ba8cfb4cad91f6a68d58ca4ab3a88d035f324a8c,"public int sortaSum(int a, int b)
{
    if ( a + b >= 10 && a + b <= 19) {
        retun 20;
    }
    else {
        return a + b;
    }
}
"
5c715bf4981e650031e289e8034aa0032ff99f9a,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
cd23c0ed240a318d70e3ddbf504fb44f78c81ffc,"public String atFirst(String str)
{ 
    if (str.length() < 2 && str.length() != 0)
    {
        return str + ""@"";
    }
    else if (str.length() == 0)
    {
        return ""@@""
    }
    else
    {
        return str.substring(0,2);
    }
    
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
1dc0a9281fe5c33922d59a28a48a7003fd59765d,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        retrun = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
4e651e8df90f087942b32424b07d4257df1ddc47,"public String atFirst(String str)
{
    return '@';
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
8ea314af4ea3aa3a6d57f2c90ff7786608a23927,"public int noTeenSum(int a, int b, int c)
{
	int numA = a;
    int numB = b;
    int numC = c;
    return (fixTeen(numA) + fixTeen(numB) + fixTeen(numC));
}

public int fixTeen(int n)
{
    int num = n;
    if (num == 15 || num == 16)
    {
        return num;
    }
    else if (num >= 13 && num <= 19)
    {
        return 0;
    }
    else
    {
        return num;
    }
}
"
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
"
aa4d8b44bff62be088c0c94a7829aa410ffa133b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        if (speed >= 81)
        {
            return 2;
        }
    }
    if (!isBirthday)
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}"
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
"
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
97df39519ca1ef6b02ae307ac2c9f6c6f42d2e77,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
"
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
"
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
"
61f82d819ed02008ea7d45f70e7c86937eb58bc3,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (i == 0)
        {
            if (nums[0] == 2 && nums.length < 1)
            {
                return false;
            }
            else if (nums[0] == 2 && nums[1] != 2)
            {
                return false;
            }
        }
        else if (i == nums.length - 1)
        {
            if (nums[i] == 2 && nums[i - 1] != 2)
            {
                return false;
            }
        }
        else
        {
            if (nums[i] == 2)
            {
                if (nums[i - 1] == 2)
                {
                }
                else if (nums[i + 1] == 2)
                {
                }
                else
                {
                    return false;
                }
            }
        }
    }
    return true;
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
"
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
c62602f27883f984fbc0551198122402edd6e05d,"public int[] shiftLeft(int[] nums)
{
    return int[];
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
68c510e3ae2a5f68173421badd6c7e8d285e1fd9,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        return 0
    }
    else if (speed >= 61 && speed <= 80)
    {
        return 1
    }
    else if (speed >= 81)
    {
        return 2
    }
}
"
ba8cfb4cad91f6a68d58ca4ab3a88d035f324a8c,"public int sortaSum(int a, int b)
{
    if ( a + b >= 10 && a + b <= 19) {
        retun 20;
    }
    else {
        return a + b;
    }
}
"
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
"
d4727621894f4b6e95bac621a23e19a3148b6d8b,"public boolean endOther(String a, String b)
{
    if (a.toLowerCase().endsWith(b.toLowerCase()))
        {
            return true;
        }
    else if (b.toLowerCase().endsWith(a.toLowerCase()))
             {
                 return true;
             }
    else
             {
                 return false;
             }
}
"
fd19ee70b6ed78dc3c5cf345b006e41ad230749d,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
"
0f838818781093168101b362c3ceaa5ac771a653,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 2;
}
"
c1dc534bc134ac150f2499c964686d5c7968c85a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        System.out.printIn(""0"");
    }
    else if (speed >= 61 && <= 80)
    {
        System.out.printIn(""1"")
    }
    else if (speed >= 81)
    {
        System.out.printIn(""2"")
    }
    
}
"
092a37234cccc894d13af9756eed95198aa41a1a,"ublic boolean isEverywhere(int[] nums, int val) {
	boolean result = true;
	for (int i = 0; i <=nums.length-2;i++)
	{
		if ( nums[i] != val && nums[i+1] != val)
			result = false;
	}
  	return result;
}
"
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
02c1f791fb8f450361e3bba08c084c74102eeb61,"public int countEvens(int[] nums)
{
    for (num: int[] nums)
    {}
}
"
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
"
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
"
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
"
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
f87b721de5fa4f5ff50d17d9cca6a2ce7875ebf3,"public int[] zeroMax(int[] nums) {

  int max = 0;

   

  for (int i = nums.length-1; i >= 0; i--) {

    if (nums[i] % 2 != 0)

      max = Math.max(max, nums[i]);

    if (nums[i] == 0)

          nums[i] = max;

  }

  return nums;

}

"
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
"
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
"
c64c9e9c0a786ef3732a68209a390d30d8284fd4,"public int dateFashion(int you, int date)
{
   if ((you >= 2 || date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 || date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
5751db3148c8805ad9e482b9dedd7ade5357ba47,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
    {
        return str.substring(first + 5, last);
    }
    else
    {
    return """";
    }
}
"
0cb8c025b705f4587b7d469c16c902e554391541,"public int[] frontPiece(int[] nums)
{
    return frontPiece;
}
"
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
"
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
"
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
"
9cccc838c6123ff6e830e3f73cb672510aa4de73,"public String atFirst(String str)
{
    if (str.length() >= 2)
    return str.substring(0,2);
  else if (str.length() == 1)
    return str + ""@"";
  else
    return ""@@"";

}
"
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
"
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
"
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
"
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
"
c72936a1839694da8df5554d66db79bf67bec60c,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (isBirthday)
    {
        speed = speed + 5
    }
	if (speed <= 60)
	{
    	return 0;
	}
    
	if (speed >= 61 && speed <= 80)
	{
    	return 1;
	}
    
	if (speed >= 81)
	{
    	return 2;
	}
	
}
"
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
"
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
2216bc569ee8caff75d3702a81475722e85c8551,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 || n == 16)
            return n;
        return 0;
    //return n;
}
"
e93ac984fe80d9ff8d2b28a49fe9042f2029629f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] % 10 == 0)
        {
            if (nums[i + 1] % 10 != 0)
            {
                nums[i + 1] = nums[i];
            }
        }
    }
    return nums;
}
"
bb771f79da2e164515e0325c84eaa2dbd392e69b,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = 0;
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
86eeb69c66325d7ac263cfba4f58a77188d3d872,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int test = 0;
        int[] testArray = new int[nums.length];
        for (int x = 0; x < nums.length; x++)
        {
            testArray[x] = nums[x];
            test++;
        }
        if (test == nums.length)
        {
            return 1;
        }
        
        
        
        
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i]);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init)
{
    int nextNum = 0;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
557026f064a89be4df627a611b8a898f7a2fc2f3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if ((nums[i] != val) || (nums[i + 1] != val))
        {
            return flase;
        }          
        
    }
     return false;
}
"
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
"
f1718cb6a2aa1704dac4fe8668d12e2c68a62b81,"public int[] fix45(int[] nums)
{
    for	(int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int k = 0;
            while	(nums[k] != 5)
            {
                k++;
            }
            nums[k] = nums[i+1];
            nums[i + 1] = 5;
            
        }
    }
    return nums;
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
"
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
"
3bd541a9a74cfbc86ccd7aff7e6e071a6371cb04,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
"
d8b584308e862ca1b8b1d55be4b3bdee1015b2ad,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars >= 40)
        {
         	return ""true"";   
        }
    }
    else if (cigars >= 40 && cigars <= 60)
    {
     	return ""true"";   
    }
    else
    {
    	return ""false"";    
    }
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}"
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
11b89a5a5c8c4cce3c90dfb984780d1229efc349,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[nums.length - 1] == 7 && nums[nums.length - 2] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
"
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
"
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
"
a02eb75c4e00dfd8fa09a7d3de1220f22f7a8f27,"public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        return 0;
    }
    if (n == 15)
    {
        return 15;
    }
    if (n == 16)
        {
            return 16;
        }
}

"
78a8e8a64b313ff7d1734612cc884e563d6caea4,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b!= 13 && c!= 13)
    {
        return (a+b+c);
    }
    
    else if (a== 13)
    {
        return 0;
    }
    
    else if (b== 13)
    {
        return a;
    }
    
    else if (c==13)
    {
        return (a+b);
    }
    
    return 0;
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
5f137dbfa54f3c15c65ef24630bad52216763faa,"public int redTicket(int a, int b, int c)
{
    
    if (a== 2 && b==2 && c==2)
    {
        return 10;
    }
    
    if (a==b && a==c && b==c)
    {
        return 5;
    }
    
    if (a!=b && a!=c)
    {
        return 1;
    }
    
    
    
    
    return 0;
}
"
532a012b0ec202d27262b383dc13089aef7e1e3b,"public int dateFashion(int you, int date)
{
   if ((you >= 2 && date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 && date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
8dd0ea4aa40c9c74b0f4a3dddd8ecdfabf898186,"public int sortaSum(int a, int b)
{
    sum = a+b;
    if (sum>=10&&sum <=19)
    {
        return 20;
    }
    else
    {
        return sum;
    }
    
}
"
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
"
0a4d7aee449450431db0efcda5856b22d973b605,"public String getSandwich(String str)
{
    if(str.length() > 10 &&
       str.substring(0, 5) == ""bread"" &&
       str.substring(str.length() - 6, str.length() - 1) == ""bread"")
    {
        return str.substring(5, str.length() - 6);
    }
    else {
        return str.substring(5, str.length() - 6);
    }
}
"
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
"
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
"
56ac97e6ac311645870c594b750311820db92f19,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        n = 0;
}
"
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
19a5b90083c799114b8bccdc97fb09a69be2aba1,"public int greenTicket(int a, int b, int c)
{
    if (a == b || a == c || b == c)
        return 10;
	if (a == b && a == c || b == c)
        return 20;
    else
        return 0;
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
"
863743fea61e06d673131ef705425d4b67d43542,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return b + c;
    if (b == c)
        return a + c;
    if (a == c)
		return b + c;        
}
"
4e250d40f6c8c4899a3eb79ea695e918be5d8a56,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
    	else if (nums[i] == 7 && nums[i + 2] == 7)
            return true;
    return false;
}
"
e9b63cad69501d11984221e9a07eff591dedc2b8,"public int roundSum(int a, int b, int c)
{
    a = round10(a);
    b = round10(b);
    c = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int rem = num % 10;
    if (num >= 0 && num < 5)
        num = num - rem;
    else
        num = num + 10 - rem;
    return num;
}
"
301bb42c276c9fed8a898bb3ffc4e02f7716cf3e,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        int loneSum = a + c;
    }
    else if (a == c) {
        int loneSum = a + b;
    }
    else if (b == c) {
        int loneSum = a + b;
    }
    else {
        int loneSum = a + b + c;
    }
    return loneSum;
}
"
42e52e00ef12b244eddffd0c9e1678918659c4e7,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
0f7eb7c6740ccd257c3f6da081cc3f753e5a2516,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int clumpSize = this.sizeClump(nums, nums[i], i);
                i = i + clumpSize;
                counter++;
            }
        }
        return counter;
    }
}

public int sizeClump(int[] nums, int initValue, int start)
{
    int nextNum = 0;
    while (nums[start] == initValue)
    {
        nextNum++;
    }
    return nextNum;
}"
4690b3990e2eb6dd080ba258226248164f82da78,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh)
        {
            clumps++;
        }
    }
    return clumps;
}
"
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
"
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
"
b6ba17f1e789afbf3ef81685a53e5e5f8cc3dfd0,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));	}
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
"
8a779c37e36e7e7238238f8fa362f496af39a6e3,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    
    
        
        
    if(first != -1 && last != -1 && first != last)
    {
		return str.substring(first + 5, last);
    }
    else return"""";
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
1ced7b3ab5f86bf014b0aab47983b280fea0faf5,"public int[] frontPiece(int[] nums)
{
    returnNumber = new int[2]
    for (int i = 0; i < nums.length && i < 2; i++)
    {
        returnNumber[i] = nums[i]
    }
	return returnNumber;
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
6bc66f51e027f8e766055c5683b57b6d779c2d15,"public String withouEnd2(String str) 
{
if (str.length() <= 2) 
    return """";
return str.substring(1, str.length() - 1);
}
"
87db562c5af3675b9fcf8cdf88341f5c205a229a,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return 0;
    }
    
    if (b == 13)
    {
        return a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
c386e80b45b1f867ba40aaf3d78f271a5bd2ffe0,"public int noTeenSum(int a, int b, int c)
{
	if(a <= 19 && a >= 13)
    {
    	return b + c;
    }
    
    if(b <= 19 && b >= 13)
    {
    	return a + c;
    }
    
    if(c <= 19 && c >= 13)
    {
    	return a + b;
    }
}

public int fixTeen(int n)
{
	    
}
"
c8a0be59dec0a41242ebf952c04bb2e31259d489,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
"
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
"
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
2bc6224c6d864641adc76e92803ba8b015954d7f,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
61705bfd5a5b9bf82e4d10be405cc3a01e829d51,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a +b <= 19)
        return 20;
    else
        return a + b;
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
22db1882535d71f9010b430616081de4d479a931,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
        if (c == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}"
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
"
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
3d11719630fc8c44b85deba0b9752e36fb374a27,"public int luckySum(int a, int b, int c)
{
    if (a = 13)
    {
        return 0;
    }
    else if (b = 13)
    {
        return a;
    }
    else if (c = 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
13e7ebf5b1cb8a39e420140214502a74809a7fad,"public int countCode(String str)
{
    int num = 0;
    for(int i = 0; i < str.length() - 3; i++) {
        if(str.charAt(i) == 'c' && str.charAt(i+1) == 'o' && str.charAt(i + 3) == 'e')
            num++;
    }            
    return num;
}
"
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
"
727d541babe278c063e729dab201403c18c6f003,"public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        str == ""bread"" - str - ""bread"";
    }
    else
    {
        return """";
    }
}
"
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
ab752aa9f041e605c697b86bdcb50aa8b25db534,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
0294a8f6bb1a1e083b987b4340006b744cb04faf,"public int loneSum(int a, int b, int c)
{
    int sum = 0;
    if (a != b && b!= c)
    {
    	sum = a + b + c;
        return sum;        
    }
    else if (a == b && b != c)
    {
    	sum = c;
        return sum;
    }
    else if (a != b && b == c)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = 0;
        return sum;
    }
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
"
a2a2884e41048d06a4cb030480f7393277c7ec9a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + nums[i];
        if (nums[i] == 13)
        {
            sum = sum - (13 = nums[i + 1]));
        }
    }
    return sum;
}
"
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
"
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
"
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
"
67b31d44e53f66de27582ca427b2dcf657e7f18c,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a = b && b == c)
        return 10;
    
    if (a = b && b == c)
        return 5;
        
    if (a != b && a != c)
        return 1;
    
    return 0;
}
"
9eb233b4442526c98e5181cbd698f5839c08adb3,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a == c || b == c || a == c)
        return false;
    if (a == b || b == c)
        return true;
    else
        return ((Math.abs(a - c)==Math.abs(a - b))) ||( Math.abs(c - a)==Math.abs(b - c) || Math.abs(a - b) == Math.abs(b - c));
}
"
d5ce442602f709f5b69882191e66e3dbc3382576,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21)
    {
        return a;
    }
    else if (b > a && b <= 21)
    {
        return b;
    }
    else if (a > 21 || b > 21)
    {
        return 0;
    }
}
"
e380683c57feefa7fb3a525ba8c8887539b740dc,"public int greenTicket(int a, int b, int c)
{
 	if (a==b && b==c)
    {
        return 20;
    }
    
     if (a==b && a==c)
    {
        return 10;
    }
    
    if (a!=b && b!=c)
    {
        return 0;
    }
    
    
 	return 10;
}
"
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
"
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
"
042c7539e7bbc603f9d999c837f0b4486eeef11a,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n != 15 && n != 16)
    	if (n <= 19 && n >= 13)
        	return 0;
    return n;
}
"
2fca6215c9c9afb58d28887169dfe435558d7825,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a <= 21 && a > b)
    {
        return a;
    }
    else if (b <= 21 && b > a)
    {
        return b;
    }
    else if (b <= 21 && a > 21)
    {
        return b;
    }
    else
    {
     	return a;   
    }
}
"
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
4a5c39cc71d0da4ef8cceb985cb5f0dd1a43890b,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13) {
        luckySum = a + b + c;
    }
    else if (a == 13) {
        luckySum = 0;
    }
    else if (b == 13) {
        luckySum = a;
    }
    else if (c == 13) {
        luckySum = a + b;
    }
    return luckySum;
}
"
9b06d81d2ee2682ba33f3c4251db06a7cfeaf2a8,"public int sum3(int[] nums)
{
    return 8;
}
"
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
dca1f726e64da2460020f1bbac55668502eddba7,"public int roundSum(int a, int b, int c)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
    
}

public int round10(int num)
{
    return (round10(a) + round10(b) + round10(c));
    
}
"
bd4ab1662bb8f09f26dc5dd978ba13826af43bbe,"public int countCode(String str)
{
 int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
3a244a1b4e96b9b233338061c4229807fb89777c,"public int countCode(String str)
{
    int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
63d94094b3bd3e432c48601fe1cde209664933eb,"public int loneSum(int a, int b, int c)
{
	if (a==b || b==c)
    {
        return c;
    }
	else if (a==c)
    {
        return b;
    }
    else 
    {
    	return a + b + c;
    }
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
32a88259dc225b680cacb119048b64e000580b5a,"public int[] fix45(int[] nums)
{
	for(int i = 0; i < nums.length - 1; i++)
	{
		if(nums[i] == 4 && nums[i + 1] != 5)
		{
			for(int j = 0; !(nums[j] == 5 && (j == 0 || j > 0 && 				nums[j-1] != 4)); j++)
            {
				nums[j] = nums[i + 1];
				nums[i + 1] = 5;
            }
		}
	}
	return nums;
}"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
5ae4f4df981ecd7a8c7c1620b207298fd11eb26f,"public int blackjack(int a, int b)
{
    if (a > 0 && b > 0)
    {
     	if (b > 21 && a <= 21)
        {
         	return a;   
        }
        else if (a > b && a <= 21)
        {
         	return a;  
        }
        else if (a > 21 && b <= 21)
        {
         	return b;   
        }
        else if (b > a && b <= 21)
        {
        	return b;   
        }
    }
    return 0;
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
7fd6090aedd50f4e154177904067967e4a554db5,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
22db1882535d71f9010b430616081de4d479a931,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
        if (c == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
"
09c6de5e29a256d7add784dac3a966346a82e499,"public int countClumps(int[] nums)
{
    int clumps = 0;
    int flag = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == flag)
            continue;
        if (nums[i] == nums[i + 1])
        {
            clumps++;
            flag = nums[i];
        }
        else
        {
            flag = nums[i];
        }
    }
    return clumps;    
}
"
270174ce7d53738e854429dc81bc8b311180b333,"public int[] shiftLeft(int[] nums)
{
    return int[] nums;
}
"
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
"
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
"
a02eb75c4e00dfd8fa09a7d3de1220f22f7a8f27,"public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        return 0;
    }
    if (n == 15)
    {
        return 15;
    }
    if (n == 16)
        {
            return 16;
        }
}

"
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
"
62d31dc1d181609f1ad5028901c8db29d61ea2b8,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    else 
    {
        return (a +b);
    }
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
b4b80ec23db8730d3a13b7f18055050c22aa3b95,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        else
        {
            return 2;
        }
    }
    else
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}
}"
af20cd1af1156a04c4ca530fa1bda65b9cd57682,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning) 
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
d58abb87ff70ff67a76bba0f3d1f0c3ba071d518,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == false)
    {
    if (speed < 60)
        {
            return 0;
        }
    if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    if (speed >= 81)
        {
            return 2;
        }
    }
    if (isBirthday == true)
    {
        return 0;
    return 0;
    }
}"
582b917e4c3a6c8bdf35c427341ab5ddf0ac9d24,"public int sortaSum(int a, int b)
{
    if(a + b >= 10 || a + b <= 19)
    {
    	return a + b;
    }
    
    else 
    {
    	return 20;
    }
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
87db562c5af3675b9fcf8cdf88341f5c205a229a,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return 0;
    }
    
    if (b == 13)
    {
        return a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
3a244a1b4e96b9b233338061c4229807fb89777c,"public int countCode(String str)
{
    int count = 0;

        for ( int i = 0; i < str.length() - 3; i++ )
        {
            if ( ""co"".equals( str.substring( i, i + 2 ) ) )
            {
                if ( str.charAt( i + 3 ) == 'e' )
                {
                    count++;
                }
            }
        }

        return count;
}
"
cd80603c865a5f537dae1c802b4d53681015978e,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
"
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
"
039a5741fb82006d59f66a5ffd100359f6a3aa77,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
    	if (cigars >= 40)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
    else
    {
    	if (cigars >= 40 && cigars <= 60)
        {
        	return (true);
        }
        else
        {
        	return (false);
        }
    }
}
"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
0cb8c025b705f4587b7d469c16c902e554391541,"public int[] frontPiece(int[] nums)
{
    return frontPiece;
}
"
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
"
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
"
eadc5df754b07dbc81ee348ee4bbd34ce3b39f20,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
        return 20;
    else
        return (a + b);
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
9a762998ef3f0abdaeaa9e34d97d58d792cb6be4,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMom)
        return true;
    return (!isMorning);
}
"
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
"
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
"
cd23c0ed240a318d70e3ddbf504fb44f78c81ffc,"public String atFirst(String str)
{ 
    if (str.length() < 2 && str.length() != 0)
    {
        return str + ""@"";
    }
    else if (str.length() == 0)
    {
        return ""@@""
    }
    else
    {
        return str.substring(0,2);
    }
    
}
"
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
47bcbb118b9820ce001397912cd55ec9c5521a9b,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
        return c;
    }
    if (a == c)
        return b;
    if (b == c)
        return a;
    return (a + b + c);
}
"
9ebe46b9e7a4b3cb16a4423e4af7f17722965213,"public int noTeenSum(int a, int b, int c)
{
    int sum = (fixTeen(a)+fixTeen(b)+fixTeen(c));
        return sum;
}

public int fixTeen(int n)
{
    if (n>=13&&n<=19)
    {
        if (n==15||n==16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }
}
"
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
11b89a5a5c8c4cce3c90dfb984780d1229efc349,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[nums.length - 1] == 7 && nums[nums.length - 2] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
"
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
"
82c64fa09f2ec4b819acaeb99373996b024cc02e,"public int roundSum(int a, int b, int c)
{
    int roundSum = round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int rem = num % 10;
    if (rem >= 5) {
        num = numb + 10 - rem;
    }
    else {
        num = num - rem;
    }
    return num;    
}
"
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
f777a11e84a7e2fdc4b2c64cb067c7f660af5185,"public int redTicket(int a, int b, int c)
{
    if (a == b)
    {
     	if (a == c)
        {
            if (a == 2)
            {
                return 10;
            }
            else
            {
            	return 5;
            }
        }
    }
    if (a != b)
    {
     	if (a != c)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
"
fb63e4d9b9f844eb6f3145768fe6bd59fda4c682,"public int greenTicket(int a, int b, int c)
{
    int result = 0;
    if (a == b && a == c)
        result = 20;
    if (a == b || a == c || b == c)
        result = 10;
    else
        result = 0;
    return result;
 
}
"
f916727180911437e727e3beb5163e6447d5202b,"public String plusOut(String str, String word)
{
    String plus = new String();
    for (int i = 0; i < str.length(); i++)
    {
        if (i <= str.length() - word.length())
        {
            if (str.substring(i, i + word.length()).equals(word))
            {
                plus += word;
                i += word.length() - 1;
            }
            else
            {
                plus += '+';
            }
        }
    }
    return plus;
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
2fca6215c9c9afb58d28887169dfe435558d7825,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a <= 21 && a > b)
    {
        return a;
    }
    else if (b <= 21 && b > a)
    {
        return b;
    }
    else if (b <= 21 && a > 21)
    {
        return b;
    }
    else
    {
     	return a;   
    }
}
"
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
2efc3b1d0acaa60b452bf611f88e4f3873fd00aa,"public boolean isEverywhere(int[] nums, int val)
{
    int b = 0;
    for (int i = 1; i < nums.length - 1; i++) {
        if (nums[i] == val || nums[i-1] == val ||
            nums[i+1] == val) {
            	b++;
        }
    }
    return b == nums.length - 2;
}
"
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
"
1f392835abe1515bae3d0a8fcfedc983a40383fb,"public int luckySum(int a, int b, int c)
{
    int x;
    if (a == 13)
    {
		return 0;
    }
    else if (b == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else 
        {
            return a;
        }
    }
    else if (c == 13)
    {
        if (a == 13)
        {
            return 0;
        }
        else if (b == 13)
        {
            return a;
        }
        else
        {
            x = a + b;
            return x;
        }
    }
    else
    {
        x = a + b + c;
        return x;
    }
}
"
6e218f3ba9c790f8ba54aa38be31d74c786704e5,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        {
        	largeOdd = nums[i];
        }
        if (nums[i] == 0)
        {
        	nums[i] = largeOdd;
        }
    }
    return nums;
}"
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
"
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
"
2216bc569ee8caff75d3702a81475722e85c8551,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 || n == 16)
            return n;
        return 0;
    //return n;
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
d888463f133617f3e1db282d628fc8cfc3d35caa,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
"
c62602f27883f984fbc0551198122402edd6e05d,"public int[] shiftLeft(int[] nums)
{
    return int[];
}
"
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
"
d8b584308e862ca1b8b1d55be4b3bdee1015b2ad,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars >= 40)
        {
         	return ""true"";   
        }
    }
    else if (cigars >= 40 && cigars <= 60)
    {
     	return ""true"";   
    }
    else
    {
    	return ""false"";    
    }
}
"
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
"
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
"
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
"
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
"
fd19ee70b6ed78dc3c5cf345b006e41ad230749d,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
"
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
"
8294d5989bd72ab3256d9b0427b4cace8607d55c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        if (cigars >= 40)
        {
            return ""true"";
        }
        else
        {
        	return ""false"";   
        }
    }
    else
    {
        if (cigars <=60 && cigars >=40)
        {
            return ""true"";
        }
        else
        {
            return ""false"";
        }
    }
}
"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
4cad14f6dc235bb7665a336718b0bc721df9ddd2,"public boolean isEverywhere(int[] nums, int val)
{
    Boolean result = true;
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            result = true;
        }
        else
        {
            result = false;
            break;
        }
    }
    return result;
}
"
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
"
0bd7fe95ce9749e4f8a7edf4208f6c161ea14ca1,"public int countCode(String str)
{
    int x = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c')
        {
            if (str.charAt(i+1) == 'o')
            {
                if (str.charAt(i + 3) == 'e')
                {
                    x++;
                }
            }
        }
    }
    return x;
}
"
d9be2476e6def6807413ff589b6410e949e8650a,"public boolean twoTwo(int[] nums)
{
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
c64c9e9c0a786ef3732a68209a390d30d8284fd4,"public int dateFashion(int you, int date)
{
   if ((you >= 2 || date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 || date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
8f13baf6c1f32fe1e3c57fc757c44293a34e0980,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    if (isAsleep)
    {
        return false;
    }
    else if (!isAsleep)
    {
        return true;
    }
    return false;
    
}
"
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
"
e842a2d12176ae37228ff69c6c768005b587ac2a,"public int blackjack(int a, int b)
{
    int c = 21 - a;
    int d = 21 - b;
    
    
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else
    {
        if (c > d)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
"
d0e7e4f01d1bd84602edf6ae34c0d764c24c4815,"public int countCode(String str)
{
    int i = 0;
    int time = 0;
    int l = str.length() - 3;
    
    while (i < l)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt( i 			+3 == 'e')
            {
                time++;
                i += 4;
            }
            i++;
            }
            return time;
        
}
"
f8e2e6bb5d3f455462c4a729ac1c0772ed521c99,"public boolean twoTwo(int[] nums)
{
    if (nums.length < 2 && nums[0] != 2 )
    {
     	return true;   
    }
    else if (nums.length < 1)
    {
     	return false;   
    }
    for (int i = 0; i < nums.length - 1; i++)
    {
        
     	if (nums[i] == 2 && nums[i + 1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i + 1] == 2)
        {
         	   return true;
        }       
        
        else if (nums[nums.length - 1] == 2)
        {
         	return false;   
        }
        
        
    }
    return false;
}
"
328f2f06f07e26aac03e4e4a6df016fc0c620fcc,"public int redTicket(int a, int b, int c)
{
      if (a == 2 && b == 2 && c == 2)
    return 10;
  if ( a == b && b == c)
    return 5;
  if ( a != b && a != c)
    return 1;
  else
    return 0;
}
"
fae2f7dfe0c7f6a36eed081761f1d04f77387b4b,"

    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }

"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
8dd0ea4aa40c9c74b0f4a3dddd8ecdfabf898186,"public int sortaSum(int a, int b)
{
    sum = a+b;
    if (sum>=10&&sum <=19)
    {
        return 20;
    }
    else
    {
        return sum;
    }
    
}
"
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
"
d17244a79757f570de9d8170c3085ee0f6678c21,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom && isAsleep)
        {
            return true;
        }
        else if (isMom && !isAsleep)
        {
            return false;
        }
        else if (!isMom && isAsleep)
        {
            return false;
        }
        else if (!isMom && !isAsleep)
        {
            return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return;
}"
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
0fd5c40c96b7dfad240c5509995b5acc9eccd6b3,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
e9b63cad69501d11984221e9a07eff591dedc2b8,"public int roundSum(int a, int b, int c)
{
    a = round10(a);
    b = round10(b);
    c = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int rem = num % 10;
    if (num >= 0 && num < 5)
        num = num - rem;
    else
        num = num + 10 - rem;
    return num;
}
"
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
"
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
"
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
"
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
"
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}"
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
"
f3ddf9031a05285f6f9fec49ad403733b0696a3c,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
    	if (speed >= 65)
        {
        	return 0;
        }
    	else if (speed <=85 && speed >= 66)
        {
        	return 1;
        }
    	else if (speed >= 86)
        {
        	return 2;
        }
    }
    else
    {
        if (speed >= 60)
        {
        	return 0;
        }
    	else if (speed <=80 && speed >= 61)
        {
        	return 1;
        }
    	else if (speed >= 81)
        {
        	return 2;
        }
	}
return giveTicket;
    
"
0a620bf30b2a7a4fce92e7ea762e2a29a92cd83d,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
"
acf68ee14e8bbbb4c7037ac6430a44a2a7624ef8,"public int roundSum(int a, int b, int c)
{
      return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int n = num % 10;
    
    if(n >= 5)
    {
        num = num + (10-n);
    }
    else
    {
        num = num - n;
    }
    return num;
}
"
3d89f76d27956de3a51e53f7ba12c5aa1fc7e352,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom && isAsleep)
        return true;
    if (isMorning && !isMom && !isAsleep)
        return false;
    if (isMorning && isMom && !isAsleep)
        return false;
    return false;    
}
"
b16439cf6ef5c619010c64a8fb33444995f538e6,"public String plusOut(String str, String word)
{
    String returnString = """";
    int lastIndex = str.indexOf(word);
    int i = lastIndex;
    
    while (i < str.length())   
    {
        if (i == str.indexOf(word, lastIndex))
        {
            returnString = returnString + word;
            lastIndex = i;
            i += (word.length() - 1);
        }
        
        else
        {
            returnString = returnString + ""+"";
            i++;
        }
    }
	return returnString;
}
"
aa4d8b44bff62be088c0c94a7829aa410ffa133b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        if (speed >= 81)
        {
            return 2;
        }
    }
    if (!isBirthday)
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
06ce870f764275dc4fbe2e7c3328c4f9612d64a7,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 0; i<n; i++)
    {
        last = last + last;
    }
    return last;
        
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
563e70492a46c1983409ddc52f1edaf6f8bfba29,"public int countClumps(int[] nums)
{
    int merlin = 0;
    
    for(int i = 0; i < nums.length - 1  ; i++)
    {
        if (nums[i] == nums[i+1])
        {
            merlin++
        }
           
    }
    return merlin;
}
"
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
"
1ced7b3ab5f86bf014b0aab47983b280fea0faf5,"public int[] frontPiece(int[] nums)
{
    returnNumber = new int[2]
    for (int i = 0; i < nums.length && i < 2; i++)
    {
        returnNumber[i] = nums[i]
    }
	return returnNumber;
}
"
d58abb87ff70ff67a76bba0f3d1f0c3ba071d518,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == false)
    {
    if (speed < 60)
        {
            return 0;
        }
    if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    if (speed >= 81)
        {
            return 2;
        }
    }
    if (isBirthday == true)
    {
        return 0;
    return 0;
    }
}"
9f7cabb358a67a54ce58c64d4a9845fcc682c8e5,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if (speed <= 60) {
        return 0;
    }
        else if (speed > 60 && speed <81) {
            return 1;
        }
            else {
                return 2;
        }
    if (isBirthday);
    	 if (speed <= 65) {
             return 0;
         }
    else if (speed > 65 && speed < 86) {
        return 1;
    }
    else {
        return 2;
    }
}
       "
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
d438b7d68b37722f5d57579e7078668cf60a8b2b,"public int blackjack(int a, int b)
{
    if (a < b && b <= 21)
    {
        return b;
    }
    else if (b < a && a <=21)
    {
        return a;
    }
    else 
    {
        return 0;
    }
}
"
0773313801a191baf1978ea9f3b612da5d247316,"public int caughtSpeeding(int speed, boolean isBirthday)
{
if (!isBirthday)
{
   if ( speed <= 60)
   
       return 0;
   
   else if ( speed > 60 && speed <= 80)
   
       return 1;
   
   else 
   
       return 2;
   
}
    if (isBirthday)
    {
        if ( speed <= 65)
   
       return 0;
   
   else if ( speed >= 65 && speed <= 85)
   
       return 1;
   
   else 
   {
       return 2;
   }
       
}
}
"
d9d0af4a86d3d806a73729146509fcd884212bbe,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 && (a + b) <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
d5b2f12d5cc6c645ca6a7c976d7b61c426c3a538,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
042c7539e7bbc603f9d999c837f0b4486eeef11a,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n != 15 && n != 16)
    	if (n <= 19 && n >= 13)
        	return 0;
    return n;
}
"
5a00919d938e7350f9d887a0f3c496f766fa3b49,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
7064b75753cfa9aac0c26365b73fb8f4d7cac346,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    String result = "" "";
    
    if (!isWeekend)
    {
        if (cigars <= 60 && cigars >= 40)
        {
            result = ""true"";
        {
        else
        {
            result = ""false"";
        }
    }
    
    if (isWeekend)
    {
        if (cigars >=40)
        {
            result = ""true"";
        }
        else
        {
            result = ""false"";
        }
    }
    
    return result;
}
"
eadc5df754b07dbc81ee348ee4bbd34ce3b39f20,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
        return 20;
    else
        return (a + b);
}
"
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
"
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
"
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
"
bf0fb85d68a871de1263a11b4d6bf089714fa3ce,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0 ; nums.length > i; i++)
    {
        if (nums[i] == val || nums[i+1] == val)
        {
            return true;
        }
    }
    return false;
    
}
"
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
"
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
"
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
"
02c1f791fb8f450361e3bba08c084c74102eeb61,"public int countEvens(int[] nums)
{
    for (num: int[] nums)
    {}
}
"
b89935cd76575e88ea3d850c3c4d704f4a06bb09,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b==13)
    {
        return a;
    }
    else if (c==13)
    {
        return a+b;
    }
    else
    {
        return a+b+c;
    }
}
"
ed474f0e054cf58e97af554622596132c6fa3db1,"public int roundSum(int a, int b, int c)
{	
    return(round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
	int digit = num % 10;
    if(digit >= 5)
        return num + (10- digit);
    return num - digit;
}"
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
eb6c1a158117bc98c4491e7dc2fe6e398dc2712f,"public int noTeenSum(int a, int b, int c)
{
    
	return a + b + c;
}

public int fixTeen(int n)
{
    if ( n == 15 || n == 16)
        return n;
    if (13 <= n < 15)
        return 0;
    if (16 < n <= 19)
        return 0;
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
b21271e79419b123e5e2d4ff29ca2f214f3fb90e,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if (a==b || a==c || b==c)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
e380683c57feefa7fb3a525ba8c8887539b740dc,"public int greenTicket(int a, int b, int c)
{
 	if (a==b && b==c)
    {
        return 20;
    }
    
     if (a==b && a==c)
    {
        return 10;
    }
    
    if (a!=b && b!=c)
    {
        return 0;
    }
    
    
 	return 10;
}
"
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
fdd9c7578eae0199293f5c67050555c877e59579,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
    }
                           
    return (sum - max - min) / (nums.length - 2);
}
"
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
"
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
"
cee57656ca16e1dba36c9adc7d7dbfc622398c9a,"public int sum13(int[] nums)
{
    int sum = 0;
        if (nums.length < 1) {
            return 0;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 13) {
                i++;
                continue;
            }
            sum += nums[i];
        }
        return sum;
}
"
4690b3990e2eb6dd080ba258226248164f82da78,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh)
        {
            clumps++;
        }
    }
    return clumps;
}
"
af72162e8ac5b84ac915a239ad3487e01803ebce,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    while (isBirthday != true)
    {
    	if (speed <= 60)
    	{
        	return int 0;
    	}
    	else if (speed > 60 && speed <= 80)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
    while (isBirthday != false)
    {
       if (speed <= 65)
    	{
        	return 0;
    	}
    	else if (speed > 65 && speed <= 85)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
}"
12941eb615aae98f65aa36224718e48e3383968c,"public int loneSum(int a, int b, int c)
{
    int x = a + b + c;
    if (a == b)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == c)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return a;
        }
    }
    else if (a == c)
    {
        if (b == c)
        {
            return 0;
        }
        else
        {
            return b;
        }
    }
    else
    {
        return x;
    }
}
"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
b16439cf6ef5c619010c64a8fb33444995f538e6,"public String plusOut(String str, String word)
{
    String returnString = """";
    int lastIndex = str.indexOf(word);
    int i = lastIndex;
    
    while (i < str.length())   
    {
        if (i == str.indexOf(word, lastIndex))
        {
            returnString = returnString + word;
            lastIndex = i;
            i += (word.length() - 1);
        }
        
        else
        {
            returnString = returnString + ""+"";
            i++;
        }
    }
	return returnString;
}
"
4a9806e5d979032eadab4c8d23dec29284441f09,"public int greenTicket(int a, int b, int c)
{	
   	int result = 10;
    if (a != b && b != c && a != c)
    {    
        result = 0;
    }
    else if (a == b && b == c)
    {
        result = 20;
    }
    return result;
}
"
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
"
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
"
5f137dbfa54f3c15c65ef24630bad52216763faa,"public int redTicket(int a, int b, int c)
{
    
    if (a== 2 && b==2 && c==2)
    {
        return 10;
    }
    
    if (a==b && a==c && b==c)
    {
        return 5;
    }
    
    if (a!=b && a!=c)
    {
        return 1;
    }
    
    
    
    
    return 0;
}
"
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
9a762998ef3f0abdaeaa9e34d97d58d792cb6be4,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMom)
        return true;
    return (!isMorning);
}
"
685a1f07697cb907cefcecfa8cf5158825e90e14,"public int countCode(String str)
{
    int length = str.length() - 2;
    int num = 0;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == c && str.charAt(i + 1) == o
            && str.charAt(i + 3) == e)
        {
            num = num + 1;
        }
    }
    return num;
}
"
428a4330008980c438326abad1def09257e6d2d1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a > b && a < 21)
    {
        return a;
    }
    else (b > a && b < 21)
    {
     	return b;   
    }
}
"
ab752aa9f041e605c697b86bdcb50aa8b25db534,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
"
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
"
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
"
79f2da1916c858f4bd63251e6ec244aad4272418,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
    {
		return n;
    }
    else
    {
		return 0;
    }
}
public int noTeenSum(int a, int b, int c)
{  
    return (fixTeen(a) + fixTeen(b) +fixTeen(c)); 
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
"
f0be04df720e45391f559d26dc0955b0202bb87b,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n != 15 && n != 16)
        	return 0;
    return n;
}
"
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
"
a07a8703a9cafd5f2dd00f03a9d186fc390e15f9,"public String zipZap(String str)
{
    String s = """";
    int x = 0;
    int y = 0;
    if (str.length() < 3) {
        return str;
    }
    else {
        for (int i = 0; i < str.length() - 2; i++) {
            if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p') {
                x++;
            }
        }
    	while (s.length() != str.length() - x && y < str.length() - 2) {
            if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p') {
                s = s + ""zp"";
                y = y + 2;
            }
            else {
                s = s + str.charAt(y);
            }
            y++;
        }
    }
    return s;
            
        
}
"
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
8fb500466613a34013f0592cc334f444d8a2780d,"public int countClumps(int[] nums)
{
    int num = 0;
    int clumps = 0;
    Boolean clump = false;
    for (int i = 0; i < nums.length; i++)
    {
        num = nums[i];
        while (nums[i] == nums[i + 1])
        {
            i++
        }
        if (clump == true)
        {
            clumps++;
            clump = false;
        i--;
    }
}
"
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
"
023ccb9f259b949ab0ec9836b2b130977e17f76a,"public int sum3(int[] nums)
{
    sum = nums[0] + nums[1], nums[2];
}
"
e66af3fd10029e3b0eddec751863c4988c7a3b9a,"public boolean sameEnds(int[] nums, int n)
{
    int num = 0;
    for (int i = n; i > 0 n;i--)
    {
        if (nums[i] == nums[nums.length - i + 1])
        {
            num = num + 1;
        }    
    }
    if (num == n)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
ca1870b1df47e2084ad5408ac293ab511a73c5d0,"public int blackjack(int a, int b)
{
    if (a > 0 && b > 0)
    {
        if (a > b && a <= 21)
        {
        	return a;
        }
        else if (b > a && b <= 21)
        {
            return b;
        }
        else if (a > 21)
        {
            return b;
        }
        else if (b > 21)
        {
            return a;
        }
    }    
    return 0;
}
"
2bc6224c6d864641adc76e92803ba8b015954d7f,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
3c663e6b94b687cf331fb515d865826a263a5a6c,"public int luckySum(int a, int b, int c)
{
    if (a==13)
    {
        return 0;
    }
    else if (b==13)
    {
        return a;
    }
    else if (c==13)
    {
        return a+b;
    }
    else
        return a+b+c;
}
"
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
a040447a7a4d000d3f8dce6203fbc10a54cdf382,"public int blackjack(int a, int b)
{
    if (a>21)
    {
        a=0;
   		return a;
    }
    if (b>21)
    {
        b=0;
        return b;
    }
    if (a>b)
    {
     return a;   
    }
	else
	{	
    return b;
    }
}
"
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
"
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
"
13864ac96c4023a6c7e3db73dd0c11750234fe40,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1"
f53fe967f0579e586ca2895910f4b0362cabe181,"public boolean has77(int[] nums)
{
    boolean isThere = false;
    
    for (int i = 0; i < nums.length - 3; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7 || nums[i + 2] == 7)
            {
                isThere = true;
                break;
            }
        }
    }
    
    return isThere;
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
47f3a74a254afbf6c445487eff4eb1c0df9e20df,"public boolean has77(int[] nums)
{
    int blob = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (i < nums.length - 2)
        {
            if (nums[i] == nums[i + 1] && nums[i] == 7)
        	{
            	blob = blob + 100;
        	}
            if (nums[i] == nums[i + 2] && nums[i] == 7)
            {
                blob = blob + 100;
            }
        }   
        else if (nums[i] == nums[i + 1] && nums[i] == 7)
        {
            blob = blob + 100;
        }
        else
        {
            blob = blob + 1;
        }
    }
    return blob >= 100;
}
"
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
"
95315d4f40fee982b6719168e94180e03704160d,"public int sum3(int[] nums)
{
   return (nums[0] + nums[1] + nums[2]); 
}
"
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
"
31d2de2c4723037a38f2b62dd095d3efaf175d3f,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
6fedb75d07d19c26e5ed2a3af58ee470e5380711,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);

}

public int fixTeen(int n)
{
    if(n == 13 || n == 14 || n == 17 || n == 18 || n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
       
           
}
"
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
"
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
"
ebd32bc9d73aea5eb17d579604ff55398843bcff,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1

"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
da35db888e070aad3d1910413f0731e4b429579c,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (20 - n < 7  && 20 - n < 1)
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
9f98cd5893ed8711953832332cb9e68381d2d182,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str.substring(str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}"
d5ce442602f709f5b69882191e66e3dbc3382576,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21)
    {
        return a;
    }
    else if (b > a && b <= 21)
    {
        return b;
    }
    else if (a > 21 || b > 21)
    {
        return 0;
    }
}
"
e93ac984fe80d9ff8d2b28a49fe9042f2029629f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] % 10 == 0)
        {
            if (nums[i + 1] % 10 != 0)
            {
                nums[i + 1] = nums[i];
            }
        }
    }
    return nums;
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
"
4e250d40f6c8c4899a3eb79ea695e918be5d8a56,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
    	else if (nums[i] == 7 && nums[i + 2] == 7)
            return true;
    return false;
}
"
9ebe46b9e7a4b3cb16a4423e4af7f17722965213,"public int noTeenSum(int a, int b, int c)
{
    int sum = (fixTeen(a)+fixTeen(b)+fixTeen(c));
        return sum;
}

public int fixTeen(int n)
{
    if (n>=13&&n<=19)
    {
        if (n==15||n==16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }
}
"
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}"
6bb0ee0ad18b7740337fbdd1e749d82571043674,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return ""@"";
    }
    else
    {
        return ""@@"";
    }
}
"
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
"
7779f17d79d550dbddfe995feba46928008c9d65,"public String without2(String str) 
{
    
    if (str.length() <= 2)
    {
        if (str.length() == 2)
        {
        	return """";
        }
        else
            return str;
    }
    else if (str.substring(0, 2) ==  (str.substring(str.length() - 2, str.length())))
    {
     	return str.substring(2, str.length());  
    }
    else 
    {  
      return str;  
    }
}
"
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
61705bfd5a5b9bf82e4d10be405cc3a01e829d51,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a +b <= 19)
        return 20;
    else
        return a + b;
}
"
88111a1b682c4e3263232c7e42baecf389dd8a17,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0)
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
    else
    {
    	return 0;
    }
}
"
6951053422eb1f10e58384407fe2177bd76f6031,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum
    }
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
e6b4e91acab1d81f043b26358d4b2c441fe38e23,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
09c6de5e29a256d7add784dac3a966346a82e499,"public int countClumps(int[] nums)
{
    int clumps = 0;
    int flag = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == flag)
            continue;
        if (nums[i] == nums[i + 1])
        {
            clumps++;
            flag = nums[i];
        }
        else
        {
            flag = nums[i];
        }
    }
    return clumps;    
}
"
4cad14f6dc235bb7665a336718b0bc721df9ddd2,"public boolean isEverywhere(int[] nums, int val)
{
    Boolean result = true;
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            result = true;
        }
        else
        {
            result = false;
            break;
        }
    }
    return result;
}
"
cda4eeee2346e60e72673f13fb06774fb4ec1b1b,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
    	leftSum = leftSum + nums[i];
        int rightSum = 0;
    	for (int j = nums.length - 1; j > i; j--)
        {
        	rightSum = rightSum + nums[j];
        }
        if (leftSum == rightSum)
        {
        	return true;
        }
    }
       
    return false;
}
"
31d2de2c4723037a38f2b62dd095d3efaf175d3f,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1
}
"
79f2da1916c858f4bd63251e6ec244aad4272418,"public int fixTeen(int n)
{
	if(n < 13 || n > 19 || n == 15 || n == 16)
    {
		return n;
    }
    else
    {
		return 0;
    }
}
public int noTeenSum(int a, int b, int c)
{  
    return (fixTeen(a) + fixTeen(b) +fixTeen(c)); 
}
"
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
"
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
"
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
"
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
"
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
"
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
"
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
"
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
"
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
5f137dbfa54f3c15c65ef24630bad52216763faa,"public int redTicket(int a, int b, int c)
{
    
    if (a== 2 && b==2 && c==2)
    {
        return 10;
    }
    
    if (a==b && a==c && b==c)
    {
        return 5;
    }
    
    if (a!=b && a!=c)
    {
        return 1;
    }
    
    
    
    
    return 0;
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
a5ef4e9ae777060ed56015c4182bbe5b63e80d69,"public boolean evenlySpaced(int a, int b, int c)
{
    return (a == b && b ==c);
    return ((Math.abs(a-b) == Math.abs(b-c)) || (Math.abs(a-c) == Math.abs(a-b)) || (Math.abs(c-a) == Math.abs(b-c)));    
}
"
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
"
9e9cf83d988def8153544e29f9584193f3153efb,"int sum;
public int luckySum(int a, int b, int c)
{
    sum = a + b + c;
    
    if (a == 13)
    {
        sum = 0;
        return sum;
    }
    else if (b == 13)
    {
        sum = a;
        return sum;
    }
    else if (c == 13)
    {
        sum = a + b;
        return sum;
    }
    else
    {
        return sum;        
    }
}
"
18ab89e18a6ce4e406b204406f6fb94214480bd9,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
        return 10;
    if (a == b && b == c && a == c)
        return 5;
    if (a != b && b != c && a != c)
        return 1;
    else
        return 0;
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
b16439cf6ef5c619010c64a8fb33444995f538e6,"public String plusOut(String str, String word)
{
    String returnString = """";
    int lastIndex = str.indexOf(word);
    int i = lastIndex;
    
    while (i < str.length())   
    {
        if (i == str.indexOf(word, lastIndex))
        {
            returnString = returnString + word;
            lastIndex = i;
            i += (word.length() - 1);
        }
        
        else
        {
            returnString = returnString + ""+"";
            i++;
        }
    }
	return returnString;
}
"
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
b6ba17f1e789afbf3ef81685a53e5e5f8cc3dfd0,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));	}
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
bf382bc1d92127f137bb550a9abdea9839167f1f,"public int[] shiftLeft(int[] nums)
{
    int shift = nums[0];
    if (nums.length >= 2)
    {
        //int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
b03f6ee58d1c2efbc298c1b090d888a47d5425a9,"public boolean evenlySpaced(int a, int b, int c)
{
    if (b-a <= 1 && c-a >= 2 && c-b >= 2 
        || b-a >= 2 && c-a <= 1 && c-b >=2
        || b-a >=2 && c-a >= 2 && c-b <= 1)
        return true;
    return false;
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
"
44f220b58843152b2c37e892e70f7c52224b3df7,"public int[] zeroMax(int[] nums)
{
    int max = 0; 
    for (int i = 0; i < nums.length - 1; i++) {
        if ( nums[i] == 0) {
            for (int k = i + 1; k <= nums.length - 1; k++) {
                if (nums[k] > max && nums[k] % 2 == 1) {
                    max = nums[k];
                }
                else {
                    nums[k] = max; 
                max = 0;
                }
                 
            }
        }
    }
    return nums; 
}
"
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
2b976fe20b1e401744827a000d91d5535db7d93b,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <=90);
}
"
bf0fb85d68a871de1263a11b4d6bf089714fa3ce,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0 ; nums.length > i; i++)
    {
        if (nums[i] == val || nums[i+1] == val)
        {
            return true;
        }
    }
    return false;
    
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
"
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
"
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
a354fe94859e5967d2c6bdce8fdb12e90a24f48c,"public int sortaSum(int a, int b)
{
    if(a + b >= 10 || a + b <= 19)
    {
    	return a + b;
    }
    
    else 
    {
    	return 20;
    }
}
"
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
"
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
"
ed474f0e054cf58e97af554622596132c6fa3db1,"public int roundSum(int a, int b, int c)
{	
    return(round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
	int digit = num % 10;
    if(digit >= 5)
        return num + (10- digit);
    return num - digit;
}"
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
"
af260e0ba22d31981848019de5ec7385172e5979,"public String withouEnd2(String str) 
{
        if (str.length() > 2) 
        {
            return str.substring(1, str.length() - 1);
        }
        return """";
}
"
dc1c18a727a472113299aaf5bc76ffcf6180ee19,"public String[] fizzBuzz(int start, int end)
{
    end--;
    String[] result = new String[end - start];
    
    for (int i = 0; i < end; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
bedb2c2c407cfc6f84128d3bcf6e102d6628dd32,"public boolean sameEnds(int[] nums, int n)
{
    if (n <= 1)
    {
    	for (int i = 0; i <= n; i++)
    	{
            if (nums[i] != nums[nums.length - 1 - i])
        	{
            	return false;
        	}
    	}
    }
    else
    {
        for (int i = 0; i <= n; i++)
    	{
            
            else if (nums[i] != nums[nums.length - n + i])
        	{
            	return false;
        	}
    	}
        
    }
    return true;
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
4f020dcb2ebec419aa94d431533df15542e537ec,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
    	if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }  
    }
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n == 8 || n == 9 || n == 10)
    {
        return true;
    }
    if (n <= 1 || n >= 10)
    {
        return false;
    }  
    return false;
}
"
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
cd80603c865a5f537dae1c802b4d53681015978e,"public int luckySum(int a, int b, int c)
{
    if (a == 13) 
    {
        return = 0;
    }
    
    if (b == 13)
    {
        return = a; 
    }
    
    if (c == 13)
    {
        return (a + b);       
    }
    
    else 
    {
        return (a + b + c);
    }
    
    
}
"
1ced7b3ab5f86bf014b0aab47983b280fea0faf5,"public int[] frontPiece(int[] nums)
{
    returnNumber = new int[2]
    for (int i = 0; i < nums.length && i < 2; i++)
    {
        returnNumber[i] = nums[i]
    }
	return returnNumber;
}
"
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
0bd7fe95ce9749e4f8a7edf4208f6c161ea14ca1,"public int countCode(String str)
{
    int x = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c')
        {
            if (str.charAt(i+1) == 'o')
            {
                if (str.charAt(i + 3) == 'e')
                {
                    x++;
                }
            }
        }
    }
    return x;
}
"
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
"
ba8cfb4cad91f6a68d58ca4ab3a88d035f324a8c,"public int sortaSum(int a, int b)
{
    if ( a + b >= 10 && a + b <= 19) {
        retun 20;
    }
    else {
        return a + b;
    }
}
"
af20cd1af1156a04c4ca530fa1bda65b9cd57682,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning) 
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
042c7539e7bbc603f9d999c837f0b4486eeef11a,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n != 15 && n != 16)
    	if (n <= 19 && n >= 13)
        	return 0;
    return n;
}
"
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
"
6434b911e74e0d2939d97a8820552e19fd926f60,"public int countClumps(int[] nums)
{
      int current = -1, clump = 0;
  for(int i = 0; i < nums.length - 1; i++) {
    if(nums[i] == nums[i + 1] && nums[i] != current) {
       current = nums[i];
       clump++;
    } else {
       if(nums[i] != current) {
          current = -1;
       }
    }
  }
  return clump;
}
"
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
"
8fbb70b4ce6f9c55dcd5d47f50272f1685330601,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
            return true;
        else 
            return false;
    }
    if (isAsleep)
        return false;
}
"
0a981e4d5656917703eeb416a1a0e490b9d2cba4,"public boolean twoTwo(int[] nums)
{
    if (nums.length == 1 && nums[0] == 2)
    {
        return false;
    }
    if (nums.length >= 2 && ((nums[0] == 2 && nums[1] != 2) ||
        (nums[nums.length-1] == 2 && nums[nums.length-2] != 2)))
    {
        return false;  
    }
    for (int i = 1; i <= nums.length - 2; i++)
    {
        if (nums[i] == 2 && nums[i-1] != 2 && nums[i+1] != 2)
        {
            return false;
        }
    }                                    
    return true;
}"
563e70492a46c1983409ddc52f1edaf6f8bfba29,"public int countClumps(int[] nums)
{
    int merlin = 0;
    
    for(int i = 0; i < nums.length - 1  ; i++)
    {
        if (nums[i] == nums[i+1])
        {
            merlin++
        }
           
    }
    return merlin;
}
"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
22d46f636a2ecaa8a80e55e579500a4ff8e2a188,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            nums[i+1] = 5;
        }
    }
    
    return nums;
}
"
1d6179ccdc1c6fce139143f569025a679c1301a0,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        	largeOdd == nums[i];
        if (nums[i] == 0)
        	nums[i] == largeOdd;
    }
    return nums;
}"
b21271e79419b123e5e2d4ff29ca2f214f3fb90e,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if (a==b || a==c || b==c)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
"
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
"
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
"
0a9dcd12a12791fe49d782b736769ace72b0d2ed,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else
    {
        if (b == 13)
        {
            return a;
        }
        else
        {
             if (c == 13)
                {
                    int AB = (a + b);
                    return AB;
                }
                else
                {
                    int ABC = (a + b + c);
                    return ABC;
                }
        }
    }
}
"
62ee950cfa1bc55628aa512b7a9408897dbaf682,"
public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15)
        {
            return 15;
        }
        if (n == 16)
        {
            return 16;
        }
        return 0;
    }
    return n;
}
public int noTeenSum(int a, int b, int c)
{
    return a+b+c;
}
"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
685a1f07697cb907cefcecfa8cf5158825e90e14,"public int countCode(String str)
{
    int length = str.length() - 2;
    int num = 0;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == c && str.charAt(i + 1) == o
            && str.charAt(i + 3) == e)
        {
            num = num + 1;
        }
    }
    return num;
}
"
db9b29b114ae85d86c3fe363b9c8f7afce6147c3,"public int countCode(String str)
{
    int count = 0;
    for ( int i = 0; i < str.length() - 3; i++ )
    {
        if ( ""co"".equals( str.substring( i, i + 2 ) ) )
        {
            if ( str.charAt( i + 3 ) == 'e' )
            {
                count++;
            }
        }
    }
    return count;
}
"
9eb233b4442526c98e5181cbd698f5839c08adb3,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a == c || b == c || a == c)
        return false;
    if (a == b || b == c)
        return true;
    else
        return ((Math.abs(a - c)==Math.abs(a - b))) ||( Math.abs(c - a)==Math.abs(b - c) || Math.abs(a - b) == Math.abs(b - c));
}
"
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
"
dca1f726e64da2460020f1bbac55668502eddba7,"public int roundSum(int a, int b, int c)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
    
}

public int round10(int num)
{
    return (round10(a) + round10(b) + round10(c));
    
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
da35db888e070aad3d1910413f0731e4b429579c,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (20 - n < 7  && 20 - n < 1)
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
"
727d541babe278c063e729dab201403c18c6f003,"public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        str == ""bread"" - str - ""bread"";
    }
    else
    {
        return """";
    }
}
"
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
d5b2f12d5cc6c645ca6a7c976d7b61c426c3a538,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
6bc66f51e027f8e766055c5683b57b6d779c2d15,"public String withouEnd2(String str) 
{
if (str.length() <= 2) 
    return """";
return str.substring(1, str.length() - 1);
}
"
d6ecef2688242348be94ae9cf4d683dbfee353d2,"public int countClumps(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
        if (nums[i] = nums[i+1])
        {
            
            count += 1;
            
        }
        
    }
    
    
    return count;
    
    
}
"
8ea314af4ea3aa3a6d57f2c90ff7786608a23927,"public int noTeenSum(int a, int b, int c)
{
	int numA = a;
    int numB = b;
    int numC = c;
    return (fixTeen(numA) + fixTeen(numB) + fixTeen(numC));
}

public int fixTeen(int n)
{
    int num = n;
    if (num == 15 || num == 16)
    {
        return num;
    }
    else if (num >= 13 && num <= 19)
    {
        return 0;
    }
    else
    {
        return num;
    }
}
"
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
"
e842a2d12176ae37228ff69c6c768005b587ac2a,"public int blackjack(int a, int b)
{
    int c = 21 - a;
    int d = 21 - b;
    
    
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else
    {
        if (c > d)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
}
"
694a9037b08573fdb83bf861651119e9cdc03f82,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 1; i<n; i++)
    {
        last = last + str.substring(str.length()-n);
    }
    return last;
        
}
"
9a762998ef3f0abdaeaa9e34d97d58d792cb6be4,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMom)
        return true;
    return (!isMorning);
}
"
9854a8715c3f2ef0abd481b669c936355c5f9760,"public int sum67(int[] nums)
{
    int sum = 0;
    
    for (int i : nums)
    {
        if (i == 6)
        {
            for (int j = 6; j <= 7; j++)
            {
                i = 0;
            }
        }
        sum = sum + i;
    }
    
    return sum;
}
"
12941eb615aae98f65aa36224718e48e3383968c,"public int loneSum(int a, int b, int c)
{
    int x = a + b + c;
    if (a == b)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return c;
        }
    }
    else if (b == c)
    {
        if (a == c)
        {
            return 0;
        }
        else
        {
            return a;
        }
    }
    else if (a == c)
    {
        if (b == c)
        {
            return 0;
        }
        else
        {
            return b;
        }
    }
    else
    {
        return x;
    }
}
"
d9d0af4a86d3d806a73729146509fcd884212bbe,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 && (a + b) <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
"
5f47fb8c001a1322e1c2f9dc302a3c4b5c3adef8,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21)
    {
        return a;
    }
    else if (b > a && b <= 21)
    {
        return b;
    }
    else if (a > 21 || b > 21)
    {
        return 0;
    }
    else if (a > b && b > 21)
    {
        return a;
    }
    else if (b > a && a > 21)
    {
        return b;
    }
    return 0;
}
"
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
"
da854431fc95a4fda3f5795de985db2ccfd6cecc,"public boolean xyzThere(String str)
{
    if (str.length() >= 3) {
   	 	for (int i = 0; i < str.length() - 3; i++) {
        	if (str.substring(i, i + 3).equals(""xyz"")) {
            	if (i == 0) {
                    return true;
                }
                else if (str.charAt(i - 1) == '.') {
                    return false;
                }
                else {
                    return true;
                }
        	}
            else {
               return false; 
            }
    	}
    }
    else {
        return false;
    }
}
"
04780365d53ec02bf23dee2452c32d0edb7fb12c,"public int roundSum(int a, int b, int c)
{
    return (round10(a) + round10(b) + round10(c));
}

public int round10(int num)
{
    int digit = num % 10;
	if(digit >= 5)
		return num + (10 - digit);
	return num - digit;
}
"
92e96089344e9e0ed22514c1297920394e0f87d6,"public int countClumps(int[] nums)
{
    int length = 0;
    int counts = 0;
    while (length < nums.length - 1)
    {
        if (nums[length] == nums[length + 1])
            {
               counts++;
            }
        length++;
    }
            return counts;
}
"
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
"
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
"
3d5712cd499b5dbbb377c38144436a2980ada53f,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else if (isAsleep)
        {
            return false;
        }
        else
        {
        	return false;
        }
    }
    if (!isMorning)
    {
        if (isAsleep)
        {
            return false;
        }
        else 
        {
            return true;
        }
    }
    return false;
}
"
ebd32bc9d73aea5eb17d579604ff55398843bcff,"def make_chocolate(small, big, goal):
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
        return remainder
        
    return -1

"
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
"
ee4708e15be1f13f8c489f277d070e2cddbf6ff4,"public int sum13(int[] nums)
{
    int sum = 0;
    for(int i = 0; i < nums.length ; i++)
    {
     	if (nums[i] == 13)   
        {
         	i++;
        }
     	sum = sum + nums[i];   
    }
    return sum; 
}
"
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
"
8f13baf6c1f32fe1e3c57fc757c44293a34e0980,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning)
    {
        if (isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    if (isAsleep)
    {
        return false;
    }
    else if (!isAsleep)
    {
        return true;
    }
    return false;
    
}
"
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
"
42e52e00ef12b244eddffd0c9e1678918659c4e7,"public int sum3(int[] nums)
{
    return (nums[0] + nums[1] + nums[2]);
}
"
c0bcafd61ce598040aa977b280d46011559cb4c7,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true;
    for( int i = 0; i <= nums.length-2; i++)
    {
        if( nums [i] != val && nums[i+1] != val)
            result = false;
    }
    return result;
}
    
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
"
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
"
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
"
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
0a4d7aee449450431db0efcda5856b22d973b605,"public String getSandwich(String str)
{
    if(str.length() > 10 &&
       str.substring(0, 5) == ""bread"" &&
       str.substring(str.length() - 6, str.length() - 1) == ""bread"")
    {
        return str.substring(5, str.length() - 6);
    }
    else {
        return str.substring(5, str.length() - 6);
    }
}
"
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
"
bda78f041aeff5c1c99839481d54cb270d0f1529,"public int makeChocolate(int small, int big, int goal)
{
     if goal >= 5 * big
     {
        remainder = goal - 5 * big；
     }
    else
    {
        remainder = goal % 5；
    }
        
    if remainder <= small
    {
        return remainder；
    }
        
    return -1；
}
"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
"
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
2d98290b1cb9284df4caf4badcf8737e2c4efb14,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i=0;i<nums.length-1;i++) {
    	if (nums[i] != val && nums[i+1] != val) {
         return false;   
        }
        
    }
    return true;
}
"
