ID,Code
c8c6800514f3f56f0353dcd42217d4bba2b37df3,"public int[] fizzArray(int n)
{
    int [] smelly = new int[n];
    for (int i = 0; i < n; i++)
    {
        smelly[i] = i;
    }
    return smelly;
    
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
"
fbb1ba5b8e0bd1848e38b6705785113e63a30905,"public boolean bobThere(String str)
{
 	for (int i = 0; i < str.length() - 3; i++)
    {
     	if(str.charAt(i)).equals(""b"") && str.charAt(i+2)).equals(""b""))   
        {
            return true;
        }
    }
    return false;
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
"
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
d832642cded155ba61945ed277e663a0de8cb32c,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 || day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
"
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
"
bfef0f13f16905b5acddfbd3c3900d7b4a2e5de9,"public boolean xyzThere(String str) {
  boolean res = false;

  if(str.contains("".xyz"") == false && str.contains(""xyz"") && str.contains(""abc.xyzxyz"")){
    res = true;
  }

  return res;

}"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
e61531131e67b061d6cf7718ecb13876185241fb,"public int[] fix45(int[] nums)
{
    int startZ = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int z = startZ + 1; z < nums.length; z++)
            {
                if (nums[z] == 5)
                {
                    startZ = z;
                    nums[z] = nums[i + 1];
                    nums[i + 1] = 5;
                }
            }
        }
    }
    
    return nums;
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
27ced9f412138c0fe596bab23d6119a3c93f5686,"public int[] shiftLeft(int[] nums)
{
    int length = nums.length;
    int special = nums[0];
    if (length == 0)
    {
        return nums;
    }
    for (int i = 0; i < length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[length - 1] = special;
    return nums;
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
c0f5b70b603edfb55cea6f3a939df372d0d07201,"public int makeChocolate(int small, int big, int goal)
{
    if (goal >= 5 && (goal / 5) >= big && (goal / 5 )
        - small > 0)
        return goal - big * 5; 
    else if (goal / 5 < big ) 
        return goal % 5;
    else 
        return -1;
}
"
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
"
7c7871661cd4465fe9ca613614480b58e74f7aad,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        repeat = repeat + str.substring(str.length() - n);
    return repeat;
}
"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
217727d1f14f216248eece014e54d93c9ec2a75d,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 != 0)
        {
            largestOdd = nums[i];            
        }
    }
    
    boolean foundNumberRight = false;
    for (int i = nums.length; i <= 0; i++)
    {
        if (nums[i] == largestOdd)
        {
            foundNumberRight = true;
        }
        
        if (foundNumberRight && nums[i] == 0)
        {
            nums[i] = largestOdd;
        }
    }
    
    return nums;

}

"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
9e9542ff6fbf9e9b88a43d0fb3f6ca6777ffd9f2,"public int countEvens(int[] nums)
{
   	int numEvens = 0;
    for (int i = 0; i < nums.length; i++)
    {
        currentNum = nums[i];
        int remainder = currentNum % 2;
        if (remainder == 0)
        {
            numEvens++;
        }
    }
    return numEvens;
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
"
04fc4021576eaece15c0484d4f837b6ea46138e0,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] == 5 && i == 0 || 
            nums[i] == 5 && nums[i - 1] != 4) {
            int positionOf5 = i; 
        }
        for (int k = 0; k < nums.length;k++) {
            if (nums[k] == 4 && nums[k+1) != 5) {
                int hold = num[k];
                nums[k + 1] = 5;
                nums[positionOf5] = hold; 
                break; 
            }
        }
    }
    return nums; 
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
"
77ef41c9051bc2d90dc72510fd40ea3619a48ac5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean answerCall;
    
    if (isAsleep)
    {
        answerCall = false;
    }
    else if ((isMom) && (isMorning))
    {
        answerCall = true;
    }
    else if (isMorning)
    {
        answerCall = false;
    }
    else
    {
        answerCall = true;
    }
    return answerCall;
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
8db3be744756c4c7fa1107cee7a6b7505c1d6b6b,"public String[] fizzBuzz(int start, int end)
{
    String[] bzz = new String[end - 1];
    String output = """";
    for (int i = start; i < end; i++)
    {
        if (i % 3 == 0)
        {
            output += ""Fizz"";
        }
        if (i % 5 == 0)
        {
            output += ""Buzz"";
        }
        if (output.equals(""""))
        {
            output = String.valueOf(i);
        }
        bzz[i] = output;
    }
    return bzz;
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
e61531131e67b061d6cf7718ecb13876185241fb,"public int[] fix45(int[] nums)
{
    int startZ = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int z = startZ + 1; z < nums.length; z++)
            {
                if (nums[z] == 5)
                {
                    startZ = z;
                    nums[z] = nums[i + 1];
                    nums[i + 1] = 5;
                }
            }
        }
    }
    
    return nums;
}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
50e38ea828c8b0ad18791c7c955b37bad6c9d4bc,"public boolean xyzThere(String str)
{
    int a = str.indexOf(""xyz"");
    int b = str.lastIndexOf(""xyz"");
    return ( a != -1 || b != -1);
}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
"
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
d50d492ebb2d39ef30d910d235f290f774635c0f,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    if (a == b && a == c && b == c)
        return 0;
    else
        return a + b + c;
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
CodeStateID,Code
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
"
0dcf6449d4df310d3fe50618ea03c76712671149,"public boolean canBalance(int[] nums)
{
    int upperIndex = nums.length-1;
    int lowerIndex = 0;
    while(lowerIndex<upperIndex){
		int lowerSum = sum(nums,0,lowerIndex);
        int upperSum = sum(nums,lowerIndex,upperIndex);
        if(lowerSum==upperSum)
            return true;
        else if(lowerSum<upperSum)
            lowerSum++;
        else
            upperSum++;
    }
    return false;
}

private int sum(int[] nums,int a, int b){
    int sum = 0;
    for(int i = a; a < b; i++){
        sum+=nums[i];
    }
    return sum;
}"
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
"
cee57656ca16e1dba36c9adc7d7dbfc622398c9a,"public int sum13(int[] nums)
{
    int sum = 0;
        if (nums.length < 1) {
            return 0;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 13) {
                i++;
                continue;
            }
            sum += nums[i];
        }
        return sum;
}
"
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
3213a4cba04c1562abae45ab0c2f1e267cb61c6f,"public boolean canBalance(int[] nums)
{
    
    for (int i = 0; i < nums.length; i++)
    {
        int leftsum = 0;
        for (int j = 0; j < i; j++)
        {
            leftsum += nums[j];
        }
        int rightsum = 0;
        for (int k = i; k < nums.length; k++)
        {
            rightsum += nums[k];
        }
        if (leftsum == rightsum)
        {
            return true;
        }
    }
    return false;
}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
"
64048f2701869a2bcb7a460416d3ef15f722e6b6,"public int[] fizzArray(int n)
{
    int i;
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
"
1b2a482b4c2f7363add899927ba7887a9805f10d,"public boolean canBalance(int[] nums)
{
    int first = 0;
    int second = 0;
    for (int i = 0; i < nums.length; i++)
        second += nums[i];
    
    for (int i = 0; i < nums.length - 2; i++)
    {
        first += nums[i];
        second -= nums[i];
        
        if (first == second)
            return true;
    }
    return false;
}
"
39f7db5a7fbf9dd38ccc348c22569f375d2af11d,"public int[] fizzArray(int n)
{
    int count = 0;
    int[] arr = new int[n];
    for (int i = 0; i < arr.length; i++)
    {
        arr[i] = count;
        count++;
    }
    return arr;
}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}"
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
cf6036cc34155af32690c2a41cc6f1def095e657,"public int countClumps(int[] nums)
{
    boolean areSame = false;
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh && !areSame)
        {
            clumps++;
            areSame = true;
        }
        else if (compareLow != compareHigh)
        {
            areSame = false;
        }
    }
    return clumps;
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
c32e8df18759f85c9ca9cc1ff3051aa396bf5a33,"public boolean evenlySpaced(int a, int b, int c)
{
    int[3] arrInOrder;
    arrInOrder[0] = a;
    arrInOrder[1] = b;
    arrInOrder[2] = c;
    
    int small;
    int med, big;
   /**
    if ((a > b) && (a > c)) // if a is the biggest
   {
		if (b > c)
        {
            big = a;
            med = b;
            small = c;
        }
       else
       {
           
       }
       
   }
   */
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
3a6926253f22b4fe6d5e934cbd56d32c6fdabb31,"public String without2(String str) 
{
int Length = str.length();   
String beginning = str.substring(0, 2);
String ending = str.substring(Length -2, Length);
     
    if (Length == 2)
    {return """";}
    
    if (Length < 2)
    {return str;}
    
    if (Length >= 2 && beginning.equals(ending))
    {return str.substring(2);}
    
    if (Length < 2 && beginning.equals(ending))
    {return str;}
     
    else 
    {return str;}
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
"
e61531131e67b061d6cf7718ecb13876185241fb,"public int[] fix45(int[] nums)
{
    int startZ = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int z = startZ + 1; z < nums.length; z++)
            {
                if (nums[z] == 5)
                {
                    startZ = z;
                    nums[z] = nums[i + 1];
                    nums[i + 1] = 5;
                }
            }
        }
    }
    
    return nums;
}
"
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
fe4c33f884bebc96972922f847a797677cecb743,"public int sum67(int[] nums)
{
  //add up the sections between 6 and 7.
    //subtract them from the total
    boolean ignoring = false;
    int deplorables = 0;
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
    	if(nums[i] == 6)
        {ignoring = true;}
        
        if(nums[i]== 7 && ignoring)
        {ignoring = false;}
        
        if(ignoring)
        {deplorables += nums[i];}
        else
        {sum += nums[i];}
    }
  return sum - deplorables;
}
"
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
"
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
12eb90cd21edfa3b84b353939a235a5e8fca23c3,"public int makeChocolate(int small, int big, int goal)
{
    int amountOfSmallBars = goal % 5;
    
    if (small + (big * 5) < goal)
    { 
        return -1;
    }
    
    else if (amountOfSmallBars <= small && goal - (big * 5) > 4)
    {
        return amountOfSmallBars + 5; 
    }
    
    else if (amountOfSmallBars <= small)
    {
    	return amountOfSmallBars;
    }
    
    else 
    {
        return -1; 
    }
    
}
"
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
"
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
"
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
"
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
"
0dcf6449d4df310d3fe50618ea03c76712671149,"public boolean canBalance(int[] nums)
{
    int upperIndex = nums.length-1;
    int lowerIndex = 0;
    while(lowerIndex<upperIndex){
		int lowerSum = sum(nums,0,lowerIndex);
        int upperSum = sum(nums,lowerIndex,upperIndex);
        if(lowerSum==upperSum)
            return true;
        else if(lowerSum<upperSum)
            lowerSum++;
        else
            upperSum++;
    }
    return false;
}

private int sum(int[] nums,int a, int b){
    int sum = 0;
    for(int i = a; a < b; i++){
        sum+=nums[i];
    }
    return sum;
}"
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
5cd02f6c04c19cfba3433b99e62352d722eab1e6,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
	    if (a > b)
	    {
   		  	return a;
	    }
	    else
    	{
    	 	return b;
    	}
    }
    else
    {
       	return 0;
    }
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
"
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
"
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
"
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
39f7db5a7fbf9dd38ccc348c22569f375d2af11d,"public int[] fizzArray(int n)
{
    int count = 0;
    int[] arr = new int[n];
    for (int i = 0; i < arr.length; i++)
    {
        arr[i] = count;
        count++;
    }
    return arr;
}
"
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
"
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}"
fe4c33f884bebc96972922f847a797677cecb743,"public int sum67(int[] nums)
{
  //add up the sections between 6 and 7.
    //subtract them from the total
    boolean ignoring = false;
    int deplorables = 0;
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
    	if(nums[i] == 6)
        {ignoring = true;}
        
        if(nums[i]== 7 && ignoring)
        {ignoring = false;}
        
        if(ignoring)
        {deplorables += nums[i];}
        else
        {sum += nums[i];}
    }
  return sum - deplorables;
}
"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
172b1add93db57d2a40bf171672074b4b4174560,"public int[] tenRun(int[] nums)
{
    int savedval = 0;
    while (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            savedval = nums[i];
            i++;
            
            while (nums[i] % 10 != 0)
            {
                nums[i] = savedval;
                i++;
            }
        }
    }
    return nums;
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
39f7db5a7fbf9dd38ccc348c22569f375d2af11d,"public int[] fizzArray(int n)
{
    int count = 0;
    int[] arr = new int[n];
    for (int i = 0; i < arr.length; i++)
    {
        arr[i] = count;
        count++;
    }
    return arr;
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
80b8b697699be50344231d353fbb76870cbc777f,"public boolean evenlySpaced(int a, int b, int c)
{
    int small;
    int medium;
    int large;
    if (a > b) {
        small = a;
        a = b;
        b = small;
    }
    if (b > c) {
        medium = b;
        b = c;
        c = medium;  
    }
    if ( a > b) {
        large = a;
        a = b;
        b = large;
    }
    if (b - a == c - b) {
        return true;
    }
    else {
        return false;
    }
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
"
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
7c7871661cd4465fe9ca613614480b58e74f7aad,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        repeat = repeat + str.substring(str.length() - n);
    return repeat;
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
"
c8c6800514f3f56f0353dcd42217d4bba2b37df3,"public int[] fizzArray(int n)
{
    int [] smelly = new int[n];
    for (int i = 0; i < n; i++)
    {
        smelly[i] = i;
    }
    return smelly;
    
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
04fc4021576eaece15c0484d4f837b6ea46138e0,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] == 5 && i == 0 || 
            nums[i] == 5 && nums[i - 1] != 4) {
            int positionOf5 = i; 
        }
        for (int k = 0; k < nums.length;k++) {
            if (nums[k] == 4 && nums[k+1) != 5) {
                int hold = num[k];
                nums[k + 1] = 5;
                nums[positionOf5] = hold; 
                break; 
            }
        }
    }
    return nums; 
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
5b9eb535280570f293684ef95c107bc80160a334,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = len;
	for (int i =0; i <range;i++)
    {
		if (!(nums[i] == nums[nums.length - range + i]))
        {
			result = false;
        }
    }
return result;
}
"
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
64048f2701869a2bcb7a460416d3ef15f722e6b6,"public int[] fizzArray(int n)
{
    int i;
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
196436f6a31b3c5fa13fcebfee2d326193bfb3b0,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
          
    if(a == b && b == c)
        return 5;
                    
    if(a != b && a != c)
        return 1;
                            
    return 0;
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
6e8cdb312eaf547b8488629b9abc249fe869a96d,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
    if(a == b && b == c)
        return 5;
    if (a != b && a != c)
        return 1;
    return 0;
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
39f7db5a7fbf9dd38ccc348c22569f375d2af11d,"public int[] fizzArray(int n)
{
    int count = 0;
    int[] arr = new int[n];
    for (int i = 0; i < arr.length; i++)
    {
        arr[i] = count;
        count++;
    }
    return arr;
}
"
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
e3604130ed0d8066301429b1026d44bbec5d2b4b,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder(n*n);
    for (int i = 0; i < n; i++)
    {
    	sb.append(n);
    }
    return sb.toString();
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
6c5f6108333f344785ee689de07d00263b413498,"public String repeatEnd(String str, int n)
{
    return str; 
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
"
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}"
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
"
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
"
c64c9e9c0a786ef3732a68209a390d30d8284fd4,"public int dateFashion(int you, int date)
{
   if ((you >= 2 || date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 || date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
77ef41c9051bc2d90dc72510fd40ea3619a48ac5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean answerCall;
    
    if (isAsleep)
    {
        answerCall = false;
    }
    else if ((isMom) && (isMorning))
    {
        answerCall = true;
    }
    else if (isMorning)
    {
        answerCall = false;
    }
    else
    {
        answerCall = true;
    }
    return answerCall;
}
"
532a012b0ec202d27262b383dc13089aef7e1e3b,"public int dateFashion(int you, int date)
{
   if ((you >= 2 && date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 && date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
7d1223c04b3cdd6a8c111f378ce0f3cf10b7c095,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
        char l1;
        l1 = str.charAt(i);
        
        char l2;
        l2 = str.charAt(i + 1);
        
        char l3;
        l3 = str.charAt(i + 2);
        
        char bob;
        bob = (l1 + l2 + l3);
        
        if (bob.startsWith(b) && bob.endsWith(b))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
        
        
}
"
3213a4cba04c1562abae45ab0c2f1e267cb61c6f,"public boolean canBalance(int[] nums)
{
    
    for (int i = 0; i < nums.length; i++)
    {
        int leftsum = 0;
        for (int j = 0; j < i; j++)
        {
            leftsum += nums[j];
        }
        int rightsum = 0;
        for (int k = i; k < nums.length; k++)
        {
            rightsum += nums[k];
        }
        if (leftsum == rightsum)
        {
            return true;
        }
    }
    return false;
}
"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
cf0b2d83b0558f31d29970ac5594bb6590bceebc,"public String without2(String str) 
{
    if (str.substring((str.length() - 2)) != str.substring(2))
    {
        return str;
    }
    else
    {
        return str.substring(2);
    }
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
"
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
c8c6800514f3f56f0353dcd42217d4bba2b37df3,"public int[] fizzArray(int n)
{
    int [] smelly = new int[n];
    for (int i = 0; i < n; i++)
    {
        smelly[i] = i;
    }
    return smelly;
    
}
"
e61531131e67b061d6cf7718ecb13876185241fb,"public int[] fix45(int[] nums)
{
    int startZ = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int z = startZ + 1; z < nums.length; z++)
            {
                if (nums[z] == 5)
                {
                    startZ = z;
                    nums[z] = nums[i + 1];
                    nums[i + 1] = 5;
                }
            }
        }
    }
    
    return nums;
}
"
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
bfef0f13f16905b5acddfbd3c3900d7b4a2e5de9,"public boolean xyzThere(String str) {
  boolean res = false;

  if(str.contains("".xyz"") == false && str.contains(""xyz"") && str.contains(""abc.xyzxyz"")){
    res = true;
  }

  return res;

}"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
9e9542ff6fbf9e9b88a43d0fb3f6ca6777ffd9f2,"public int countEvens(int[] nums)
{
   	int numEvens = 0;
    for (int i = 0; i < nums.length; i++)
    {
        currentNum = nums[i];
        int remainder = currentNum % 2;
        if (remainder == 0)
        {
            numEvens++;
        }
    }
    return numEvens;
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
c32e8df18759f85c9ca9cc1ff3051aa396bf5a33,"public boolean evenlySpaced(int a, int b, int c)
{
    int[3] arrInOrder;
    arrInOrder[0] = a;
    arrInOrder[1] = b;
    arrInOrder[2] = c;
    
    int small;
    int med, big;
   /**
    if ((a > b) && (a > c)) // if a is the biggest
   {
		if (b > c)
        {
            big = a;
            med = b;
            small = c;
        }
       else
       {
           
       }
       
   }
   */
}
"
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
6c5f6108333f344785ee689de07d00263b413498,"public String repeatEnd(String str, int n)
{
    return str; 
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
c386e80b45b1f867ba40aaf3d78f271a5bd2ffe0,"public int noTeenSum(int a, int b, int c)
{
	if(a <= 19 && a >= 13)
    {
    	return b + c;
    }
    
    if(b <= 19 && b >= 13)
    {
    	return a + c;
    }
    
    if(c <= 19 && c >= 13)
    {
    	return a + b;
    }
}

public int fixTeen(int n)
{
	    
}
"
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}"
e61531131e67b061d6cf7718ecb13876185241fb,"public int[] fix45(int[] nums)
{
    int startZ = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int z = startZ + 1; z < nums.length; z++)
            {
                if (nums[z] == 5)
                {
                    startZ = z;
                    nums[z] = nums[i + 1];
                    nums[i + 1] = 5;
                }
            }
        }
    }
    
    return nums;
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
"
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
"
c0f5b70b603edfb55cea6f3a939df372d0d07201,"public int makeChocolate(int small, int big, int goal)
{
    if (goal >= 5 && (goal / 5) >= big && (goal / 5 )
        - small > 0)
        return goal - big * 5; 
    else if (goal / 5 < big ) 
        return goal % 5;
    else 
        return -1;
}
"
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
5cd02f6c04c19cfba3433b99e62352d722eab1e6,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
	    if (a > b)
	    {
   		  	return a;
	    }
	    else
    	{
    	 	return b;
    	}
    }
    else
    {
       	return 0;
    }
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
e3604130ed0d8066301429b1026d44bbec5d2b4b,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder(n*n);
    for (int i = 0; i < n; i++)
    {
    	sb.append(n);
    }
    return sb.toString();
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
"
f0205df67f010e325ec1614fba0a300d61a74dec,"public int blackjack(int a, int b)
{
    double valueA;
    valueA = (a % 21);
    double valueB;
    valueB =  (b % 21);
    
    if (a < 21 || b < 21)
    {
        if (double valueA > double valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else if (a < 21 && b < 21)
    {
        if (valueA > valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else
    {
        return 0;
    }
}
"
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
"
c384cb38b2cffa92ee7bc55feafe1c65d7c5d33e,"public int countCode(String str)
{
int count = 0;

for(int i = 0; i < str.length() - 3; i++)
{
if(str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
count++;
}

return count;  
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
be7dd1c681ece206447d7c19a5ae06f1777a4e05,"public boolean xyzThere(String str)
{
 
    if (str.length () >= 3  && 
        str.substring(0,3).equals(""xyz"") )
    {
        return true;
    }
        for (int x = 0; x < str.length() -2; x++)
        {
   			if (str.charAt(x) != '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return true;
    }
  
    {
        return false;
    }
            {return false;}
}
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
b5509f3d8d4bcd8f2b81e75b2c675400125936aa,"public int luckySum(int a, int b, int c)
{
    int luckySum = 0;
    if ( a == 13 )
    {
    	luckySum = c;
    }
    else if ( b == 13)
    {
    	luckySum = b;
    }
    else if (c == 13)
    {
    	luckySum = a + b;
    }
    else
    {
    	luckySum = a + b + c;
    }
    return luckySum;
}
"
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
35bf9f4d092ca0691f367d63882b523cd05e7fd9,"public boolean endOther(String a, String b)
{
    String finish;
	String tempLength;
	int aLength = a.length();
	int bLength = b.length();
	a = a.toLowerCase();
	b = b.toLowerCase();
    
	if (aLength >= bLength)
	{
		finish = a.substring(aLength - bLength);
		tempLength = b;
	}
	else
	{
		finish = b.substring(bLength - aLength);
		tempLength = a;
	}
    
	return (finish.equals(tempLength));
}"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
"
469345bd6acd9ad504ce3cd1aaa0a852de97ddfe,"public int[] tenRun(int[] nums)
{
    int current;
    int i = 0;
      
    while(i < nums.length && nums[i] % 10 != 0)
        i++;
                
    if(i >= nums.length)
        return nums;
                          
    current = nums[i]; 
    i++;
                                
    while(i < nums.length) {
        if(nums[i] % 10 == 0)
            current = nums[i];
        else
            nums[i] = current;
        i++;
    }
                                                              
    return nums; 
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
270174ce7d53738e854429dc81bc8b311180b333,"public int[] shiftLeft(int[] nums)
{
    return int[] nums;
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
e61531131e67b061d6cf7718ecb13876185241fb,"public int[] fix45(int[] nums)
{
    int startZ = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int z = startZ + 1; z < nums.length; z++)
            {
                if (nums[z] == 5)
                {
                    startZ = z;
                    nums[z] = nums[i + 1];
                    nums[i + 1] = 5;
                }
            }
        }
    }
    
    return nums;
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
27ced9f412138c0fe596bab23d6119a3c93f5686,"public int[] shiftLeft(int[] nums)
{
    int length = nums.length;
    int special = nums[0];
    if (length == 0)
    {
        return nums;
    }
    for (int i = 0; i < length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[length - 1] = special;
    return nums;
}
"
172b1add93db57d2a40bf171672074b4b4174560,"public int[] tenRun(int[] nums)
{
    int savedval = 0;
    while (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            savedval = nums[i];
            i++;
            
            while (nums[i] % 10 != 0)
            {
                nums[i] = savedval;
                i++;
            }
        }
    }
    return nums;
}
"
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
f300c3316033d29c0150506e776d9d9a8546affd,"public int[] tenRun(int[] nums)
{
    int current;
    int i = 0;
      
    while(i < nums.length && nums[i] % 10 != 0)
        i++;
                
    if(i >= nums.length)
        return nums;
                          
    current = nums[i]; 
    i++;
                                
    while(i < nums.length) {
        if(nums[i] % 10 == 0)
            current = nums[i];
        else
            nums[i] = current;
        i++;
    }
                                                              
    return nums; 
}
"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
bfef0f13f16905b5acddfbd3c3900d7b4a2e5de9,"public boolean xyzThere(String str) {
  boolean res = false;

  if(str.contains("".xyz"") == false && str.contains(""xyz"") && str.contains(""abc.xyzxyz"")){
    res = true;
  }

  return res;

}"
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
9e9542ff6fbf9e9b88a43d0fb3f6ca6777ffd9f2,"public int countEvens(int[] nums)
{
   	int numEvens = 0;
    for (int i = 0; i < nums.length; i++)
    {
        currentNum = nums[i];
        int remainder = currentNum % 2;
        if (remainder == 0)
        {
            numEvens++;
        }
    }
    return numEvens;
}
"
3a6926253f22b4fe6d5e934cbd56d32c6fdabb31,"public String without2(String str) 
{
int Length = str.length();   
String beginning = str.substring(0, 2);
String ending = str.substring(Length -2, Length);
     
    if (Length == 2)
    {return """";}
    
    if (Length < 2)
    {return str;}
    
    if (Length >= 2 && beginning.equals(ending))
    {return str.substring(2);}
    
    if (Length < 2 && beginning.equals(ending))
    {return str;}
     
    else 
    {return str;}
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
77ef41c9051bc2d90dc72510fd40ea3619a48ac5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean answerCall;
    
    if (isAsleep)
    {
        answerCall = false;
    }
    else if ((isMom) && (isMorning))
    {
        answerCall = true;
    }
    else if (isMorning)
    {
        answerCall = false;
    }
    else
    {
        answerCall = true;
    }
    return answerCall;
}
"
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
"
e3604130ed0d8066301429b1026d44bbec5d2b4b,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder(n*n);
    for (int i = 0; i < n; i++)
    {
    	sb.append(n);
    }
    return sb.toString();
}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
cf0b2d83b0558f31d29970ac5594bb6590bceebc,"public String without2(String str) 
{
    if (str.substring((str.length() - 2)) != str.substring(2))
    {
        return str;
    }
    else
    {
        return str.substring(2);
    }
}
"
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
"
12eb90cd21edfa3b84b353939a235a5e8fca23c3,"public int makeChocolate(int small, int big, int goal)
{
    int amountOfSmallBars = goal % 5;
    
    if (small + (big * 5) < goal)
    { 
        return -1;
    }
    
    else if (amountOfSmallBars <= small && goal - (big * 5) > 4)
    {
        return amountOfSmallBars + 5; 
    }
    
    else if (amountOfSmallBars <= small)
    {
    	return amountOfSmallBars;
    }
    
    else 
    {
        return -1; 
    }
    
}
"
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
6f412fb97dacfeab711397d737336f16f8b3a81c,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder();
    for (int i = 0; i < n; i++)
    {
    	sb.append(str.charAt(str.length()-1));
    }
    return sb.toString();
}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
fe4c33f884bebc96972922f847a797677cecb743,"public int sum67(int[] nums)
{
  //add up the sections between 6 and 7.
    //subtract them from the total
    boolean ignoring = false;
    int deplorables = 0;
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
    	if(nums[i] == 6)
        {ignoring = true;}
        
        if(nums[i]== 7 && ignoring)
        {ignoring = false;}
        
        if(ignoring)
        {deplorables += nums[i];}
        else
        {sum += nums[i];}
    }
  return sum - deplorables;
}
"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
d7c652fe7617faefbf9d4f1a9e2917b5bcf5efcc,"public int[] tenRun(int[] nums)
{
    int replace = nums[0];
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] % 10 == 0) {
            replace = nums[i];
        }
        else if (replace % 10 != 0) {
            replace = nums[i]
        }
        nums[i] = replace;
    }
    return nums;
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
e61531131e67b061d6cf7718ecb13876185241fb,"public int[] fix45(int[] nums)
{
    int startZ = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int z = startZ + 1; z < nums.length; z++)
            {
                if (nums[z] == 5)
                {
                    startZ = z;
                    nums[z] = nums[i + 1];
                    nums[i + 1] = 5;
                }
            }
        }
    }
    
    return nums;
}
"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
21f49c70a5574e177ee0e928d52f7656fb37a03a,"public boolean canBalance(int[] nums)
{
    int same = 0;
    int sum = 0;
    for (int i=0;i<nums.length;i++)
    {
        sum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        same += nums[i];
        sum -= nums[i];
    
    if (same == sum)
    {
        return true;
    }
    }
    return false;
}"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
c386e80b45b1f867ba40aaf3d78f271a5bd2ffe0,"public int noTeenSum(int a, int b, int c)
{
	if(a <= 19 && a >= 13)
    {
    	return b + c;
    }
    
    if(b <= 19 && b >= 13)
    {
    	return a + c;
    }
    
    if(c <= 19 && c >= 13)
    {
    	return a + b;
    }
}

public int fixTeen(int n)
{
	    
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
"
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
"
9bb5e21f3a10d7ec32b3825e14061232985ba3c2,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2){
		return 0;
    }else if(you >= 8 || date >= 8){
		return 2;
    }else {
        return 1;
    }
}
"
bfef0f13f16905b5acddfbd3c3900d7b4a2e5de9,"public boolean xyzThere(String str) {
  boolean res = false;

  if(str.contains("".xyz"") == false && str.contains(""xyz"") && str.contains(""abc.xyzxyz"")){
    res = true;
  }

  return res;

}"
6c5f6108333f344785ee689de07d00263b413498,"public String repeatEnd(String str, int n)
{
    return str; 
}
"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
e61531131e67b061d6cf7718ecb13876185241fb,"public int[] fix45(int[] nums)
{
    int startZ = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int z = startZ + 1; z < nums.length; z++)
            {
                if (nums[z] == 5)
                {
                    startZ = z;
                    nums[z] = nums[i + 1];
                    nums[i + 1] = 5;
                }
            }
        }
    }
    
    return nums;
}
"
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
fe4c33f884bebc96972922f847a797677cecb743,"public int sum67(int[] nums)
{
  //add up the sections between 6 and 7.
    //subtract them from the total
    boolean ignoring = false;
    int deplorables = 0;
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
    	if(nums[i] == 6)
        {ignoring = true;}
        
        if(nums[i]== 7 && ignoring)
        {ignoring = false;}
        
        if(ignoring)
        {deplorables += nums[i];}
        else
        {sum += nums[i];}
    }
  return sum - deplorables;
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
b16439cf6ef5c619010c64a8fb33444995f538e6,"public String plusOut(String str, String word)
{
    String returnString = """";
    int lastIndex = str.indexOf(word);
    int i = lastIndex;
    
    while (i < str.length())   
    {
        if (i == str.indexOf(word, lastIndex))
        {
            returnString = returnString + word;
            lastIndex = i;
            i += (word.length() - 1);
        }
        
        else
        {
            returnString = returnString + ""+"";
            i++;
        }
    }
	return returnString;
}
"
e61531131e67b061d6cf7718ecb13876185241fb,"public int[] fix45(int[] nums)
{
    int startZ = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int z = startZ + 1; z < nums.length; z++)
            {
                if (nums[z] == 5)
                {
                    startZ = z;
                    nums[z] = nums[i + 1];
                    nums[i + 1] = 5;
                }
            }
        }
    }
    
    return nums;
}
"
4ba46181a66bb2f3cf45d38876db8736b1ebda46,"public boolean in1To10(int n, boolean outsideMode)
{
    return ((n >= 1 && n<=10 && !outsideMode) || (n > 10 || n < 1 && outsideMode));
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
77ef41c9051bc2d90dc72510fd40ea3619a48ac5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean answerCall;
    
    if (isAsleep)
    {
        answerCall = false;
    }
    else if ((isMom) && (isMorning))
    {
        answerCall = true;
    }
    else if (isMorning)
    {
        answerCall = false;
    }
    else
    {
        answerCall = true;
    }
    return answerCall;
}
"
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
f9d8c1646ba82ba2c6fd76e741d03f0b2865d6b3,"public int[] tenRun(int[] nums)
{
    int target = -1000000;
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] % 10) == 0)
        {
            target = nums[i];
        }
        else 
        {
            if (target != -1000000)
            {
                nums[i] = target;
            }
        }
    }
    return nums;
}
"
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
"
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
9bb5e21f3a10d7ec32b3825e14061232985ba3c2,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2){
		return 0;
    }else if(you >= 8 || date >= 8){
		return 2;
    }else {
        return 1;
    }
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}"
fe4c33f884bebc96972922f847a797677cecb743,"public int sum67(int[] nums)
{
  //add up the sections between 6 and 7.
    //subtract them from the total
    boolean ignoring = false;
    int deplorables = 0;
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
    	if(nums[i] == 6)
        {ignoring = true;}
        
        if(nums[i]== 7 && ignoring)
        {ignoring = false;}
        
        if(ignoring)
        {deplorables += nums[i];}
        else
        {sum += nums[i];}
    }
  return sum - deplorables;
}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
"
d7c652fe7617faefbf9d4f1a9e2917b5bcf5efcc,"public int[] tenRun(int[] nums)
{
    int replace = nums[0];
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] % 10 == 0) {
            replace = nums[i];
        }
        else if (replace % 10 != 0) {
            replace = nums[i]
        }
        nums[i] = replace;
    }
    return nums;
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
"
77ef41c9051bc2d90dc72510fd40ea3619a48ac5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean answerCall;
    
    if (isAsleep)
    {
        answerCall = false;
    }
    else if ((isMom) && (isMorning))
    {
        answerCall = true;
    }
    else if (isMorning)
    {
        answerCall = false;
    }
    else
    {
        answerCall = true;
    }
    return answerCall;
}
"
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
cee57656ca16e1dba36c9adc7d7dbfc622398c9a,"public int sum13(int[] nums)
{
    int sum = 0;
        if (nums.length < 1) {
            return 0;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 13) {
                i++;
                continue;
            }
            sum += nums[i];
        }
        return sum;
}
"
1c979246d26ff31f354ba006318397f665275f62,"public int[] fix45(int[] nums)
{
        for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
2eefd35700230f8780f45d01d416afdecdd69994,"public int caughtSpeeding(int speed, boolean isBirthday)
if(isBirthday)
{
	speed -= 5;
}
if(speed <= 60)
{
    return 0;
}
else if (speed <= 80)
{
    return 1;
}
else
{
    return 2;
}
    
"
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}"
270174ce7d53738e854429dc81bc8b311180b333,"public int[] shiftLeft(int[] nums)
{
    return int[] nums;
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
dc1c18a727a472113299aaf5bc76ffcf6180ee19,"public String[] fizzBuzz(int start, int end)
{
    end--;
    String[] result = new String[end - start];
    
    for (int i = 0; i < end; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
"
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
"
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
"
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
eb3954d897ab04a8ee9649988f3d26e98aae722f,"public String[] fizzBuzz(int start, int end)
{
    String[] result = new String[end - start];
    
    for (int i = 0; i < end - 1; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
"
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
7d1223c04b3cdd6a8c111f378ce0f3cf10b7c095,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
        char l1;
        l1 = str.charAt(i);
        
        char l2;
        l2 = str.charAt(i + 1);
        
        char l3;
        l3 = str.charAt(i + 2);
        
        char bob;
        bob = (l1 + l2 + l3);
        
        if (bob.startsWith(b) && bob.endsWith(b))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
        
        
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
"
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
3213a4cba04c1562abae45ab0c2f1e267cb61c6f,"public boolean canBalance(int[] nums)
{
    
    for (int i = 0; i < nums.length; i++)
    {
        int leftsum = 0;
        for (int j = 0; j < i; j++)
        {
            leftsum += nums[j];
        }
        int rightsum = 0;
        for (int k = i; k < nums.length; k++)
        {
            rightsum += nums[k];
        }
        if (leftsum == rightsum)
        {
            return true;
        }
    }
    return false;
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
"
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
e842a2d12176ae37228ff69c6c768005b587ac2a,"public int blackjack(int a, int b)
{
    int c = 21 - a;
    int d = 21 - b;
    
    
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else
    {
        if (c > d)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
}
"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
87b2b1811ad58d7a1fff515864427654134ed8fa,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            if (j == 0)
            {
            	while (nums[j] != 5)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
            
            else
            {
                while (nums[j] != 5 && nums[j - 1] != 4 && j < nums.length)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
        }
    }
    return nums;
}"
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
cf0b2d83b0558f31d29970ac5594bb6590bceebc,"public String without2(String str) 
{
    if (str.substring((str.length() - 2)) != str.substring(2))
    {
        return str;
    }
    else
    {
        return str.substring(2);
    }
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
1f5c3d8a073e2b5edf9214c7e6888105496b4151,"public int[] seriesUp(int n)
{	
    int[] list = new int[n * (n + 1)/2];
    int max = 1;
    int count = 0;
    for (int i = 0; i < list.length; i++)
    {
        list[i] = max - count;
        if (list[i] == max)
        {
            count = max;
            max++;
        }
        else
        {
            count--;
        }
    }
    return list;
    
}
"
8126ffd5a662ba310c2966ef523444f8a19c5709,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85) {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80) {
            return 1;
        }
        else {
            return 2;
    	}
    }
}
"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
cf0b2d83b0558f31d29970ac5594bb6590bceebc,"public String without2(String str) 
{
    if (str.substring((str.length() - 2)) != str.substring(2))
    {
        return str;
    }
    else
    {
        return str.substring(2);
    }
}
"
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
"
7c7871661cd4465fe9ca613614480b58e74f7aad,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        repeat = repeat + str.substring(str.length() - n);
    return repeat;
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
06be09e2d8d4ddfe4333697a3feaadf8e8dc3077,"public int countClumps(int[] nums)
{
    int num = 0;
    boolean still = false;
    boolean clump = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i - 1])
        {
            clump = true;
        }
        else if (nums[i] == nums[i + 1])
        {
            still = true;
            continue;
        }
        else
        {
            num++;
        }
    }
}
"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
7c7871661cd4465fe9ca613614480b58e74f7aad,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        repeat = repeat + str.substring(str.length() - n);
    return repeat;
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
88111a1b682c4e3263232c7e42baecf389dd8a17,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0)
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
    else
    {
    	return 0;
    }
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
"
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
9e2323cd896bf8c878fad40b42eac0e930afede4,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    String str = String.valueOf(num);
    int stringLength = str.length();
    int lastDigit = Integer.parseString(stringLength);
    if (lastDigit >= 0 && lastDigit < 5)
    {
        return num - lastDigit;
    }
    else if (lastDigit >= 5)
    {
        return num + (10 - lastDigit);
    }
}"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
"
3213a4cba04c1562abae45ab0c2f1e267cb61c6f,"public boolean canBalance(int[] nums)
{
    
    for (int i = 0; i < nums.length; i++)
    {
        int leftsum = 0;
        for (int j = 0; j < i; j++)
        {
            leftsum += nums[j];
        }
        int rightsum = 0;
        for (int k = i; k < nums.length; k++)
        {
            rightsum += nums[k];
        }
        if (leftsum == rightsum)
        {
            return true;
        }
    }
    return false;
}
"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
c0f5b70b603edfb55cea6f3a939df372d0d07201,"public int makeChocolate(int small, int big, int goal)
{
    if (goal >= 5 && (goal / 5) >= big && (goal / 5 )
        - small > 0)
        return goal - big * 5; 
    else if (goal / 5 < big ) 
        return goal % 5;
    else 
        return -1;
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
39f7db5a7fbf9dd38ccc348c22569f375d2af11d,"public int[] fizzArray(int n)
{
    int count = 0;
    int[] arr = new int[n];
    for (int i = 0; i < arr.length; i++)
    {
        arr[i] = count;
        count++;
    }
    return arr;
}
"
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
f1bfd7d2978e6fc63e164c09b6a15d117351bf7f,"public boolean endOther(String a, String b)
{
    aa = a.toLowerCase();
    bb = b.toLowerCase();
    
    lena = aa.length();
    lenb = bb.length();
    
    enda = aa.substring(lena-lenb, lena);
    endb = bb.substring(lenb-lena, lenb);
    
    if(enda.equals(bb) || endb.equals(aa))
        return true;
    return false;
        
}
"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
"
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
"
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
"
cee57656ca16e1dba36c9adc7d7dbfc622398c9a,"public int sum13(int[] nums)
{
    int sum = 0;
        if (nums.length < 1) {
            return 0;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 13) {
                i++;
                continue;
            }
            sum += nums[i];
        }
        return sum;
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
77ef41c9051bc2d90dc72510fd40ea3619a48ac5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean answerCall;
    
    if (isAsleep)
    {
        answerCall = false;
    }
    else if ((isMom) && (isMorning))
    {
        answerCall = true;
    }
    else if (isMorning)
    {
        answerCall = false;
    }
    else
    {
        answerCall = true;
    }
    return answerCall;
}
"
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
3d89f76d27956de3a51e53f7ba12c5aa1fc7e352,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom && isAsleep)
        return true;
    if (isMorning && !isMom && !isAsleep)
        return false;
    if (isMorning && isMom && !isAsleep)
        return false;
    return false;    
}
"
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
"
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
"
b16439cf6ef5c619010c64a8fb33444995f538e6,"public String plusOut(String str, String word)
{
    String returnString = """";
    int lastIndex = str.indexOf(word);
    int i = lastIndex;
    
    while (i < str.length())   
    {
        if (i == str.indexOf(word, lastIndex))
        {
            returnString = returnString + word;
            lastIndex = i;
            i += (word.length() - 1);
        }
        
        else
        {
            returnString = returnString + ""+"";
            i++;
        }
    }
	return returnString;
}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
d832642cded155ba61945ed277e663a0de8cb32c,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 || day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
7f41d3bdfcd6606cda578b2090213e0dfcd23aad,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
    {
        return true;
    }
    
    return((a + b) == 6 || Math.abs(a - b) == 6)
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
e842a2d12176ae37228ff69c6c768005b587ac2a,"public int blackjack(int a, int b)
{
    int c = 21 - a;
    int d = 21 - b;
    
    
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else
    {
        if (c > d)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
b06969c110512b6724f329cb515ecc7e9a70cc3d,"public boolean xyzThere(String str)
{
    int findXYZ = str.lastIndexOf(""xyz"");
    boolean trueXYZ = str.startsWith(""xyz"");
    boolean precedeXYZ = str.startsWith(""."", findXYZ - 1);
    if (trueXYZ == true && precedeXYZ != true)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
5cd02f6c04c19cfba3433b99e62352d722eab1e6,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
	    if (a > b)
	    {
   		  	return a;
	    }
	    else
    	{
    	 	return b;
    	}
    }
    else
    {
       	return 0;
    }
}
"
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
"
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
"
62c62c2b35bd444c54959c776279bfb352a08834,"public int dateFashion(int you, int date)
{
    if (you >= 8) || (date >= 8))
    {
        return 2;
    }
    else if (you <= 2) || (date <= 2))
    {
        return 0;
    }
    else
    {
        return 1;
    }
    
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
"
9e2323cd896bf8c878fad40b42eac0e930afede4,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    String str = String.valueOf(num);
    int stringLength = str.length();
    int lastDigit = Integer.parseString(stringLength);
    if (lastDigit >= 0 && lastDigit < 5)
    {
        return num - lastDigit;
    }
    else if (lastDigit >= 5)
    {
        return num + (10 - lastDigit);
    }
}"
1b2a482b4c2f7363add899927ba7887a9805f10d,"public boolean canBalance(int[] nums)
{
    int first = 0;
    int second = 0;
    for (int i = 0; i < nums.length; i++)
        second += nums[i];
    
    for (int i = 0; i < nums.length - 2; i++)
    {
        first += nums[i];
        second -= nums[i];
        
        if (first == second)
            return true;
    }
    return false;
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
f461e1e90101ffb975096ff62b7afaa084e30c8a,"public int[] shiftLeft(int[] nums)
{
    int first = 0;
    
    if (nums.length != 0)
    {
    	first = nums[0];
    }
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i + 1 < nums.length)
        {
            nums[i] = nums[i+1];
        }
        else
        {
            nums[nums.length - 1] = first;
        }
    }
    
    return nums;
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
217727d1f14f216248eece014e54d93c9ec2a75d,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 != 0)
        {
            largestOdd = nums[i];            
        }
    }
    
    boolean foundNumberRight = false;
    for (int i = nums.length; i <= 0; i++)
    {
        if (nums[i] == largestOdd)
        {
            foundNumberRight = true;
        }
        
        if (foundNumberRight && nums[i] == 0)
        {
            nums[i] = largestOdd;
        }
    }
    
    return nums;

}

"
3a6926253f22b4fe6d5e934cbd56d32c6fdabb31,"public String without2(String str) 
{
int Length = str.length();   
String beginning = str.substring(0, 2);
String ending = str.substring(Length -2, Length);
     
    if (Length == 2)
    {return """";}
    
    if (Length < 2)
    {return str;}
    
    if (Length >= 2 && beginning.equals(ending))
    {return str.substring(2);}
    
    if (Length < 2 && beginning.equals(ending))
    {return str;}
     
    else 
    {return str;}
}
"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
cf0b2d83b0558f31d29970ac5594bb6590bceebc,"public String without2(String str) 
{
    if (str.substring((str.length() - 2)) != str.substring(2))
    {
        return str;
    }
    else
    {
        return str.substring(2);
    }
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
"
3213a4cba04c1562abae45ab0c2f1e267cb61c6f,"public boolean canBalance(int[] nums)
{
    
    for (int i = 0; i < nums.length; i++)
    {
        int leftsum = 0;
        for (int j = 0; j < i; j++)
        {
            leftsum += nums[j];
        }
        int rightsum = 0;
        for (int k = i; k < nums.length; k++)
        {
            rightsum += nums[k];
        }
        if (leftsum == rightsum)
        {
            return true;
        }
    }
    return false;
}
"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
"
e61531131e67b061d6cf7718ecb13876185241fb,"public int[] fix45(int[] nums)
{
    int startZ = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int z = startZ + 1; z < nums.length; z++)
            {
                if (nums[z] == 5)
                {
                    startZ = z;
                    nums[z] = nums[i + 1];
                    nums[i + 1] = 5;
                }
            }
        }
    }
    
    return nums;
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
fe4c33f884bebc96972922f847a797677cecb743,"public int sum67(int[] nums)
{
  //add up the sections between 6 and 7.
    //subtract them from the total
    boolean ignoring = false;
    int deplorables = 0;
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
    	if(nums[i] == 6)
        {ignoring = true;}
        
        if(nums[i]== 7 && ignoring)
        {ignoring = false;}
        
        if(ignoring)
        {deplorables += nums[i];}
        else
        {sum += nums[i];}
    }
  return sum - deplorables;
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
"
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
"
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
c0f5b70b603edfb55cea6f3a939df372d0d07201,"public int makeChocolate(int small, int big, int goal)
{
    if (goal >= 5 && (goal / 5) >= big && (goal / 5 )
        - small > 0)
        return goal - big * 5; 
    else if (goal / 5 < big ) 
        return goal % 5;
    else 
        return -1;
}
"
847b4261c07293908b5e779e82dcac52b634d0f2,"public String[] fizzBuzz(int start, int end)
{
    String[] arr = new String[end - start];
    for (int i = start; i < end; i++)
    {
     	if (i % 15 == 0)
        {
         	arr[i - start] = ""FizzBuzz"";   
        }
        else if (i % 3 == 0)
        {
         	arr[i - start] = ""Fizz"";
        }
        else if (i % 5 == 0)
        {
         	arr[i - start] = ""Buzz"";   
        }
        else
        {
        	arr[i - start] = String.valueOf(i);   
        }
    }
    return arr;
}
"
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
bfef0f13f16905b5acddfbd3c3900d7b4a2e5de9,"public boolean xyzThere(String str) {
  boolean res = false;

  if(str.contains("".xyz"") == false && str.contains(""xyz"") && str.contains(""abc.xyzxyz"")){
    res = true;
  }

  return res;

}"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
cf0b2d83b0558f31d29970ac5594bb6590bceebc,"public String without2(String str) 
{
    if (str.substring((str.length() - 2)) != str.substring(2))
    {
        return str;
    }
    else
    {
        return str.substring(2);
    }
}
"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
afcf79943b6d7e8c8c8a6a62e621d9118401de72,"public String[] fizzBuzz(int start, int end)
{
    String[] series = new String[end - start];
    
    for (int i = start; i < end; i++)
    {
        if (i % 3 == 0)
        {
            series[i - start] = ""Fizz"";

        }
        else if (i % 5 == 0)
        {
            series[i - start] = ""Buzz"";
        }
        else if (i % 15 == 0)
        {
            series[i - start] = ""FizzBuzz"";
        }           
    }
    return series;
}
"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
06ce870f764275dc4fbe2e7c3328c4f9612d64a7,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 0; i<n; i++)
    {
        last = last + last;
    }
    return last;
        
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
"
fe4c33f884bebc96972922f847a797677cecb743,"public int sum67(int[] nums)
{
  //add up the sections between 6 and 7.
    //subtract them from the total
    boolean ignoring = false;
    int deplorables = 0;
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
    	if(nums[i] == 6)
        {ignoring = true;}
        
        if(nums[i]== 7 && ignoring)
        {ignoring = false;}
        
        if(ignoring)
        {deplorables += nums[i];}
        else
        {sum += nums[i];}
    }
  return sum - deplorables;
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
9bb5e21f3a10d7ec32b3825e14061232985ba3c2,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2){
		return 0;
    }else if(you >= 8 || date >= 8){
		return 2;
    }else {
        return 1;
    }
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
45bd0461ce8b659d80d59fc1f37f5d997f31b405,"public boolean love6(int a, int b)
{
    int count = Math.abs(a) + Math.abs(b);
    if (a == 6 || b == 6 || count == 6){
        return true;
    }
    else
        return false;
}
"
5cd02f6c04c19cfba3433b99e62352d722eab1e6,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
	    if (a > b)
	    {
   		  	return a;
	    }
	    else
    	{
    	 	return b;
    	}
    }
    else
    {
       	return 0;
    }
}
"
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
"
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
b03f6ee58d1c2efbc298c1b090d888a47d5425a9,"public boolean evenlySpaced(int a, int b, int c)
{
    if (b-a <= 1 && c-a >= 2 && c-b >= 2 
        || b-a >= 2 && c-a <= 1 && c-b >=2
        || b-a >=2 && c-a >= 2 && c-b <= 1)
        return true;
    return false;
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
217727d1f14f216248eece014e54d93c9ec2a75d,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 != 0)
        {
            largestOdd = nums[i];            
        }
    }
    
    boolean foundNumberRight = false;
    for (int i = nums.length; i <= 0; i++)
    {
        if (nums[i] == largestOdd)
        {
            foundNumberRight = true;
        }
        
        if (foundNumberRight && nums[i] == 0)
        {
            nums[i] = largestOdd;
        }
    }
    
    return nums;

}

"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
cee57656ca16e1dba36c9adc7d7dbfc622398c9a,"public int sum13(int[] nums)
{
    int sum = 0;
        if (nums.length < 1) {
            return 0;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 13) {
                i++;
                continue;
            }
            sum += nums[i];
        }
        return sum;
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
0dcf6449d4df310d3fe50618ea03c76712671149,"public boolean canBalance(int[] nums)
{
    int upperIndex = nums.length-1;
    int lowerIndex = 0;
    while(lowerIndex<upperIndex){
		int lowerSum = sum(nums,0,lowerIndex);
        int upperSum = sum(nums,lowerIndex,upperIndex);
        if(lowerSum==upperSum)
            return true;
        else if(lowerSum<upperSum)
            lowerSum++;
        else
            upperSum++;
    }
    return false;
}

private int sum(int[] nums,int a, int b){
    int sum = 0;
    for(int i = a; a < b; i++){
        sum+=nums[i];
    }
    return sum;
}"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
d96a0285c6ef424bb4ff5119134143d2d1c7d7b0,"public String alarmClock(int day, boolean vacation)
{
	if (vacation)
    {
       	if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
    {
        if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""10:00"";
        }
		else if (day == 0 || day == 6)
        {
            return ""off"";
        }
    }
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
b06969c110512b6724f329cb515ecc7e9a70cc3d,"public boolean xyzThere(String str)
{
    int findXYZ = str.lastIndexOf(""xyz"");
    boolean trueXYZ = str.startsWith(""xyz"");
    boolean precedeXYZ = str.startsWith(""."", findXYZ - 1);
    if (trueXYZ == true && precedeXYZ != true)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
"
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
"
6c5f6108333f344785ee689de07d00263b413498,"public String repeatEnd(String str, int n)
{
    return str; 
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
77ef41c9051bc2d90dc72510fd40ea3619a48ac5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean answerCall;
    
    if (isAsleep)
    {
        answerCall = false;
    }
    else if ((isMom) && (isMorning))
    {
        answerCall = true;
    }
    else if (isMorning)
    {
        answerCall = false;
    }
    else
    {
        answerCall = true;
    }
    return answerCall;
}
"
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
c8c6800514f3f56f0353dcd42217d4bba2b37df3,"public int[] fizzArray(int n)
{
    int [] smelly = new int[n];
    for (int i = 0; i < n; i++)
    {
        smelly[i] = i;
    }
    return smelly;
    
}
"
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
"
a730369051672c668c3efc03eb8dcc6956e9beb3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	// Java arrays are initialized to 0 so no need to set the last elements to 0
	return arr;
}
"
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
9a64dd602cc130ef4185eb2f0026b09506763d21,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return b;
    }
    else if (b > 21)
    {
        return 0;
    }
    if(a < b && b <= 21)
		return b;
	return a;
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
87346e3e31d1cd09cf1ea78408fe3cd51d049e2e,"public int sum13(int[] nums)
{
    sumNum = 0;
    if (nums.length == 0)
    {
        return sumNum;
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
        {
            i += 1;
        }
        else
        {
            sumNum += nums[i];
        }
    }
    return sumNum;
}
"
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
"
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
"
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
"
6e8cdb312eaf547b8488629b9abc249fe869a96d,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
    if(a == b && b == c)
        return 5;
    if (a != b && a != c)
        return 1;
    return 0;
}
"
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}"
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
0dcf6449d4df310d3fe50618ea03c76712671149,"public boolean canBalance(int[] nums)
{
    int upperIndex = nums.length-1;
    int lowerIndex = 0;
    while(lowerIndex<upperIndex){
		int lowerSum = sum(nums,0,lowerIndex);
        int upperSum = sum(nums,lowerIndex,upperIndex);
        if(lowerSum==upperSum)
            return true;
        else if(lowerSum<upperSum)
            lowerSum++;
        else
            upperSum++;
    }
    return false;
}

private int sum(int[] nums,int a, int b){
    int sum = 0;
    for(int i = a; a < b; i++){
        sum+=nums[i];
    }
    return sum;
}"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
196436f6a31b3c5fa13fcebfee2d326193bfb3b0,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
          
    if(a == b && b == c)
        return 5;
                    
    if(a != b && a != c)
        return 1;
                            
    return 0;
}
"
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
"
d13a33582df37d05d65fd78cbbf872a038ff4dd0,"public int blackjack(int a, int b)
{
    int aDistance = 21;
    int bDistance = 21;
    if (a > 21 && b > 21)
        return 0;
    if (a < 21)
        aDistance = 21 - a;
    if (b < 21)
        bDistance = 21 - b;
    if (aDistance > bDistance)
        return b;
    else
        return a;
       
        
    
}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
351839745bc2cdccbb945ecd1391b63bfee8a94a,"public boolean twoTwo(int[] nums)
{
    for (int i = 1; i < nums.length -1; i++){
        if (i ==2 && (i-1!=2 || i+1!= 2)){
                return false;
        }
    }
    return true;
}
"
b06969c110512b6724f329cb515ecc7e9a70cc3d,"public boolean xyzThere(String str)
{
    int findXYZ = str.lastIndexOf(""xyz"");
    boolean trueXYZ = str.startsWith(""xyz"");
    boolean precedeXYZ = str.startsWith(""."", findXYZ - 1);
    if (trueXYZ == true && precedeXYZ != true)
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
d832642cded155ba61945ed277e663a0de8cb32c,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 || day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
6c5f6108333f344785ee689de07d00263b413498,"public String repeatEnd(String str, int n)
{
    return str; 
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
172b1add93db57d2a40bf171672074b4b4174560,"public int[] tenRun(int[] nums)
{
    int savedval = 0;
    while (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            savedval = nums[i];
            i++;
            
            while (nums[i] % 10 != 0)
            {
                nums[i] = savedval;
                i++;
            }
        }
    }
    return nums;
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
8288a998c242f26a309f710f4751d7d5d1e7876c,"public int blackjack(int a, int b)
{
    int aDistance = 21;
    int bDistance = 21;
    if (a > 21 && b > 21)
        return 0;
    if (a < 22)
        aDistance = 21 - a;
    if (b < 22)
        bDistance = 21 - b;
    if (aDistance > bDistance)
        return b;
    else
        return a;
       
        
    
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
"
09a8c33c60aa11c021e8b84d90d8a62d6b24e858,"public boolean canBalance(int[] nums)
{
    int total = 0;
    int length = nums.length;
    for ( int i = 0; i < length; i++ )
    {
        total += nums[i];
    }
    
    if ( total % 2 == 1 )
    {
        return false;
    }
    else
    {
        if ( total == 0 && length == 1 )
        {
            return false;
        }
        else
        {
        	int smallTotal = 0;
        	int j = 0;
        	while ( smallTotal < total / 2 )
        	{
            	smallTotal += nums[j];
            	j++;
        	}
        	return ( smallTotal == ( total / 2 ) );
        }
    }
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
"
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
"
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
"
9bb5e21f3a10d7ec32b3825e14061232985ba3c2,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2){
		return 0;
    }else if(you >= 8 || date >= 8){
		return 2;
    }else {
        return 1;
    }
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
"
3a6926253f22b4fe6d5e934cbd56d32c6fdabb31,"public String without2(String str) 
{
int Length = str.length();   
String beginning = str.substring(0, 2);
String ending = str.substring(Length -2, Length);
     
    if (Length == 2)
    {return """";}
    
    if (Length < 2)
    {return str;}
    
    if (Length >= 2 && beginning.equals(ending))
    {return str.substring(2);}
    
    if (Length < 2 && beginning.equals(ending))
    {return str;}
     
    else 
    {return str;}
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
62c62c2b35bd444c54959c776279bfb352a08834,"public int dateFashion(int you, int date)
{
    if (you >= 8) || (date >= 8))
    {
        return 2;
    }
    else if (you <= 2) || (date <= 2))
    {
        return 0;
    }
    else
    {
        return 1;
    }
    
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
"
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
bfef0f13f16905b5acddfbd3c3900d7b4a2e5de9,"public boolean xyzThere(String str) {
  boolean res = false;

  if(str.contains("".xyz"") == false && str.contains(""xyz"") && str.contains(""abc.xyzxyz"")){
    res = true;
  }

  return res;

}"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
7c7871661cd4465fe9ca613614480b58e74f7aad,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        repeat = repeat + str.substring(str.length() - n);
    return repeat;
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
"
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
06be09e2d8d4ddfe4333697a3feaadf8e8dc3077,"public int countClumps(int[] nums)
{
    int num = 0;
    boolean still = false;
    boolean clump = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i - 1])
        {
            clump = true;
        }
        else if (nums[i] == nums[i + 1])
        {
            still = true;
            continue;
        }
        else
        {
            num++;
        }
    }
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
d832642cded155ba61945ed277e663a0de8cb32c,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 || day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
"
c3f9d9c89be8302fbf11a1742a2668305b2fcaf4,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if(10 <= sum && sum <= 19)
        return 20;
              
    return sum;
    
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}"
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
e1f80924e2fa9aba6195f174166b813b13fea19e,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 && day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
be7dd1c681ece206447d7c19a5ae06f1777a4e05,"public boolean xyzThere(String str)
{
 
    if (str.length () >= 3  && 
        str.substring(0,3).equals(""xyz"") )
    {
        return true;
    }
        for (int x = 0; x < str.length() -2; x++)
        {
   			if (str.charAt(x) != '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return true;
    }
  
    {
        return false;
    }
            {return false;}
}
}
"
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
6ff73ddbdaa65a84fa764b673fabc78eae9c3395,"public int luckySum(int a, int b, int c)
{
    if( a == 13 )
    {
        return 0;
    }
    else
    {
        if( b == 13 )
        {
            return a;
        }
        else
        {
            if( c == 13 )
            {
                return a + b;
            }
            else
            {
                return a + b + c;
            }
        }
    }
}
"
b16439cf6ef5c619010c64a8fb33444995f538e6,"public String plusOut(String str, String word)
{
    String returnString = """";
    int lastIndex = str.indexOf(word);
    int i = lastIndex;
    
    while (i < str.length())   
    {
        if (i == str.indexOf(word, lastIndex))
        {
            returnString = returnString + word;
            lastIndex = i;
            i += (word.length() - 1);
        }
        
        else
        {
            returnString = returnString + ""+"";
            i++;
        }
    }
	return returnString;
}
"
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
"
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
21f49c70a5574e177ee0e928d52f7656fb37a03a,"public boolean canBalance(int[] nums)
{
    int same = 0;
    int sum = 0;
    for (int i=0;i<nums.length;i++)
    {
        sum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        same += nums[i];
        sum -= nums[i];
    
    if (same == sum)
    {
        return true;
    }
    }
    return false;
}"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
cf0b2d83b0558f31d29970ac5594bb6590bceebc,"public String without2(String str) 
{
    if (str.substring((str.length() - 2)) != str.substring(2))
    {
        return str;
    }
    else
    {
        return str.substring(2);
    }
}
"
87b2b1811ad58d7a1fff515864427654134ed8fa,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            if (j == 0)
            {
            	while (nums[j] != 5)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
            
            else
            {
                while (nums[j] != 5 && nums[j - 1] != 4 && j < nums.length)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
        }
    }
    return nums;
}"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
fe4c33f884bebc96972922f847a797677cecb743,"public int sum67(int[] nums)
{
  //add up the sections between 6 and 7.
    //subtract them from the total
    boolean ignoring = false;
    int deplorables = 0;
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
    	if(nums[i] == 6)
        {ignoring = true;}
        
        if(nums[i]== 7 && ignoring)
        {ignoring = false;}
        
        if(ignoring)
        {deplorables += nums[i];}
        else
        {sum += nums[i];}
    }
  return sum - deplorables;
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
"
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
77ef41c9051bc2d90dc72510fd40ea3619a48ac5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean answerCall;
    
    if (isAsleep)
    {
        answerCall = false;
    }
    else if ((isMom) && (isMorning))
    {
        answerCall = true;
    }
    else if (isMorning)
    {
        answerCall = false;
    }
    else
    {
        answerCall = true;
    }
    return answerCall;
}
"
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
"
fbb1ba5b8e0bd1848e38b6705785113e63a30905,"public boolean bobThere(String str)
{
 	for (int i = 0; i < str.length() - 3; i++)
    {
     	if(str.charAt(i)).equals(""b"") && str.charAt(i+2)).equals(""b""))   
        {
            return true;
        }
    }
    return false;
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
c8c6800514f3f56f0353dcd42217d4bba2b37df3,"public int[] fizzArray(int n)
{
    int [] smelly = new int[n];
    for (int i = 0; i < n; i++)
    {
        smelly[i] = i;
    }
    return smelly;
    
}
"
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
c32e8df18759f85c9ca9cc1ff3051aa396bf5a33,"public boolean evenlySpaced(int a, int b, int c)
{
    int[3] arrInOrder;
    arrInOrder[0] = a;
    arrInOrder[1] = b;
    arrInOrder[2] = c;
    
    int small;
    int med, big;
   /**
    if ((a > b) && (a > c)) // if a is the biggest
   {
		if (b > c)
        {
            big = a;
            med = b;
            small = c;
        }
       else
       {
           
       }
       
   }
   */
}
"
77ef41c9051bc2d90dc72510fd40ea3619a48ac5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean answerCall;
    
    if (isAsleep)
    {
        answerCall = false;
    }
    else if ((isMom) && (isMorning))
    {
        answerCall = true;
    }
    else if (isMorning)
    {
        answerCall = false;
    }
    else
    {
        answerCall = true;
    }
    return answerCall;
}
"
a77cf61f1d235b19831c14399114810bc8b89144,"public int[] shiftLeft(int[] nums)
{
    int[] array = new int[nums.length];
    if ( nums.length >= 2 ) {
        for ( int i = 1; i < nums.length; i++ ) {
            array[i-1] = nums[i];
            array[nums.length - 1] = nums[0];
        }
        return array;
    }
    else
    {
        return nums;
    }
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
fe4c33f884bebc96972922f847a797677cecb743,"public int sum67(int[] nums)
{
  //add up the sections between 6 and 7.
    //subtract them from the total
    boolean ignoring = false;
    int deplorables = 0;
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
    	if(nums[i] == 6)
        {ignoring = true;}
        
        if(nums[i]== 7 && ignoring)
        {ignoring = false;}
        
        if(ignoring)
        {deplorables += nums[i];}
        else
        {sum += nums[i];}
    }
  return sum - deplorables;
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
35bf9f4d092ca0691f367d63882b523cd05e7fd9,"public boolean endOther(String a, String b)
{
    String finish;
	String tempLength;
	int aLength = a.length();
	int bLength = b.length();
	a = a.toLowerCase();
	b = b.toLowerCase();
    
	if (aLength >= bLength)
	{
		finish = a.substring(aLength - bLength);
		tempLength = b;
	}
	else
	{
		finish = b.substring(bLength - aLength);
		tempLength = a;
	}
    
	return (finish.equals(tempLength));
}"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
be7dd1c681ece206447d7c19a5ae06f1777a4e05,"public boolean xyzThere(String str)
{
 
    if (str.length () >= 3  && 
        str.substring(0,3).equals(""xyz"") )
    {
        return true;
    }
        for (int x = 0; x < str.length() -2; x++)
        {
   			if (str.charAt(x) != '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return true;
    }
  
    {
        return false;
    }
            {return false;}
}
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
635206ea44f77ab4002f02178cca3563ab65519b,"public int[] shiftLeft(int[] nums)
{
    int[] array = new int[nums];
    
    for (int i = 0; i < nums.length; i++)
    {
        array[i] = nums[i + 1];
        if (i == nums.length - 1)
        {
            array[i] = nums[0];
        }
    }
    
    return array;
}
"
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
"
c4f8bca2881db730227f3a20d6642419c9cde208,"public int[] frontPiece(int[] nums)
{
    int length = nums.length;
    if (length < 2)
    {
        return nums;
    }
    else 
    {
        int newArray[2] = nums[0], nums[1];
        return newArray
    }
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
c0f5b70b603edfb55cea6f3a939df372d0d07201,"public int makeChocolate(int small, int big, int goal)
{
    if (goal >= 5 && (goal / 5) >= big && (goal / 5 )
        - small > 0)
        return goal - big * 5; 
    else if (goal / 5 < big ) 
        return goal % 5;
    else 
        return -1;
}
"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
b095e16a3d032d4c17e401239b0baa2bb0e71b69,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    
    for (int i = 0; i < array.length; i++)
    {
        array[i] = i;
    }
    
    return array;
}
"
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
"
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
"
56ac97e6ac311645870c594b750311820db92f19,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        n = 0;
}
"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
6500eb27275f0609dbf3a65664f62ee8dcc13511,"public boolean xyzThere(String str)
{
    int length = str.length();
    int i = 0;
    boolean findingXYZ = true;
    while ( findingXYZ && i <= length - 3 )
    {
        if ( str.substring(i, i + 3).equals(""xyz"")
            && str.charAt(i - 1) != '.' )
        {
            findingXYZ = false;
        }
        i++;
    }
    return !findingXYZ;
}
"
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
"
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
"
f9d8c1646ba82ba2c6fd76e741d03f0b2865d6b3,"public int[] tenRun(int[] nums)
{
    int target = -1000000;
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] % 10) == 0)
        {
            target = nums[i];
        }
        else 
        {
            if (target != -1000000)
            {
                nums[i] = target;
            }
        }
    }
    return nums;
}
"
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
"
e61531131e67b061d6cf7718ecb13876185241fb,"public int[] fix45(int[] nums)
{
    int startZ = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int z = startZ + 1; z < nums.length; z++)
            {
                if (nums[z] == 5)
                {
                    startZ = z;
                    nums[z] = nums[i + 1];
                    nums[i + 1] = 5;
                }
            }
        }
    }
    
    return nums;
}
"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
1025ed84095823ebf85cb2c79541717434691fb2,"public boolean evenlySpaced(int a, int b, int c)
{
    int evenlySpaced;
    
    if (a > b)
    {
     	evenlySpaced = a;
        a = b;
        b = evenlySpaced;
    }
    
    else if (b > c)
    {
     	evenlySpaced = b;
        b = c;
        c = evenlySpaced;
    }
    
    return b - a == c - b;
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
"
a730369051672c668c3efc03eb8dcc6956e9beb3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	// Java arrays are initialized to 0 so no need to set the last elements to 0
	return arr;
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
f1bfd7d2978e6fc63e164c09b6a15d117351bf7f,"public boolean endOther(String a, String b)
{
    aa = a.toLowerCase();
    bb = b.toLowerCase();
    
    lena = aa.length();
    lenb = bb.length();
    
    enda = aa.substring(lena-lenb, lena);
    endb = bb.substring(lenb-lena, lenb);
    
    if(enda.equals(bb) || endb.equals(aa))
        return true;
    return false;
        
}
"
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
9e9542ff6fbf9e9b88a43d0fb3f6ca6777ffd9f2,"public int countEvens(int[] nums)
{
   	int numEvens = 0;
    for (int i = 0; i < nums.length; i++)
    {
        currentNum = nums[i];
        int remainder = currentNum % 2;
        if (remainder == 0)
        {
            numEvens++;
        }
    }
    return numEvens;
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
a23678b6f1ed32125aafce452d7f4f6449fb3591,"public int makeChocolate(int small, int big, int goal)
{
    int numLeft = goal % 5;
    if ((small + (big*5)) < goal) // if total number of bars is not enough
    {
        return -1;
    }
    else if ((big * 5) == goal) 
    {
        return numLeft;
    }
    if (numLeft <= small)
    {
        return numLeft;
    }
    else
    {
        return goal - (big*5);
    }
}
"
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
"
cf0b2d83b0558f31d29970ac5594bb6590bceebc,"public String without2(String str) 
{
    if (str.substring((str.length() - 2)) != str.substring(2))
    {
        return str;
    }
    else
    {
        return str.substring(2);
    }
}
"
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
f461e1e90101ffb975096ff62b7afaa084e30c8a,"public int[] shiftLeft(int[] nums)
{
    int first = 0;
    
    if (nums.length != 0)
    {
    	first = nums[0];
    }
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i + 1 < nums.length)
        {
            nums[i] = nums[i+1];
        }
        else
        {
            nums[nums.length - 1] = first;
        }
    }
    
    return nums;
}
"
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;"
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
12eb90cd21edfa3b84b353939a235a5e8fca23c3,"public int makeChocolate(int small, int big, int goal)
{
    int amountOfSmallBars = goal % 5;
    
    if (small + (big * 5) < goal)
    { 
        return -1;
    }
    
    else if (amountOfSmallBars <= small && goal - (big * 5) > 4)
    {
        return amountOfSmallBars + 5; 
    }
    
    else if (amountOfSmallBars <= small)
    {
    	return amountOfSmallBars;
    }
    
    else 
    {
        return -1; 
    }
    
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
"
ea5f17ab9b1ec345df2dc2e1b5db3a8eb7604517,"public int loneSum(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
    	return a + b + c;
    }
    else if (a == b && b == c && a == c)
    {
    	return 0;
    }
    else if (a == b)
    {
    	return c;
    }
    else if (c == b)
    {
    	return a;
    }
    else if (a == c)
    {
    	return b;
    }
    else
        return 0;
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
1b2a482b4c2f7363add899927ba7887a9805f10d,"public boolean canBalance(int[] nums)
{
    int first = 0;
    int second = 0;
    for (int i = 0; i < nums.length; i++)
        second += nums[i];
    
    for (int i = 0; i < nums.length - 2; i++)
    {
        first += nums[i];
        second -= nums[i];
        
        if (first == second)
            return true;
    }
    return false;
}
"
7ec4da2283b0aa6839ec4b0d25eda33e0ece9396,"public int[] zeroMax(int[] nums)
{
    int[] returnArray = new int[nums.length];
    for (int j = 0; j < nums.length; j++)
    {
        int potential = 0;
        if (nums[j] == 0)
        {
            potential = largestOdd(nums, j);
            returnArray[j] = potential;
        }
        else
        {
            returnArray[j] = nums[j];
        }
    }
    return returnArray;
}

public int largestOdd(int[] nums, int pos)
{
    int largest = 0;
    for (int i = pos; i < nums.length; i++)
    {
        boolean isOdd = (nums[i] % 2 != 0);
        if ((nums[i] > largest) && isOdd)
        {
            largest = nums[i];
        }
    }
    return largest;
}"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
"
f0205df67f010e325ec1614fba0a300d61a74dec,"public int blackjack(int a, int b)
{
    double valueA;
    valueA = (a % 21);
    double valueB;
    valueB =  (b % 21);
    
    if (a < 21 || b < 21)
    {
        if (double valueA > double valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else if (a < 21 && b < 21)
    {
        if (valueA > valueB)
        {
            return valueB;
        }
        else
        {
            return valueA;
        }
    }
    else
    {
        return 0;
    }
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
be66d380bc4e67ae202f2294c061b254ae84b449,"public int luckySum(int a, int b, int c)
{
    if (a != 13 && b != 13 && c != 13)
        return a + b + c;
    if (c == 13)
        return 0;
    else if (b == 13)
        return c;
    else
        return b + c;
}
"
c384cb38b2cffa92ee7bc55feafe1c65d7c5d33e,"public int countCode(String str)
{
int count = 0;

for(int i = 0; i < str.length() - 3; i++)
{
if(str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
count++;
}

return count;  
}
"
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
3213a4cba04c1562abae45ab0c2f1e267cb61c6f,"public boolean canBalance(int[] nums)
{
    
    for (int i = 0; i < nums.length; i++)
    {
        int leftsum = 0;
        for (int j = 0; j < i; j++)
        {
            leftsum += nums[j];
        }
        int rightsum = 0;
        for (int k = i; k < nums.length; k++)
        {
            rightsum += nums[k];
        }
        if (leftsum == rightsum)
        {
            return true;
        }
    }
    return false;
}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
bfef0f13f16905b5acddfbd3c3900d7b4a2e5de9,"public boolean xyzThere(String str) {
  boolean res = false;

  if(str.contains("".xyz"") == false && str.contains(""xyz"") && str.contains(""abc.xyzxyz"")){
    res = true;
  }

  return res;

}"
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
94a0a7e0303fd9b7af91f9286d931867676ad175,"public boolean sameEnds(int[] nums, int n)
{
   return true;
}
"
c0f5b70b603edfb55cea6f3a939df372d0d07201,"public int makeChocolate(int small, int big, int goal)
{
    if (goal >= 5 && (goal / 5) >= big && (goal / 5 )
        - small > 0)
        return goal - big * 5; 
    else if (goal / 5 < big ) 
        return goal % 5;
    else 
        return -1;
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
"
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
3d89f76d27956de3a51e53f7ba12c5aa1fc7e352,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom && isAsleep)
        return true;
    if (isMorning && !isMom && !isAsleep)
        return false;
    if (isMorning && isMom && !isAsleep)
        return false;
    return false;    
}
"
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
"
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
"
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
"
bfef0f13f16905b5acddfbd3c3900d7b4a2e5de9,"public boolean xyzThere(String str) {
  boolean res = false;

  if(str.contains("".xyz"") == false && str.contains(""xyz"") && str.contains(""abc.xyzxyz"")){
    res = true;
  }

  return res;

}"
9e9542ff6fbf9e9b88a43d0fb3f6ca6777ffd9f2,"public int countEvens(int[] nums)
{
   	int numEvens = 0;
    for (int i = 0; i < nums.length; i++)
    {
        currentNum = nums[i];
        int remainder = currentNum % 2;
        if (remainder == 0)
        {
            numEvens++;
        }
    }
    return numEvens;
}
"
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
"
6e8cdb312eaf547b8488629b9abc249fe869a96d,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
    if(a == b && b == c)
        return 5;
    if (a != b && a != c)
        return 1;
    return 0;
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
172b1add93db57d2a40bf171672074b4b4174560,"public int[] tenRun(int[] nums)
{
    int savedval = 0;
    while (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            savedval = nums[i];
            i++;
            
            while (nums[i] % 10 != 0)
            {
                nums[i] = savedval;
                i++;
            }
        }
    }
    return nums;
}
"
77ef41c9051bc2d90dc72510fd40ea3619a48ac5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean answerCall;
    
    if (isAsleep)
    {
        answerCall = false;
    }
    else if ((isMom) && (isMorning))
    {
        answerCall = true;
    }
    else if (isMorning)
    {
        answerCall = false;
    }
    else
    {
        answerCall = true;
    }
    return answerCall;
}
"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
09a8c33c60aa11c021e8b84d90d8a62d6b24e858,"public boolean canBalance(int[] nums)
{
    int total = 0;
    int length = nums.length;
    for ( int i = 0; i < length; i++ )
    {
        total += nums[i];
    }
    
    if ( total % 2 == 1 )
    {
        return false;
    }
    else
    {
        if ( total == 0 && length == 1 )
        {
            return false;
        }
        else
        {
        	int smallTotal = 0;
        	int j = 0;
        	while ( smallTotal < total / 2 )
        	{
            	smallTotal += nums[j];
            	j++;
        	}
        	return ( smallTotal == ( total / 2 ) );
        }
    }
}
"
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
39f7db5a7fbf9dd38ccc348c22569f375d2af11d,"public int[] fizzArray(int n)
{
    int count = 0;
    int[] arr = new int[n];
    for (int i = 0; i < arr.length; i++)
    {
        arr[i] = count;
        count++;
    }
    return arr;
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
8ceecaf78d221153b51f1d631c8212f7ecaf45a9,"public boolean love6(int a, int b)
{
    if ( Math.abs(a+b) != 6 || Math.abs(a-b) != 6)
    {
    	return false;
    }
    return true;
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
d832642cded155ba61945ed277e663a0de8cb32c,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 || day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
1b2a482b4c2f7363add899927ba7887a9805f10d,"public boolean canBalance(int[] nums)
{
    int first = 0;
    int second = 0;
    for (int i = 0; i < nums.length; i++)
        second += nums[i];
    
    for (int i = 0; i < nums.length - 2; i++)
    {
        first += nums[i];
        second -= nums[i];
        
        if (first == second)
            return true;
    }
    return false;
}
"
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
"
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
"
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
"
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
"
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
"
f461e1e90101ffb975096ff62b7afaa084e30c8a,"public int[] shiftLeft(int[] nums)
{
    int first = 0;
    
    if (nums.length != 0)
    {
    	first = nums[0];
    }
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i + 1 < nums.length)
        {
            nums[i] = nums[i+1];
        }
        else
        {
            nums[nums.length - 1] = first;
        }
    }
    
    return nums;
}
"
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
"
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
fe4c33f884bebc96972922f847a797677cecb743,"public int sum67(int[] nums)
{
  //add up the sections between 6 and 7.
    //subtract them from the total
    boolean ignoring = false;
    int deplorables = 0;
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
    	if(nums[i] == 6)
        {ignoring = true;}
        
        if(nums[i]== 7 && ignoring)
        {ignoring = false;}
        
        if(ignoring)
        {deplorables += nums[i];}
        else
        {sum += nums[i];}
    }
  return sum - deplorables;
}
"
c384cb38b2cffa92ee7bc55feafe1c65d7c5d33e,"public int countCode(String str)
{
int count = 0;

for(int i = 0; i < str.length() - 3; i++)
{
if(str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
count++;
}

return count;  
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}"
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
"
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
"
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
"
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
"
9bb5e21f3a10d7ec32b3825e14061232985ba3c2,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2){
		return 0;
    }else if(you >= 8 || date >= 8){
		return 2;
    }else {
        return 1;
    }
}
"
3213a4cba04c1562abae45ab0c2f1e267cb61c6f,"public boolean canBalance(int[] nums)
{
    
    for (int i = 0; i < nums.length; i++)
    {
        int leftsum = 0;
        for (int j = 0; j < i; j++)
        {
            leftsum += nums[j];
        }
        int rightsum = 0;
        for (int k = i; k < nums.length; k++)
        {
            rightsum += nums[k];
        }
        if (leftsum == rightsum)
        {
            return true;
        }
    }
    return false;
}
"
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
"
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}"
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
"
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
"
9a762998ef3f0abdaeaa9e34d97d58d792cb6be4,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMom)
        return true;
    return (!isMorning);
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
7d1223c04b3cdd6a8c111f378ce0f3cf10b7c095,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
        char l1;
        l1 = str.charAt(i);
        
        char l2;
        l2 = str.charAt(i + 1);
        
        char l3;
        l3 = str.charAt(i + 2);
        
        char bob;
        bob = (l1 + l2 + l3);
        
        if (bob.startsWith(b) && bob.endsWith(b))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
        
        
}
"
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
c384cb38b2cffa92ee7bc55feafe1c65d7c5d33e,"public int countCode(String str)
{
int count = 0;

for(int i = 0; i < str.length() - 3; i++)
{
if(str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
count++;
}

return count;  
}
"
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
"
172b1add93db57d2a40bf171672074b4b4174560,"public int[] tenRun(int[] nums)
{
    int savedval = 0;
    while (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            savedval = nums[i];
            i++;
            
            while (nums[i] % 10 != 0)
            {
                nums[i] = savedval;
                i++;
            }
        }
    }
    return nums;
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}"
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
"
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
"
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
"
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
"
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
"
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}"
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}"
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
"
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
"
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
"
77ef41c9051bc2d90dc72510fd40ea3619a48ac5,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    boolean answerCall;
    
    if (isAsleep)
    {
        answerCall = false;
    }
    else if ((isMom) && (isMorning))
    {
        answerCall = true;
    }
    else if (isMorning)
    {
        answerCall = false;
    }
    else
    {
        answerCall = true;
    }
    return answerCall;
}
"
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
172b1add93db57d2a40bf171672074b4b4174560,"public int[] tenRun(int[] nums)
{
    int savedval = 0;
    while (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            savedval = nums[i];
            i++;
            
            while (nums[i] % 10 != 0)
            {
                nums[i] = savedval;
                i++;
            }
        }
    }
    return nums;
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
6c5f6108333f344785ee689de07d00263b413498,"public String repeatEnd(String str, int n)
{
    return str; 
}
"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
"
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
64e6a1b1c2176532ea3545edbf85eecc952dbf18,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a;
    return diffOne == diffTwo;
}
"
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
"
08e29390d6fdca4360be0c44bbf8f5ef02483c2d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) {
        if (speed <= 65) {
            return 0;
        }
        else if (speed >= 66 && speed <= 85 {
            return 1;
        }
        else {
            return 2;
        }            
    }
    else {
        if (speed <= 60) {
            return 0;
        }
        else if (speed >= 61 && speed <= 80 {
            return 1;
        }
        else {
            return 2;
    }
}
"
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
95bd3e4b71fed68be7ff21035971700ab1ed2167,"public boolean xyzThere(String str)
{
    if (str.startsWith(""xyz""))      
        return true;
    else if (str.endsWith(""xyz"") && !str.endsWith("".xyz""))
        return true;
    int len = str.length();
    while (!str.startsWith(""xyz"") && len >= 3)
    {
    	str = str.substring(1, len);
        len = str.length();
    }
    if (str.startsWith(""xyz""))
		return true;
    else if (str.endsWith(""xyz"") && !str.endsWith("".xyz""))
        return true;
    else
        return false;
}
"
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
2adbb39337217f673d1ee6e9632faef8d959ee31,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2)
    {
		return 0;
    }
	if(you >= 8 || date >= 8)
    {
		return 2;
    }
    else
    {
        return 1;
    }
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
e3604130ed0d8066301429b1026d44bbec5d2b4b,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder(n*n);
    for (int i = 0; i < n; i++)
    {
    	sb.append(n);
    }
    return sb.toString();
}
"
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
"
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
"
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
"
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
"
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}"
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
"
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
1b2a482b4c2f7363add899927ba7887a9805f10d,"public boolean canBalance(int[] nums)
{
    int first = 0;
    int second = 0;
    for (int i = 0; i < nums.length; i++)
        second += nums[i];
    
    for (int i = 0; i < nums.length - 2; i++)
    {
        first += nums[i];
        second -= nums[i];
        
        if (first == second)
            return true;
    }
    return false;
}
"
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
9bb5e21f3a10d7ec32b3825e14061232985ba3c2,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2){
		return 0;
    }else if(you >= 8 || date >= 8){
		return 2;
    }else {
        return 1;
    }
}
"
6f412fb97dacfeab711397d737336f16f8b3a81c,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder();
    for (int i = 0; i < n; i++)
    {
    	sb.append(str.charAt(str.length()-1));
    }
    return sb.toString();
}
"
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
"
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
"
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
"
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
"
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
f1bfd7d2978e6fc63e164c09b6a15d117351bf7f,"public boolean endOther(String a, String b)
{
    aa = a.toLowerCase();
    bb = b.toLowerCase();
    
    lena = aa.length();
    lenb = bb.length();
    
    enda = aa.substring(lena-lenb, lena);
    endb = bb.substring(lenb-lena, lenb);
    
    if(enda.equals(bb) || endb.equals(aa))
        return true;
    return false;
        
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
"
fa0f6e6f624573c3048d850049c74cdd83969733,"public boolean canBalance(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
        sum += nums[i];
    int sumSoFar = 0;
    for (int j = 0; j < nums.length; j++)
    {
        sumSoFar += nums[j];
        if (sum == 2 * sumSoFar)
            return true;
    }
    return false;
}
"
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
217727d1f14f216248eece014e54d93c9ec2a75d,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 != 0)
        {
            largestOdd = nums[i];            
        }
    }
    
    boolean foundNumberRight = false;
    for (int i = nums.length; i <= 0; i++)
    {
        if (nums[i] == largestOdd)
        {
            foundNumberRight = true;
        }
        
        if (foundNumberRight && nums[i] == 0)
        {
            nums[i] = largestOdd;
        }
    }
    
    return nums;

}

"
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
"
cdc404479946118fd95418c88f1d9ed0acf21084,"public boolean canBalance(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
        sum += nums[i];
    int sumSoFar = 0;
    for (int j = 0; j < nums.length; j++)
        sumSoFar += nums[j];
        System.out.println(sumSoFar);
        if (sum == 2 * sumSoFar)
            return true;
    return false;
}
"
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
"
06be09e2d8d4ddfe4333697a3feaadf8e8dc3077,"public int countClumps(int[] nums)
{
    int num = 0;
    boolean still = false;
    boolean clump = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i - 1])
        {
            clump = true;
        }
        else if (nums[i] == nums[i + 1])
        {
            still = true;
            continue;
        }
        else
        {
            num++;
        }
    }
}
"
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
"
fbb1ba5b8e0bd1848e38b6705785113e63a30905,"public boolean bobThere(String str)
{
 	for (int i = 0; i < str.length() - 3; i++)
    {
     	if(str.charAt(i)).equals(""b"") && str.charAt(i+2)).equals(""b""))   
        {
            return true;
        }
    }
    return false;
}
"
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
"
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
"
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
"
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
"
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
"
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
"
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
"
41fbb0ec3f09d19d78c9bae81f5a75e31cf74218,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
"
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
"
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
3a6926253f22b4fe6d5e934cbd56d32c6fdabb31,"public String without2(String str) 
{
int Length = str.length();   
String beginning = str.substring(0, 2);
String ending = str.substring(Length -2, Length);
     
    if (Length == 2)
    {return """";}
    
    if (Length < 2)
    {return str;}
    
    if (Length >= 2 && beginning.equals(ending))
    {return str.substring(2);}
    
    if (Length < 2 && beginning.equals(ending))
    {return str;}
     
    else 
    {return str;}
}
"
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
"
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}"
a07a8703a9cafd5f2dd00f03a9d186fc390e15f9,"public String zipZap(String str)
{
    String s = """";
    int x = 0;
    int y = 0;
    if (str.length() < 3) {
        return str;
    }
    else {
        for (int i = 0; i < str.length() - 2; i++) {
            if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p') {
                x++;
            }
        }
    	while (s.length() != str.length() - x && y < str.length() - 2) {
            if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p') {
                s = s + ""zp"";
                y = y + 2;
            }
            else {
                s = s + str.charAt(y);
            }
            y++;
        }
    }
    return s;
            
        
}
"
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
7f41d3bdfcd6606cda578b2090213e0dfcd23aad,"public boolean love6(int a, int b)
{
    if(a == 6 || b == 6)
    {
        return true;
    }
    
    return((a + b) == 6 || Math.abs(a - b) == 6)
}
"
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
"
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
"
d50d492ebb2d39ef30d910d235f290f774635c0f,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    if (a == b && a == c && b == c)
        return 0;
    else
        return a + b + c;
}
"
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
"
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
"
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
"
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
"
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
"
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
"
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
"
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
"
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
"
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}"
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
"
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
"
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
"
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
"
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
"
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
"
cf0b2d83b0558f31d29970ac5594bb6590bceebc,"public String without2(String str) 
{
    if (str.substring((str.length() - 2)) != str.substring(2))
    {
        return str;
    }
    else
    {
        return str.substring(2);
    }
}
"
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
"
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
"
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
"
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
"
12eb90cd21edfa3b84b353939a235a5e8fca23c3,"public int makeChocolate(int small, int big, int goal)
{
    int amountOfSmallBars = goal % 5;
    
    if (small + (big * 5) < goal)
    { 
        return -1;
    }
    
    else if (amountOfSmallBars <= small && goal - (big * 5) > 4)
    {
        return amountOfSmallBars + 5; 
    }
    
    else if (amountOfSmallBars <= small)
    {
    	return amountOfSmallBars;
    }
    
    else 
    {
        return -1; 
    }
    
}
"
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
"
fbb1ba5b8e0bd1848e38b6705785113e63a30905,"public boolean bobThere(String str)
{
 	for (int i = 0; i < str.length() - 3; i++)
    {
     	if(str.charAt(i)).equals(""b"") && str.charAt(i+2)).equals(""b""))   
        {
            return true;
        }
    }
    return false;
}
"
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
"
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
"
6ff73ddbdaa65a84fa764b673fabc78eae9c3395,"public int luckySum(int a, int b, int c)
{
    if( a == 13 )
    {
        return 0;
    }
    else
    {
        if( b == 13 )
        {
            return a;
        }
        else
        {
            if( c == 13 )
            {
                return a + b;
            }
            else
            {
                return a + b + c;
            }
        }
    }
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
0dcf6449d4df310d3fe50618ea03c76712671149,"public boolean canBalance(int[] nums)
{
    int upperIndex = nums.length-1;
    int lowerIndex = 0;
    while(lowerIndex<upperIndex){
		int lowerSum = sum(nums,0,lowerIndex);
        int upperSum = sum(nums,lowerIndex,upperIndex);
        if(lowerSum==upperSum)
            return true;
        else if(lowerSum<upperSum)
            lowerSum++;
        else
            upperSum++;
    }
    return false;
}

private int sum(int[] nums,int a, int b){
    int sum = 0;
    for(int i = a; a < b; i++){
        sum+=nums[i];
    }
    return sum;
}"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
"
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
"
04fc4021576eaece15c0484d4f837b6ea46138e0,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] == 5 && i == 0 || 
            nums[i] == 5 && nums[i - 1] != 4) {
            int positionOf5 = i; 
        }
        for (int k = 0; k < nums.length;k++) {
            if (nums[k] == 4 && nums[k+1) != 5) {
                int hold = num[k];
                nums[k + 1] = 5;
                nums[positionOf5] = hold; 
                break; 
            }
        }
    }
    return nums; 
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
"
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
"
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
"
3213a4cba04c1562abae45ab0c2f1e267cb61c6f,"public boolean canBalance(int[] nums)
{
    
    for (int i = 0; i < nums.length; i++)
    {
        int leftsum = 0;
        for (int j = 0; j < i; j++)
        {
            leftsum += nums[j];
        }
        int rightsum = 0;
        for (int k = i; k < nums.length; k++)
        {
            rightsum += nums[k];
        }
        if (leftsum == rightsum)
        {
            return true;
        }
    }
    return false;
}
"
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}"
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
"
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}"
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
"
217727d1f14f216248eece014e54d93c9ec2a75d,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 != 0)
        {
            largestOdd = nums[i];            
        }
    }
    
    boolean foundNumberRight = false;
    for (int i = nums.length; i <= 0; i++)
    {
        if (nums[i] == largestOdd)
        {
            foundNumberRight = true;
        }
        
        if (foundNumberRight && nums[i] == 0)
        {
            nums[i] = largestOdd;
        }
    }
    
    return nums;

}

"
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}"
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
"
d1c3c949a3fa3e5304850b7480d7ac8914cbf4ce,"public int loneSum(int a, int b, int c)
{
    if(a==b)
    {
    	return c;
    }
    else if(b == c)
    {
    	return a;
    }
    else if(a == c)
    {
    	return b;
    }
    else
    {
    	return 0;
    }
    return (a + b + c);
}
"
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
"
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
"
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
"
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
"
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
"
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
"
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
"
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
"
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
"
64048f2701869a2bcb7a460416d3ef15f722e6b6,"public int[] fizzArray(int n)
{
    int i;
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
"
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
"
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}"
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
"
c1dc534bc134ac150f2499c964686d5c7968c85a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        System.out.printIn(""0"");
    }
    else if (speed >= 61 && <= 80)
    {
        System.out.printIn(""1"")
    }
    else if (speed >= 81)
    {
        System.out.printIn(""2"")
    }
    
}
"
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
"
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


"
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
f1bfd7d2978e6fc63e164c09b6a15d117351bf7f,"public boolean endOther(String a, String b)
{
    aa = a.toLowerCase();
    bb = b.toLowerCase();
    
    lena = aa.length();
    lenb = bb.length();
    
    enda = aa.substring(lena-lenb, lena);
    endb = bb.substring(lenb-lena, lenb);
    
    if(enda.equals(bb) || endb.equals(aa))
        return true;
    return false;
        
}
"
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
"
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

"
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;"
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
"
116c8e022ed369f89d42fa7254b90728657839ae,"public int countCode(String str)
{
    int length = str.length();
    int codeAppears = 0;
    for ( int i = 0; i < length - 3; i++ )
    {
        if ( str.substring( i, i + 2 ).equals(""co"")
            && str.charAt(i + 3) == 'e' )
        {
            codeAppears++;
        }
    }
    return codeAppears;
}
"
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
"
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
"
69fdf234b3d861417bbd3dc97111bdd2a4600fbe,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = b.toLowerCase();
    boolean test1 = a.length() >= b.length() 
            && a.substring(a.length() - b.length()).equals(b);
    boolean test2 = b.length() >= a.length() 
            && b.substring(b.length() - a.length()).equals(a);
    return test1 || test2;
}
"
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
"
21f49c70a5574e177ee0e928d52f7656fb37a03a,"public boolean canBalance(int[] nums)
{
    int same = 0;
    int sum = 0;
    for (int i=0;i<nums.length;i++)
    {
        sum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        same += nums[i];
        sum -= nums[i];
    
    if (same == sum)
    {
        return true;
    }
    }
    return false;
}"
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
"
5cd02f6c04c19cfba3433b99e62352d722eab1e6,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
	    if (a > b)
	    {
   		  	return a;
	    }
	    else
    	{
    	 	return b;
    	}
    }
    else
    {
       	return 0;
    }
}
"
5c2299e300ea753bd04fda5a2ed890e61f4e0a36,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    boolean play = false;
    if (isSummer)
    {
    	if (temp >= 60 && temp <= 100)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
    else
    {
    	if (temp >= 60 && temp <= 90)
        {
        	play = true;
            return play;
        }
        else
        {
        	return play;
        }
    }
}
"
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
"
bfef0f13f16905b5acddfbd3c3900d7b4a2e5de9,"public boolean xyzThere(String str) {
  boolean res = false;

  if(str.contains("".xyz"") == false && str.contains(""xyz"") && str.contains(""abc.xyzxyz"")){
    res = true;
  }

  return res;

}"
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
"
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
"
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
"
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
"
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
"
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
"
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
"
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
"
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
"
06ce870f764275dc4fbe2e7c3328c4f9612d64a7,"public String repeatEnd(String str, int n)
{
    String last = str.substring(str.length() - n);
    for (int i = 0; i<n; i++)
    {
        last = last + last;
    }
    return last;
        
}
"
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
"
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
"
9bb5e21f3a10d7ec32b3825e14061232985ba3c2,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2){
		return 0;
    }else if(you >= 8 || date >= 8){
		return 2;
    }else {
        return 1;
    }
}
"
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
"
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
"
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
"
