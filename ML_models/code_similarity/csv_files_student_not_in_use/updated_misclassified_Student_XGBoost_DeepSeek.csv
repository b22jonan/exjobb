ID,Code,PromptType
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
",0
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",0
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",0
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
831d4624fc6b65528bad888eede0abe0e570d59f,"public int[] seriesUp(int n)
{
    int len = n*(n+1)/2;
    int[] nums = new int[len];
    int index = 0;
	for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            nums[index] = j;
            index++;
        }
    }
    return nums;
}
",0
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
e0fc48a114ea8a2948e43da4eb1342009c283ca3,"public boolean love6(int a, int b)
{
    if (a == b)
    {
        return true
    }
    else if (Math.abs(a - b) == 6)
    {
        return true
    }
    else if (a + b == 6)
    {
        return true
    }
    else
    {
        return false
    }
}
",0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",0
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",0
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",0
c6a7e900d8268e52e52d9619cadc6f8e9dfd493b,"public int[] withoutTen(int[] nums)
{
    int newArray[] = new int[nums.length];
    for(int val : newArray)
        val = 0;
    
    int newIndex = 0;
    for (int i = 0; i < nums.length; i++){
    	if(nums[i] != 10)
            newIndex[newIndex++] = nums[i]; 
    }
    
    return newArray;
}
",0
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

",0
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",0
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
",0
203f9c47a0738c4f7deb3aa08f1ac17b6d91cac6,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    int index = 0;
    
    for (int i : nums)
    {
        if (i != 10)
        {
            array[index] = i;
            index++;
        }
    }
    
   return array;
}
",0
6f7f61c8665e5fbb33bb6cdb300c38706ffa9630,"public int centeredAverage(int[] nums)
{
    int average = 0;
    int sum = 0;
    int low = nums[0];
    int high = nums[0];
    boolean found = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > high)
        {
            high = nums[i];
        }
        
        if (nums[i] < low)
        {
            low = nums[i];
        }
    }
    
    for (int a : nums)
    {
        sum = sum + a;
    }
    
    sum = sum - low - high;
    
    average = sum / (nums.length - 2)
    
    return average;
}
",0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",0
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",0
77eef59d415f15b3ad7bf984b2a232f7486ec6c6,"public int countEvens(int[] nums)
{
    int count = 0;
    
	for(int i = 0; i < nums.length; i++)
	{
		if (nums[i] % 2 == 0)
        {
			count++;
        }
	}
	return count;
}
",0
196436f6a31b3c5fa13fcebfee2d326193bfb3b0,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
          
    if(a == b && b == c)
        return 5;
                    
    if(a != b && a != c)
        return 1;
                            
    return 0;
}
",0
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
",0
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",0
67e32e60ccf94c9e237b1ee60eec88d54337ee46,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (( n > 12 && n < 15) ||( n > 16 && n < 20 )) {
     return 0;
   }
   return n;
}
",0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",0
85c4da3eae44449610d4abcaabc40f355189f866,"public boolean twoTwo(int[] nums)
{
    for (int i=0; i<(nums.length); i++)
	{
		if(nums[i]==2)
		{
			i++;
			if(!(i<(nums.length)) || nums[i] !=2) 
    		{
        		return false;
    		}
			while(i<nums.length && nums[i] ==2) i++;
			}
		}
	return true;
}
",0
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
",0
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",0
6bcfc4f8f71961def49e25a62a3705be7faac429,"public int[] fix45(int[] nums)
{
    int i = 0;
    int j = 0;
    while(j < nums.length && nums[j] != 5)
        j++;
    while(i < nums.length)
    {
    	if(nums[i] == 4)
        {
        	int temp = nums[i+1];
            nums[i+1] = nums[j];
            nums[j] = temp;
            
            while((j < nums.length && nums[j] != 5) || j ==i+1)
                j++;
        }
        i++;
        
    }
    return nums;
}",0
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",0
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
",0
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",0
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
",0
d343c2a82853ebc27e6313fb80505e809c22ea4d,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
return result.toString();
}
",0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
",0
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",0
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",0
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",0
50e38ea828c8b0ad18791c7c955b37bad6c9d4bc,"public boolean xyzThere(String str)
{
    int a = str.indexOf(""xyz"");
    int b = str.lastIndexOf(""xyz"");
    return ( a != -1 || b != -1);
}
",0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",0
d6ecef2688242348be94ae9cf4d683dbfee353d2,"public int countClumps(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        
        if (nums[i] = nums[i+1])
        {
            
            count += 1;
            
        }
        
    }
    
    
    return count;
    
    
}
",0
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
84dfd0d1e5c431468600f396b066dbde235e2bb8,"public int[] shiftLeft(int[] nums)
{
    int[] newList = new int[nums.length];
    return newList;
}
",0
f8088bfd768d468c776f6b545c352390831fff5d,"public int sum67(int[] nums)
{
    boolean exclude = false;
    int sum=0;
    for(int i = 0; i<nums.length;i++){
		if(nums[i]==6)exclude = true;
        if(exclude==false){
            sum+=nums[i];
        }
        if(nums[i]==7)exclude = false;
    }
    return sum;
    
}
",0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",0
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
",0
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",0
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
",0
d866157db78f6eb45be705042a8b581075d47972,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    	if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
            return a.sb;
    	}
    
    
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
",0
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
",0
4951e3e93960ed4399945d8a349ac025dd9fc00d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum<= 19)
    {
     	sum = 20;   
    }
    return sum;
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",0
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
73399e7b1699c43b257d654653ad569a3a026e1d,"public int countEvens(int[] nums)
{
    int count = 0;
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] % 2 == 0)
        {
            count += 1;
        }
    }
    return count;
}
",0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",0
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
",0
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
",0
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
",0
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
29a1252f7c0ff20c1a543bc0204b4956f657cce2,"public boolean bobThere(String str)
{
    
    int end = str.length();
	for(int i = 0; i < end; i++)
	{
		if(str.charAt(i) == 'b'
           && str.charAt(i+2) == 'b')
			return true;
	}
    {
	return false;
    }
    
}
",0
13588bafe7146875aeecd22626679f601f5f7f24,"public boolean bobThere(String str)
{
    int i;
    for (i=0; i < str.length()-3; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",0
5e5840b4728a9e257720a8c46d3285726a2ba053,"public boolean twoTwo(int[] nums)
{
    for(int i = 0; i < nums.length-2; i++)
    {
        if(nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
        if(nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
    }
    return true;
        
}
",0
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",0
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
",0
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",0
aa7de1c61f3e68959ff7cdfa0fcae118bf83e8ac,"public boolean xyzThere(String str)
{
    int xyzLocation = str.getIndex();
    if (xyzLocation == -1)
    {
    	char ch = str.charAt(xyxLocation-1);
    	if (ch == '.')
        {
        	return false;
        }
        else
        {
            return true;
        }
    else
        return false;
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
a24dfce9bb2b97aec0c2a859f3855e3285de4fff,"public int[] seriesUp(int n)
{
    
    int[] array = new int[n * (n + 1) / 2];
    
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i; j++)
        {
            array[(i - 1) * 2] = j;
        }
    }
    
    return array;
}
",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
4b39b762690e012369c928241a0dcc90b6ba8eda,"public boolean twoTwo(int[] nums)
{
    int i;
    for (i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i+1] != 2)
            {
                return false;
                i = i +1;
            }
        }
    }
    return true;
}
",0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",0
d832642cded155ba61945ed277e663a0de8cb32c,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 || day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",0
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",0
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",0
51fae40e9861d7b67fbaedf2d011c3a432f13b51,"public boolean xyzThere(String str)
{
    int i = -1;
    while ((i = str.indexOf(""xyz"", i + 1)) != -1)
    {
        if (i == 0 || (str.charAt(i - 1) != "".""))
        {
            return true;
        }
    }
    return false;
}
",0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",0
b66c9a76c6567bcfc33f81fb4e1e0bfe1c43ea5c,"public String atFirst(String str)
{
    int length = str.length();
    if( length >= 2 )
    {
        return str;
    }
    else
    {
        if( length == 1 )
        {
            return str + ""@"";
        }
        else
        {
            return ""@@"";
        }
    }
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
1889c30f0414785c8f5f8afe2dc4eaf09520169f,"public boolean twoTwo(int[] nums)
{
    boolean hasTwo = true;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 2) {
                if ((i != 0 && nums[i - 1] == 2) || (nums.length - 1 > i && nums[i + 1] == 2 )) {
                    hasTwo = true;
                    i++;
                } else {
                    hasTwo = false;
                }
            }
        }
        return hasTwo;
}
",0
c77723bd709b08d6e00161ce3c6ef305a61d69c9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length()-2; i++) {
    if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b') {
      return true;
    }
  }
  return false;
}
",0
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
",0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
a43f9daaa9b5cc98acfe197b9157d9de345febf6,"public int[] frontPiece(int[] nums)
{
    for (int numbers: nums; int i = 0; i < 2; i++)
    {
        int number[i] = numbers;
    }
    return number;
}
",0
10af8ae87e8d5fab568a4bc61c1cbcdf1cf7e4e3,"public boolean xyBalance(String str)
{
    boolean y = false;
    for(int i = 0; i < str.length() - 1; i++)
        {
       		if(str.charAt(i) == 'y')
            {
                y = true;
            }
        	if(str.charAt(i) == 'x' && !y)
            {
                return false;
            }
   		}
    return true;
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
c2b5233c69ac3f268687caee60f7f68deec9a002,"public String zipZap(String str)
{
    String original = str;
boolean found = false;
if(str.length() == 3) {
if(Character.toString(str.charAt(0)).equals(""z"") && (Character.toString(str.charAt(2)).equals(""p""))) {
return ""zp"";
}
} else if(str.length() < 3) {
return str;
}
 
for(int i = 0; i + 3 < str.length(); i++) {
if(Character.toString(str.charAt(i)).equals(""z"") && Character.toString(str.charAt(i + 2)).equals(""p"")) {
str = str.substring(0, i) + Character.toString(str.charAt(i)) + Character.toString(str.charAt(i + 2)) + str.substring(i + 3, str.length());
found = true;
} else {
}
}
 
if(Character.toString(str.charAt(str.length() - 3)).equals(""z"") && Character.toString(str.charAt(str.length() - 1)).equals(""p"")) {
return str = str.substring(0, str.length() - 3) + Character.toString(str.charAt(str.length() - 3)) + Character.toString(str.charAt(str.length() - 1));
}
 
if(found) {
return str;
} else {
return original;
}
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",0
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
d822cf12d38ea28fe825ff4fc14fdc94e6719f05,"public boolean bobThere(String str)
{
    int i = 0;
    char[] CharArray = str.toCharArray();
    for(char cha : CharArray){
    	if (cha == 'b'){
        	if (str[i + 2] == 'b'){
            	return true;
            }
        }
     	i++;
    }
    return false;
}
",0
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",0
cf03e7d05ecf19d01f0b0960fcc372a74623be83,"public int[] zeroMax(int[] nums)
{
    int i = nums.length - 1;
    while(i >= 0 && nums[i] % 2 == 0)
    {
        i--;
    } 
    for(int j = i - 1; j >= 0; j--) {
        if(nums[j] == 0)
        {
            nums[j] = nums[i];
        }
        if(nums[j] % 2 == 1 && nums[j] > nums[i])
        {
            i = j;
        }
    }
    return nums;
}
",0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",0
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",0
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",0
d0240fa701f593a04989201ae92746b03b43df48,"public int loneSum(int a, int b, int c)
{
    int sum = a;
    if(b != a)
        sum += b;
    if(c!=a && c!=b)
        sum += c
    return sum;
}
",0
dae0fac64baf41f77223c5e18ed84a394d8b0c8d,"public String alarmClock(int day, boolean vacation)
{

    
    if (day == 0 || day == 6)
        if (vacation)
        {
            alarmClock = ""off"";
        }
    {
        alarmClock = ""10:00"";
    }
    
    if (day > 0 && day < 6)
        if (vacation)
        {
            alarmClock = ""10:00"";
        }
    {
        alarmClock = ""7:00"";
    }
    
    return alarmClock
}
",0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",0
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",0
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",0
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",0
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
",0
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
d620f21e27a87e15d05a4f085e8ed51214622697,"public String alarmClock(int day, boolean vacation);
int alarmTime = 0;
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	alarmTime=7;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	alarmTime=10;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=off;
    	}
    }
return alarmTime;    
}
",0
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
",0
739598df6f10e1b41997fbbce33f2e2bf0fd995e,"public boolean has77(int[] nums)
{
    int x = nums.length;
    for (int i = 0; i < x; i++)
    {
        if (i < x - 1 && nums.[i] == 7 && nums.[i + 1] == 7)
        {
            return true;
        }
        if (i < x - 2 && nums.[i] == 7 && nums.[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
",0
030fccf2f47fa47b1f2627cf43a489ae647b9717,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",0
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",0
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
8536c5f768b1adb326e2c34c566a310f311e86dc,"public boolean xyzThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.CharAt(i+1) == 'y' 
            && str.CharAt(i+2) == 'z')
        {
            if (i == 0 || str.CharAt(i-1) != '.')
                return true; 
        }
    }
    return false; 
}
",0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",0
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
",0
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",0
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",0
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
",0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",0
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",0
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",0
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
10af8ae87e8d5fab568a4bc61c1cbcdf1cf7e4e3,"public boolean xyBalance(String str)
{
    boolean y = false;
    for(int i = 0; i < str.length() - 1; i++)
        {
       		if(str.charAt(i) == 'y')
            {
                y = true;
            }
        	if(str.charAt(i) == 'x' && !y)
            {
                return false;
            }
   		}
    return true;
}
",0
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",0
c6e135a8d819808a2e86f6eb184fd9701ef4cea6,"public int[] withoutTen(int[] nums)
{
    //creates new array
    int[] newArray = new int[nums.length];
	int j = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			newArray[j] = nums[i];
			j++;
		}
	}
	// returns the new array
	return newArray;
}
",0
2ee7d366ef45e04675e68bd5cfd425ac0862af68,"public String atFirst(String str)
{	
    String part = str.substring(0 , 2);
    return part;
    if (str.length() == 1);
    {
        return str + ""@"";
    }
	else
    {
		return ""@@"";
    }

  }
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
d6cae903650a09585ae1bb496e05fc63b9b6524f,"public String plusOut(String str, String word)
{
    int i = 0;
    String sTwo = """";
    while (i < str.length() - word.length() + 1)
    {
        if (!str.substring(i, i + word.length()).equals(word))
        {
            sTwo += ""+"";
            i++;
        }
    	else
    	{
        	sTwo += word;
        	i += word.length();
    	}
    }
    while (str.length() > sTwo.length())
    {
        sTwo += ""+"";
    }
    return sTwo;
}
",0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",0
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",0
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",0
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",0
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",0
50e38ea828c8b0ad18791c7c955b37bad6c9d4bc,"public boolean xyzThere(String str)
{
    int a = str.indexOf(""xyz"");
    int b = str.lastIndexOf(""xyz"");
    return ( a != -1 || b != -1);
}
",0
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
",0
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",0
a1c591b6f4179d5767faf1b93f8c25a4cec3a6ab,"public boolean love6(int a, int b)
{
	if(a == 6 || b == 6 || (a + b == 6) || (Math.abs(a - b) == 6) )
    {
        return true;
    }	
	return false;
}
",0
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",0
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",0
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",0
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",0
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
",0
3bfe605f68e12c9d3fe2391ac78c50b7339ea224,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
	b = b.toLowerCase();    
    return(a.lastIndexOf(b)<=a.length()-b.length()||b.lastIndexOf(a)<=b.length()-a.length());
}
",0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",0
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",0
11e598f7e57d128136db1dfc84b08cbb84493470,"public String atFirst(String str)
{	
    int n = str.length();
    for (int = 0; i < n; i++)
    {
    	if (n > 2)
    	{
     		return str.substring(0, 2);
    	}
    	else
    	{
       	 	return ""@@"";
    	} 
    }
}
",0
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",0
8486d888511b0c88a6cdd719c0976a881dec165a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday) {
        if(speed <= 65) {
            return 0;
        } else if(66 <= speed && speed <= 85) {
            return 1;
        } else if(86 <=  speed) {
            return 2;
        }
    }
                                        
    if(speed <= 60) {
        return 0;
    } else if(61 <= speed && speed <= 80) {
        return 1;
    } else {
        return 2;
    }
}
",0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
d7c652fe7617faefbf9d4f1a9e2917b5bcf5efcc,"public int[] tenRun(int[] nums)
{
    int replace = nums[0];
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] % 10 == 0) {
            replace = nums[i];
        }
        else if (replace % 10 != 0) {
            replace = nums[i]
        }
        nums[i] = replace;
    }
    return nums;
}
",0
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
77eef59d415f15b3ad7bf984b2a232f7486ec6c6,"public int countEvens(int[] nums)
{
    int count = 0;
    
	for(int i = 0; i < nums.length; i++)
	{
		if (nums[i] % 2 == 0)
        {
			count++;
        }
	}
	return count;
}
",0
4951e3e93960ed4399945d8a349ac025dd9fc00d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum<= 19)
    {
     	sum = 20;   
    }
    return sum;
}
",0
f6813268f36f79d3489d3036c6a71d542f00fe8b,"public boolean sameEnds(int[] nums, int n)
{
    boolean a = false;
    for	(int i = 0; i < n; i++)
    {
        if (nums[i] == nums[nums.length - n + i])
        {
            a = true;
        }
        else
        {
            a = false;
        }
    }
    return a;
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",0
9bb5e21f3a10d7ec32b3825e14061232985ba3c2,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2){
		return 0;
    }else if(you >= 8 || date >= 8){
		return 2;
    }else {
        return 1;
    }
}
",0
2f0a2b01b8d36b9b41d35269fb9c59a0cd367b3b,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int lastDigit = num % 10;
    if (lastDigit >= 5)
    {
        int roundUp = num + (10 - lastDigit);
        return roundUp;
    }
    else
    {
        int roundDown = num - lastDigit;
        return roundDown;
    }
}",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
b62f1274c56d44cf8761535a5c06a838683ec7c5,"public boolean sameEnds(int[] nums, int n)
{
    boolean a = false;
    for	(int i = 0; i < n; i++)
    {
        if (nums[i] == nums[nums.length - n + i])
        {
            a = true;
        }
        else
        {
            a = false;
        }
    }
    return a;
}
",0
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
fdd5fb950da06ae0b32b17d65aa2c875b7e04663,"public int[] fizzArray(int n)
{
    int[] newArray = new int[n];
    for (int i = 0; i < n; i++)
    {
        newArray[i] = i;
    }
    return newArray;
}",0
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
cf1aaa53350b07642069ec537a4b37e93bf3531b,"public int redTicket(int a, int b, int c)
{
    if (a==2 && b==2 && c==2)
    {
        return 10;
    }
    else if (a==b && b==c)
    {
        return 5;
    }
    else if (a!=b && b!=c && c!=a)
    {
        return 1;
    }
    else 
    {
        return 0;
    }
}
",0
93cbb22b6a1b1a6803c91b97ad0c9e1017120cfa,"public boolean love6(int a, int b)
{
    if ((a == 6) || (b == 6))
    {
        return true;
    }
    else if ((Math.abs(a - b) == 6) || ((a + b) == 6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",0
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",0
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",0
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
f0258239140a383cf0c0c1e9ac9553390ed81433,"public boolean xyzThere(String str)
{
    int i = 0
    int length = str.length() - 2;
    for( i ; i < length; i++);
    {
     	if(str.charAt(i) == 'x' && str.charAt(i+1) == 'y' && str.charAt(i+2) == 'z')
        {
         	if (i == 0 || str.charAt(i-1) != ""."")
                return true;
        }
    }
    return false;
}
",0
e2840899f1aac60ee4fa7b06722a656e8bb2fb17,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 )
    {
        return true;
    }
    if ( Math.abs(a + b) == 6 || Math.abs(a - b) == 6) {
        return true;
    }
    return false;
}
",0
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",0
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",0
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",0
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
d0240fa701f593a04989201ae92746b03b43df48,"public int loneSum(int a, int b, int c)
{
    int sum = a;
    if(b != a)
        sum += b;
    if(c!=a && c!=b)
        sum += c
    return sum;
}
",0
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",0
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
10af8ae87e8d5fab568a4bc61c1cbcdf1cf7e4e3,"public boolean xyBalance(String str)
{
    boolean y = false;
    for(int i = 0; i < str.length() - 1; i++)
        {
       		if(str.charAt(i) == 'y')
            {
                y = true;
            }
        	if(str.charAt(i) == 'x' && !y)
            {
                return false;
            }
   		}
    return true;
}
",0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",0
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",0
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
",0
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",0
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
",0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
d822cf12d38ea28fe825ff4fc14fdc94e6719f05,"public boolean bobThere(String str)
{
    int i = 0;
    char[] CharArray = str.toCharArray();
    for(char cha : CharArray){
    	if (cha == 'b'){
        	if (str[i + 2] == 'b'){
            	return true;
            }
        }
     	i++;
    }
    return false;
}
",0
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",0
2b64a0277763a3e3aeb7d462893bb8e9e84266a5,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
        
        for (int i = 0; i < nums.length; i++)
        {
            sum += nums[i];
            if (nums[i] < min)
            {
                min = nums[i];
            }
            else if (nums[i] > max)
            {
                max = nums[i];                
            }
        }
    int average = (sum - min - max) / (nums.length - 2);
    
    return average;
}
",0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
8536c5f768b1adb326e2c34c566a310f311e86dc,"public boolean xyzThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.CharAt(i+1) == 'y' 
            && str.CharAt(i+2) == 'z')
        {
            if (i == 0 || str.CharAt(i-1) != '.')
                return true; 
        }
    }
    return false; 
}
",0
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",0
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
2b64a0277763a3e3aeb7d462893bb8e9e84266a5,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
        
        for (int i = 0; i < nums.length; i++)
        {
            sum += nums[i];
            if (nums[i] < min)
            {
                min = nums[i];
            }
            else if (nums[i] > max)
            {
                max = nums[i];                
            }
        }
    int average = (sum - min - max) / (nums.length - 2);
    
    return average;
}
",0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
d6cae903650a09585ae1bb496e05fc63b9b6524f,"public String plusOut(String str, String word)
{
    int i = 0;
    String sTwo = """";
    while (i < str.length() - word.length() + 1)
    {
        if (!str.substring(i, i + word.length()).equals(word))
        {
            sTwo += ""+"";
            i++;
        }
    	else
    	{
        	sTwo += word;
        	i += word.length();
    	}
    }
    while (str.length() > sTwo.length())
    {
        sTwo += ""+"";
    }
    return sTwo;
}
",0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",0
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",0
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
787a85062f05f6204afae52da91cfbe56d85e07c,"public String zipZap(String str)
{
    String newString = """";
    for (int i = 0; i < str.length(); i++) 
    {
        if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p') 
        {
            newString += str.charAt(i) + """" + str.charAt(i + 2);
            i = i + 2;
        }
        else 
        {
            newString += str.charAt(i);
        }
    }
    return newString;
}
            

",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
a0bec10fb0915da30f42f452fcc1f92768c6f46b,"public int dateFashion(int you, int date)
{
    if ((you >=5 && <=10) && (date >=5 && <=10))
    {
        return 2;
    }
    
    else if ((you <=9 && >=2) && (date >=9 && <=2))
    {
        return 0;
    }
    
    else 
    {
        return 1;
        
    }
              
    
}
",0
11e598f7e57d128136db1dfc84b08cbb84493470,"public String atFirst(String str)
{	
    int n = str.length();
    for (int = 0; i < n; i++)
    {
    	if (n > 2)
    	{
     		return str.substring(0, 2);
    	}
    	else
    	{
       	 	return ""@@"";
    	} 
    }
}
",0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
21fde9dea74aff5f7f17ef7764fd4c3c98b26336,"public static String without2(String str) 
{
        if(s.length() < 2) return s;
      
        String sbegining = s.substring(0, 2);
        String send = s.substring(s.length()-2);
        if(sbegining.compareTo(send)!=0)
            return s;
        else return s.substring(2);
    }
    public static void main(String[] args) {
      
        String s1 = ""HelloHe"";
        String s2 = ""Hi"";
        String s3 = ""Hello"";
      
        System.out.println(s1 + "": "" + without2(s1));
        System.out.println(s2 + "": "" + without2(s2));
        System.out.println(s3 + "": "" + without2(s3));
    }

}
}",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",0
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}",0
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",0
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",0
cbe448bc365e81d92fe217dab9559769b9c419df,"public static String without2(String str) 
{
        if(s.length() < 2) return s;
      
        String sbegining = s.substring(0, 2);
        String send = s.substring(s.length()-2);
        if(sbegining.compareTo(send)!=0)
            return s;
        else return s.substring(2);
    }
    public static void main(String[] args) {
      
        String s1 = ""HelloHe"";
        String s2 = ""Hi"";
        String s3 = ""Hello"";
      
        System.out.println(s1 + "": "" + without2(s1));
        System.out.println(s2 + "": "" + without2(s2));
        System.out.println(s3 + "": "" + without2(s3));
    }

}
",0
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
",0
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",0
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",0
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
",0
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
",0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",0
f055965f9ae32739c7b92d6b5ecbca90565fcdcd,"public String without2(String str) 
{
    int len = str.length();
    if (str(0) == str(len - 2) && str(1) == str(len - 1))
    {
        String sss = null;
        sss.append(str,2,len-1);
            return sss;
    }
    else
    {
        return str;
    }
}
",0
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",0
c39d1ee94f6a9a0a81bfecf4b8fd083b1fca26c2,"public int[] fizzArray(int n)
{
    int array = new int[n];
    for(int i=0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",0
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",0
f8088bfd768d468c776f6b545c352390831fff5d,"public int sum67(int[] nums)
{
    boolean exclude = false;
    int sum=0;
    for(int i = 0; i<nums.length;i++){
		if(nums[i]==6)exclude = true;
        if(exclude==false){
            sum+=nums[i];
        }
        if(nums[i]==7)exclude = false;
    }
    return sum;
    
}
",0
34fd7df6f2e77eb2637ca1aab9fa90ece6e50132,"public int greenTicket(int a, int b, int c)
{
    if(a == b && a == c && b == c)
    {
        return 20;
    }
    if(a != b && a != c && b != c)
    {
        return 0;
    }
    else
    {
        return 10;
    }
}
",0
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
2ab613317018e535c7c370e1bf3fb0d86c7a9f9b,"public int[] tenRun(int[] nums)
{
    int[] result = new int[nums.length];
    int input;
    int value = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (input % 10 == 0 && input > value)
        {
            value = input;
        }
        
        if (value == -1)
        {
            result[i] = input;
        }
        else
        {
            result[i] = value;
        }
    }
    
    return result;
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
",0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",0
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
3ce009bc540eea6e8cf415b8fc53aff5c31e7b44,"public int loneSum(int a, int b, int c)
{
    if (a == b || b == c || a == c)
    {
        return false;
    }
    return a + b + c;
}
",0
d620f21e27a87e15d05a4f085e8ed51214622697,"public String alarmClock(int day, boolean vacation);
int alarmTime = 0;
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	alarmTime=7;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	alarmTime=10;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=off;
    	}
    }
return alarmTime;    
}
",0
f69e8dd43d667d277a71e8afa47bc128fe9fec54,"public int[] shiftLeft(int[] nums)
{
    if (nums.equals({})){
        return null;
    }
    int[] left = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++){
        left[i] = nums[i+1];
    }
    left[nums.length - 1] = nums[0];
    return left;
}
",0
831d4624fc6b65528bad888eede0abe0e570d59f,"public int[] seriesUp(int n)
{
    int len = n*(n+1)/2;
    int[] nums = new int[len];
    int index = 0;
	for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            nums[index] = j;
            index++;
        }
    }
    return nums;
}
",0
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",0
e2840899f1aac60ee4fa7b06722a656e8bb2fb17,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 )
    {
        return true;
    }
    if ( Math.abs(a + b) == 6 || Math.abs(a - b) == 6) {
        return true;
    }
    return false;
}
",0
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",0
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
d620f21e27a87e15d05a4f085e8ed51214622697,"public String alarmClock(int day, boolean vacation);
int alarmTime = 0;
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	alarmTime=7;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	alarmTime=10;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=off;
    	}
    }
return alarmTime;    
}
",0
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",0
a24dfce9bb2b97aec0c2a859f3855e3285de4fff,"public int[] seriesUp(int n)
{
    
    int[] array = new int[n * (n + 1) / 2];
    
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i; j++)
        {
            array[(i - 1) * 2] = j;
        }
    }
    
    return array;
}
",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",0
93cbb22b6a1b1a6803c91b97ad0c9e1017120cfa,"public boolean love6(int a, int b)
{
    if ((a == 6) || (b == 6))
    {
        return true;
    }
    else if ((Math.abs(a - b) == 6) || ((a + b) == 6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",0
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",0
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",0
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",0
d832642cded155ba61945ed277e663a0de8cb32c,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 || day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
da854431fc95a4fda3f5795de985db2ccfd6cecc,"public boolean xyzThere(String str)
{
    if (str.length() >= 3) {
   	 	for (int i = 0; i < str.length() - 3; i++) {
        	if (str.substring(i, i + 3).equals(""xyz"")) {
            	if (i == 0) {
                    return true;
                }
                else if (str.charAt(i - 1) == '.') {
                    return false;
                }
                else {
                    return true;
                }
        	}
            else {
               return false; 
            }
    	}
    }
    else {
        return false;
    }
}
",0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",0
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",0
34fd7df6f2e77eb2637ca1aab9fa90ece6e50132,"public int greenTicket(int a, int b, int c)
{
    if(a == b && a == c && b == c)
    {
        return 20;
    }
    if(a != b && a != c && b != c)
    {
        return 0;
    }
    else
    {
        return 10;
    }
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
e1f80924e2fa9aba6195f174166b813b13fea19e,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 && day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",0
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",0
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
10af8ae87e8d5fab568a4bc61c1cbcdf1cf7e4e3,"public boolean xyBalance(String str)
{
    boolean y = false;
    for(int i = 0; i < str.length() - 1; i++)
        {
       		if(str.charAt(i) == 'y')
            {
                y = true;
            }
        	if(str.charAt(i) == 'x' && !y)
            {
                return false;
            }
   		}
    return true;
}
",0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
cf1aaa53350b07642069ec537a4b37e93bf3531b,"public int redTicket(int a, int b, int c)
{
    if (a==2 && b==2 && c==2)
    {
        return 10;
    }
    else if (a==b && b==c)
    {
        return 5;
    }
    else if (a!=b && b!=c && c!=a)
    {
        return 1;
    }
    else 
    {
        return 0;
    }
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
030fccf2f47fa47b1f2627cf43a489ae647b9717,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",0
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

",0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",0
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",0
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
",0
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",0
4a63be8553ad24a10f87fadd9670f90ac23241ab,"public boolean xyBalance(String str)
{
   boolean ychar = false;
   for (int i = str.length() - 1; i >= 0; i--)
        {
       		if(str.charAt(i) == 'y') //true when every x is balanced with a y after
            {
                ychar = true;
                return true;
            }
        	if(!ychar && str.charAt(i) == 'x')
            {
                return false;
            }
   		}
    return true;
}
",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",0
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",0
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",0
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
",0
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",0
8faf14f1204c6304c1a1562a50964e420ce74fe5,"public String without2(String str) 
{
    if (str.length() < 2)
        return str;
    else if (str.charAt(0) == str.charAt(str.length() -2)) && str.charAt(1) == str.charAt(str.length() -1))
        str = str.substring(2, str.length());
    	return str;
    else
         return str.
}
",0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",0
1adf1201d219d6cf2893ea40470b60c2a19806f6,"public int countClumps(int[] nums)
{
    int count = 0;
    int i = 0;
    
    while (i < nums.length)
    {
        int val = nums[i];
        i++;
        int length = 1;
        
        while (i < nums.length && nums[i] == val)
        {
            i++;
            length++;
        }
        if (length > 1);
        {
            count ++;
        }
    }
    return count;
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
d31a544311795878c1f0a6ee6dbb403e1c4c36e2,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep) {
    if(isAsleep)
        return false;
          
    if(isMorning && !isMom)
        return false;
                    
    return true;
}",0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",0
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",0
e23e41d16ff5bbead927f66f2c57979556c89a97,"public boolean bobThere(String str)
{
    
    int end = str.length();
    int variated = str.charAt(end);
for (int i = 0; i < end - 2; i++)
 {
if ((str.charAt(i) == 'b') && (str.charAt(i+2) == 'b'))
    {
return true;
	} 

return false;
	
 }
    
}
",0
f342b443ed392fba02553e41411ad878747a6226,"public String plusOut(String str, String word)
{
    int len = str.length();
    int wordLen = word.length();
    int j = 0;
 	for (int i = 0; i < len; i++)
    {
        if (str.charAt(i) == word.charAt(j))
        {
            if (j < wordLen - 1)
           		 j = j + 1;
        }
        else
        {
            str.replace(str.charAt(i), '+');
        }
    }
    return str;
}
",0
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
",0
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
e87542225324deb36fc5891405e6401d53aab2a3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed -= 5;
    }
    if (speed=<60)
    {
        return 0;
    }
    if (speed>=61 && speed<= 80)
    {
        return 1;
    }
    if (speed>=81)
    {
        return 2;
    }
}
",0
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",0
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",0
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",0
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",0
2eefd35700230f8780f45d01d416afdecdd69994,"public int caughtSpeeding(int speed, boolean isBirthday)
if(isBirthday)
{
	speed -= 5;
}
if(speed <= 60)
{
    return 0;
}
else if (speed <= 80)
{
    return 1;
}
else
{
    return 2;
}
    
",0
436fd09b6891e567fe0cd98c8b071729b2733e8c,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 && day != 6)
            return ""10:00"";
        else
            return ""off"";
    else
        if (day != 0 && day != 6)
            return ""7:00"";
        else
            return ""10:00"";
    }
}",0
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
",0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",0
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",0
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
",0
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",0
6f412fb97dacfeab711397d737336f16f8b3a81c,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder();
    for (int i = 0; i < n; i++)
    {
    	sb.append(str.charAt(str.length()-1));
    }
    return sb.toString();
}
",0
d620f21e27a87e15d05a4f085e8ed51214622697,"public String alarmClock(int day, boolean vacation);
int alarmTime = 0;
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	alarmTime=7;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	alarmTime=10;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=off;
    	}
    }
return alarmTime;    
}
",0
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
",0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",0
b548738b5bfb75d35c000b3dd8701cbe2937ee99,"public String zipZap(String str)
{
    char[] CharArray = str.toCharArray();
    char[] finalArray;
    for(char cha : CharArray){
    	if (cha == 'z'){
            if (CharArray.length > i + 2){
        		if (CharArray[i + 2] == 'p'){
                    
                }
            }
        }
        ;
    }
    int z = 0;
    int p = 0;
    String notFinal = """";
    String finalS = str;
    int lastFound = 0;
    for (int i = 0; i < str.length; i++){
        notFinal += str.charAt(i);
        if (str.charAt(i) == ""z""){
          	if (str.length() > i + 2){
            	if (str.charAt(i + 2) == ""p""){
                    i++;
                }
            }
        }
    }
    
    return notFinal;
}
",0
64048f2701869a2bcb7a460416d3ef15f722e6b6,"public int[] fizzArray(int n)
{
    int i;
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",0
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
",0
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
",0
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",0
c39d1ee94f6a9a0a81bfecf4b8fd083b1fca26c2,"public int[] fizzArray(int n)
{
    int array = new int[n];
    for(int i=0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",0
bee02e7721832f110174bc61c71f0ec2fe592dc7,"public int[] fix45(int[] nums)
{
    int size = nums.length;
    int i = 0;
    int k = 0;
    bob:
    for (; i < size; i++)
    {
        if (nums[i] == 4)
        {
        	for (; k < size; k++)
            {
            	if (nums[k]==5)
                {
                	int see = nums[i+1];
                    nums[i+1] = nums[k];
                    nums[k] = see;
                    i++;
                    continue bob;
                }
            }
        }
    }
    return nums;
}
",0
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
",0
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",0
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",0
902aee8fb5c3fd4695b70e618ae43003ed96d60b,"public int makeChocolate(int small, int big, int goal)
{
    if (big * 5 > goal)
    {
        return goal % 5;
    }
    else if (small * 5 > goal)
    {
        return goal % 5;
    }
    else if (small + big * 5 > goal)
    {
        return -1;
    }
    return goal;
}
",0
d822cf12d38ea28fe825ff4fc14fdc94e6719f05,"public boolean bobThere(String str)
{
    int i = 0;
    char[] CharArray = str.toCharArray();
    for(char cha : CharArray){
    	if (cha == 'b'){
        	if (str[i + 2] == 'b'){
            	return true;
            }
        }
     	i++;
    }
    return false;
}
",0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",0
248a42b6be0b5c276bc90fe48d343de22fedf6b6,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length-1; i++)
	{
		if(nums[i] != val && nums[i+1] != val)
			return false;
	}  
	return true;
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",0
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
",0
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
1f5c3d8a073e2b5edf9214c7e6888105496b4151,"public int[] seriesUp(int n)
{	
    int[] list = new int[n * (n + 1)/2];
    int max = 1;
    int count = 0;
    for (int i = 0; i < list.length; i++)
    {
        list[i] = max - count;
        if (list[i] == max)
        {
            count = max;
            max++;
        }
        else
        {
            count--;
        }
    }
    return list;
    
}
",0
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",0
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
",0
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",0
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",0
458df3209fd88a511ec835c27a6b8e785183059c,"public boolean xyzThere(String str)
{
    int len = str.length() - 2;
    for(int i = 0; i < len; i++)
    {
        if (str.charAt(i) == ""x"" && str.charAt == ""y"" && str.charAt(i+2) == ""z"")
        {
            if(str.charAt(i-1) 1= ""."" || i==0)
            {
                return true;
            }
        }
    }
        return false;
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
",0
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
",0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",0
4cc916649df329cb2108d1f68b228a173f91b30d,"public int makeChocolate(int small, int big, int goal)
{
    if (small + (5*big) < goal)
    {
        return -1;
    }
    else
    {
        if ((goal / 5) <= big)
        {
            int r = goal % 5;
            if (r <= small)
            {
                return small;
            }
            else
            {
                return -1;
            }
        }
        else
        {
            if ((goal - (5 * big)) <= small)
            {
                return goal - (5 * big);
            }
            else
            {
                return -1;
            }
        }
    }
    
    
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",0
2ab613317018e535c7c370e1bf3fb0d86c7a9f9b,"public int[] tenRun(int[] nums)
{
    int[] result = new int[nums.length];
    int input;
    int value = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (input % 10 == 0 && input > value)
        {
            value = input;
        }
        
        if (value == -1)
        {
            result[i] = input;
        }
        else
        {
            result[i] = value;
        }
    }
    
    return result;
}
",0
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;",0
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",0
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
9da10eb0a36c1f2a83adb2a9e709bf948f23038e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if (a + b == 6)
    {
        return true;
    }
    else if (Math.abs(a-b) == 6)
    {
        return true;
    }
}
",0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
",0
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",0
11e598f7e57d128136db1dfc84b08cbb84493470,"public String atFirst(String str)
{	
    int n = str.length();
    for (int = 0; i < n; i++)
    {
    	if (n > 2)
    	{
     		return str.substring(0, 2);
    	}
    	else
    	{
       	 	return ""@@"";
    	} 
    }
}
",0
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
a730369051672c668c3efc03eb8dcc6956e9beb3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	// Java arrays are initialized to 0 so no need to set the last elements to 0
	return arr;
}
",0
88111a1b682c4e3263232c7e42baecf389dd8a17,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0)
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
    else
    {
    	return 0;
    }
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
9f87b2b05c03f2be8a156ec1c96ef54488b5591a,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean check = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (check)
        {
         	if (nums[i]==7)
            {
                check = false;
            }
        }
        else if (nums[i]==6)
        {
            check = true;
        }
        else
        {
            sum = sum + nums[i];
        }
    }
    return sum;
}
",0
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
",0
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",0
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",0
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
",0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
2adbb39337217f673d1ee6e9632faef8d959ee31,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2)
    {
		return 0;
    }
	if(you >= 8 || date >= 8)
    {
		return 2;
    }
    else
    {
        return 1;
    }
}
",0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",0
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",0
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",0
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",0
217b6c94704073ae6b185d57c1f0f07741d8efd0,"public int[] shiftLeft(int[] nums)
{
    if(nums.length == 0)
    {
    return nums;
    }
    int[] newarray = new int[nums.length];
    int a = nums[0];
    newarray[nums.length - 1] = a;
    for(int i = 1; i < nums.length; i++)
    {
    newarray[i - 1] = nums[i];
    }
    return newarray;
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",0
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
",0
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",0
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",0
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
",0
dc3378fef360ec4c5e4c0ddeaace01619067c129,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (is_weekend = true)
    {
        if cigars >= 40:
        {
            return True
        }
    }
    else if (cigars >= 40 && cigars <= 60)
    {
        return True
    }
    else
    {
        return False
    }
}
",0
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
e2840899f1aac60ee4fa7b06722a656e8bb2fb17,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 )
    {
        return true;
    }
    if ( Math.abs(a + b) == 6 || Math.abs(a - b) == 6) {
        return true;
    }
    return false;
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",0
030fccf2f47fa47b1f2627cf43a489ae647b9717,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",0
5bf14ec8d2b72a5f31c1b7537e644e100f3cb419,"public String alarmClock(int day, boolean vacation)
{
    if(!(vaction))
    {
    	if(day == 6 || day == 0)
        {
            return off;
        }
        else
        {
        	return 10:00;
        }
    }
    else
    	if(day == 6 || day == 0)
        {
            return 10:00;
        }
        else
        {
        	return 7:00;
        }
}
",0
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",0
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",0
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",0
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",0
4b39b762690e012369c928241a0dcc90b6ba8eda,"public boolean twoTwo(int[] nums)
{
    int i;
    for (i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i+1] != 2)
            {
                return false;
                i = i +1;
            }
        }
    }
    return true;
}
",0
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;",0
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",0
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",0
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",0
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",0
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",0
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",0
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",0
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
34fd7df6f2e77eb2637ca1aab9fa90ece6e50132,"public int greenTicket(int a, int b, int c)
{
    if(a == b && a == c && b == c)
    {
        return 20;
    }
    if(a != b && a != c && b != c)
    {
        return 0;
    }
    else
    {
        return 10;
    }
}
",0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",0
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
",0
55d82777253a00d8ba398425451c87f2ce6bf43d,"public boolean xyBalance(String str)
{
	    
    for (int i = 0; i < str.length(); i++)
    {
        if (str.charAt(i) == 'x')
        {
            for (int j = 0; j < str.length(); j++)
            {
                if((i+j) < str.length())
                {
                	if((str.charAt(i+j) == 'y'))
	                {
						for (int k = 0; k < str.length(); k++)
                        {
                        	if((k+i+j) < str.length())
                            {
                            	if (str.charAt(k+i+j) == 'x')
                                {
                                	return false;
                                }
                                else if (str.charAt(str.length()-1) == 'y')
                                {
                                	return true;
                                }
                            }                            
                        }
                        return true;
        	        }

                }
            }
        }        
    }
    for (int z = 0; z < str.length(); z++)
    {
    	if (str.charAt(z) != 'x')
        {
        	for (int q = 0; q < str.length(); q++)
            {
            	if ((q+z) < str.length() && str.charAt(q+z) == 'x')
                {
                	return false;
                }
            }
        }
    }
    return false;
}
",0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",0
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",0
617e080aa52b2079a26ca214e0adcbebaeec5270,"public int makeChocolate(int small, int big, int goal)
{
   int rem = goal % 5;
   if (small + (5 * big) < goal)
   {
       return -1;
   }
  else if (rem <= small + (5 * big) >= goal)
  {
      return -1;
  }
  else
  {
      return small * rem;
  }
}
",0
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",0
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",0
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",0
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
",0
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",0
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",0
469345bd6acd9ad504ce3cd1aaa0a852de97ddfe,"public int[] tenRun(int[] nums)
{
    int current;
    int i = 0;
      
    while(i < nums.length && nums[i] % 10 != 0)
        i++;
                
    if(i >= nums.length)
        return nums;
                          
    current = nums[i]; 
    i++;
                                
    while(i < nums.length) {
        if(nums[i] % 10 == 0)
            current = nums[i];
        else
            nums[i] = current;
        i++;
    }
                                                              
    return nums; 
}
",0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
05b23fcc737fcb6b3c50cd8949cae2a6c045d1a0,"public String[] fizzBuzz(int start, int end)
{
    String[] series = new String[end - start];
    for (int i = 0; start < end; i++)
    {
        if ((start % (3 * 5)) == 0)
        //when it is multiples of both 3 and 5
        {
        	series[i] = ""FizzBuzz"";
        }
        else if ((start % 5) == 0)
        {
            series[i] = ""Buzz"";
        }
        else if ((start % 3) == 0)
        {
            series[i] = ""Fizz"";
        }
        else
        {
            series[i] = String.valueOf(start);
        }
        start++;
    }
    return series;
        
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
6c5f6108333f344785ee689de07d00263b413498,"public String repeatEnd(String str, int n)
{
    return str; 
}
",0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",0
77eef59d415f15b3ad7bf984b2a232f7486ec6c6,"public int countEvens(int[] nums)
{
    int count = 0;
    
	for(int i = 0; i < nums.length; i++)
	{
		if (nums[i] % 2 == 0)
        {
			count++;
        }
	}
	return count;
}
",0
9e2323cd896bf8c878fad40b42eac0e930afede4,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    String str = String.valueOf(num);
    int stringLength = str.length();
    int lastDigit = Integer.parseString(stringLength);
    if (lastDigit >= 0 && lastDigit < 5)
    {
        return num - lastDigit;
    }
    else if (lastDigit >= 5)
    {
        return num + (10 - lastDigit);
    }
}",0
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
",0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",0
d6cae903650a09585ae1bb496e05fc63b9b6524f,"public String plusOut(String str, String word)
{
    int i = 0;
    String sTwo = """";
    while (i < str.length() - word.length() + 1)
    {
        if (!str.substring(i, i + word.length()).equals(word))
        {
            sTwo += ""+"";
            i++;
        }
    	else
    	{
        	sTwo += word;
        	i += word.length();
    	}
    }
    while (str.length() > sTwo.length())
    {
        sTwo += ""+"";
    }
    return sTwo;
}
",0
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",0
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",0
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",0
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",0
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
",0
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
34fd7df6f2e77eb2637ca1aab9fa90ece6e50132,"public int greenTicket(int a, int b, int c)
{
    if(a == b && a == c && b == c)
    {
        return 20;
    }
    if(a != b && a != c && b != c)
    {
        return 0;
    }
    else
    {
        return 10;
    }
}
",0
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
",0
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",0
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",0
f300c3316033d29c0150506e776d9d9a8546affd,"public int[] tenRun(int[] nums)
{
    int current;
    int i = 0;
      
    while(i < nums.length && nums[i] % 10 != 0)
        i++;
                
    if(i >= nums.length)
        return nums;
                          
    current = nums[i]; 
    i++;
                                
    while(i < nums.length) {
        if(nums[i] % 10 == 0)
            current = nums[i];
        else
            nums[i] = current;
        i++;
    }
                                                              
    return nums; 
}
",0
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
e0fc48a114ea8a2948e43da4eb1342009c283ca3,"public boolean love6(int a, int b)
{
    if (a == b)
    {
        return true
    }
    else if (Math.abs(a - b) == 6)
    {
        return true
    }
    else if (a + b == 6)
    {
        return true
    }
    else
    {
        return false
    }
}
",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",0
6ab6c1ba53a6425448c2bc16832e926986cd438a,"public int makeChocolate(int small, int big, int goal)
{
   int rem = goal % 5;
   if (small + (5 * big) < goal)
   {
       return -1;
   }
  else if (small + (5 * big) > goal)
  {
      return -1;
  }
  else
  {
      return small * rem;
  }
}
",0
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
",0
f87b721de5fa4f5ff50d17d9cca6a2ce7875ebf3,"public int[] zeroMax(int[] nums) {

  int max = 0;

   

  for (int i = nums.length-1; i >= 0; i--) {

    if (nums[i] % 2 != 0)

      max = Math.max(max, nums[i]);

    if (nums[i] == 0)

          nums[i] = max;

  }

  return nums;

}

",0
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",0
d620f21e27a87e15d05a4f085e8ed51214622697,"public String alarmClock(int day, boolean vacation);
int alarmTime = 0;
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	alarmTime=7;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	alarmTime=10;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=off;
    	}
    }
return alarmTime;    
}
",0
CodeStateID,Code,0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",0
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",0
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",0
2b64a0277763a3e3aeb7d462893bb8e9e84266a5,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
        
        for (int i = 0; i < nums.length; i++)
        {
            sum += nums[i];
            if (nums[i] < min)
            {
                min = nums[i];
            }
            else if (nums[i] > max)
            {
                max = nums[i];                
            }
        }
    int average = (sum - min - max) / (nums.length - 2);
    
    return average;
}
",0
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}",0
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
",0
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",0
a24dfce9bb2b97aec0c2a859f3855e3285de4fff,"public int[] seriesUp(int n)
{
    
    int[] array = new int[n * (n + 1) / 2];
    
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i; j++)
        {
            array[(i - 1) * 2] = j;
        }
    }
    
    return array;
}
",0
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",0
b66c9a76c6567bcfc33f81fb4e1e0bfe1c43ea5c,"public String atFirst(String str)
{
    int length = str.length();
    if( length >= 2 )
    {
        return str;
    }
    else
    {
        if( length == 1 )
        {
            return str + ""@"";
        }
        else
        {
            return ""@@"";
        }
    }
}
",0
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",0
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",0
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
64048f2701869a2bcb7a460416d3ef15f722e6b6,"public int[] fizzArray(int n)
{
    int i;
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",0
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",0
fe6fec4e82f5018dd3ccca8dad46e47bc9166cd4,"public int[] withoutTen(int[] nums)
{
    for(int i = 0; i < nums.length; i++)
    {
        if(nums[i] == 10)
        {
            nums.remove(i);
        }
    }
    return nums;
}
",0
083ca5818f3f055e87fb758cb9de020f40601414,"public int[] withoutTen(int[] nums)
{
    int[] ten = new int[nums.length];
    int result = 0;
    for (int i = 0;i<nums.length;i++)
    {
        if (nums[i] == 10)
        {
            nums[i] = 0;
        }
        if (nums[i] != 10)
        {
            ten[result++] = nums[i];
        }
    }
    return nums;
}
",0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",0
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",0
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
",0
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",0
e773b35c4440baf407292a0e144e90ebd1fab1ce,"public int countCode(String str)
{ 
    int count = 0;
    for (int i = 0; i < str.length(); i++)
    {
  		int co =   str.indexOf(""co"");
        String newStr = str.substring(co, co+4);
        System.out.println(newStr);
        if (newStr.endsWith(""e""))
        {
            count++;
        }  
    }
    return count;
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",0
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
",0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",0
e0fc48a114ea8a2948e43da4eb1342009c283ca3,"public boolean love6(int a, int b)
{
    if (a == b)
    {
        return true
    }
    else if (Math.abs(a - b) == 6)
    {
        return true
    }
    else if (a + b == 6)
    {
        return true
    }
    else
    {
        return false
    }
}
",0
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",0
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",0
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",0
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
",0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",0
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",0
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",0
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",0
93cbb22b6a1b1a6803c91b97ad0c9e1017120cfa,"public boolean love6(int a, int b)
{
    if ((a == 6) || (b == 6))
    {
        return true;
    }
    else if ((Math.abs(a - b) == 6) || ((a + b) == 6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
7856bc992acb7f7b799ac4063e23bfc3598df9e0,"public int sum13(int[] nums)
{
    if(nums.length == 0) {
        return 0;
    }
    
    int sum = 0;
    boolean thirteen = false;
    boolean secondthirteen = false;
    
    for(int i = 0; i < nums.length; i++) {
        if(nums[i] == 13) {
            thirteen = true;
        }
        
        if(!thirteen && !secondthirteen) {
            sum += nums[i];
            thirteen = false;
            secondthirteen = false;
        }
        
        if(thirteen) {
            secondthirteen = true;
        }
    }
    
    return sum;
}
",0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
6bcfc4f8f71961def49e25a62a3705be7faac429,"public int[] fix45(int[] nums)
{
    int i = 0;
    int j = 0;
    while(j < nums.length && nums[j] != 5)
        j++;
    while(i < nums.length)
    {
    	if(nums[i] == 4)
        {
        	int temp = nums[i+1];
            nums[i+1] = nums[j];
            nums[j] = temp;
            
            while((j < nums.length && nums[j] != 5) || j ==i+1)
                j++;
        }
        i++;
        
    }
    return nums;
}",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;",0
35dde7794b6fddbfa24173cdc0b55b2393660120,"public int makeChocolate(int small, int big, int goal)
{
    int pack = goal % 5;
    if (small + (big*5) < goal)
    {
        return -1;
    }
    else if (pack <= small && goal > big*5 > 4)
    {
        return pack + 5;
    }
    else if (pack <= small)
    {
        return pack;
    }
    else 
    {
        return -1;
    }
}
",0
d9d0af4a86d3d806a73729146509fcd884212bbe,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 && (a + b) <= 19)
    {
        return 20;
    }
    else
    {
        return (a + b);
    }
}
",0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",0
3bd541a9a74cfbc86ccd7aff7e6e071a6371cb04,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",0
d620f21e27a87e15d05a4f085e8ed51214622697,"public String alarmClock(int day, boolean vacation);
int alarmTime = 0;
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	alarmTime=7;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	alarmTime=10;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=off;
    	}
    }
return alarmTime;    
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",0
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",0
d0240fa701f593a04989201ae92746b03b43df48,"public int loneSum(int a, int b, int c)
{
    int sum = a;
    if(b != a)
        sum += b;
    if(c!=a && c!=b)
        sum += c
    return sum;
}
",0
3bfe605f68e12c9d3fe2391ac78c50b7339ea224,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
	b = b.toLowerCase();    
    return(a.lastIndexOf(b)<=a.length()-b.length()||b.lastIndexOf(a)<=b.length()-a.length());
}
",0
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",0
9da10eb0a36c1f2a83adb2a9e709bf948f23038e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if (a + b == 6)
    {
        return true;
    }
    else if (Math.abs(a-b) == 6)
    {
        return true;
    }
}
",0
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",0
a5ea50948f128c48f79acd2dfa83b81c8790a095,"public int sum67(int[] nums)
{
	int sum = 0;
	boolean six = false;
	for(int i = 0; i < nums.length; i++)
	{
		if(six)
		{
			if(nums[i] == 7)
				six = false;
		}
		else if(nums[i] == 6)
			six = true;
		else
			sum += nums[i];
	}
	return sum;
}
",0
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",0
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",0
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",0
fdd5fb950da06ae0b32b17d65aa2c875b7e04663,"public int[] fizzArray(int n)
{
    int[] newArray = new int[n];
    for (int i = 0; i < n; i++)
    {
        newArray[i] = i;
    }
    return newArray;
}",0
b66c9a76c6567bcfc33f81fb4e1e0bfe1c43ea5c,"public String atFirst(String str)
{
    int length = str.length();
    if( length >= 2 )
    {
        return str;
    }
    else
    {
        if( length == 1 )
        {
            return str + ""@"";
        }
        else
        {
            return ""@@"";
        }
    }
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
b20d525ead268bb3eced9c95cb88481aa8aab61d,"public int makeChocolate(int small, int big, int goal)
{
	if (goal > 5*big)
    {
       goal = goal - 5 * big); 
    }
    else
    {
        goal = goal % 5;
    }
    if (goal <= small)
    {
        return goal;
    }
    return -1;
}
",0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",0
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
",0
e23e41d16ff5bbead927f66f2c57979556c89a97,"public boolean bobThere(String str)
{
    
    int end = str.length();
    int variated = str.charAt(end);
for (int i = 0; i < end - 2; i++)
 {
if ((str.charAt(i) == 'b') && (str.charAt(i+2) == 'b'))
    {
return true;
	} 

return false;
	
 }
    
}
",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
d822cf12d38ea28fe825ff4fc14fdc94e6719f05,"public boolean bobThere(String str)
{
    int i = 0;
    char[] CharArray = str.toCharArray();
    for(char cha : CharArray){
    	if (cha == 'b'){
        	if (str[i + 2] == 'b'){
            	return true;
            }
        }
     	i++;
    }
    return false;
}
",0
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
",0
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",0
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",0
030fccf2f47fa47b1f2627cf43a489ae647b9717,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",0
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
",0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",0
196436f6a31b3c5fa13fcebfee2d326193bfb3b0,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
          
    if(a == b && b == c)
        return 5;
                    
    if(a != b && a != c)
        return 1;
                            
    return 0;
}
",0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}",0
1838f26d8df6bc7e06140f8ad436878e06470d50,"public int noTeenSum(int a, int b, int c)
{
    int aFix = fixTeen(a);
    int bFix = fixTeen(b);
    int cFix = fixTeen(c);
    return aFix + bFix + cFix;
}

public int fixTeen(int n)
{
    if (n < 15 && n > 12)
    {
        return 0;
    }
    else if (n > 15 && n < 20)
    {
        return 0;
    }
    else if (n == 15 || n == 16)
    {
        return n;
    }
    else
    {
        return n;
    }
}",0
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",0
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",0
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
",0
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",0
fefcd35224584e91487e8671ed84f369684b05ca,"public int[] tenRun(int[] nums)
{  
    int number = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
         	for (int j = i + 1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i];
            }
        }
    }
    return nums;
}
",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",0
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",0
da854431fc95a4fda3f5795de985db2ccfd6cecc,"public boolean xyzThere(String str)
{
    if (str.length() >= 3) {
   	 	for (int i = 0; i < str.length() - 3; i++) {
        	if (str.substring(i, i + 3).equals(""xyz"")) {
            	if (i == 0) {
                    return true;
                }
                else if (str.charAt(i - 1) == '.') {
                    return false;
                }
                else {
                    return true;
                }
        	}
            else {
               return false; 
            }
    	}
    }
    else {
        return false;
    }
}
",0
604c63018ca4096c9d92c518ed231a4473a28b20,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
	return a + b + c;
}

public int fixTeen(int n)
{
    if ((n >= 13) && (n <= 19) && (n != 15) && (n != 16))
    {
         n = 0;   
    }
    else
    {
         n = n;   
    }
    return n;
}
",0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",0
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",0
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
29a1252f7c0ff20c1a543bc0204b4956f657cce2,"public boolean bobThere(String str)
{
    
    int end = str.length();
	for(int i = 0; i < end; i++)
	{
		if(str.charAt(i) == 'b'
           && str.charAt(i+2) == 'b')
			return true;
	}
    {
	return false;
    }
    
}
",0
c2b5233c69ac3f268687caee60f7f68deec9a002,"public String zipZap(String str)
{
    String original = str;
boolean found = false;
if(str.length() == 3) {
if(Character.toString(str.charAt(0)).equals(""z"") && (Character.toString(str.charAt(2)).equals(""p""))) {
return ""zp"";
}
} else if(str.length() < 3) {
return str;
}
 
for(int i = 0; i + 3 < str.length(); i++) {
if(Character.toString(str.charAt(i)).equals(""z"") && Character.toString(str.charAt(i + 2)).equals(""p"")) {
str = str.substring(0, i) + Character.toString(str.charAt(i)) + Character.toString(str.charAt(i + 2)) + str.substring(i + 3, str.length());
found = true;
} else {
}
}
 
if(Character.toString(str.charAt(str.length() - 3)).equals(""z"") && Character.toString(str.charAt(str.length() - 1)).equals(""p"")) {
return str = str.substring(0, str.length() - 3) + Character.toString(str.charAt(str.length() - 3)) + Character.toString(str.charAt(str.length() - 1));
}
 
if(found) {
return str;
} else {
return original;
}
}
",0
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",0
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
",0
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
",0
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",0
083ca5818f3f055e87fb758cb9de020f40601414,"public int[] withoutTen(int[] nums)
{
    int[] ten = new int[nums.length];
    int result = 0;
    for (int i = 0;i<nums.length;i++)
    {
        if (nums[i] == 10)
        {
            nums[i] = 0;
        }
        if (nums[i] != 10)
        {
            ten[result++] = nums[i];
        }
    }
    return nums;
}
",0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",0
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",0
29a1252f7c0ff20c1a543bc0204b4956f657cce2,"public boolean bobThere(String str)
{
    
    int end = str.length();
	for(int i = 0; i < end; i++)
	{
		if(str.charAt(i) == 'b'
           && str.charAt(i+2) == 'b')
			return true;
	}
    {
	return false;
    }
    
}
",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",0
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",0
cd36011e020ffc41188de2b7cfe5e55af586b032,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
    {
        return 10;
    }
    else if ((a == b) && (b == c))
    {
        return 5;
    }
    else if ((b != a) && (c != a))
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",0
77eef59d415f15b3ad7bf984b2a232f7486ec6c6,"public int countEvens(int[] nums)
{
    int count = 0;
    
	for(int i = 0; i < nums.length; i++)
	{
		if (nums[i] % 2 == 0)
        {
			count++;
        }
	}
	return count;
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",0
88bf1f7daad113965a8a915b5a25f2a7cc6de986,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
    {
        return 10;
    }
    else
    {
        if ((a == b) && (a == c))
        {
            return 5;
        }
        else
        {
         	if((b != a) && (c != a))   
            {
                return 1;
            }
            else
            {
                return 0;
            }
        }
    }
}
",0
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",0
e2840899f1aac60ee4fa7b06722a656e8bb2fb17,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 )
    {
        return true;
    }
    if ( Math.abs(a + b) == 6 || Math.abs(a - b) == 6) {
        return true;
    }
    return false;
}
",0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
",0
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
",0
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
",0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
",0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
9e2323cd896bf8c878fad40b42eac0e930afede4,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    String str = String.valueOf(num);
    int stringLength = str.length();
    int lastDigit = Integer.parseString(stringLength);
    if (lastDigit >= 0 && lastDigit < 5)
    {
        return num - lastDigit;
    }
    else if (lastDigit >= 5)
    {
        return num + (10 - lastDigit);
    }
}",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",0
c2b5233c69ac3f268687caee60f7f68deec9a002,"public String zipZap(String str)
{
    String original = str;
boolean found = false;
if(str.length() == 3) {
if(Character.toString(str.charAt(0)).equals(""z"") && (Character.toString(str.charAt(2)).equals(""p""))) {
return ""zp"";
}
} else if(str.length() < 3) {
return str;
}
 
for(int i = 0; i + 3 < str.length(); i++) {
if(Character.toString(str.charAt(i)).equals(""z"") && Character.toString(str.charAt(i + 2)).equals(""p"")) {
str = str.substring(0, i) + Character.toString(str.charAt(i)) + Character.toString(str.charAt(i + 2)) + str.substring(i + 3, str.length());
found = true;
} else {
}
}
 
if(Character.toString(str.charAt(str.length() - 3)).equals(""z"") && Character.toString(str.charAt(str.length() - 1)).equals(""p"")) {
return str = str.substring(0, str.length() - 3) + Character.toString(str.charAt(str.length() - 3)) + Character.toString(str.charAt(str.length() - 1));
}
 
if(found) {
return str;
} else {
return original;
}
}
",0
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",0
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
",0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",0
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
",0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",0
27ced9f412138c0fe596bab23d6119a3c93f5686,"public int[] shiftLeft(int[] nums)
{
    int length = nums.length;
    int special = nums[0];
    if (length == 0)
    {
        return nums;
    }
    for (int i = 0; i < length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[length - 1] = special;
    return nums;
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",0
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
",0
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;",0
030fccf2f47fa47b1f2627cf43a489ae647b9717,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
524b4fdc13523fe6d2612f39b454df4bd13a4571,"public int countClumps(int[] nums)
{
    int i = 0;
    int count = 0;
    if(nums[i] == nums[i + 1])
    {
        count = count + 1;
        i++;
    }
    return count;
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",0
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
",0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",0
a5ea50948f128c48f79acd2dfa83b81c8790a095,"public int sum67(int[] nums)
{
	int sum = 0;
	boolean six = false;
	for(int i = 0; i < nums.length; i++)
	{
		if(six)
		{
			if(nums[i] == 7)
				six = false;
		}
		else if(nums[i] == 6)
			six = true;
		else
			sum += nums[i];
	}
	return sum;
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
",0
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",0
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",0
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",0
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",0
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",0
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
",0
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
",0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",0
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",0
caec91f2ba0d25b3a96d93bbc7e6ff92f4dfdd72,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off""
        }
    }
    else if (day > 0 && day < 6)
    {
        return ""7:00"";
    }
    else
    {
        return ""10:00"";
    }
}
",0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
50e38ea828c8b0ad18791c7c955b37bad6c9d4bc,"public boolean xyzThere(String str)
{
    int a = str.indexOf(""xyz"");
    int b = str.lastIndexOf(""xyz"");
    return ( a != -1 || b != -1);
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
cbe448bc365e81d92fe217dab9559769b9c419df,"public static String without2(String str) 
{
        if(s.length() < 2) return s;
      
        String sbegining = s.substring(0, 2);
        String send = s.substring(s.length()-2);
        if(sbegining.compareTo(send)!=0)
            return s;
        else return s.substring(2);
    }
    public static void main(String[] args) {
      
        String s1 = ""HelloHe"";
        String s2 = ""Hi"";
        String s3 = ""Hello"";
      
        System.out.println(s1 + "": "" + without2(s1));
        System.out.println(s2 + "": "" + without2(s2));
        System.out.println(s3 + "": "" + without2(s3));
    }

}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
2f0a2b01b8d36b9b41d35269fb9c59a0cd367b3b,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int lastDigit = num % 10;
    if (lastDigit >= 5)
    {
        int roundUp = num + (10 - lastDigit);
        return roundUp;
    }
    else
    {
        int roundDown = num - lastDigit;
        return roundDown;
    }
}",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",0
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",0
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",0
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
",0
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",0
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",0
21fde9dea74aff5f7f17ef7764fd4c3c98b26336,"public static String without2(String str) 
{
        if(s.length() < 2) return s;
      
        String sbegining = s.substring(0, 2);
        String send = s.substring(s.length()-2);
        if(sbegining.compareTo(send)!=0)
            return s;
        else return s.substring(2);
    }
    public static void main(String[] args) {
      
        String s1 = ""HelloHe"";
        String s2 = ""Hi"";
        String s3 = ""Hello"";
      
        System.out.println(s1 + "": "" + without2(s1));
        System.out.println(s2 + "": "" + without2(s2));
        System.out.println(s3 + "": "" + without2(s3));
    }

}
}",0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
ff5188ca09d212d12901f3d2fa492090bb58c2e9,"public int[] fizzArray(int n)
{
    int[] returnArray = new int[n];
    for (int i = 0; i < n; i++)
    {
        returnArray[i] = i;
    }
    return retrnArray;
}
",0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",0
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
e2840899f1aac60ee4fa7b06722a656e8bb2fb17,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 )
    {
        return true;
    }
    if ( Math.abs(a + b) == 6 || Math.abs(a - b) == 6) {
        return true;
    }
    return false;
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",0
d31a544311795878c1f0a6ee6dbb403e1c4c36e2,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep) {
    if(isAsleep)
        return false;
          
    if(isMorning && !isMom)
        return false;
                    
    return true;
}",0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",0
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",0
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",0
cf1aaa53350b07642069ec537a4b37e93bf3531b,"public int redTicket(int a, int b, int c)
{
    if (a==2 && b==2 && c==2)
    {
        return 10;
    }
    else if (a==b && b==c)
    {
        return 5;
    }
    else if (a!=b && b!=c && c!=a)
    {
        return 1;
    }
    else 
    {
        return 0;
    }
}
",0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",0
d866157db78f6eb45be705042a8b581075d47972,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    	if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
            return a.sb;
    	}
    
    
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
09cdcea7f2fde42d5f7e0a2fa6832f8c3bb05b53,"public int noTeenSum(int a, int b, int c)
{
    a = fixTeen(a);
    b = fixTeen(b);
    c = fixTeen(c);
    
    return a + b + c;
}

public int fixTeen(int n)
{
if (n >= 13 && n<= 19)
{
    if (n != 15 || n != 16)
    {
        return n;
    }
}

        return 0; 
}
",0
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",0
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
",0
bab5cb0c2c8a924af65c6c139ed8497d525bd0a0,"public int[] fix45(int[] nums)
{
	
 	int k =0;
 	 for(int i=0; i< nums.length; i++)
     for(int j=0; j<nums.length; j++)

     if(nums[i]==4 && nums[j]==5)
     {
      k  =nums[j+1];
      nums[j+1] = nums[i];
      nums[i] = k;
     }
     return nums;
}
",0
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",0
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",0
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",0
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",0
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",0
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",0
054947245110fe21e7c54bf774cacf65261ff180,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) {
        if (i + 2 <= str.length()) {
            if (str.substring(i, i+2)) {
                return (str.charAt(i).equals(""b"") && str.charAt(i+2).equals(""b""));
            }
        }
    }
                return false;
}
",0
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",0
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
",0
51fae40e9861d7b67fbaedf2d011c3a432f13b51,"public boolean xyzThere(String str)
{
    int i = -1;
    while ((i = str.indexOf(""xyz"", i + 1)) != -1)
    {
        if (i == 0 || (str.charAt(i - 1) != "".""))
        {
            return true;
        }
    }
    return false;
}
",0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",0
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",0
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",0
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
41fbb0ec3f09d19d78c9bae81f5a75e31cf74218,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",0
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",0
351839745bc2cdccbb945ecd1391b63bfee8a94a,"public boolean twoTwo(int[] nums)
{
    for (int i = 1; i < nums.length -1; i++){
        if (i ==2 && (i-1!=2 || i+1!= 2)){
                return false;
        }
    }
    return true;
}
",0
6f7f61c8665e5fbb33bb6cdb300c38706ffa9630,"public int centeredAverage(int[] nums)
{
    int average = 0;
    int sum = 0;
    int low = nums[0];
    int high = nums[0];
    boolean found = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > high)
        {
            high = nums[i];
        }
        
        if (nums[i] < low)
        {
            low = nums[i];
        }
    }
    
    for (int a : nums)
    {
        sum = sum + a;
    }
    
    sum = sum - low - high;
    
    average = sum / (nums.length - 2)
    
    return average;
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
c6a7e900d8268e52e52d9619cadc6f8e9dfd493b,"public int[] withoutTen(int[] nums)
{
    int newArray[] = new int[nums.length];
    for(int val : newArray)
        val = 0;
    
    int newIndex = 0;
    for (int i = 0; i < nums.length; i++){
    	if(nums[i] != 10)
            newIndex[newIndex++] = nums[i]; 
    }
    
    return newArray;
}
",0
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",0
64048f2701869a2bcb7a460416d3ef15f722e6b6,"public int[] fizzArray(int n)
{
    int i;
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",0
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
93cbb22b6a1b1a6803c91b97ad0c9e1017120cfa,"public boolean love6(int a, int b)
{
    if ((a == 6) || (b == 6))
    {
        return true;
    }
    else if ((Math.abs(a - b) == 6) || ((a + b) == 6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
",0
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",0
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",0
5bf14ec8d2b72a5f31c1b7537e644e100f3cb419,"public String alarmClock(int day, boolean vacation)
{
    if(!(vaction))
    {
    	if(day == 6 || day == 0)
        {
            return off;
        }
        else
        {
        	return 10:00;
        }
    }
    else
    	if(day == 6 || day == 0)
        {
            return 10:00;
        }
        else
        {
        	return 7:00;
        }
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",0
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",0
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
",0
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",0
436fd09b6891e567fe0cd98c8b071729b2733e8c,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 && day != 6)
            return ""10:00"";
        else
            return ""off"";
    else
        if (day != 0 && day != 6)
            return ""7:00"";
        else
            return ""10:00"";
    }
}",0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",0
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",0
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
e0fc48a114ea8a2948e43da4eb1342009c283ca3,"public boolean love6(int a, int b)
{
    if (a == b)
    {
        return true
    }
    else if (Math.abs(a - b) == 6)
    {
        return true
    }
    else if (a + b == 6)
    {
        return true
    }
    else
    {
        return false
    }
}
",0
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",0
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
",0
2b64a0277763a3e3aeb7d462893bb8e9e84266a5,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
        
        for (int i = 0; i < nums.length; i++)
        {
            sum += nums[i];
            if (nums[i] < min)
            {
                min = nums[i];
            }
            else if (nums[i] > max)
            {
                max = nums[i];                
            }
        }
    int average = (sum - min - max) / (nums.length - 2);
    
    return average;
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",0
2adbb39337217f673d1ee6e9632faef8d959ee31,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2)
    {
		return 0;
    }
	if(you >= 8 || date >= 8)
    {
		return 2;
    }
    else
    {
        return 1;
    }
}
",0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",0
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",0
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
",0
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
",0
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",0
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",0
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
",0
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",0
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",0
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
",0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",0
aa7de1c61f3e68959ff7cdfa0fcae118bf83e8ac,"public boolean xyzThere(String str)
{
    int xyzLocation = str.getIndex();
    if (xyzLocation == -1)
    {
    	char ch = str.charAt(xyxLocation-1);
    	if (ch == '.')
        {
        	return false;
        }
        else
        {
            return true;
        }
    else
        return false;
}
",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",0
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",0
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",0
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",0
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",0
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",0
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",0
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
",0
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",0
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",0
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",0
b66c9a76c6567bcfc33f81fb4e1e0bfe1c43ea5c,"public String atFirst(String str)
{
    int length = str.length();
    if( length >= 2 )
    {
        return str;
    }
    else
    {
        if( length == 1 )
        {
            return str + ""@"";
        }
        else
        {
            return ""@@"";
        }
    }
}
",0
a5ea50948f128c48f79acd2dfa83b81c8790a095,"public int sum67(int[] nums)
{
	int sum = 0;
	boolean six = false;
	for(int i = 0; i < nums.length; i++)
	{
		if(six)
		{
			if(nums[i] == 7)
				six = false;
		}
		else if(nums[i] == 6)
			six = true;
		else
			sum += nums[i];
	}
	return sum;
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",0
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",0
9da10eb0a36c1f2a83adb2a9e709bf948f23038e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if (a + b == 6)
    {
        return true;
    }
    else if (Math.abs(a-b) == 6)
    {
        return true;
    }
}
",0
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
",0
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
",0
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
",0
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

",0
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
caec91f2ba0d25b3a96d93bbc7e6ff92f4dfdd72,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off""
        }
    }
    else if (day > 0 && day < 6)
    {
        return ""7:00"";
    }
    else
    {
        return ""10:00"";
    }
}
",0
51fae40e9861d7b67fbaedf2d011c3a432f13b51,"public boolean xyzThere(String str)
{
    int i = -1;
    while ((i = str.indexOf(""xyz"", i + 1)) != -1)
    {
        if (i == 0 || (str.charAt(i - 1) != "".""))
        {
            return true;
        }
    }
    return false;
}
",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",0
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",0
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",0
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",0
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
77eef59d415f15b3ad7bf984b2a232f7486ec6c6,"public int countEvens(int[] nums)
{
    int count = 0;
    
	for(int i = 0; i < nums.length; i++)
	{
		if (nums[i] % 2 == 0)
        {
			count++;
        }
	}
	return count;
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",0
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",0
d620f21e27a87e15d05a4f085e8ed51214622697,"public String alarmClock(int day, boolean vacation);
int alarmTime = 0;
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	alarmTime=7;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	alarmTime=10;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=off;
    	}
    }
return alarmTime;    
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",0
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",0
8faf14f1204c6304c1a1562a50964e420ce74fe5,"public String without2(String str) 
{
    if (str.length() < 2)
        return str;
    else if (str.charAt(0) == str.charAt(str.length() -2)) && str.charAt(1) == str.charAt(str.length() -1))
        str = str.substring(2, str.length());
    	return str;
    else
         return str.
}
",0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",0
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
",0
6bcfc4f8f71961def49e25a62a3705be7faac429,"public int[] fix45(int[] nums)
{
    int i = 0;
    int j = 0;
    while(j < nums.length && nums[j] != 5)
        j++;
    while(i < nums.length)
    {
    	if(nums[i] == 4)
        {
        	int temp = nums[i+1];
            nums[i+1] = nums[j];
            nums[j] = temp;
            
            while((j < nums.length && nums[j] != 5) || j ==i+1)
                j++;
        }
        i++;
        
    }
    return nums;
}",0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",0
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}",0
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
",0
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",0
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",0
cf1aaa53350b07642069ec537a4b37e93bf3531b,"public int redTicket(int a, int b, int c)
{
    if (a==2 && b==2 && c==2)
    {
        return 10;
    }
    else if (a==b && b==c)
    {
        return 5;
    }
    else if (a!=b && b!=c && c!=a)
    {
        return 1;
    }
    else 
    {
        return 0;
    }
}
",0
d822cf12d38ea28fe825ff4fc14fdc94e6719f05,"public boolean bobThere(String str)
{
    int i = 0;
    char[] CharArray = str.toCharArray();
    for(char cha : CharArray){
    	if (cha == 'b'){
        	if (str[i + 2] == 'b'){
            	return true;
            }
        }
     	i++;
    }
    return false;
}
",0
5e5840b4728a9e257720a8c46d3285726a2ba053,"public boolean twoTwo(int[] nums)
{
    for(int i = 0; i < nums.length-2; i++)
    {
        if(nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
        if(nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
    }
    return true;
        
}
",0
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",0
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",0
2f0a2b01b8d36b9b41d35269fb9c59a0cd367b3b,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int lastDigit = num % 10;
    if (lastDigit >= 5)
    {
        int roundUp = num + (10 - lastDigit);
        return roundUp;
    }
    else
    {
        int roundDown = num - lastDigit;
        return roundDown;
    }
}",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",0
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",0
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
f69e8dd43d667d277a71e8afa47bc128fe9fec54,"public int[] shiftLeft(int[] nums)
{
    if (nums.equals({})){
        return null;
    }
    int[] left = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++){
        left[i] = nums[i+1];
    }
    left[nums.length - 1] = nums[0];
    return left;
}
",0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",0
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
",0
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
",0
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
d5ead5b3e99b68ea106d3bde1308448d1b98dfae,"public boolean xyBalance(String str)
{
    int numX = 0;
    int numY = 0;
    
    for (int i = 0; i < str.length(); i++)
    {
        if (charAt(i) == 'x')
        {
            numX++;
        }
        
        if (charAt(i) == 'y')
        {
            numY++;
        }
    }
    
    if (numX == numY)
    {
        return true;
    }
    
    else 
    {
        return false;
    }
}",0
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",0
4cc916649df329cb2108d1f68b228a173f91b30d,"public int makeChocolate(int small, int big, int goal)
{
    if (small + (5*big) < goal)
    {
        return -1;
    }
    else
    {
        if ((goal / 5) <= big)
        {
            int r = goal % 5;
            if (r <= small)
            {
                return small;
            }
            else
            {
                return -1;
            }
        }
        else
        {
            if ((goal - (5 * big)) <= small)
            {
                return goal - (5 * big);
            }
            else
            {
                return -1;
            }
        }
    }
    
    
}
",0
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",0
10af8ae87e8d5fab568a4bc61c1cbcdf1cf7e4e3,"public boolean xyBalance(String str)
{
    boolean y = false;
    for(int i = 0; i < str.length() - 1; i++)
        {
       		if(str.charAt(i) == 'y')
            {
                y = true;
            }
        	if(str.charAt(i) == 'x' && !y)
            {
                return false;
            }
   		}
    return true;
}
",0
b20d525ead268bb3eced9c95cb88481aa8aab61d,"public int makeChocolate(int small, int big, int goal)
{
	if (goal > 5*big)
    {
       goal = goal - 5 * big); 
    }
    else
    {
        goal = goal % 5;
    }
    if (goal <= small)
    {
        return goal;
    }
    return -1;
}
",0
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",0
cd23c0ed240a318d70e3ddbf504fb44f78c81ffc,"public String atFirst(String str)
{ 
    if (str.length() < 2 && str.length() != 0)
    {
        return str + ""@"";
    }
    else if (str.length() == 0)
    {
        return ""@@""
    }
    else
    {
        return str.substring(0,2);
    }
    
}
",0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",0
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",0
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",0
9def91e03cb4c9e4fb5f0472d02e90c8fb23cc26,"public int makeChocolate(int small, int big, int goal)
{
    int amount = (5*big) + small; // Amount possible
    if (amount < goal)
    {
        return -1;
    }
    else if (amount == goal)
    {
        return small;
    }
    else
    {
        int diff = amount - goal;
        int afterBig = diff - (5*big);
        if (afterBig < 0)
        {
            return small;
        }
        else
        {
            return small - afterBig;
        }
    }
}
",0
a1c591b6f4179d5767faf1b93f8c25a4cec3a6ab,"public boolean love6(int a, int b)
{
	if(a == 6 || b == 6 || (a + b == 6) || (Math.abs(a - b) == 6) )
    {
        return true;
    }	
	return false;
}
",0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",0
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",0
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",0
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",0
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
",0
a24dfce9bb2b97aec0c2a859f3855e3285de4fff,"public int[] seriesUp(int n)
{
    
    int[] array = new int[n * (n + 1) / 2];
    
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i; j++)
        {
            array[(i - 1) * 2] = j;
        }
    }
    
    return array;
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
",0
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",0
e65697f8d7ac6364f121022204ca1d1d855b2596,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    if (a + b = 6)
    {
        return true;
    }
    if (Math.abs(a - b) == 6 || Math.abs(b - a) == 6)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",0
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",0
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
",0
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
",0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",0
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",0
55d82777253a00d8ba398425451c87f2ce6bf43d,"public boolean xyBalance(String str)
{
	    
    for (int i = 0; i < str.length(); i++)
    {
        if (str.charAt(i) == 'x')
        {
            for (int j = 0; j < str.length(); j++)
            {
                if((i+j) < str.length())
                {
                	if((str.charAt(i+j) == 'y'))
	                {
						for (int k = 0; k < str.length(); k++)
                        {
                        	if((k+i+j) < str.length())
                            {
                            	if (str.charAt(k+i+j) == 'x')
                                {
                                	return false;
                                }
                                else if (str.charAt(str.length()-1) == 'y')
                                {
                                	return true;
                                }
                            }                            
                        }
                        return true;
        	        }

                }
            }
        }        
    }
    for (int z = 0; z < str.length(); z++)
    {
    	if (str.charAt(z) != 'x')
        {
        	for (int q = 0; q < str.length(); q++)
            {
            	if ((q+z) < str.length() && str.charAt(q+z) == 'x')
                {
                	return false;
                }
            }
        }
    }
    return false;
}
",0
524b4fdc13523fe6d2612f39b454df4bd13a4571,"public int countClumps(int[] nums)
{
    int i = 0;
    int count = 0;
    if(nums[i] == nums[i + 1])
    {
        count = count + 1;
        i++;
    }
    return count;
}
",0
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",0
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",0
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
2f0a2b01b8d36b9b41d35269fb9c59a0cd367b3b,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int lastDigit = num % 10;
    if (lastDigit >= 5)
    {
        int roundUp = num + (10 - lastDigit);
        return roundUp;
    }
    else
    {
        int roundDown = num - lastDigit;
        return roundDown;
    }
}",0
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",0
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",0
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
",0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",0
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
",0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",0
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
",0
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",0
6bcfc4f8f71961def49e25a62a3705be7faac429,"public int[] fix45(int[] nums)
{
    int i = 0;
    int j = 0;
    while(j < nums.length && nums[j] != 5)
        j++;
    while(i < nums.length)
    {
    	if(nums[i] == 4)
        {
        	int temp = nums[i+1];
            nums[i+1] = nums[j];
            nums[j] = temp;
            
            while((j < nums.length && nums[j] != 5) || j ==i+1)
                j++;
        }
        i++;
        
    }
    return nums;
}",0
8faf14f1204c6304c1a1562a50964e420ce74fe5,"public String without2(String str) 
{
    if (str.length() < 2)
        return str;
    else if (str.charAt(0) == str.charAt(str.length() -2)) && str.charAt(1) == str.charAt(str.length() -1))
        str = str.substring(2, str.length());
    	return str;
    else
         return str.
}
",0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",0
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",0
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}",0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
",0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",0
9da10eb0a36c1f2a83adb2a9e709bf948f23038e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if (a + b == 6)
    {
        return true;
    }
    else if (Math.abs(a-b) == 6)
    {
        return true;
    }
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;",0
51fae40e9861d7b67fbaedf2d011c3a432f13b51,"public boolean xyzThere(String str)
{
    int i = -1;
    while ((i = str.indexOf(""xyz"", i + 1)) != -1)
    {
        if (i == 0 || (str.charAt(i - 1) != "".""))
        {
            return true;
        }
    }
    return false;
}
",0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",0
a05e5d98a96c772e1afad34a0ae82871a6e741d0,"public String zipZap(String str)
{
    int num = 0;
    for (int i = 2; i < str.length(); i++)
    {
        if (str.charAt(num) == 'z' && str.charAt(i) == 'p')
        {
            str.replace(str.substring(num, i), ""zp"")
        }
        num += 1;
    }
    return str;
}
",0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",0
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",0
4951e3e93960ed4399945d8a349ac025dd9fc00d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum<= 19)
    {
     	sum = 20;   
    }
    return sum;
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",0
cf1aaa53350b07642069ec537a4b37e93bf3531b,"public int redTicket(int a, int b, int c)
{
    if (a==2 && b==2 && c==2)
    {
        return 10;
    }
    else if (a==b && b==c)
    {
        return 5;
    }
    else if (a!=b && b!=c && c!=a)
    {
        return 1;
    }
    else 
    {
        return 0;
    }
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
8ac25102baee6fadeabcfd2e101ad3f1325bb218,"public String alarmClock(int day, boolean vacation)
{
    if vacation == true
    {
        if day == 0 || 6
        {
            return ""off"";
        }
        else 
            return ""10:00"";
    }
    else 
        if day == 0 || 6
        {
            return ""10:00"";
        }
    	else 
            return ""7:00"";
            
    
}
",0
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",0
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
",0
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",0
030fccf2f47fa47b1f2627cf43a489ae647b9717,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",0
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",0
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",0
d0240fa701f593a04989201ae92746b03b43df48,"public int loneSum(int a, int b, int c)
{
    int sum = a;
    if(b != a)
        sum += b;
    if(c!=a && c!=b)
        sum += c
    return sum;
}
",0
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",0
d822cf12d38ea28fe825ff4fc14fdc94e6719f05,"public boolean bobThere(String str)
{
    int i = 0;
    char[] CharArray = str.toCharArray();
    for(char cha : CharArray){
    	if (cha == 'b'){
        	if (str[i + 2] == 'b'){
            	return true;
            }
        }
     	i++;
    }
    return false;
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",0
5e5840b4728a9e257720a8c46d3285726a2ba053,"public boolean twoTwo(int[] nums)
{
    for(int i = 0; i < nums.length-2; i++)
    {
        if(nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
        if(nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
    }
    return true;
        
}
",0
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
248a42b6be0b5c276bc90fe48d343de22fedf6b6,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length-1; i++)
	{
		if(nums[i] != val && nums[i+1] != val)
			return false;
	}  
	return true;
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",0
e444710aa658e2dde4799f8965284cd20bc98f6a,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
        int even = 0;
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;
}
",0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",0
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",0
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",0
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",0
f5a21d0c1e254db37e3447625ce5826afe21b435,"public boolean bobThere(String str)
{
    for(int i=0; i<str.length()-3; i++)
    {
        if(str.charAt(i)=='b')
        {
            if(str.charAt(i+2) == 'b')
                return true;
        }
    }
    return false;
}
",0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",0
9da10eb0a36c1f2a83adb2a9e709bf948f23038e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if (a + b == 6)
    {
        return true;
    }
    else if (Math.abs(a-b) == 6)
    {
        return true;
    }
}
",0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",0
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",0
d866157db78f6eb45be705042a8b581075d47972,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    	if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
            return a.sb;
    	}
    
    
}
",0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",0
d620f21e27a87e15d05a4f085e8ed51214622697,"public String alarmClock(int day, boolean vacation);
int alarmTime = 0;
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	alarmTime=7;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	alarmTime=10;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=off;
    	}
    }
return alarmTime;    
}
",0
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",0
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",0
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
c77723bd709b08d6e00161ce3c6ef305a61d69c9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length()-2; i++) {
    if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b') {
      return true;
    }
  }
  return false;
}
",0
b66c9a76c6567bcfc33f81fb4e1e0bfe1c43ea5c,"public String atFirst(String str)
{
    int length = str.length();
    if( length >= 2 )
    {
        return str;
    }
    else
    {
        if( length == 1 )
        {
            return str + ""@"";
        }
        else
        {
            return ""@@"";
        }
    }
}
",0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",0
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",0
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",0
9dfb9d8285fed77ebe058ec80bfb80f2f1a5db2a,"public boolean sameEnds(int[] nums, int len) {
    for (int i = 0, j = nums.length - len; i < len; i++, j++)
        if (nums[i] != nums[j]) return false;
    return true;
}
",0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
256c241f10b0cfe8250551a3788af0472ee163f3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	if(isBirthday)
    {
		speed -= 5;
    }
	if(speed <= 60)
    {
		return 0;
    }
	else if(speed <= 80)
    {
		return 1;
    }
	else
    {
		return 2;
    }
}",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",0
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
cf0b2d83b0558f31d29970ac5594bb6590bceebc,"public String without2(String str) 
{
    if (str.substring((str.length() - 2)) != str.substring(2))
    {
        return str;
    }
    else
    {
        return str.substring(2);
    }
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
",0
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",0
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}",0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",0
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
a730369051672c668c3efc03eb8dcc6956e9beb3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	// Java arrays are initialized to 0 so no need to set the last elements to 0
	return arr;
}
",0
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",0
caec91f2ba0d25b3a96d93bbc7e6ff92f4dfdd72,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off""
        }
    }
    else if (day > 0 && day < 6)
    {
        return ""7:00"";
    }
    else
    {
        return ""10:00"";
    }
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
6ff73ddbdaa65a84fa764b673fabc78eae9c3395,"public int luckySum(int a, int b, int c)
{
    if( a == 13 )
    {
        return 0;
    }
    else
    {
        if( b == 13 )
        {
            return a;
        }
        else
        {
            if( c == 13 )
            {
                return a + b;
            }
            else
            {
                return a + b + c;
            }
        }
    }
}
",0
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",0
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",0
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",0
c6e135a8d819808a2e86f6eb184fd9701ef4cea6,"public int[] withoutTen(int[] nums)
{
    //creates new array
    int[] newArray = new int[nums.length];
	int j = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			newArray[j] = nums[i];
			j++;
		}
	}
	// returns the new array
	return newArray;
}
",0
c39d1ee94f6a9a0a81bfecf4b8fd083b1fca26c2,"public int[] fizzArray(int n)
{
    int array = new int[n];
    for(int i=0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",0
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",0
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",0
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
12e8798aca22ff2530c5579124b71237a1247c05,"public int sum3(int[] nums)
{
    int sum = 0;
    
	for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    return sum;
}
",0
41fbb0ec3f09d19d78c9bae81f5a75e31cf74218,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",0
29a1252f7c0ff20c1a543bc0204b4956f657cce2,"public boolean bobThere(String str)
{
    
    int end = str.length();
	for(int i = 0; i < end; i++)
	{
		if(str.charAt(i) == 'b'
           && str.charAt(i+2) == 'b')
			return true;
	}
    {
	return false;
    }
    
}
",0
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",0
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
",0
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",0
b66c9a76c6567bcfc33f81fb4e1e0bfe1c43ea5c,"public String atFirst(String str)
{
    int length = str.length();
    if( length >= 2 )
    {
        return str;
    }
    else
    {
        if( length == 1 )
        {
            return str + ""@"";
        }
        else
        {
            return ""@@"";
        }
    }
}
",0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",0
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",0
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
e0fc48a114ea8a2948e43da4eb1342009c283ca3,"public boolean love6(int a, int b)
{
    if (a == b)
    {
        return true
    }
    else if (Math.abs(a - b) == 6)
    {
        return true
    }
    else if (a + b == 6)
    {
        return true
    }
    else
    {
        return false
    }
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
67e32e60ccf94c9e237b1ee60eec88d54337ee46,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (( n > 12 && n < 15) ||( n > 16 && n < 20 )) {
     return 0;
   }
   return n;
}
",0
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",0
b20d525ead268bb3eced9c95cb88481aa8aab61d,"public int makeChocolate(int small, int big, int goal)
{
	if (goal > 5*big)
    {
       goal = goal - 5 * big); 
    }
    else
    {
        goal = goal % 5;
    }
    if (goal <= small)
    {
        return goal;
    }
    return -1;
}
",0
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",0
9da10eb0a36c1f2a83adb2a9e709bf948f23038e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if (a + b == 6)
    {
        return true;
    }
    else if (Math.abs(a-b) == 6)
    {
        return true;
    }
}
",0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",0
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",0
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",0
29a1252f7c0ff20c1a543bc0204b4956f657cce2,"public boolean bobThere(String str)
{
    
    int end = str.length();
	for(int i = 0; i < end; i++)
	{
		if(str.charAt(i) == 'b'
           && str.charAt(i+2) == 'b')
			return true;
	}
    {
	return false;
    }
    
}
",0
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",0
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",0
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",0
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
",0
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",0
d866157db78f6eb45be705042a8b581075d47972,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    	if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
            return a.sb;
    	}
    
    
}
",0
2ab613317018e535c7c370e1bf3fb0d86c7a9f9b,"public int[] tenRun(int[] nums)
{
    int[] result = new int[nums.length];
    int input;
    int value = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (input % 10 == 0 && input > value)
        {
            value = input;
        }
        
        if (value == -1)
        {
            result[i] = input;
        }
        else
        {
            result[i] = value;
        }
    }
    
    return result;
}
",0
4951e3e93960ed4399945d8a349ac025dd9fc00d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum<= 19)
    {
     	sum = 20;   
    }
    return sum;
}
",0
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
",0
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",0
64048f2701869a2bcb7a460416d3ef15f722e6b6,"public int[] fizzArray(int n)
{
    int i;
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
cd36011e020ffc41188de2b7cfe5e55af586b032,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
    {
        return 10;
    }
    else if ((a == b) && (b == c))
    {
        return 5;
    }
    else if ((b != a) && (c != a))
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
f055965f9ae32739c7b92d6b5ecbca90565fcdcd,"public String without2(String str) 
{
    int len = str.length();
    if (str(0) == str(len - 2) && str(1) == str(len - 1))
    {
        String sss = null;
        sss.append(str,2,len-1);
            return sss;
    }
    else
    {
        return str;
    }
}
",0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",0
93cbb22b6a1b1a6803c91b97ad0c9e1017120cfa,"public boolean love6(int a, int b)
{
    if ((a == 6) || (b == 6))
    {
        return true;
    }
    else if ((Math.abs(a - b) == 6) || ((a + b) == 6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
",0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",0
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",0
030fccf2f47fa47b1f2627cf43a489ae647b9717,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",0
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",0
4cc916649df329cb2108d1f68b228a173f91b30d,"public int makeChocolate(int small, int big, int goal)
{
    if (small + (5*big) < goal)
    {
        return -1;
    }
    else
    {
        if ((goal / 5) <= big)
        {
            int r = goal % 5;
            if (r <= small)
            {
                return small;
            }
            else
            {
                return -1;
            }
        }
        else
        {
            if ((goal - (5 * big)) <= small)
            {
                return goal - (5 * big);
            }
            else
            {
                return -1;
            }
        }
    }
    
    
}
",0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",0
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
76d327977c3b6df3e9ab9612b5ea8123306e3035,"public int sum13(int[] nums)
{
    int total = 0;
    if (nums != null) {
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 13) {
                if (nums[i] != 0 && nums[i-1] != 13) {
                	total = total + nums[i];
                }
            }
        }
        return total;
    }
    return 0;
}
",0
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
",0
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",0
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",0
030fccf2f47fa47b1f2627cf43a489ae647b9717,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
c6a7e900d8268e52e52d9619cadc6f8e9dfd493b,"public int[] withoutTen(int[] nums)
{
    int newArray[] = new int[nums.length];
    for(int val : newArray)
        val = 0;
    
    int newIndex = 0;
    for (int i = 0; i < nums.length; i++){
    	if(nums[i] != 10)
            newIndex[newIndex++] = nums[i]; 
    }
    
    return newArray;
}
",0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",0
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",0
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",0
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",0
d620f21e27a87e15d05a4f085e8ed51214622697,"public String alarmClock(int day, boolean vacation);
int alarmTime = 0;
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	alarmTime=7;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	alarmTime=10;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=off;
    	}
    }
return alarmTime;    
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",0
8bc30b07fc43810fd62b2ec361ee859520d0270d,"public int[] fizzArray(int n)
{
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
64048f2701869a2bcb7a460416d3ef15f722e6b6,"public int[] fizzArray(int n)
{
    int i;
    int[] arr = new int[n];
    for (i = 0; i < n; i++)
    {
        arr[i] = i;
    }
    return arr;
        
}
",0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",0
b2dce8aae42aa118574cb05bbc435d69ab55b15b,"public boolean xyBalance(String str)
{
    boolean xybalanced = true;
    for (int i = 0; i < str.length(); i++)
    {
        if (str.charAt() == 'x')
        {
            boolean yLater = false;
            int j = i;
            while (j < str.length())
            {
                if (str.charAt(j) == 'y')
                {
                    yLater = true;
                }
            }
            xybalanced = yLater;
        }
    }
    return xybalanced
}
",0
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
",0
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",0
6f7f61c8665e5fbb33bb6cdb300c38706ffa9630,"public int centeredAverage(int[] nums)
{
    int average = 0;
    int sum = 0;
    int low = nums[0];
    int high = nums[0];
    boolean found = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > high)
        {
            high = nums[i];
        }
        
        if (nums[i] < low)
        {
            low = nums[i];
        }
    }
    
    for (int a : nums)
    {
        sum = sum + a;
    }
    
    sum = sum - low - high;
    
    average = sum / (nums.length - 2)
    
    return average;
}
",0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
f055965f9ae32739c7b92d6b5ecbca90565fcdcd,"public String without2(String str) 
{
    int len = str.length();
    if (str(0) == str(len - 2) && str(1) == str(len - 1))
    {
        String sss = null;
        sss.append(str,2,len-1);
            return sss;
    }
    else
    {
        return str;
    }
}
",0
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;",0
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
cf03e7d05ecf19d01f0b0960fcc372a74623be83,"public int[] zeroMax(int[] nums)
{
    int i = nums.length - 1;
    while(i >= 0 && nums[i] % 2 == 0)
    {
        i--;
    } 
    for(int j = i - 1; j >= 0; j--) {
        if(nums[j] == 0)
        {
            nums[j] = nums[i];
        }
        if(nums[j] % 2 == 1 && nums[j] > nums[i])
        {
            i = j;
        }
    }
    return nums;
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",0
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",0
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",0
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
",0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}",0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",0
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",0
d832642cded155ba61945ed277e663a0de8cb32c,"public String alarmClock(int day, boolean vacation)
{
    if(day == 0 || day == 6 && vacation)
    {
     	return ""off"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",0
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
caec91f2ba0d25b3a96d93bbc7e6ff92f4dfdd72,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off""
        }
    }
    else if (day > 0 && day < 6)
    {
        return ""7:00"";
    }
    else
    {
        return ""10:00"";
    }
}
",0
77eef59d415f15b3ad7bf984b2a232f7486ec6c6,"public int countEvens(int[] nums)
{
    int count = 0;
    
	for(int i = 0; i < nums.length; i++)
	{
		if (nums[i] % 2 == 0)
        {
			count++;
        }
	}
	return count;
}
",0
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
",0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",0
da854431fc95a4fda3f5795de985db2ccfd6cecc,"public boolean xyzThere(String str)
{
    if (str.length() >= 3) {
   	 	for (int i = 0; i < str.length() - 3; i++) {
        	if (str.substring(i, i + 3).equals(""xyz"")) {
            	if (i == 0) {
                    return true;
                }
                else if (str.charAt(i - 1) == '.') {
                    return false;
                }
                else {
                    return true;
                }
        	}
            else {
               return false; 
            }
    	}
    }
    else {
        return false;
    }
}
",0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",0
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",0
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
",0
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",0
6f7f61c8665e5fbb33bb6cdb300c38706ffa9630,"public int centeredAverage(int[] nums)
{
    int average = 0;
    int sum = 0;
    int low = nums[0];
    int high = nums[0];
    boolean found = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > high)
        {
            high = nums[i];
        }
        
        if (nums[i] < low)
        {
            low = nums[i];
        }
    }
    
    for (int a : nums)
    {
        sum = sum + a;
    }
    
    sum = sum - low - high;
    
    average = sum / (nums.length - 2)
    
    return average;
}
",0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",0
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",0
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",0
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
e444710aa658e2dde4799f8965284cd20bc98f6a,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
        int even = 0;
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",0
51fae40e9861d7b67fbaedf2d011c3a432f13b51,"public boolean xyzThere(String str)
{
    int i = -1;
    while ((i = str.indexOf(""xyz"", i + 1)) != -1)
    {
        if (i == 0 || (str.charAt(i - 1) != "".""))
        {
            return true;
        }
    }
    return false;
}
",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",0
c6a7e900d8268e52e52d9619cadc6f8e9dfd493b,"public int[] withoutTen(int[] nums)
{
    int newArray[] = new int[nums.length];
    for(int val : newArray)
        val = 0;
    
    int newIndex = 0;
    for (int i = 0; i < nums.length; i++){
    	if(nums[i] != 10)
            newIndex[newIndex++] = nums[i]; 
    }
    
    return newArray;
}
",0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",0
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
",0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",0
2eefd35700230f8780f45d01d416afdecdd69994,"public int caughtSpeeding(int speed, boolean isBirthday)
if(isBirthday)
{
	speed -= 5;
}
if(speed <= 60)
{
    return 0;
}
else if (speed <= 80)
{
    return 1;
}
else
{
    return 2;
}
    
",0
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",0
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",0
030fccf2f47fa47b1f2627cf43a489ae647b9717,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
",0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",0
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",0
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",0
b20d525ead268bb3eced9c95cb88481aa8aab61d,"public int makeChocolate(int small, int big, int goal)
{
	if (goal > 5*big)
    {
       goal = goal - 5 * big); 
    }
    else
    {
        goal = goal % 5;
    }
    if (goal <= small)
    {
        return goal;
    }
    return -1;
}
",0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",0
196436f6a31b3c5fa13fcebfee2d326193bfb3b0,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
          
    if(a == b && b == c)
        return 5;
                    
    if(a != b && a != c)
        return 1;
                            
    return 0;
}
",0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",0
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
",0
f69e8dd43d667d277a71e8afa47bc128fe9fec54,"public int[] shiftLeft(int[] nums)
{
    if (nums.equals({})){
        return null;
    }
    int[] left = new int[nums.length];
    for (int i = 0; i < nums.length - 1; i++){
        left[i] = nums[i+1];
    }
    left[nums.length - 1] = nums[0];
    return left;
}
",0
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",0
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",0
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",0
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",0
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
5e5840b4728a9e257720a8c46d3285726a2ba053,"public boolean twoTwo(int[] nums)
{
    for(int i = 0; i < nums.length-2; i++)
    {
        if(nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
        if(nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
    }
    return true;
        
}
",0
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",0
77eef59d415f15b3ad7bf984b2a232f7486ec6c6,"public int countEvens(int[] nums)
{
    int count = 0;
    
	for(int i = 0; i < nums.length; i++)
	{
		if (nums[i] % 2 == 0)
        {
			count++;
        }
	}
	return count;
}
",0
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",0
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
79ca73c2f348bc0492ad0ac2a699365809e4b3e0,"public String[] fizzBuzz(int start, int end)
{
    if ( number % 3 == 0) }
		if ( number % 5 == 0) {
            return ""fizzbuzz"";
        } else {
            return ""fizz"";
        }
} else if ( number % 5 == 0 ) {
    return ""buzz"";
}
return String.valueOf(number);
}
",0
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",0
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
3bfe605f68e12c9d3fe2391ac78c50b7339ea224,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
	b = b.toLowerCase();    
    return(a.lastIndexOf(b)<=a.length()-b.length()||b.lastIndexOf(a)<=b.length()-a.length());
}
",0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",0
8536c5f768b1adb326e2c34c566a310f311e86dc,"public boolean xyzThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.CharAt(i+1) == 'y' 
            && str.CharAt(i+2) == 'z')
        {
            if (i == 0 || str.CharAt(i-1) != '.')
                return true; 
        }
    }
    return false; 
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",0
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",0
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
",0
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",0
9def91e03cb4c9e4fb5f0472d02e90c8fb23cc26,"public int makeChocolate(int small, int big, int goal)
{
    int amount = (5*big) + small; // Amount possible
    if (amount < goal)
    {
        return -1;
    }
    else if (amount == goal)
    {
        return small;
    }
    else
    {
        int diff = amount - goal;
        int afterBig = diff - (5*big);
        if (afterBig < 0)
        {
            return small;
        }
        else
        {
            return small - afterBig;
        }
    }
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",0
761faf27118f8d7637200b8140f5a550d392d440,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
     if ( (n >=13 && n < 15) || (n > 16 && n <= 19) )
     {
         return 0;
     }
    else
    {
        return n;
    }
}

",0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",0
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
6db35470b675dd4fe175137e2eb0eb7d0105006f,"public int[] seriesUp(int n)
{
    int[] array = new int[n * (n + 1) / 2];
    int i = 0;
    
        for (int j = 1; j <= n; j++)
        {
            for (int p = 1; p <= j; p++)
            {
                array[i] = p;
                i++;
            }
        }
    
    return array;
}
",0
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
",0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
af72162e8ac5b84ac915a239ad3487e01803ebce,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    while (isBirthday != true)
    {
    	if (speed <= 60)
    	{
        	return int 0;
    	}
    	else if (speed > 60 && speed <= 80)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
    while (isBirthday != false)
    {
       if (speed <= 65)
    	{
        	return 0;
    	}
    	else if (speed > 65 && speed <= 85)
    	{
        	return 1;
    	}
    	else
    	{
        	return 2;
    	}
    }
}",0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",0
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",0
a24dfce9bb2b97aec0c2a859f3855e3285de4fff,"public int[] seriesUp(int n)
{
    
    int[] array = new int[n * (n + 1) / 2];
    
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i; j++)
        {
            array[(i - 1) * 2] = j;
        }
    }
    
    return array;
}
",0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",0
4951e3e93960ed4399945d8a349ac025dd9fc00d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum<= 19)
    {
     	sum = 20;   
    }
    return sum;
}
",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",0
35d6ddcc6c6abdb372550260e1f8d03864ed9491,"public int countCode(String str)
{
    int length = str.length() - 3;
    int count = 0;
    while (i < length)
    {
        if (charAt(i) == 'c' && charAt(i+1) == 'o' 
            && charAt(i+3) == 'e')
        {
            count++;
        	i = 4;
        }
        else 
        {
            i++;
        }
    }
    return times;
}
",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",0
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
",0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
8486d888511b0c88a6cdd719c0976a881dec165a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday) {
        if(speed <= 65) {
            return 0;
        } else if(66 <= speed && speed <= 85) {
            return 1;
        } else if(86 <=  speed) {
            return 2;
        }
    }
                                        
    if(speed <= 60) {
        return 0;
    } else if(61 <= speed && speed <= 80) {
        return 1;
    } else {
        return 2;
    }
}
",0
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",0
cf0b2d83b0558f31d29970ac5594bb6590bceebc,"public String without2(String str) 
{
    if (str.substring((str.length() - 2)) != str.substring(2))
    {
        return str;
    }
    else
    {
        return str.substring(2);
    }
}
",0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",0
2b64a0277763a3e3aeb7d462893bb8e9e84266a5,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
        
        for (int i = 0; i < nums.length; i++)
        {
            sum += nums[i];
            if (nums[i] < min)
            {
                min = nums[i];
            }
            else if (nums[i] > max)
            {
                max = nums[i];                
            }
        }
    int average = (sum - min - max) / (nums.length - 2);
    
    return average;
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",0
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",0
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",0
49eb57187ce32f7392ba9eb954bfc79921194a03,"public int countCode(String str)
{
    int count = 0;
    int i = 0;
    int length = str.length() - 3;
    while (i < length)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) = ""e"")
        {
            count++;
        }
        else
        {
            i++
        }
    }
    return times;
}
",0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",0
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",0
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",0
d2f05cc468a84bb01f5d675dcfafb4beb9a0b4c9,"public int[] fizzArray(int n)
{
    int[] output = new int[n]();
    for(int i = 0; i < n; i++){
        output[i] = i;
    }
    return output; 
}
",0
cd23c0ed240a318d70e3ddbf504fb44f78c81ffc,"public String atFirst(String str)
{ 
    if (str.length() < 2 && str.length() != 0)
    {
        return str + ""@"";
    }
    else if (str.length() == 0)
    {
        return ""@@""
    }
    else
    {
        return str.substring(0,2);
    }
    
}
",0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",0
c6e135a8d819808a2e86f6eb184fd9701ef4cea6,"public int[] withoutTen(int[] nums)
{
    //creates new array
    int[] newArray = new int[nums.length];
	int j = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			newArray[j] = nums[i];
			j++;
		}
	}
	// returns the new array
	return newArray;
}
",0
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",0
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",0
c77723bd709b08d6e00161ce3c6ef305a61d69c9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length()-2; i++) {
    if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b') {
      return true;
    }
  }
  return false;
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
88bf1f7daad113965a8a915b5a25f2a7cc6de986,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
    {
        return 10;
    }
    else
    {
        if ((a == b) && (a == c))
        {
            return 5;
        }
        else
        {
         	if((b != a) && (c != a))   
            {
                return 1;
            }
            else
            {
                return 0;
            }
        }
    }
}
",0
196436f6a31b3c5fa13fcebfee2d326193bfb3b0,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
          
    if(a == b && b == c)
        return 5;
                    
    if(a != b && a != c)
        return 1;
                            
    return 0;
}
",0
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",0
55d82777253a00d8ba398425451c87f2ce6bf43d,"public boolean xyBalance(String str)
{
	    
    for (int i = 0; i < str.length(); i++)
    {
        if (str.charAt(i) == 'x')
        {
            for (int j = 0; j < str.length(); j++)
            {
                if((i+j) < str.length())
                {
                	if((str.charAt(i+j) == 'y'))
	                {
						for (int k = 0; k < str.length(); k++)
                        {
                        	if((k+i+j) < str.length())
                            {
                            	if (str.charAt(k+i+j) == 'x')
                                {
                                	return false;
                                }
                                else if (str.charAt(str.length()-1) == 'y')
                                {
                                	return true;
                                }
                            }                            
                        }
                        return true;
        	        }

                }
            }
        }        
    }
    for (int z = 0; z < str.length(); z++)
    {
    	if (str.charAt(z) != 'x')
        {
        	for (int q = 0; q < str.length(); q++)
            {
            	if ((q+z) < str.length() && str.charAt(q+z) == 'x')
                {
                	return false;
                }
            }
        }
    }
    return false;
}
",0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",0
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
",0
030fccf2f47fa47b1f2627cf43a489ae647b9717,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
93cbb22b6a1b1a6803c91b97ad0c9e1017120cfa,"public boolean love6(int a, int b)
{
    if ((a == 6) || (b == 6))
    {
        return true;
    }
    else if ((Math.abs(a - b) == 6) || ((a + b) == 6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",0
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",0
13588bafe7146875aeecd22626679f601f5f7f24,"public boolean bobThere(String str)
{
    int i;
    for (i=0; i < str.length()-3; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",0
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",0
cd36011e020ffc41188de2b7cfe5e55af586b032,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
    {
        return 10;
    }
    else if ((a == b) && (b == c))
    {
        return 5;
    }
    else if ((b != a) && (c != a))
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",0
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
",0
f055965f9ae32739c7b92d6b5ecbca90565fcdcd,"public String without2(String str) 
{
    int len = str.length();
    if (str(0) == str(len - 2) && str(1) == str(len - 1))
    {
        String sss = null;
        sss.append(str,2,len-1);
            return sss;
    }
    else
    {
        return str;
    }
}
",0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
51fae40e9861d7b67fbaedf2d011c3a432f13b51,"public boolean xyzThere(String str)
{
    int i = -1;
    while ((i = str.indexOf(""xyz"", i + 1)) != -1)
    {
        if (i == 0 || (str.charAt(i - 1) != "".""))
        {
            return true;
        }
    }
    return false;
}
",0
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",0
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
e2840899f1aac60ee4fa7b06722a656e8bb2fb17,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 )
    {
        return true;
    }
    if ( Math.abs(a + b) == 6 || Math.abs(a - b) == 6) {
        return true;
    }
    return false;
}
",0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
",0
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
",0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",0
cf1aae0c2edcbd4f7395cfccb05a50f214957848,"public boolean has77(int[] nums)
{
   for (int i = 0; i < nums.length-1; i++)
   {
       if((nums[i] == 7 && nums[i+1] == 7) || (nums[i] == 7 && nums[i+2] == 7))
       {
           return true;
       }
   }
    return false;
}
",0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",0
5bf14ec8d2b72a5f31c1b7537e644e100f3cb419,"public String alarmClock(int day, boolean vacation)
{
    if(!(vaction))
    {
    	if(day == 6 || day == 0)
        {
            return off;
        }
        else
        {
        	return 10:00;
        }
    }
    else
    	if(day == 6 || day == 0)
        {
            return 10:00;
        }
        else
        {
        	return 7:00;
        }
}
",0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",0
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",0
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",0
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",0
5e5840b4728a9e257720a8c46d3285726a2ba053,"public boolean twoTwo(int[] nums)
{
    for(int i = 0; i < nums.length-2; i++)
    {
        if(nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
        if(nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
    }
    return true;
        
}
",0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
f8088bfd768d468c776f6b545c352390831fff5d,"public int sum67(int[] nums)
{
    boolean exclude = false;
    int sum=0;
    for(int i = 0; i<nums.length;i++){
		if(nums[i]==6)exclude = true;
        if(exclude==false){
            sum+=nums[i];
        }
        if(nums[i]==7)exclude = false;
    }
    return sum;
    
}
",0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",0
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
e0fc48a114ea8a2948e43da4eb1342009c283ca3,"public boolean love6(int a, int b)
{
    if (a == b)
    {
        return true
    }
    else if (Math.abs(a - b) == 6)
    {
        return true
    }
    else if (a + b == 6)
    {
        return true
    }
    else
    {
        return false
    }
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
d866157db78f6eb45be705042a8b581075d47972,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    	if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
            return a.sb;
    	}
    
    
}
",0
bab5cb0c2c8a924af65c6c139ed8497d525bd0a0,"public int[] fix45(int[] nums)
{
	
 	int k =0;
 	 for(int i=0; i< nums.length; i++)
     for(int j=0; j<nums.length; j++)

     if(nums[i]==4 && nums[j]==5)
     {
      k  =nums[j+1];
      nums[j+1] = nums[i];
      nums[i] = k;
     }
     return nums;
}
",0
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",0
4cc916649df329cb2108d1f68b228a173f91b30d,"public int makeChocolate(int small, int big, int goal)
{
    if (small + (5*big) < goal)
    {
        return -1;
    }
    else
    {
        if ((goal / 5) <= big)
        {
            int r = goal % 5;
            if (r <= small)
            {
                return small;
            }
            else
            {
                return -1;
            }
        }
        else
        {
            if ((goal - (5 * big)) <= small)
            {
                return goal - (5 * big);
            }
            else
            {
                return -1;
            }
        }
    }
    
    
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
4951e3e93960ed4399945d8a349ac025dd9fc00d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum<= 19)
    {
     	sum = 20;   
    }
    return sum;
}
",0
5f0de396365017b80185b81d0904cd472b4f28f8,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if ((a == b && b != c) || (a == c && a != b) || (b == c && b != a))
    {
       return 10;
    }
    else 
    {
        return 0;
    }
}
",0
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",0
ed1be4ed56e7b7c3b68f3659aa51f9930b008a40,"public int[] shiftLeft(int[] nums)
{
    int[] newList = new int[nums.length];
    newList[0] = nums[nums.length - 1];
	for (int i = 1; i < nums.length - 2; i++)
    {
        newList[i] = nums[i - 1];
    }
	return newList;
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
",0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",0
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",0
93cbb22b6a1b1a6803c91b97ad0c9e1017120cfa,"public boolean love6(int a, int b)
{
    if ((a == 6) || (b == 6))
    {
        return true;
    }
    else if ((Math.abs(a - b) == 6) || ((a + b) == 6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
f055965f9ae32739c7b92d6b5ecbca90565fcdcd,"public String without2(String str) 
{
    int len = str.length();
    if (str(0) == str(len - 2) && str(1) == str(len - 1))
    {
        String sss = null;
        sss.append(str,2,len-1);
            return sss;
    }
    else
    {
        return str;
    }
}
",0
da854431fc95a4fda3f5795de985db2ccfd6cecc,"public boolean xyzThere(String str)
{
    if (str.length() >= 3) {
   	 	for (int i = 0; i < str.length() - 3; i++) {
        	if (str.substring(i, i + 3).equals(""xyz"")) {
            	if (i == 0) {
                    return true;
                }
                else if (str.charAt(i - 1) == '.') {
                    return false;
                }
                else {
                    return true;
                }
        	}
            else {
               return false; 
            }
    	}
    }
    else {
        return false;
    }
}
",0
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
",0
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",0
8486d888511b0c88a6cdd719c0976a881dec165a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday) {
        if(speed <= 65) {
            return 0;
        } else if(66 <= speed && speed <= 85) {
            return 1;
        } else if(86 <=  speed) {
            return 2;
        }
    }
                                        
    if(speed <= 60) {
        return 0;
    } else if(61 <= speed && speed <= 80) {
        return 1;
    } else {
        return 2;
    }
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
14f278d9efaab02b4cb6efe14b10596fc8f45c71,"    public int countClumps(int[] nums) {
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
        if (nums[i] == nums[i + 1]) {
            count++;
            for (int j = i + 1; j < nums.length; j++)
                if (nums[j] == nums[i]) i++;
                else break;
        }
    return count;
}

",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
",0
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
76d327977c3b6df3e9ab9612b5ea8123306e3035,"public int sum13(int[] nums)
{
    int total = 0;
    if (nums != null) {
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 13) {
                if (nums[i] != 0 && nums[i-1] != 13) {
                	total = total + nums[i];
                }
            }
        }
        return total;
    }
    return 0;
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
7f69c4115a9df00204939b23d0bc6db187447e93,"public boolean xyzThere(String str)
{
    //return(str.indexOf(""xyz"") != -1 && str.indexOf("".xyz"") == -1);
    for(int i = 0; i < str.length(); i++){
        if(str.indexOf(""xyz"",i) != -1){
            if(str.lastIndexOf("".xyz"",i+1) != i+1){
                return true;
            }
        }
    }
    return false;
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
5e5840b4728a9e257720a8c46d3285726a2ba053,"public boolean twoTwo(int[] nums)
{
    for(int i = 0; i < nums.length-2; i++)
    {
        if(nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }
        if(nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
    }
    return true;
        
}
",0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",0
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",0
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
",0
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",0
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",0
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",0
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",0
ff5188ca09d212d12901f3d2fa492090bb58c2e9,"public int[] fizzArray(int n)
{
    int[] returnArray = new int[n];
    for (int i = 0; i < n; i++)
    {
        returnArray[i] = i;
    }
    return retrnArray;
}
",0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",0
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",0
030fccf2f47fa47b1f2627cf43a489ae647b9717,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
68c510e3ae2a5f68173421badd6c7e8d285e1fd9,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        return 0
    }
    else if (speed >= 61 && speed <= 80)
    {
        return 1
    }
    else if (speed >= 81)
    {
        return 2
    }
}
",0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",0
203f9c47a0738c4f7deb3aa08f1ac17b6d91cac6,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    int index = 0;
    
    for (int i : nums)
    {
        if (i != 10)
        {
            array[index] = i;
            index++;
        }
    }
    
   return array;
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",0
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",0
ea7b7503d60391606cc84dfdd7b718ed94407df2,"public int makeChocolate(int small, int big, int goal)
{
    if (goal / 5 != big )
        return goal % 5;
    else if (goal / 5 == big && (goal - big * 5) != 0)
        return small;
    else if (goal / 5 == big && (goal - big * 5) == 0)
        return 0;
    else 
        return -1;
}
",0
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",0
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
",0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",0
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",0
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
",0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",0
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
9def91e03cb4c9e4fb5f0472d02e90c8fb23cc26,"public int makeChocolate(int small, int big, int goal)
{
    int amount = (5*big) + small; // Amount possible
    if (amount < goal)
    {
        return -1;
    }
    else if (amount == goal)
    {
        return small;
    }
    else
    {
        int diff = amount - goal;
        int afterBig = diff - (5*big);
        if (afterBig < 0)
        {
            return small;
        }
        else
        {
            return small - afterBig;
        }
    }
}
",0
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
",0
27ced9f412138c0fe596bab23d6119a3c93f5686,"public int[] shiftLeft(int[] nums)
{
    int length = nums.length;
    int special = nums[0];
    if (length == 0)
    {
        return nums;
    }
    for (int i = 0; i < length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[length - 1] = special;
    return nums;
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",0
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",0
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
",0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",0
2ab613317018e535c7c370e1bf3fb0d86c7a9f9b,"public int[] tenRun(int[] nums)
{
    int[] result = new int[nums.length];
    int input;
    int value = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (input % 10 == 0 && input > value)
        {
            value = input;
        }
        
        if (value == -1)
        {
            result[i] = input;
        }
        else
        {
            result[i] = value;
        }
    }
    
    return result;
}
",0
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
",0
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",0
51fae40e9861d7b67fbaedf2d011c3a432f13b51,"public boolean xyzThere(String str)
{
    int i = -1;
    while ((i = str.indexOf(""xyz"", i + 1)) != -1)
    {
        if (i == 0 || (str.charAt(i - 1) != "".""))
        {
            return true;
        }
    }
    return false;
}
",0
93cbb22b6a1b1a6803c91b97ad0c9e1017120cfa,"public boolean love6(int a, int b)
{
    if ((a == 6) || (b == 6))
    {
        return true;
    }
    else if ((Math.abs(a - b) == 6) || ((a + b) == 6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",0
7856bc992acb7f7b799ac4063e23bfc3598df9e0,"public int sum13(int[] nums)
{
    if(nums.length == 0) {
        return 0;
    }
    
    int sum = 0;
    boolean thirteen = false;
    boolean secondthirteen = false;
    
    for(int i = 0; i < nums.length; i++) {
        if(nums[i] == 13) {
            thirteen = true;
        }
        
        if(!thirteen && !secondthirteen) {
            sum += nums[i];
            thirteen = false;
            secondthirteen = false;
        }
        
        if(thirteen) {
            secondthirteen = true;
        }
    }
    
    return sum;
}
",0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",0
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",0
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",0
caec91f2ba0d25b3a96d93bbc7e6ff92f4dfdd72,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off""
        }
    }
    else if (day > 0 && day < 6)
    {
        return ""7:00"";
    }
    else
    {
        return ""10:00"";
    }
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",0
10af8ae87e8d5fab568a4bc61c1cbcdf1cf7e4e3,"public boolean xyBalance(String str)
{
    boolean y = false;
    for(int i = 0; i < str.length() - 1; i++)
        {
       		if(str.charAt(i) == 'y')
            {
                y = true;
            }
        	if(str.charAt(i) == 'x' && !y)
            {
                return false;
            }
   		}
    return true;
}
",0
030fccf2f47fa47b1f2627cf43a489ae647b9717,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
1f5da1cd2474bb70a08ba1ebec2f36fe938b688f,"public String atFirst(String str)
{
    int length = str.length();
    if (length>=2)
    {
        return str.substring(1,2);
    }
    else if (length==1)
    {
        return str.charAt(1) + ""@"";
    }
    else 
    {
        return ""@@"";
    }
}
",0
196436f6a31b3c5fa13fcebfee2d326193bfb3b0,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
          
    if(a == b && b == c)
        return 5;
                    
    if(a != b && a != c)
        return 1;
                            
    return 0;
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",0
6bcfc4f8f71961def49e25a62a3705be7faac429,"public int[] fix45(int[] nums)
{
    int i = 0;
    int j = 0;
    while(j < nums.length && nums[j] != 5)
        j++;
    while(i < nums.length)
    {
    	if(nums[i] == 4)
        {
        	int temp = nums[i+1];
            nums[i+1] = nums[j];
            nums[j] = temp;
            
            while((j < nums.length && nums[j] != 5) || j ==i+1)
                j++;
        }
        i++;
        
    }
    return nums;
}",0
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",0
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",0
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
",0
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
34fd7df6f2e77eb2637ca1aab9fa90ece6e50132,"public int greenTicket(int a, int b, int c)
{
    if(a == b && a == c && b == c)
    {
        return 20;
    }
    if(a != b && a != c && b != c)
    {
        return 0;
    }
    else
    {
        return 10;
    }
}
",0
030fccf2f47fa47b1f2627cf43a489ae647b9717,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
41fbb0ec3f09d19d78c9bae81f5a75e31cf74218,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
b66c9a76c6567bcfc33f81fb4e1e0bfe1c43ea5c,"public String atFirst(String str)
{
    int length = str.length();
    if( length >= 2 )
    {
        return str;
    }
    else
    {
        if( length == 1 )
        {
            return str + ""@"";
        }
        else
        {
            return ""@@"";
        }
    }
}
",0
7e8ebbb04f1a1a60590f6fb959bda51fa984b852,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums.get(i)%2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",0
e2840899f1aac60ee4fa7b06722a656e8bb2fb17,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 )
    {
        return true;
    }
    if ( Math.abs(a + b) == 6 || Math.abs(a - b) == 6) {
        return true;
    }
    return false;
}
",0
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",0
cd36011e020ffc41188de2b7cfe5e55af586b032,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
    {
        return 10;
    }
    else if ((a == b) && (b == c))
    {
        return 5;
    }
    else if ((b != a) && (c != a))
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
",0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",0
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",0
bab5cb0c2c8a924af65c6c139ed8497d525bd0a0,"public int[] fix45(int[] nums)
{
	
 	int k =0;
 	 for(int i=0; i< nums.length; i++)
     for(int j=0; j<nums.length; j++)

     if(nums[i]==4 && nums[j]==5)
     {
      k  =nums[j+1];
      nums[j+1] = nums[i];
      nums[i] = k;
     }
     return nums;
}
",0
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
361cffcd59168c73e46f71e92db3a9f3ea824551,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        if (temp >= 60 && temp <= 100)
        {
            return true;
        }
    }
    else
    {
        if (temp >= 60 && temp <= 90)
        {
            return true;
        }
    }
    return false;
}
",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",0
caec91f2ba0d25b3a96d93bbc7e6ff92f4dfdd72,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off""
        }
    }
    else if (day > 0 && day < 6)
    {
        return ""7:00"";
    }
    else
    {
        return ""10:00"";
    }
}
",0
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",0
a2f0b90158589e9b6431acc5f3a84b35079f2dad,"public int loneSum(int a, int b, int c)
{
	if(a == b)
    {
    	return c;
    }
    
    if(a == c)
    {
    	return b;
    }
    
    if(b == c)
    {
    	return a;
    }
    
    if(a == b && b == c && a == c)
    {
    	return 0;
    }
    
    else
    {
    	return a + b + c;
    }
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",0
dae0fac64baf41f77223c5e18ed84a394d8b0c8d,"public String alarmClock(int day, boolean vacation)
{

    
    if (day == 0 || day == 6)
        if (vacation)
        {
            alarmClock = ""off"";
        }
    {
        alarmClock = ""10:00"";
    }
    
    if (day > 0 && day < 6)
        if (vacation)
        {
            alarmClock = ""10:00"";
        }
    {
        alarmClock = ""7:00"";
    }
    
    return alarmClock
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
25b931d2dc34afc85717082c5a3aa847d495135c,"public int greenTicket(int a, int b, int c)
{
    if(a == b || a == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",0
d822cf12d38ea28fe825ff4fc14fdc94e6719f05,"public boolean bobThere(String str)
{
    int i = 0;
    char[] CharArray = str.toCharArray();
    for(char cha : CharArray){
    	if (cha == 'b'){
        	if (str[i + 2] == 'b'){
            	return true;
            }
        }
     	i++;
    }
    return false;
}
",0
c39d1ee94f6a9a0a81bfecf4b8fd083b1fca26c2,"public int[] fizzArray(int n)
{
    int array = new int[n];
    for(int i=0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",0
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
",0
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",0
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;",0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",0
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",0
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",0
a727d8c3526a1fabfdb44cb5de928ee87263a8a7,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        int temps = 0;
        while (nums[i] == nums[i+1])
        {
            temps++;
        }
        if (temps > 0)
        {
            count++;
            i = i + temps;
        }
    }
    return count;
}
",0
77d0378976f5a4f8a05840088cd37ebc317f20d2,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if(day == 0 || day == 6)
        {
            return ""off"";
        }
        else
        {
        	return ""10:00"";
        }
    }
    else
    {
        if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""7:00"";
        }
    }
}
",0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",0
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",0
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",0
e0fc48a114ea8a2948e43da4eb1342009c283ca3,"public boolean love6(int a, int b)
{
    if (a == b)
    {
        return true
    }
    else if (Math.abs(a - b) == 6)
    {
        return true
    }
    else if (a + b == 6)
    {
        return true
    }
    else
    {
        return false
    }
}
",0
82c9ee2de2a01f9e73e4bfedb0964b24ab8066d8,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if ((a + b) == 6 || Math.abs(a - b) == 6);
    {
        return true;
    }
    return false;
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
5455ec6afe437e7506504e1f1428a5a0b96a5669,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
    if (a > b)
    {
       return blackjack(a, 0);
    }
    else if (b > a)
    {
        return blackjack(0, b);
    }
    } 
    return 0;
}

",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
e444710aa658e2dde4799f8965284cd20bc98f6a,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
        int even = 0;
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;
}
",0
dc20b50f1f6fc266d80c9cceb3e26ca923d1b02f,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
    //return nums;
   int start = nums[0];
    for (int i = 0; i < nums.length; i++)
    {
     	int j = 1;
        nums[i] = nums[j];
        j++;
        //nums[i] = nums[i + 1];
        /*if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }*/
              	
    }
    
    
    return nums;   
}
",0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",0
8995f0dc49a7a45215713c068350823a4d69051a,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length - 1; i++)
    {
     	if(nums[i] != val && nums[i+1] != val)
        {
         	return false;   
        }
    }
    return true;
}
",0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",0
c6a7e900d8268e52e52d9619cadc6f8e9dfd493b,"public int[] withoutTen(int[] nums)
{
    int newArray[] = new int[nums.length];
    for(int val : newArray)
        val = 0;
    
    int newIndex = 0;
    for (int i = 0; i < nums.length; i++){
    	if(nums[i] != 10)
            newIndex[newIndex++] = nums[i]; 
    }
    
    return newArray;
}
",0
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",0
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
",0
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
cea2d782ee168cd0b9eff02c6df35f4f2b9ffe50,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
	{
		if(day = 0 || day = 6)
			return ""off"";
        else
		return ""10:00"";
	}
	else
	{
		if(day = 0 || day = 6)
			return ""10:00"";
        else
		return ""7:00"";
	}
}
",0
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",0
8c8cd198d6f34fe217432dd9a576510c86806426,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] != 2)
        {
            return false;
        }
        else if (nums[i] == 2 && nums[i+1] == 2)
        {
            i++;
        }     
    }
    if (nums[length - 1] == 20
        return false;
    return true;
}
",0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
dfebf4d3ccb1c45c713e88e11542556ee4a55d1e,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    int k = 0;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= i; j++)
        {
			result[k] = j;
            k++;
        }
	}
    return result;
}
",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
658cc87d5ac403faedaaa331874ee4b4c3043e4f,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i = 0; i < nums.length; i++)
    {
     	if (nums[i] 1= val && nums[i + 1] != val)
        {
            return false;
        }
    }
    
    return true;
}
",0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
11e598f7e57d128136db1dfc84b08cbb84493470,"public String atFirst(String str)
{	
    int n = str.length();
    for (int = 0; i < n; i++)
    {
    	if (n > 2)
    	{
     		return str.substring(0, 2);
    	}
    	else
    	{
       	 	return ""@@"";
    	} 
    }
}
",0
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
",0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",0
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
",0
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
8b2f2240b040ccff48ec7c89647d89e57b34ca88,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length - 2; i++ ) {
        if ( nums[i] == 7 ) {
            if ( nums[i + 1] == 7 || nums[i + 2] == 7 ) {
                return true;
            }    
        }
    }
    if ( nums[nums.length - 2] == 7 && nums[nums.length - 1] == 7 )
    {
        return true;
    }
    return false;
}
",0
cf1aaa53350b07642069ec537a4b37e93bf3531b,"public int redTicket(int a, int b, int c)
{
    if (a==2 && b==2 && c==2)
    {
        return 10;
    }
    else if (a==b && b==c)
    {
        return 5;
    }
    else if (a!=b && b!=c && c!=a)
    {
        return 1;
    }
    else 
    {
        return 0;
    }
}
",0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",0
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
49eb57187ce32f7392ba9eb954bfc79921194a03,"public int countCode(String str)
{
    int count = 0;
    int i = 0;
    int length = str.length() - 3;
    while (i < length)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) = ""e"")
        {
            count++;
        }
        else
        {
            i++
        }
    }
    return times;
}
",0
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",0
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
c7d5fa87ae0f6d79ded4c548de64c21e1b535332,"public boolean sameEnds(int[] nums, int n)
{
    if ( n == 0 ) {
        return true;
    }
    else
    {
        for ( int i = 0; i < n; i++ ) {
            if ( nums[i] != nums[nums.length - n + i] ) {
                return false;
            }
        }
        return true;
    }
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",0
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
",0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",0
30609b1c9c365f5fb4fd219cf09c6208fa6c8052,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else if (nums.length == 0)
        {
             return new int[]{nums[0]};
        }
        return new int[]{nums[0]};
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
9da10eb0a36c1f2a83adb2a9e709bf948f23038e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if (a + b == 6)
    {
        return true;
    }
    else if (Math.abs(a-b) == 6)
    {
        return true;
    }
}
",0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",0
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",0
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",0
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
",0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",0
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
",0
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",0
c2b5233c69ac3f268687caee60f7f68deec9a002,"public String zipZap(String str)
{
    String original = str;
boolean found = false;
if(str.length() == 3) {
if(Character.toString(str.charAt(0)).equals(""z"") && (Character.toString(str.charAt(2)).equals(""p""))) {
return ""zp"";
}
} else if(str.length() < 3) {
return str;
}
 
for(int i = 0; i + 3 < str.length(); i++) {
if(Character.toString(str.charAt(i)).equals(""z"") && Character.toString(str.charAt(i + 2)).equals(""p"")) {
str = str.substring(0, i) + Character.toString(str.charAt(i)) + Character.toString(str.charAt(i + 2)) + str.substring(i + 3, str.length());
found = true;
} else {
}
}
 
if(Character.toString(str.charAt(str.length() - 3)).equals(""z"") && Character.toString(str.charAt(str.length() - 1)).equals(""p"")) {
return str = str.substring(0, str.length() - 3) + Character.toString(str.charAt(str.length() - 3)) + Character.toString(str.charAt(str.length() - 1));
}
 
if(found) {
return str;
} else {
return original;
}
}
",0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",0
cfc6cb87b23f11a2f4bbbf92a708643e8012b8fb,"public int countEvens(int[] nums)
{	
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0))
        {
            count++;
        }
    }
    return count;
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
",0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
9c76d794fcabef309cf683426bf8f9a892012af8,"public int[] frontPiece(int[] nums)
{
    if (nums.length < 2)
    {
       if (nums.length == 1)
       {  
        return new int[]{nums[1]};
       }
        else
        {
             return new int[]{nums[0]};
        }
    }
    else 
    {
        return new int[] {nums[0], nums[1]};
    }
}
",0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
226b5d8a7b8a50ea1a33a1983fecefe1ef7fa72b,"public boolean canBalance(int[] nums)
{
	int leftNum = 0;
	int rightNum;
	for(int i = 0; i < nums.length - 1; i++)
    {
		leftNum += nums[i];
    }
	rightNum = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(leftNum == rightNum)
        {
			return true;
        }
		leftNum -= nums[i];
		rightNum += nums[i];
	}
	return (leftNum == rightNum);
}",0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
e444710aa658e2dde4799f8965284cd20bc98f6a,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
        int even = 0;
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;
}
",0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",0
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",0
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
",0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",0
3b6a3747d8a8ba7e00b3386b0a9baaad77d0edec,"public boolean sameEnds(int[] nums, int n)
{
    /**
    int same=0;
    for (int i=nums.length-1;i>0 ;i--)
    {
        if (nums[0]!=nums[i])
        {
            same++;
        }
    }
    */
    int same=0;
    int end = nums.length-i;
    for(int i=nums.length; i > 0; i--)
	{
		if(nums[same] != nums[end])
			return false;
		else
		{
			same++;
			end++;
		}
	}
    return true;
        
}
",0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
4eb6382872b95c713ee9b9ee3717c152840acf5e,"public int[] zeroMax(int[] nums)
{
    int[] numArray;
    for(int i : nums)
    {
        if (nums[i] == 0)
        {
            nums[i] = largestOdd(i, nums);
        }
    }
    return numArray;
}

public int largestOdd(int position, int[] nums2)
{
    int biggestOdd = 0
    for (int i = position; i < nums2.length; i++)
    {
        if (nums2[i] % 2 == 1 && nums2[i] > biggestOdd)
        {
            biggestOdd = nums2[i];
        }
    }
    return biggestOdd;
}",0
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
",0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",0
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
2adbb39337217f673d1ee6e9632faef8d959ee31,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2)
    {
		return 0;
    }
	if(you >= 8 || date >= 8)
    {
		return 2;
    }
    else
    {
        return 1;
    }
}
",0
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",0
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
9da10eb0a36c1f2a83adb2a9e709bf948f23038e,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true;
    }
    else if (a + b == 6)
    {
        return true;
    }
    else if (Math.abs(a-b) == 6)
    {
        return true;
    }
}
",0
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",0
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",0
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
",0
e2840899f1aac60ee4fa7b06722a656e8bb2fb17,"public boolean love6(int a, int b)
{
    if ( a == 6 || b == 6 )
    {
        return true;
    }
    if ( Math.abs(a + b) == 6 || Math.abs(a - b) == 6) {
        return true;
    }
    return false;
}
",0
a24dfce9bb2b97aec0c2a859f3855e3285de4fff,"public int[] seriesUp(int n)
{
    
    int[] array = new int[n * (n + 1) / 2];
    
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i; j++)
        {
            array[(i - 1) * 2] = j;
        }
    }
    
    return array;
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",0
34fd7df6f2e77eb2637ca1aab9fa90ece6e50132,"public int greenTicket(int a, int b, int c)
{
    if(a == b && a == c && b == c)
    {
        return 20;
    }
    if(a != b && a != c && b != c)
    {
        return 0;
    }
    else
    {
        return 10;
    }
}
",0
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",0
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}",0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",0
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",0
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
",0
f32469ce2d9f61a9f70998196fbafbd23ef66dd5,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            i++;
    		count++;
            while (nums[i] == nums[i+1])
            {
                i++;
            }
        }
    }
    return count;    
}
",0
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",0
2bd18c46c813b4844bb3ea737e226e00c79c0853,"public int[] fizzArray(int n)
{
    int[] array1 = new int[n];
    for (int i = 0; i < n; i++)
    {
        array1[i] = i;
    }
    return array1;
}
",0
c0f5b70b603edfb55cea6f3a939df372d0d07201,"public int makeChocolate(int small, int big, int goal)
{
    if (goal >= 5 && (goal / 5) >= big && (goal / 5 )
        - small > 0)
        return goal - big * 5; 
    else if (goal / 5 < big ) 
        return goal % 5;
    else 
        return -1;
}
",0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
c77723bd709b08d6e00161ce3c6ef305a61d69c9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length()-2; i++) {
    if (str.charAt(i) == 'b' && str.charAt(i+2) == 'b') {
      return true;
    }
  }
  return false;
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",0
a24dfce9bb2b97aec0c2a859f3855e3285de4fff,"public int[] seriesUp(int n)
{
    
    int[] array = new int[n * (n + 1) / 2];
    
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i; j++)
        {
            array[(i - 1) * 2] = j;
        }
    }
    
    return array;
}
",0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",0
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",0
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
cd36011e020ffc41188de2b7cfe5e55af586b032,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
    {
        return 10;
    }
    else if ((a == b) && (b == c))
    {
        return 5;
    }
    else if ((b != a) && (c != a))
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
a91eb5d5606047a6b25f0f27c1f8feea8fc7516c,"public String alarmClock(int day, boolean vacation)
{
    if(vacation)
    {
    	return ""10:00"";   
    }
    else if(day >= 1 && day <= 5)
    {
     	return ""7:00"";   
    }
    else
    {
        return ""10:00"";
    }
}
",0
77eef59d415f15b3ad7bf984b2a232f7486ec6c6,"public int countEvens(int[] nums)
{
    int count = 0;
    
	for(int i = 0; i < nums.length; i++)
	{
		if (nums[i] % 2 == 0)
        {
			count++;
        }
	}
	return count;
}
",0
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",0
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",0
21f49c70a5574e177ee0e928d52f7656fb37a03a,"public boolean canBalance(int[] nums)
{
    int same = 0;
    int sum = 0;
    for (int i=0;i<nums.length;i++)
    {
        sum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        same += nums[i];
        sum -= nums[i];
    
    if (same == sum)
    {
        return true;
    }
    }
    return false;
}",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
2f8e3e3ad91a4333c9619e7693ea78d5e051267d,"public int makeChocolate(int small, int big, int goal)
{
    int maxBig = goal/5;
	if(maxBig <= big)
		goal -= maxBig*5;
	else
		goal -= big*5;
	if(goal <= small)
		return goal;
	return -1;
}
",0
6a623e78b320858b018881a4c447f0285bde0276,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            int temp = nums[i];
            while (nums[i+1] % 10 != 0 || i == nums.length)
            {
                nums[i] = temp;
                i++;
            }
        }
    }
    return nums;
}",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
38762fe7dd9529e7620b23c0dc6fb6bcd528cc28,"public int countCode(String str) {
    int count = 0;
    for (int i = 0; i < str.length()-3; i++)
        if (str.charAt(i) == 'c' && str.charAt(i+1) == 'o'
        && str.charAt(i+3) == 'e')
            count++;
    return count;",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",0
b20d525ead268bb3eced9c95cb88481aa8aab61d,"public int makeChocolate(int small, int big, int goal)
{
	if (goal > 5*big)
    {
       goal = goal - 5 * big); 
    }
    else
    {
        goal = goal % 5;
    }
    if (goal <= small)
    {
        return goal;
    }
    return -1;
}
",0
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
",0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",0
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",0
6bcfc4f8f71961def49e25a62a3705be7faac429,"public int[] fix45(int[] nums)
{
    int i = 0;
    int j = 0;
    while(j < nums.length && nums[j] != 5)
        j++;
    while(i < nums.length)
    {
    	if(nums[i] == 4)
        {
        	int temp = nums[i+1];
            nums[i+1] = nums[j];
            nums[j] = temp;
            
            while((j < nums.length && nums[j] != 5) || j ==i+1)
                j++;
        }
        i++;
        
    }
    return nums;
}",0
7489970b14d3e55c37ed48146532aee747d92329,"public int loneSum(int a, int b, int c)
{
    if (a == b && a == c)
        return 0;
    else if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",0
431d82a42773227b9044d9974fa2fa55c3dcecb7,"public int[] fizzArray(int n)
{
    int[] array = new int[n];
    for (int i = 0; i < n; i++)
    {
        array[i] = i;
    }
    return array;
}
",0
