ID,Code,Prompt,PromptType
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",,0
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",,0
6b538f7d9eac6f8c54cd2c59a699ca73280e0930,"public class FizzArray {

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",,0
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",,0
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
",,0
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",,0
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",,0
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
",,0
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
",,0
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
",,0
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",,0
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
",,0
5b8462264f562aa0216336e59d39c6bfaaa3d2f8,"public int[] zeroMax(int[] nums)
{
    int max;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            max = 0;
            for (int j = i + 1; j < nums.length; j++)
            {
                if (nums[j] > max && nums[j] % 2 == 1)
                {
                    max = nums[j];
                }
            }
            if (max != 0)
            {
                nums[i] = max;
            }
        }
    }
    return nums;
}
",,0
cc49ee79208b14f262c935e71baf50764fe3a19a,"public boolean xyBalance(String str)
{	
    for (int x = 0 ; x + 1 < str.length()-1; x++)
    {
        if (str.substring(x,x).equals('x') && str.endsWith(""y""))
        {
            return x;
            break;
        }
    }
    if (str.substring(x,x).equals('x') && str.endsWith(""y""))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",,0
dba6c271b79d741d024f67f5231ab6a5ca257498,"public int[] zeroMax(int[] nums)
{
    int max;
    for (int i = 0; i < nums.length -1; i+= 1) {
        if (nums[i] == 0) {
            max = 0;
            for ( int j = i+1; j < nums.length; j+=1) {
                if (nums[j] > max && nums[j] %2 ==1) {
                    ma = nums[j];
                }
                if (max !=0 ) {
                    nums[i] = max;
                }
            }
        }
    }
    return nums;
}
",,0
609cc3f20dd1f3529a02ebbed8384395c8400b2b,"public int countEvens(int[] nums)
{
    int evens = 0;
    for (int number: countEvens)
    {
        if (number % 2 == 0)
        {
            evens = evens + 1;
        }
    }
    return evens;
}
",,0
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",,0
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
",,0
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
",,0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",,0
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",,0
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
",,0
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",,0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",,0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",,0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",,0
390cb0d114ae7595435ca6326f70fb705ed79016,"public int sum67(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            for (int j = i; nums[j] == 7; j++)
            {
                if (j == nums.length - 1)
                {
                    return sum;
                }
                else
                {
                    i = j + 1;
                }
            }
        }
        sum += nums[i];
    }
    return sum;
}
",,0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",,0
fa0f6e6f624573c3048d850049c74cdd83969733,"public boolean canBalance(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
        sum += nums[i];
    int sumSoFar = 0;
    for (int j = 0; j < nums.length; j++)
    {
        sumSoFar += nums[j];
        if (sum == 2 * sumSoFar)
            return true;
    }
    return false;
}
",,0
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
",,0
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",,0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
",,0
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",,0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",,0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",,0
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",,0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
",,0
50e94825d3f222bee3dd68a4f644cfe9b935d844,"public int countCode(String str)
{
    int numberofcode = 0;
    
        for (int x = 0; x < str.length() -3; x++)
        { 
            if (str.charAt(x) == 'c' && str.charAt(x+1) == 'o'  && str.charAt(x+2) == 'e')
   numberofcode++;
        }
           
                return numberofcode;;
           
    
                
    
}
",,0
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",,0
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",,0
4ba46181a66bb2f3cf45d38876db8736b1ebda46,"public boolean in1To10(int n, boolean outsideMode)
{
    return ((n >= 1 && n<=10 && !outsideMode) || (n > 10 || n < 1 && outsideMode));
}
",,0
5751db3148c8805ad9e482b9dedd7ade5357ba47,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
    {
        return str.substring(first + 5, last);
    }
    else
    {
    return """";
    }
}
",,0
739598df6f10e1b41997fbbce33f2e2bf0fd995e,"public boolean has77(int[] nums)
{
    int x = nums.length;
    for (int i = 0; i < x; i++)
    {
        if (i < x - 1 && nums.[i] == 7 && nums.[i + 1] == 7)
        {
            return true;
        }
        if (i < x - 2 && nums.[i] == 7 && nums.[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
",,0
c1787c3579abadd7e03345d1ff93d595d3346793,"public String without2(String str) 
{
    if (name.substrnig(0, 2) == name.substring(name.length() -2, name.length()))
    {
        return ""name.substring(0, 2)"";
    }
    else if (number.substring(0, 2) == number.substring (name.length() -2, name.length()))
    {
        return ""Hi"";
    }
    else
    {
        return ""name.substring(0)"";
    }
}

",,0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",,0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
a767440796f740efacb74e1a68a50c6ef184a501,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length - 1; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
",,0
8f7adecfe84a4de95fc89fce2d54f70ae614463e,"public String getSandwich(String str)
{
    int ind = str.indexOf(""bread"");
    int laind = str.lastIndexOf(""bread"");
    if ((laind != -1) && (ind != laind))
        return (str.substring(ind+5, laind));
    return """";
}
",,0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",,0
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
",,0
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",,0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",,0
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
",,0
3f9fb6fe01554295f4eba9d360fb11240c63107c,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
        if (str.substring(i).startsWith(""b"") 
            && str.substring(i + 2).startsWith(""b""))
        {
            return true;
        }
    }
    return false;
}
",,0
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",,0
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",,0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",,0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
5b9eb535280570f293684ef95c107bc80160a334,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = len;
	for (int i =0; i <range;i++)
    {
		if (!(nums[i] == nums[nums.length - range + i]))
        {
			result = false;
        }
    }
return result;
}
",,0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",,0
89d29f4f5d833c3359c7406ca1e2f3f2a7310cd1,"public int greenTicket(int a, int b, int c)
{
    if (a = b || a = c || b = c)
    {
        return 10;
    }
    else if (a = b && b = c)
    {
        return 20;
    }
    else
    {
        return 0;
    }
    
    
}
",,0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",,0
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",,0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
0615e4e3628f3968baa7039844e88175c1722d19,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend)
    {
        return (cigar >= 40);
    }//end if
    
    return (cigars >= 40 && cigars <= 60);
    
    
}
",,0
acf68ee14e8bbbb4c7037ac6430a44a2a7624ef8,"public int roundSum(int a, int b, int c)
{
      return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int n = num % 10;
    
    if(n >= 5)
    {
        num = num + (10-n);
    }
    else
    {
        num = num - n;
    }
    return num;
}
",,0
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",,0
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
",,0
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
",,0
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
",,0
9e2323cd896bf8c878fad40b42eac0e930afede4,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    String str = String.valueOf(num);
    int stringLength = str.length();
    int lastDigit = Integer.parseString(stringLength);
    if (lastDigit >= 0 && lastDigit < 5)
    {
        return num - lastDigit;
    }
    else if (lastDigit >= 5)
    {
        return num + (10 - lastDigit);
    }
}",,0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",,0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
37f7903670743e9c9bf2aaff038efd5604e3a02d,"public int[] tenRun(int[] nums)
{
    int ten = -1;
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] % 10 == 0)
        {
         	ten = nums[i]   
        }
        else if(ten =! -1)
        {
         	nums[i] = ten;   
        }
    }
    return nums;
}
",,0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",,0
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
",,0
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",,0
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
",,0
ff4d3fccfe514870f69c27a376b8457b4bff138d,"public String repeatEnd(String str, int n)
{
    StringBuilder stringbuild = new StringBuilder(n*n);
    String last = str.substring(str.length() - n);
    for(int i = 0; i < n; i++)
    {
     	stringbuild.append(last);   
    }
    return stringbuild.toString();
}
",,0
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",,0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",,0
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
",,0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",,0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",,0
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
",,0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",,0
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",,0
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",,0
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",,0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",,0
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",,0
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
",,0
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
",,0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",,0
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
",,0
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
",,0
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
",,0
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",,0
8c0f9dcd704011cbf52cb5dc21ee56f487e61fcd,"public int sortaSum(int a, int b)
{
int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
    
}
",,0
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",,0
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",,0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",,0
bb2ae423a58dba51d22b59f9a31c68109af53f17,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
   int start = nums[nums.length];
    for (int i = 0; i < nums.length - 1; i++)
    {
     	
        nums[i] = nums[i + 1];
        if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }
        	
    }
    
    
    return nums;   
}
",,0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",,0
2216bc569ee8caff75d3702a81475722e85c8551,"public int noTeenSum(int a, int b, int c)
{
	this.fixTeen(a);
    this.fixTeen(b);
    this.fixTeen(c);
    return a + b + c;
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
        if (n == 15 || n == 16)
            return n;
        return 0;
    //return n;
}
",,0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",,0
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",,0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",,0
fd975fc2b0de30ea1fa6c9ae43f605604231b8a1,"public boolean endOther(String a, String b)
{
    if (a.substring(a.length() - b.length(), a.length()).equals(b) ||
        b.substring(b.length() - a.length(), b.length()).equals(a))
        return true;
    else 
        return false; 
}
",,0
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",,0
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",,0
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",,0
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",,0
6bb0ee0ad18b7740337fbdd1e749d82571043674,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return ""@"";
    }
    else
    {
        return ""@@"";
    }
}
",,0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",,0
362a2f0a626da6c1866ddc7e6c299b4172cc1539,"public int sortaSum(int a, int b)
{
	int sum = a + b;
	if(sum >= 10 && sum <= 19)
		return 20;
	return sum;
}
",,0
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
",,0
cd727adb54733c5b0e8ec8f90e3a20c4ce931c92,"public int makeChocolate(int small, int big, int goal)
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
    {
        return remainder;
    }
        
    return - 1;
}
",,0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",,0
a6ef869527e799ebeaa3435595e0271453b97469,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    int temperature = temp;
    boolean summer = isSummer;
    int minTemp = 60;
    int maxTemp = 90;
    boolean play = false;
    if (summer == true)
    {
        maxTemp += 10;
    }
    if (temp >= minTemp && temp <= maxTemp)
    {
        play = true;
    }
    return (play);
}
",,0
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
",,0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",,0
0fa8ecdfc6d66b579fc914fb271b9f30d515fa71,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
    }
}
",,0
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",,0
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
",,0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",,0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",,0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",,0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",,0
b1cd225c96f83cf234170ea444a1959fbfd4bcde,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    if (b == 13)
        return a;
    if (c == 13)
        return (a + b);
    return (a + b + c);
}
",,0
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
",,0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",,0
b03f6ee58d1c2efbc298c1b090d888a47d5425a9,"public boolean evenlySpaced(int a, int b, int c)
{
    if (b-a <= 1 && c-a >= 2 && c-b >= 2 
        || b-a >= 2 && c-a <= 1 && c-b >=2
        || b-a >=2 && c-a >= 2 && c-b <= 1)
        return true;
    return false;
}
",,0
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
",,0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",,0
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",,0
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",,0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
666a7f0c20c29b5666745dfb4c61a7a881f21218,"public boolean evenlySpaced(int a, int b, int c)
{
    boolean spaced = false;
    int aMinusB = a - b;
    int aMinusC = a - c;
    if (aMinusB == aMinusC || aMinusB == -aMinusC)
    {
        spaced = true;
    }
    return spaced;
}
",,0
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
",,0
cd727adb54733c5b0e8ec8f90e3a20c4ce931c92,"public int makeChocolate(int small, int big, int goal)
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
    {
        return remainder;
    }
        
    return - 1;
}
",,0
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
",,0
dabbc0fac0e4efb2d8353000f3f477c0332d8b9b,"public boolean endOther(String a, String b)
{
    String astring = a.toLowerCase();
    String bstring = b.toLowerCase();
    
    if (astring.endsWith(bstring) || bstring.endsWith(astring))
    {
        return true;
    }
    else 
    {
        return false;
    }
    
}
",,0
4ba46181a66bb2f3cf45d38876db8736b1ebda46,"public boolean in1To10(int n, boolean outsideMode)
{
    return ((n >= 1 && n<=10 && !outsideMode) || (n > 10 || n < 1 && outsideMode));
}
",,0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",,0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",,0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",,0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",,0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
f4b03862b0451a373caa9f6bb7390b99d9c24f62,"public String atFirst(String str)
{
    return str.substring(0, 2);
}
",,0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",,0
aad21cf9cc250dd501d670f5429051de28e4e8f4,"public int countCode(String str)
{
    int l = str.length();
    int lim = l - 4;
    for (int i = 0; i <= lim; i++)
    {
        int ii = i + 1;
        int iii = i + 3;
        char o = str.charAt(i);
        char oo = str.charAt(ii);
        char ooo = str.charAt(iii);
        if (o == 'c' && oo == 'o' && ooo == 'e')
        {
            return true;
        }
    }
    return false;
}
",,0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",,0
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",,0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",,0
4cad14f6dc235bb7665a336718b0bc721df9ddd2,"public boolean isEverywhere(int[] nums, int val)
{
    Boolean result = true;
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            result = true;
        }
        else
        {
            result = false;
            break;
        }
    }
    return result;
}
",,0
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
",,0
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
",,0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",,0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",,0
962b3477ec354e161c083e5db8dfae7595c12ab5,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
		return 0;
    }
	if (b == 13)
    {
		return a;
    }
	if (c == 13)
    {
		return (a + b);
    }
	return (a + b + c);
}
",,0
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
",,0
1be789ce8cc8ac37b46edbb72d31a91896a21262,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
            return true;
    return false;
}
",,0
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
",,0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",,0
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
",,0
7d1223c04b3cdd6a8c111f378ce0f3cf10b7c095,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
        char l1;
        l1 = str.charAt(i);
        
        char l2;
        l2 = str.charAt(i + 1);
        
        char l3;
        l3 = str.charAt(i + 2);
        
        char bob;
        bob = (l1 + l2 + l3);
        
        if (bob.startsWith(b) && bob.endsWith(b))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
        
        
}
",,0
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
",,0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",,0
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",,0
831d4624fc6b65528bad888eede0abe0e570d59f,"public int[] seriesUp(int n)
{
    int len = n*(n+1)/2;
    int[] nums = new int[len];
    int index = 0;
	for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            nums[index] = j;
            index++;
        }
    }
    return nums;
}
",,0
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
",,0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
",,0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",,0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",,0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",,0
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",,0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",,0
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
",,0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",,0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",,0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
0dafe7c392194737e509d5114acb3ac7ff161ec1,"public boolean evenlySpaced(int a, int b, int c)
{
    if (math.abs(a-b) == math.abs(c-b) || math.abs(b-c) == math.abs(a-c))
    {
     	return true;   
    }
    else
    {
     	return false;   
    }
}
",,0
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",,0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",,0
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",,0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",,0
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",,0
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",,0
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",,0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",,0
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
",,0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",,0
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
",,0
1c979246d26ff31f354ba006318397f665275f62,"public int[] fix45(int[] nums)
{
        for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",,0
285f17ea9cf2578714c63d4ba958eeeb89a61a4d,"public int redTicket(int a, int b, int c)
{
    if (a == b && c == b && a != 2)
    {
        return 5;
    }
    else if (a == b && c == b && a == 2)
    {
        return 10;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",,0
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
",,0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",,0
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
",,0
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
",,0
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",,0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",,0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",,0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",,0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",,0
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",,0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",,0
9f87b2b05c03f2be8a156ec1c96ef54488b5591a,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean check = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (check)
        {
         	if (nums[i]==7)
            {
                check = false;
            }
        }
        else if (nums[i]==6)
        {
            check = true;
        }
        else
        {
            sum = sum + nums[i];
        }
    }
    return sum;
}
",,0
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",,0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",,0
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
",,0
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
",,0
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",,0
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
",,0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",,0
d3fc7117bd8d2d3ce23fb6c7b34d1274ad60e27c,"public boolean xyzThere(String str)
{

    if (str.length () >= 3  && str.contains(""xyz""))
        
    {
        return true;
    }
        for (int x = 0; x < str.length() -3; x++)
        {
   			if (str.charAt(x) == '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return false;
    }
        
        }
    {return false;}

}
",,0
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
",,0
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
",,0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",,0
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
",,0
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
",,0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
",,0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",,0
88111a1b682c4e3263232c7e42baecf389dd8a17,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0)
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
    else
    {
    	return 0;
    }
}
",,0
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
",,0
203f9c47a0738c4f7deb3aa08f1ac17b6d91cac6,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    int index = 0;
    
    for (int i : nums)
    {
        if (i != 10)
        {
            array[index] = i;
            index++;
        }
    }
    
   return array;
}
",,0
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
",,0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",,0
0dafe7c392194737e509d5114acb3ac7ff161ec1,"public boolean evenlySpaced(int a, int b, int c)
{
    if (math.abs(a-b) == math.abs(c-b) || math.abs(b-c) == math.abs(a-c))
    {
     	return true;   
    }
    else
    {
     	return false;   
    }
}
",,0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",,0
e5f4a1d12a2732c56ffa6463cfe4561bd754d8e2,"public String atFirst(String str)
{
    if (str.length >= 2)
    {
        return (str.substring(0,2));
    }
    else
    {
        return (str + ""@"");
    }
}
",,0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",,0
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
",,0
8a0e6921d90f277a49a3717341fba0a5c10d569a,"public int[] frontPiece(int[] nums)
{
    int[] twoNums;
    if (nums.length >= 2)
    {	twoNums.add(nums[0]);
        twoNums.add(nums[1]);}
    else if (nums.length == 1)
    {
        twoNums.add(nums[0]);}
    return twoNums;
}
",,0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",,0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",,0
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
",,0
66d81d6a71405ccedc06586970c02dcccae77323,"public int[] fix45(int[] nums)
{
    int k;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(k = 0; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4)); k++)
            {
                k = k;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
",,0
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
",,0
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",,0
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",,0
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
",,0
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",,0
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
",,0
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",,0
122351bbfe52ebd0f9a7ea655f3de2b511ff9c7f,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int roundSum = a + b + c;
    return roundSum;
}

public int round10(int num)
{
    int round10 = 0;
    int roundedNum = num % 10;

    if (num < 10)
    {
        if (num / 5 > 1)
        {
            num = 0;
        }
        else
        {
            num = 0;
        }      
    }
    else 
    {
       	if (roundedNum >= 5)
       	{
            roundedNum = 10 - roundedNum;
            num = roundedNum + num;
       	}
       	else if ((roundedNum < 10) && (roundedNum != 0))
       	{
            num = num - roundedNum;
       	}
    }
    round10 = num;
    return round10;
}
",,0
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
",,0
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
",,0
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
",,0
390cb0d114ae7595435ca6326f70fb705ed79016,"public int sum67(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            for (int j = i; nums[j] == 7; j++)
            {
                if (j == nums.length - 1)
                {
                    return sum;
                }
                else
                {
                    i = j + 1;
                }
            }
        }
        sum += nums[i];
    }
    return sum;
}
",,0
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",,0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",,0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",,0
b4468d47a8297b1e9c61604e85cae3c230640006,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int rd = num % 10;
      
    if(rd >= 5)
        return num + 10 - rd;
                
    return num - rd;
}
",,0
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
",,0
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",,0
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",,0
0615e4e3628f3968baa7039844e88175c1722d19,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend)
    {
        return (cigar >= 40);
    }//end if
    
    return (cigars >= 40 && cigars <= 60);
    
    
}
",,0
b21968551c96cdcb3911e00b1ba4334aea3ec6a3,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int leftShift = nums[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = leftShift;
    }
    return leftShift;
}
",,0
bb771f79da2e164515e0325c84eaa2dbd392e69b,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = 0;
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}",,0
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",,0
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",,0
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",,0
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
",,0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",,0
4ab93bf88b80fa76f8c7c6f5499d40a451e7e897,"public boolean great; 

public boolean love6(int a, int b)
{
    Math.abs(a, b);
}
",,0
cd727adb54733c5b0e8ec8f90e3a20c4ce931c92,"public int makeChocolate(int small, int big, int goal)
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
    {
        return remainder;
    }
        
    return - 1;
}
",,0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",,0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",,0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",,0
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",,0
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
",,0
7a29ef65b7e45220d53dcb24e896410e0715fcae,"public String repeatEnd(String str, int n)
{
    int length = str.length();
    String nString = str.substring(length - n, length);
    for ( int = 0; i < n, i++)
    {
        String nTimes = nTimes + nString;
    }
    return nTimes;
}
",,0
4ba46181a66bb2f3cf45d38876db8736b1ebda46,"public boolean in1To10(int n, boolean outsideMode)
{
    return ((n >= 1 && n<=10 && !outsideMode) || (n > 10 || n < 1 && outsideMode));
}
",,0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",,0
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}",,0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
",,0
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
",,0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",,0
3bd541a9a74cfbc86ccd7aff7e6e071a6371cb04,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else
        return a + b + c;
}
",,0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",,0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",,0
950ae3f3dd7e65512b25246ae8942932060da3ba,"public String plusOut(String str, String word)
{
    for (int i = 0; i < str.length(); i++)
    {
        String plusString;
        if (!str.substring(i, i + word.length()).equals(word))
        {
            plusString = str.replace(str.charAt(i), '+');
        }
        else if (i == str.length())
        {
            return plusString;
        }
    }
    return ""f"";
}",,0
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",,0
675bcd184d9310079ebc49f8a2095b7f7d72ed27,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return c;
    else if (b == c)
        return a;
    else if (a == c)
        return b;
    else if (a == b && b == c)
        return 0;
    else
        return a + b + c;
}
",,0
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",,0
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
",,0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",,0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",,0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",,0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",,0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",,0
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
",,0
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
",,0
d620f21e27a87e15d05a4f085e8ed51214622697,"public String alarmClock(int day, boolean vacation);
int alarmTime = 0;
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	alarmTime=7;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	alarmTime=10;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=off;
    	}
    }
return alarmTime;    
}
",,0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",,0
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
",,0
fb3b878ff7c89e0940c66e22faadec79ac2996e7,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i: int[])
    {
     	sum = sum + i;
    }
    return sum;
}
",,0
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
",,0
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
",,0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",,0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",,0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",,0
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",,0
c65c6b3814047b3aaef3794d06b2e294c8c889f4,"public String repeatEnd(String str, int n)
{
    StringBuilder stbuild = new StringBuilder(n*n);
    String last = str.substring(str.length() - n);
    for (int i = 0; i < n; i++)
    {
        stbuild.append(last);
    }
    return stbuild.toString();
}
",,0
2554504cf73dcc772aa6c40d5e1c117584eceb44,"public int sum13(int[] nums)
{
    int total = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i > 0)
        {
            if (nums[i] != 13 && nums[i - 1] != 13)
            {
                total += nums[i];
            }
        }
        else
        {
            if (nums[i] != 13)
            {
                total += nums[i];
            }
        }
    }
    
    return total;
}
",,0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
88111a1b682c4e3263232c7e42baecf389dd8a17,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0)
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
    else
    {
    	return 0;
    }
}
",,0
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
",,0
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",,0
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
",,0
87346e3e31d1cd09cf1ea78408fe3cd51d049e2e,"public int sum13(int[] nums)
{
    sumNum = 0;
    if (nums.length == 0)
    {
        return sumNum;
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
        {
            i += 1;
        }
        else
        {
            sumNum += nums[i];
        }
    }
    return sumNum;
}
",,0
b34be99893fc029dc3d4af3527c8ca5ffa920388,"public String repeatEnd(String str, int n)
{
    String newString = """";
    
    for (int i = 0; i < n; i++)
    {
        for (int z = n - 1; z > -1; z -= 1)
        {
            newString = newString + str.charAt(str.length() - z);
        }
    }
    
    return newString;
}
",,0
ca1870b1df47e2084ad5408ac293ab511a73c5d0,"public int blackjack(int a, int b)
{
    if (a > 0 && b > 0)
    {
        if (a > b && a <= 21)
        {
        	return a;
        }
        else if (b > a && b <= 21)
        {
            return b;
        }
        else if (a > 21)
        {
            return b;
        }
        else if (b > 21)
        {
            return a;
        }
    }    
    return 0;
}
",,0
390cb0d114ae7595435ca6326f70fb705ed79016,"public int sum67(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            for (int j = i; nums[j] == 7; j++)
            {
                if (j == nums.length - 1)
                {
                    return sum;
                }
                else
                {
                    i = j + 1;
                }
            }
        }
        sum += nums[i];
    }
    return sum;
}
",,0
959dbd2a989a7ce221ec57d0689b4d90d8cb8d7e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning == true && isMom == true)
    {
        return true;
    }
    else if (isMorning == true && isMom == false)
    {
        return false;
    }
    else if (isAsleep == true)
    {
        return false;
    }
    if (isMorning == true && isMom == true && isAsleep == true)
    {
        return false;
    }
    else
    {
        return true;
    }
}
",,0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",,0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",,0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",,0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",,0
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",,0
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
",,0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",,0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",,0
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",,0
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",,0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",,0
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
",,0
5455ec6afe437e7506504e1f1428a5a0b96a5669,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
    if (a > b)
    {
       return blackjack(a, 0);
    }
    else if (b > a)
    {
        return blackjack(0, b);
    }
    } 
    return 0;
}

",,0
888a63dff1f59fa6a944754dead51bf5ff29d397,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}",,0
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
",,0
c5d364aebfeaf536888aa2177a5459f2c3dcb34e,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i < nums.length; i++)
    {
    	if (i+1 < nums.length && i-1 >= 0)
        {
        	if (nums[i+1] == val || nums[i] == val)
            {
            	everywhere = true;
                
            }            
        }        
    }
    return everywhere;
}
",,0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
b16439cf6ef5c619010c64a8fb33444995f538e6,"public String plusOut(String str, String word)
{
    String returnString = """";
    int lastIndex = str.indexOf(word);
    int i = lastIndex;
    
    while (i < str.length())   
    {
        if (i == str.indexOf(word, lastIndex))
        {
            returnString = returnString + word;
            lastIndex = i;
            i += (word.length() - 1);
        }
        
        else
        {
            returnString = returnString + ""+"";
            i++;
        }
    }
	return returnString;
}
",,0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",,0
b21271e79419b123e5e2d4ff29ca2f214f3fb90e,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if (a==b || a==c || b==c)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
",,0
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",,0
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
",,0
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
67512e6abc150f86462e6ffdaabd155ce19ea2c2,"public int[] seriesUp(int n)
{
    int[] finding = new int[n * (n+1) / 2];
    int i = 0;
    for (int j = 1; j <= n; ++j)
        for (int k = 1; k <= j; ++k)
            result[i++] = k;
    return result;
}
",,0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
677fbb2c5184ad034acd62c6303f9fdf6cbce459,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffAB = Math.abs(a - b);
    int diffBC = Math.abs(b - c);
    int diffAC = Math.abs(a - c);
    //if (diffAB == diffBC || diffAC == diffBC || diffAB == diffAC)
    if (a == b || b == c || a == c)
    {
        return false;
    }
    else
    {
        return true;
    }
}",,0
a23678b6f1ed32125aafce452d7f4f6449fb3591,"public int makeChocolate(int small, int big, int goal)
{
    int numLeft = goal % 5;
    if ((small + (big*5)) < goal) // if total number of bars is not enough
    {
        return -1;
    }
    else if ((big * 5) == goal) 
    {
        return numLeft;
    }
    if (numLeft <= small)
    {
        return numLeft;
    }
    else
    {
        return goal - (big*5);
    }
}
",,0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",,0
9e2323cd896bf8c878fad40b42eac0e930afede4,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    String str = String.valueOf(num);
    int stringLength = str.length();
    int lastDigit = Integer.parseString(stringLength);
    if (lastDigit >= 0 && lastDigit < 5)
    {
        return num - lastDigit;
    }
    else if (lastDigit >= 5)
    {
        return num + (10 - lastDigit);
    }
}",,0
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",,0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",,0
2fca6215c9c9afb58d28887169dfe435558d7825,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a <= 21 && a > b)
    {
        return a;
    }
    else if (b <= 21 && b > a)
    {
        return b;
    }
    else if (b <= 21 && a > 21)
    {
        return b;
    }
    else
    {
     	return a;   
    }
}
",,0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",,0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",,0
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
",,0
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",,0
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",,0
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",,0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",,0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",,0
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
",,0
988884b587c19ee5d329f79283724a6642239e83,"public int makeChocolate(int small, int big, int goal)
{
    int bigKilos = big * 5;
    int smalls = goal - bigKilos;
    if (smalls <= 0)
    {
        return -1;
    }
    else
    {
        return smalls;
    }
}
",,0
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
",,0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",,0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",,0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",,0
89d29f4f5d833c3359c7406ca1e2f3f2a7310cd1,"public int greenTicket(int a, int b, int c)
{
    if (a = b || a = c || b = c)
    {
        return 10;
    }
    else if (a = b && b = c)
    {
        return 20;
    }
    else
    {
        return 0;
    }
    
    
}
",,0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",,0
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",,0
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
",,0
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
",,0
a78b0b2a23a387c2857431a24b8be8c3c29a23d4,"public int centeredAverage(int[] nums)
{
    int Arrays;
    Arrays.sort(nums);
  int sum=0;
  for(int i=1; i < nums.length-1; i++) {
    sum = sum+nums[i];
  }
  return sum/(nums.length-2);
}
",,0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",,0
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
",,0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",,0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",,0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",,0
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",,0
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",,0
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",,0
87b2b1811ad58d7a1fff515864427654134ed8fa,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            if (j == 0)
            {
            	while (nums[j] != 5)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
            
            else
            {
                while (nums[j] != 5 && nums[j - 1] != 4 && j < nums.length)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
        }
    }
    return nums;
}",,0
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",,0
2554504cf73dcc772aa6c40d5e1c117584eceb44,"public int sum13(int[] nums)
{
    int total = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i > 0)
        {
            if (nums[i] != 13 && nums[i - 1] != 13)
            {
                total += nums[i];
            }
        }
        else
        {
            if (nums[i] != 13)
            {
                total += nums[i];
            }
        }
    }
    
    return total;
}
",,0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",,0
d3fc7117bd8d2d3ce23fb6c7b34d1274ad60e27c,"public boolean xyzThere(String str)
{

    if (str.length () >= 3  && str.contains(""xyz""))
        
    {
        return true;
    }
        for (int x = 0; x < str.length() -3; x++)
        {
   			if (str.charAt(x) == '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return false;
    }
        
        }
    {return false;}

}
",,0
739598df6f10e1b41997fbbce33f2e2bf0fd995e,"public boolean has77(int[] nums)
{
    int x = nums.length;
    for (int i = 0; i < x; i++)
    {
        if (i < x - 1 && nums.[i] == 7 && nums.[i + 1] == 7)
        {
            return true;
        }
        if (i < x - 2 && nums.[i] == 7 && nums.[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
",,0
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",,0
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
",,0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",,0
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",,0
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
",,0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",,0
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",,0
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
",,0
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
",,0
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
",,0
be7dd1c681ece206447d7c19a5ae06f1777a4e05,"public boolean xyzThere(String str)
{
 
    if (str.length () >= 3  && 
        str.substring(0,3).equals(""xyz"") )
    {
        return true;
    }
        for (int x = 0; x < str.length() -2; x++)
        {
   			if (str.charAt(x) != '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return true;
    }
  
    {
        return false;
    }
            {return false;}
}
}
",,0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",,0
6c5f6108333f344785ee689de07d00263b413498,"public String repeatEnd(String str, int n)
{
    return str; 
}
",,0
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",,0
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
",,0
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
",,0
9222afd237f2a153dec01f15809e88ec81bac994,"public String plusOut(String str, String word)
{
    String trivialEnd = """";
    int n = 0;
    
    while (n <= str.length())
    {
       if (str.substring(n).startsWith(word))
       {
           trivialEnd += word;
           n += word;
           
       }
        else 
        {
            trivialEnd += '+';
            n++
        }   
    }   
    return trivialEnd;
}
",,0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",,0
56ac97e6ac311645870c594b750311820db92f19,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        n = 0;
}
",,0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",,0
c531b36cd72156cb65bd26c919a9de7a647ca456,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int x = num % 10;
    if (x >= 5)
    {
        return num + (10 - x);
    }
    else
    {
        return num - x;
    }
}
",,0
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
",,0
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",,0
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",,0
80bd7b62bcf579c0d23c6204a459cb8f40d27abb,"public int sum3(int[] nums)
{
    int sum= 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + sum3[nums];
    }
    return sum;
}
",,0
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",,0
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
",,0
3d4c1103cc1b9f1262e0e2e77865c91089068160,"public boolean canBalance(int[] nums)
{
    int sum1 = 0;
    for (int = 0; i < nums.length / 2; i++)
    {
        sum1 = sum1 + nums[i];
    }
    int sum2 = 0;
    for (int j = nums.length / 2; j < nums.length; j++)
    {
        sum2 = sum2 + nums[j]
    }
	return sum1 = sum2;
}",,0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",,0
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",,0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",,0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",,0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",,0
cd727adb54733c5b0e8ec8f90e3a20c4ce931c92,"public int makeChocolate(int small, int big, int goal)
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
    {
        return remainder;
    }
        
    return - 1;
}
",,0
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
",,0
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",,0
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
",,0
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
",,0
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

",,0
e0d4c69d7595be4d7524172434e2cc21e57661e9,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
        {
            i = i + 1;
            continue;
        }
        sum += nums[i];
    }
    return sum;
        
}
",,0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",,0
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",,0
9e2323cd896bf8c878fad40b42eac0e930afede4,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    String str = String.valueOf(num);
    int stringLength = str.length();
    int lastDigit = Integer.parseString(stringLength);
    if (lastDigit >= 0 && lastDigit < 5)
    {
        return num - lastDigit;
    }
    else if (lastDigit >= 5)
    {
        return num + (10 - lastDigit);
    }
}",,0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",,0
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",,0
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
",,0
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

",,0
236d7050d3c0a39f9f44cd0b1b6032d1812a8f4a,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i+1] != 5)
        {
            for (int j = 0; !(nums[j] == 5 && (j == 0 || j > 0 && 					nums[j-1] != 4));; j++);
            {
                nums[j] = nums[i + 1];
                nums[i+1] = 5;
            }
        }
    }
    return nums;
}
",,0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",,0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
c2d61ec107eccdb9adb3fafda65cc667a48a0223,"public String without2(String str) 
{
    int length = str.length();
    if (length >= 2)
    {
     	if (str.substring(0,2).equals(str.substring(length-2,length)))
          
        {
          	return str.substring(2);
        }
                                             	
                                           
         else 
         {
             return str;                        
         }
    else
    {
     	return str;   
    }
}
",,0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",,0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",,0
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
",,0
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
",,0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",,0
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",,0
4951e3e93960ed4399945d8a349ac025dd9fc00d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum<= 19)
    {
     	sum = 20;   
    }
    return sum;
}
",,0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",,0
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
",,0
d3a645a994947a7c3575b064df7dad3bd8caba0d,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else if ((a == b) && (b == c))
    {
        return 0;
    }
    else
    {
        return a + b + c;
    }
}
",,0
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
",,0
cf6036cc34155af32690c2a41cc6f1def095e657,"public int countClumps(int[] nums)
{
    boolean areSame = false;
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh && !areSame)
        {
            clumps++;
            areSame = true;
        }
        else if (compareLow != compareHigh)
        {
            areSame = false;
        }
    }
    return clumps;
}
",,0
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
",,0
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",,0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",,0
b0de87b4e81b39ba1a103570a5c0ea6664ef233b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        int noticket = 0;
    }
}
",,0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",,0
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",,0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",,0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",,0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",,0
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",,0
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",,0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",,0
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
",,0
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",,0
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
",,0
ccadebb9f2b4222d60b3854c3055f5edbb4f1384,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (!isWeekend) {
    	if (cigars >= 40 && cigars <= 60) {
        	return 
        }
        else {
        	return false;
        }
    }
    else {
    	if (cigars >= 40) {
        	return 
        }
        else {
        	return false;
        }
    }
}
",,0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",,0
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
",,0
f5233a608146cd5a8e90ba5efd302bc9caf3f6cd,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length; i ++)
    {
        if (nums[i] == 0)
        {
            nums[i] = this.findMax(nums);
        }
    }
    return nums;

}

public int findMax(int[] nums)
{
    int max = 0;
    for (int i = 0; i < nums.length; i++) 
    {
        if (nums[i] % 2 != 0 && nums[i] > max)
        {
            max = nums[i];
        }
    }
    return max;
}
",,0
7bbe47ddbd540b9999602f687a555456a4122938,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	while (isBirthday == false)
    {
    	if (speed <= 60)
        {
            return 0;
        }
    	else if (speed >= 61 && speed <= 80)
        {
            return 1;
        }
    	else if (speed >= 81)
        {
            return 2;
        }
    }
    while (isBirthday == true)
    {
        if (speed <= 65)
        {
            return 0;
        }
    	else if (speed >= 66 && speed <= 85)
        {
            return 1;
        }
    	else if (speed >= 86)
        {
            return 2;
        }
    }
    return 1;
}",,0
09a8c33c60aa11c021e8b84d90d8a62d6b24e858,"public boolean canBalance(int[] nums)
{
    int total = 0;
    int length = nums.length;
    for ( int i = 0; i < length; i++ )
    {
        total += nums[i];
    }
    
    if ( total % 2 == 1 )
    {
        return false;
    }
    else
    {
        if ( total == 0 && length == 1 )
        {
            return false;
        }
        else
        {
        	int smallTotal = 0;
        	int j = 0;
        	while ( smallTotal < total / 2 )
        	{
            	smallTotal += nums[j];
            	j++;
        	}
        	return ( smallTotal == ( total / 2 ) );
        }
    }
}
",,0
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
",,0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",,0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
4ba7a3716b0de9a8d7d5a388dff95400fce8be58,"public String alarmClock(int day, boolean vacation)
{
    if (vacation == true)
    {
    	if (day == 0 || day == 6)
            return ""Off"";
        else
            return ""10:00"";
    }
    else
    {
    	if (day == 0 || day == 6)
            return ""10:00"";
        else
            return ""7:00"";
    }
}
",,0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",,0
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
",,0
6bb0ee0ad18b7740337fbdd1e749d82571043674,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return ""@"";
    }
    else
    {
        return ""@@"";
    }
}
",,0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",,0
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
",,0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",,0
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
",,0
64e0424fbe56241d18d3f1d7ef407f1a28208ce5,"public int[] frontPiece(int[] nums)
{
    return nums[0] nums[1]
}
",,0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",,0
2554504cf73dcc772aa6c40d5e1c117584eceb44,"public int sum13(int[] nums)
{
    int total = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i > 0)
        {
            if (nums[i] != 13 && nums[i - 1] != 13)
            {
                total += nums[i];
            }
        }
        else
        {
            if (nums[i] != 13)
            {
                total += nums[i];
            }
        }
    }
    
    return total;
}
",,0
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",,0
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",,0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",,0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",,0
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
",,0
5b9eb535280570f293684ef95c107bc80160a334,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = len;
	for (int i =0; i <range;i++)
    {
		if (!(nums[i] == nums[nums.length - range + i]))
        {
			result = false;
        }
    }
return result;
}
",,0
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",,0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",,0
0cbcdcccb97a84929ef84adcbae98515edde8dfa,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    
   int d = num %10;
    if (d >= 5)
        return num + 10 -d;
    return num -d;
}
",,0
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
",,0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",,0
c72936a1839694da8df5554d66db79bf67bec60c,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (isBirthday)
    {
        speed = speed + 5
    }
	if (speed <= 60)
	{
    	return 0;
	}
    
	if (speed >= 61 && speed <= 80)
	{
    	return 1;
	}
    
	if (speed >= 81)
	{
    	return 2;
	}
	
}
",,0
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
",,0
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
",,0
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",,0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",,0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",,0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",,0
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
",,0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",,0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",,0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",,0
27986e92f636a98dd570597a3cc6cc2f8c45faad,"public int blackjack(int a, int b)
{
    if (int a>21 && int b>21);
    {
        return 0;
    }
    else if (int a > 21);
    {
        return 'b';
    }
    else if (int b > 21);
    {
        return 'a';
    }
    else if ((21-a)>(21-b));
    {
        return 'a';
    }
    else
    {
        return 'b';
    }
}
",,0
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",,0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",,0
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
",,0
f30654182094f99250e185d999714f2745fd679b,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean check = false;
    if (nums.length == 0)
    {
        return sum;
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (check)
        {
            if (nums[i] == 6)
            {
               check = true;
            }  
        }
        else if (nums[i] == 7)
        {       
            check = false;
        }
        if (!check)
        {
            sum = sum + nums[i];
        }
    }
    return sum;
}
",,0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",,0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
",,0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",,0
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
",,0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",,0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",,0
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",,0
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
",,0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",,0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",,0
c72936a1839694da8df5554d66db79bf67bec60c,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (isBirthday)
    {
        speed = speed + 5
    }
	if (speed <= 60)
	{
    	return 0;
	}
    
	if (speed >= 61 && speed <= 80)
	{
    	return 1;
	}
    
	if (speed >= 81)
	{
    	return 2;
	}
	
}
",,0
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
",,0
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
",,0
ce8faf0b0976ddb82152e029b4e00668a05ed30f,"public String without2(String str) 
{
    int l = str.length();
    if (l <= 1)
    {
        return str;
    }
    else if (l == 2)
    {
        return """";
    }
    else
    {
        if (str.substring(0, 2) == str.substring(l - 2, l))
        {
            return str.substring(0, 2) + "" == "" + str.substring(l - 2, l);
        }
        else
        {
            return str.substring(0, 2 + "" != "" + str.substring(l - 2, l);
        }
    }
}
",,0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",,0
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",,0
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",,0
bb771f79da2e164515e0325c84eaa2dbd392e69b,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = 0;
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",,0
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
",,0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",,0
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",,0
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",,0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",,0
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
",,0
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",,0
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",,0
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",,0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",,0
888a63dff1f59fa6a944754dead51bf5ff29d397,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}",,0
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",,0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
e5f4a1d12a2732c56ffa6463cfe4561bd754d8e2,"public String atFirst(String str)
{
    if (str.length >= 2)
    {
        return (str.substring(0,2));
    }
    else
    {
        return (str + ""@"");
    }
}
",,0
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
",,0
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",,0
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
203f9c47a0738c4f7deb3aa08f1ac17b6d91cac6,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    int index = 0;
    
    for (int i : nums)
    {
        if (i != 10)
        {
            array[index] = i;
            index++;
        }
    }
    
   return array;
}
",,0
7e7c66de43f3403869e2a5e32affc77e3e798f68,"public int sum13(int[] nums)
{
    boolean before = false;
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (before == true)
        {
            continue;
        }
        
        if (nums[i] != 13)
        {
        	sum = sum + nums[i];
            before = flase;
        }
        else
        {
            before = true;
        }
            
    }
    return sum;
}
",,0
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",,0
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
",,0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",,0
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",,0
6b538f7d9eac6f8c54cd2c59a699ca73280e0930,"public class FizzArray {

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",,0
4951e3e93960ed4399945d8a349ac025dd9fc00d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum<= 19)
    {
     	sum = 20;   
    }
    return sum;
}
",,0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",,0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",,0
eb3954d897ab04a8ee9649988f3d26e98aae722f,"public String[] fizzBuzz(int start, int end)
{
    String[] result = new String[end - start];
    
    for (int i = 0; i < end - 1; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
",,0
e39a25aaad84b1961772be00d43af043549c8980,"public boolean twoTwo(int[] nums)
{
    boolean two = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i + 1] == 2)
        {
            two = true;
        }
    }
    return two;
}
",,0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",,0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",,0
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
",,0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",,0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",,0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",,0
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",,0
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
",,0
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
",,0
67512e6abc150f86462e6ffdaabd155ce19ea2c2,"public int[] seriesUp(int n)
{
    int[] finding = new int[n * (n+1) / 2];
    int i = 0;
    for (int j = 1; j <= n; ++j)
        for (int k = 1; k <= j; ++k)
            result[i++] = k;
    return result;
}
",,0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",,0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",,0
cf6036cc34155af32690c2a41cc6f1def095e657,"public int countClumps(int[] nums)
{
    boolean areSame = false;
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh && !areSame)
        {
            clumps++;
            areSame = true;
        }
        else if (compareLow != compareHigh)
        {
            areSame = false;
        }
    }
    return clumps;
}
",,0
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",,0
27faba7aee4570488c76c3f9b70a86e66b50473b,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return 40 <= cigars;
    }
    if (40 <= cigars && cigars <= 60)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",,0
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",,0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",,0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",,0
b23234bdfab0d909602eff7d91c9461d3957de8f,"public String repeatEnd(String str, int n)
{
    String last = new String();
    for (int i = 0; i <= n; i++)
    {
        last = last.concat(str.substring(str.length() - n, str.length()));
    }
    return last;
}
",,0
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
",,0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",,0
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",,0
dc1c18a727a472113299aaf5bc76ffcf6180ee19,"public String[] fizzBuzz(int start, int end)
{
    end--;
    String[] result = new String[end - start];
    
    for (int i = 0; i < end; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
",,0
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
",,0
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
",,0
cdbd6769faf44b710f4b50d3f75878e7dff820b5,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    return ((a + b) < 10 || (a + b) > 19);
}
",,0
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
",,0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",,0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",,0
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",,0
5455ec6afe437e7506504e1f1428a5a0b96a5669,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
    if (a > b)
    {
       return blackjack(a, 0);
    }
    else if (b > a)
    {
        return blackjack(0, b);
    }
    } 
    return 0;
}

",,0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
",,0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
",,0
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",,0
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
",,0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",,0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",,0
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
",,0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",,0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",,0
0615e4e3628f3968baa7039844e88175c1722d19,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend)
    {
        return (cigar >= 40);
    }//end if
    
    return (cigars >= 40 && cigars <= 60);
    
    
}
",,0
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",,0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",,0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",,0
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

",,0
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",,0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",,0
f7aa866fe9c3cc59b8cbc34623cc9f4947001b38,"public int sum13(int[] nums)
{
   	int sum = 0;
    for (int i = 0; i < nums.length)
    {
        if (nums[i] != 13)
        {
        	sum+= nums[i] 
        }
        else
        {
            i++;;
        }
    }
}
",,0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",,0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",,0
56ac97e6ac311645870c594b750311820db92f19,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        n = 0;
}
",,0
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",,0
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",,0
a3d0ade34efb66dd891c79842fb1458d722ca927,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6 || a + b == Math.abs(6) || a - b == Math.abs(6)
       || b - a == Math.abs(6))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",,0
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",,0
67cf02114b3bfe337265bdec063d142febba7a23,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a > b > c)
    {
        int ab = a - b;
        int bc = b - c;
        if (ab == bc)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else if (a > c > b)
    {
        int ab = a - c;
        int bc = c - b;
        if (ab == bc)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else if (b > a > c)
    {
        int ab = b - a;
        int bc = a - c;
        if (ab == bc)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else if (b > c > a)
    {
        int ab = b - c;
        int bc = c - a;
        if (ab == bc)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else if (c > a > b)
    {
        int ab = c - a;
        int bc = a - b;
        if (ab == bc)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    else
    {
        int ab = c - b;
        int bc = b - a;
        if (ab == bc)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",,0
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",,0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",,0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",,0
55008f2ac50ecaccae3a878e34d56a2f00118737,"public int countClumps(int[] nums)
{
	int clump = 0;
    for (int i = 0; i < nums.length;i++)
    {
        
       {
           if ( i + 1 < nums.length)
           {
               if (nums[i] == nums[i + 1])
               {
                   clump = clump + 1;
                   for (int j = 1; j < nums.length; j++)
                   {
                       if (nums[i + 1] == nums[i + 1 + j])
                       {
                           i = i + 1;
                       }
                   }
               }
           }
       }
    }
    return clump;
}
",,0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",,0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",,0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",,0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",,0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",,0
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",,0
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",,0
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
",,0
b0b97b491d74292aebc0f4672b36a68af6758365,"public boolean canBalance(int[] nums)
{
    int sum = 0; 
    for (int num: nums)
    {
        sum = sum + num; 
    }
    int half = sum/2; 
    sum = 0; 
    int secondSum = 0; 
    for (int num: nums)
    {
         
        if (sum != half)
        {
            sum = sum + num; 
        }
        else 
        {
            secondSum = secondSum + num; 
        }
    }
    
    return secondSum == half; 
    
}
",,0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",,0
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
",,0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",,0
528342efb0a38ace805355f9ecda4f69f0397a23,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
	if (a == 13)
    {
        return sum;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        int sum = a + b;
        return sum;
    }
    else
    {
        int sum = a + b + c;
        return sum;
    }
}
",,0
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
",,0
b63f73f3977c83c5a9326abd2d8514897f04a240,"public String without2(String str) 
{
    int strLen = str.length();
    if (strLen < 2)
    {
        return str;
    }
    else if (strLen == 2)
    {
     return """";   
    }
    else if ((str.charAt(0) == str.charAt(strLen - 1)) && (str.charAt(1) == str.charAt(strLen - 2)))
    {
     	return ""blasblas""; //str.substring(1, strLen - 1);   
    }
    return str;
}
",,0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",,0
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",,0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",,0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",,0
4ba46181a66bb2f3cf45d38876db8736b1ebda46,"public boolean in1To10(int n, boolean outsideMode)
{
    return ((n >= 1 && n<=10 && !outsideMode) || (n > 10 || n < 1 && outsideMode));
}
",,0
5f54893096774cc5a8845fbf75e5977035726d1a,"public boolean xyzThere(String str)
{
    int leg = str.length() - 2;
    for (int s; s < leg ; s++)
    {
        if (str.charAt(s) == 'x' && str.charAt(s + 1) == 'y' && str.charAt(s + 2) == 'z')
        {
            if ( s == 0 || str.charAt(s - 1) != '.')
                return true;
        }
    }
       return false;
}
",,0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",,0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",,0
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",,0
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
",,0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",,0
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
",,0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",,0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
",,0
0596e9fad0e491fa66802102678ad39fda317949,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
    
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
        return num + (10 - round);
    else 
        return num + (round - 10);
    
}
",,0
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",,0
5bf86880f174d216925f9647311256fef5bd5940,"public String plusOut(String str, String word)
{
    String a;

        for (int i =0;i < str.length(); i + 0){
        if (str.substring(i, i + word.length().equals(word)))
        {
        	a = a + word;
            i = i + word.length();
        }else
        {
        	a = a + ""x"";
            i = i + 1;
        }
    }
    return a;
}
",,0
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",,0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",,0
332c6ec5c84a4b48b155a3ce7e3c41195bbaf8a1,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
",,0
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",,0
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
",,0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",,0
b20d525ead268bb3eced9c95cb88481aa8aab61d,"public int makeChocolate(int small, int big, int goal)
{
	if (goal > 5*big)
    {
       goal = goal - 5 * big); 
    }
    else
    {
        goal = goal % 5;
    }
    if (goal <= small)
    {
        return goal;
    }
    return -1;
}
",,0
cdbd6769faf44b710f4b50d3f75878e7dff820b5,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    return ((a + b) < 10 || (a + b) > 19);
}
",,0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
739598df6f10e1b41997fbbce33f2e2bf0fd995e,"public boolean has77(int[] nums)
{
    int x = nums.length;
    for (int i = 0; i < x; i++)
    {
        if (i < x - 1 && nums.[i] == 7 && nums.[i + 1] == 7)
        {
            return true;
        }
        if (i < x - 2 && nums.[i] == 7 && nums.[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
",,0
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
",,0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",,0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",,0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",,0
e6bc542b9cbf8d3396f467974901e047732726e6,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if(isAsleep)
		return false;
	else if(isMom)
		return true;
	else
        return (!isMorning);
}
",,0
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",,0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",,0
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
",,0
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
",,0
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
",,0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",,0
67512e6abc150f86462e6ffdaabd155ce19ea2c2,"public int[] seriesUp(int n)
{
    int[] finding = new int[n * (n+1) / 2];
    int i = 0;
    for (int j = 1; j <= n; ++j)
        for (int k = 1; k <= j; ++k)
            result[i++] = k;
    return result;
}
",,0
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",,0
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",,0
617e080aa52b2079a26ca214e0adcbebaeec5270,"public int makeChocolate(int small, int big, int goal)
{
   int rem = goal % 5;
   if (small + (5 * big) < goal)
   {
       return -1;
   }
  else if (rem <= small + (5 * big) >= goal)
  {
      return -1;
  }
  else
  {
      return small * rem;
  }
}
",,0
b9fbdeb0d25edd847f75474416127f7deac2ef05,"public int blackjack(int a, int b)
{ assert(a > 0);
 assert(b>0);
    if ((a > 21) && (b > 21)) {
        return 0;
    } else if (a > 21) {
        return b;
    } else if (b > 21) {
        return a;
    }
 int difference_a_21 = 21 - a;
 int difference_b_21 = 21 - b;
 if (difference_a_21 > difference_b_21) {
 return b; 
 } else {
     return a;
 }
}
",,0
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
",,0
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
75425f1933b79a25922b61b996d648bffa483140,"public int[] shiftLeft(int[] nums)
{
    int[] shifted = new int[nums.length];
    
    if (nums.length <= 1)
   	{
       	return nums;
   	}
    
    else
    {
        shifted[shifted.length - 1] = nums[0];
   		for (int i = 1; i < nums.length; i++)
   		{
       		shifted[i - 1] = nums[i];
   		}
    	return shifted;
    }
}",,0
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",,0
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",,0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",,0
a2c77eb2341d2107484dea64721c8eb1fb2b5c9b,"public int luckySum(int a, int b, int c)
{
    int sum = 0;
    if (a == 13)
    {
    	sum = c;
        return sum;
    }
    else if (b == 13)
    {
    	sum = a;
        return sum;
    }
    else if (c == 13)
    {
    	sum = a + b;
        return sum;
    }
    else
    {
    	sum = a + b + c;
        return sum;
    }
}
",,0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",,0
87b2b1811ad58d7a1fff515864427654134ed8fa,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            if (j == 0)
            {
            	while (nums[j] != 5)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
            
            else
            {
                while (nums[j] != 5 && nums[j - 1] != 4 && j < nums.length)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
        }
    }
    return nums;
}",,0
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",,0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",,0
a23678b6f1ed32125aafce452d7f4f6449fb3591,"public int makeChocolate(int small, int big, int goal)
{
    int numLeft = goal % 5;
    if ((small + (big*5)) < goal) // if total number of bars is not enough
    {
        return -1;
    }
    else if ((big * 5) == goal) 
    {
        return numLeft;
    }
    if (numLeft <= small)
    {
        return numLeft;
    }
    else
    {
        return goal - (big*5);
    }
}
",,0
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",,0
a909a3741798faeb11da5f71297a08fda4f9466c,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(n + 1);
    String repN = """";
    for (int i = 0; i < n; i++)
    {
        repN = repN + lastN;
    }
    return repN;
}",,0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",,0
a77d613083948b71c757aa65861a9fe355329648,"public int dateFashion(int you, int date)
{
    if (you >= 8 && date >= 8)
    {
    	return 2;
    }
    if (you <= 2 || date <=2)
    {
    	return 0;
    }
    else 
    {
    	return 1;
    }
}
",,0
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
",,0
ff5188ca09d212d12901f3d2fa492090bb58c2e9,"public int[] fizzArray(int n)
{
    int[] returnArray = new int[n];
    for (int i = 0; i < n; i++)
    {
        returnArray[i] = i;
    }
    return retrnArray;
}
",,0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",,0
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",,0
cc9d92e58c77513c6aab917cfcc7c112c1577e90,"public String[] fizzBuzz(int start, int end)
{
    String[] array = new String[end - start];
    
    for (int i = start; i < end; i++) 
    {
        if (i % 15 == 0) 
        {
            array[i - start] = ""FizzBuzz"";
        } 
        else if (i % 3 == 0) 
        {
            array[i - start] = ""Fizz"";
        } 
        else if (i % 5 == 0) 
        {
            array[i - start] = ""Buzz"";
        } 
        else 
        {
            array[i - start] = String.valueOf(i);
        }
    }
                                                      
    return array;
}
",,0
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",,0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",,0
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
",,0
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",,0
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
",,0
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
",,0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",,0
a5ef4e9ae777060ed56015c4182bbe5b63e80d69,"public boolean evenlySpaced(int a, int b, int c)
{
    return (a == b && b ==c);
    return ((Math.abs(a-b) == Math.abs(b-c)) || (Math.abs(a-c) == Math.abs(a-b)) || (Math.abs(c-a) == Math.abs(b-c)));    
}
",,0
ecef8ffff5f622c9ab6799c53c46541bd578254a,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean ifSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (ifSix)
        {
            if (nums[i] == 7)
                ifSix = false;
        }
        else if (nums[i] == 6)
        {
            ifSix = true;
        }
        //if ifSix is true, then it goes back into the for loop 
        //and the first if statement becomes true
        else
        {
            sum = sum + nums[i];
        }
        //takes the sum of the numbers when there is no linee of numbers starting
        //with a 6 and ending with a 7
    }
    return sum;
}
",,0
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
",,0
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",,0
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",,0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",,0
0a4d7aee449450431db0efcda5856b22d973b605,"public String getSandwich(String str)
{
    if(str.length() > 10 &&
       str.substring(0, 5) == ""bread"" &&
       str.substring(str.length() - 6, str.length() - 1) == ""bread"")
    {
        return str.substring(5, str.length() - 6);
    }
    else {
        return str.substring(5, str.length() - 6);
    }
}
",,0
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",,0
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
",,0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
",,0
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",,0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",,0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",,0
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
",,0
2fca6215c9c9afb58d28887169dfe435558d7825,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a <= 21 && a > b)
    {
        return a;
    }
    else if (b <= 21 && b > a)
    {
        return b;
    }
    else if (b <= 21 && a > 21)
    {
        return b;
    }
    else
    {
     	return a;   
    }
}
",,0
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
fe6f1db71252da2edc7dfe1ed53b97e3e8c7d386,"public int roundSum(int a, int b, int c)
{
    int sum=0;
	sum=sum+round10(a);

	sum=sum+round10(b);

	sum=sum+round10(c);
	return sum;
}

public int round10(int num)
{
    if(num%10 >4)
    {
		return (((num/10)+1)*10);
    }
	else 
    {
        return ((num/10)*10);
    }
}
",,0
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",,0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",,0
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
",,0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",,0
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",,0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",,0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",,0
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",,0
d866157db78f6eb45be705042a8b581075d47972,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    	if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
            return a.sb;
    	}
    
    
}
",,0
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",,0
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",,0
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
29962c4e1b8f67b762d407d24bf47dcc4c9e6213,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    for (int num = 0; num < 10; i - 10)
    {
        
    }
}
",,0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",,0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",,0
07bfb6fcfa70e37188bff5b83b62a677ed999984,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
",,0
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",,0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",,0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",,0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",,0
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
",,0
2cd3569383da0d1473eef2b60e230fb4a93aebef,"public String without2(String str) 
{
    String begin = str.substring(0,2);
    String end = str.substring(str.length() -2);
    if (begin == end)
        return str.substring(2);
    else 
        return str;
}
",,0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
401928b7c4f13266da10f5ba2a473bc98576a846,"public boolean canBalance(int[] nums)
{
      int lSum = 0;
  for (int i = 0; i < nums.length; i++) {
    lSum += nums[i];
    int rSum = 0;
    for (int j = nums.length-1; j > i; j--) {
      rSum += nums[j];
    }
    if (rSum == lSum)
      return true;
  }
  return false;

}
",,0
2b976fe20b1e401744827a000d91d5535db7d93b,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <=90);
}
",,0
0a620bf30b2a7a4fce92e7ea762e2a29a92cd83d,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
",,0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",,0
739598df6f10e1b41997fbbce33f2e2bf0fd995e,"public boolean has77(int[] nums)
{
    int x = nums.length;
    for (int i = 0; i < x; i++)
    {
        if (i < x - 1 && nums.[i] == 7 && nums.[i + 1] == 7)
        {
            return true;
        }
        if (i < x - 2 && nums.[i] == 7 && nums.[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
",,0
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
",,0
931bdaaf31f894404e5b5a484f746f1c9d3bd27d,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",,0
c1787c3579abadd7e03345d1ff93d595d3346793,"public String without2(String str) 
{
    if (name.substrnig(0, 2) == name.substring(name.length() -2, name.length()))
    {
        return ""name.substring(0, 2)"";
    }
    else if (number.substring(0, 2) == number.substring (name.length() -2, name.length()))
    {
        return ""Hi"";
    }
    else
    {
        return ""name.substring(0)"";
    }
}

",,0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",,0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",,0
56ac97e6ac311645870c594b750311820db92f19,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        n = 0;
}
",,0
332c6ec5c84a4b48b155a3ce7e3c41195bbaf8a1,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
",,0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",,0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",,0
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",,0
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
",,0
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",,0
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
",,0
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",,0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
2ab613317018e535c7c370e1bf3fb0d86c7a9f9b,"public int[] tenRun(int[] nums)
{
    int[] result = new int[nums.length];
    int input;
    int value = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (input % 10 == 0 && input > value)
        {
            value = input;
        }
        
        if (value == -1)
        {
            result[i] = input;
        }
        else
        {
            result[i] = value;
        }
    }
    
    return result;
}
",,0
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
",,0
2554504cf73dcc772aa6c40d5e1c117584eceb44,"public int sum13(int[] nums)
{
    int total = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i > 0)
        {
            if (nums[i] != 13 && nums[i - 1] != 13)
            {
                total += nums[i];
            }
        }
        else
        {
            if (nums[i] != 13)
            {
                total += nums[i];
            }
        }
    }
    
    return total;
}
",,0
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",,0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",,0
6b538f7d9eac6f8c54cd2c59a699ca73280e0930,"public class FizzArray {

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",,0
bb771f79da2e164515e0325c84eaa2dbd392e69b,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = 0;
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}",,0
2ab613317018e535c7c370e1bf3fb0d86c7a9f9b,"public int[] tenRun(int[] nums)
{
    int[] result = new int[nums.length];
    int input;
    int value = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (input % 10 == 0 && input > value)
        {
            value = input;
        }
        
        if (value == -1)
        {
            result[i] = input;
        }
        else
        {
            result[i] = value;
        }
    }
    
    return result;
}
",,0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",,0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",,0
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",,0
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",,0
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",,0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",,0
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
fd975fc2b0de30ea1fa6c9ae43f605604231b8a1,"public boolean endOther(String a, String b)
{
    if (a.substring(a.length() - b.length(), a.length()).equals(b) ||
        b.substring(b.length() - a.length(), b.length()).equals(a))
        return true;
    else 
        return false; 
}
",,0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",,0
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",,0
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",,0
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
",,0
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
",,0
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
39483c437921abc8fe24406f9d159f633a6ed263,"public boolean xyzThere(String str)
{

    if (str.startsWith(""xyz"") || str.endsWith(""xyz""));
        
    {
        return true;
    }
        for (int x = 0; x < str.length() -2; x++)
        {
   			if (str.charAt(x) == '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return false;
    }
        
        }
    {return false;}

}
",,0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",,0
e503bcd53b6c1b8e1f5bceead47b945857b50e9a,"public int dateFashion(int you, int date)
{
    if ( you >= 8 && date >= 8)
    {
        return 2;
    }
    if ( you <= 2 && date <= 2)
    {
        return 0;
    }
     if ( you >= 8 && date <= 8)
    {
        return 1;
    }
   if ( you <= 8 && date >= 8)
    {
        return 1;
    }
    }
    else 
        return 1;
}
",,0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",,0
e5e657c2181fcc98486e3cc0d5d3eefe6b267e6c,"public boolean isEverywhere(int[] nums, int val)
{
    
    int totalz = nums.length - 1;
    int counter = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {        
		if (nums[i] == val || nums[i+1] == val)
        {
            counter = counter + 1;
        }
        if (1 > nums.length)
        {
            return true;
        }
    }
    
    return (counter == totalz);
    
}
",,0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",,0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",,0
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
",,0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",,0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",,0
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",,0
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
",,0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",,0
87346e3e31d1cd09cf1ea78408fe3cd51d049e2e,"public int sum13(int[] nums)
{
    sumNum = 0;
    if (nums.length == 0)
    {
        return sumNum;
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
        {
            i += 1;
        }
        else
        {
            sumNum += nums[i];
        }
    }
    return sumNum;
}
",,0
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
",,0
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
",,0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",,0
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",,0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",,0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",,0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",,0
f0965dc5b01333c0db74c3b81e48129583709ad9,"public int sortaSum(int a, int b)
{
    int sum = (a + b);
    if (10 <= sum && sum <= 19)
    {
        return 20;
    }
    return sum;
}
",,0
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
557026f064a89be4df627a611b8a898f7a2fc2f3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if ((nums[i] != val) || (nums[i + 1] != val))
        {
            return flase;
        }          
        
    }
     return false;
}
",,0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",,0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",,0
6d691e5e7a1aef54da910f48bb2dc84739189429,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer == true)
    {
        if (temp >= 60 && temp <= 100)
        {
         	return true   
        }
    }
    else
    {
        if (temp >= 60 && temp <= 90)
        {
         	return true   
        }
    }
}
",,0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",,0
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",,0
049380ae7148894782878c4b50c784b6109c1ec8,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            while (nums[i] == nums[i + 1]) {
                clumps += 1;
                i += 1;
            }
        }
    }
    return clumps;
}
",,0
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
",,0
dc3378fef360ec4c5e4c0ddeaace01619067c129,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (is_weekend = true)
    {
        if cigars >= 40:
        {
            return True
        }
    }
    else if (cigars >= 40 && cigars <= 60)
    {
        return True
    }
    else
    {
        return False
    }
}
",,0
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",,0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",,0
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
",,0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",,0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",,0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",,0
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",,0
9f98cd5893ed8711953832332cb9e68381d2d182,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str.substring(str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
",,0
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",,0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",,0
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}",,0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
be7dd1c681ece206447d7c19a5ae06f1777a4e05,"public boolean xyzThere(String str)
{
 
    if (str.length () >= 3  && 
        str.substring(0,3).equals(""xyz"") )
    {
        return true;
    }
        for (int x = 0; x < str.length() -2; x++)
        {
   			if (str.charAt(x) != '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return true;
    }
  
    {
        return false;
    }
            {return false;}
}
}
",,0
7d59c6f7b74b41fec09dae83bbea25f6ce159f0f,"public int[] frontPiece(int[] nums)
{
    if(nums.length >= 2)
		return (nums[0] + nums[1]);
	if(nums.length == 1)
		return nums[0];
	return 0;
}
",,0
1f6201b823d05481c7b79d4542ad1f25dffb18c5,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
         
    for(int i = 0; i < nums.length; i++) {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
                           
    return (sum - min - max) / (nums.length - 2);
}
",,0
eb3954d897ab04a8ee9649988f3d26e98aae722f,"public String[] fizzBuzz(int start, int end)
{
    String[] result = new String[end - start];
    
    for (int i = 0; i < end - 1; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
",,0
a767440796f740efacb74e1a68a50c6ef184a501,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length - 1; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
",,0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",,0
21f49c70a5574e177ee0e928d52f7656fb37a03a,"public boolean canBalance(int[] nums)
{
    int same = 0;
    int sum = 0;
    for (int i=0;i<nums.length;i++)
    {
        sum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        same += nums[i];
        sum -= nums[i];
    
    if (same == sum)
    {
        return true;
    }
    }
    return false;
}",,0
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
",,0
fdd9c7578eae0199293f5c67050555c877e59579,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
    int min = nums[0];
    int sum = 0;
    for(int i = 0; i < nums.length; i++)
    {
        sum += nums[i];
        max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
    }
                           
    return (sum - max - min) / (nums.length - 2);
}
",,0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",,0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",,0
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",,0
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
",,0
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
",,0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",,0
e7aad59bc0f7416c80deba043153af59de5ea985,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i <= nums.length - 1; i++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            everywhere = true;
            break;
        }
    }
    return everywhere;
}
",,0
d7c652fe7617faefbf9d4f1a9e2917b5bcf5efcc,"public int[] tenRun(int[] nums)
{
    int replace = nums[0];
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] % 10 == 0) {
            replace = nums[i];
        }
        else if (replace % 10 != 0) {
            replace = nums[i]
        }
        nums[i] = replace;
    }
    return nums;
}
",,0
a2f4dd138e591312ee1e4d2886035072ec1e3cf4,"public boolean xyzThere(String str)
{
    str = str.toLowerCase();
    if (str.indexOf(""xyz"") >= 0)
    {
        if (str.charAt(str.indexOf(""xyz"") - 1).equals("".""))
        {
            return false;
        }
        else
        {
            return true;
        }
    }
    else 
    {
        return false;
    }
}
",,0
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}",,0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",,0
e7f410145d08aa7c66e385cd4495eaa092c1b566,"public int[] tenRun(int[] nums)
{
    int mode = -1;
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] & 10 == 0)
        {
        	mode = nums[i];
        }
        else if (mode != -1)
        {
        	nums[i] = mode;
        }
    }
    return nums;
}
",,0
0cbcdcccb97a84929ef84adcbae98515edde8dfa,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    
   int d = num %10;
    if (d >= 5)
        return num + 10 -d;
    return num -d;
}
",,0
fd19ee70b6ed78dc3c5cf345b006e41ad230749d,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
",,0
c7e8457fb2b714869206c9d0c13e47eda97c8439,"public boolean bobThere(String str)
{
    int length = str.length();
    boolean answer = false;
    for (int i = 0; int < length; i++)
    {
        if (str.charAt(i) == str.charAt(i + 2))
        {
            answer = true;
        }
    }
    return answer;
}
",,0
436fd09b6891e567fe0cd98c8b071729b2733e8c,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 && day != 6)
            return ""10:00"";
        else
            return ""off"";
    else
        if (day != 0 && day != 6)
            return ""7:00"";
        else
            return ""10:00"";
    }
}",,0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",,0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",,0
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
",,0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",,0
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
",,0
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
cc77cf7675005a0bdbc9fe76c75879f1ad156087,"public int redTicket(int a, int b, int c)
{
    if (a == 2 & b == 2 & c == 2) 
        return 10;
    else if (a == b && b == c)
        return 5;
    else if (b == c)
        return 1;
    return 0;
    
}
",,0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",,0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",,0
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",,0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",,0
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
9f98cd5893ed8711953832332cb9e68381d2d182,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str.substring(str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
",,0
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",,0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",,0
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",,0
280d2e7c5f6e635eeaff389f7e2ef5070b9de84e,"public int countClumps(int[] nums) 
{
public int countClumps(int[] nums) {
  boolean match = false;
  int count = 0;
  for (int i = 0; i < nums.length-1; i++) {
    if (nums[i] == nums[i+1] && !match) {
      match = true;
      count++;
    }
    else if (nums[i] != nums[i+1]) {
      match = false;
    }
  }
  return count;
}

}",,0
05b23fcc737fcb6b3c50cd8949cae2a6c045d1a0,"public String[] fizzBuzz(int start, int end)
{
    String[] series = new String[end - start];
    for (int i = 0; start < end; i++)
    {
        if ((start % (3 * 5)) == 0)
        //when it is multiples of both 3 and 5
        {
        	series[i] = ""FizzBuzz"";
        }
        else if ((start % 5) == 0)
        {
            series[i] = ""Buzz"";
        }
        else if ((start % 3) == 0)
        {
            series[i] = ""Fizz"";
        }
        else
        {
            series[i] = String.valueOf(start);
        }
        start++;
    }
    return series;
        
}
",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
",,0
6b538f7d9eac6f8c54cd2c59a699ca73280e0930,"public class FizzArray {

//fizzArray is a method which takes input n and prepares fizzArray

public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",,0
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",,0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",,0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",,0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",,0
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
",,0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",,0
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",,0
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
",,0
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
",,0
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",,0
7e7c66de43f3403869e2a5e32affc77e3e798f68,"public int sum13(int[] nums)
{
    boolean before = false;
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (before == true)
        {
            continue;
        }
        
        if (nums[i] != 13)
        {
        	sum = sum + nums[i];
            before = flase;
        }
        else
        {
            before = true;
        }
            
    }
    return sum;
}
",,0
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",,0
c65c6b3814047b3aaef3794d06b2e294c8c889f4,"public String repeatEnd(String str, int n)
{
    StringBuilder stbuild = new StringBuilder(n*n);
    String last = str.substring(str.length() - n);
    for (int i = 0; i < n; i++)
    {
        stbuild.append(last);
    }
    return stbuild.toString();
}
",,0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",,0
a70de267ba367847cc0670a28ea2f883719ae499,"public int centeredAverage(int[] nums)
{
	int[] centered = new int[nums.length - 2];
    int max = nums[0];
    int maxPosition = 0;
    int min = nims[0];
    int minPosition = 0;
    for (int i = 0; i < nums.length; i++){
        if (nums[i] > max){
            max = nums[i];
            maxPosition = i;
        }
        if (nums[i] < min){
            min = nums[i];
            minPosition = i;
        }
    }
    int x = 0;
    for (int i = 0; i < nums.length; i++){
        if (i != minPosition && i != maxPosition){
            centered[x] = nums[i];
            x++;
        }
    }
    return centered;
}
",,0
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
037d9cfb7e70b9ec11a3da816118f6d729a3b257,"public boolean has77(int[] nums)
{
	for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
",,0
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
",,0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",,0
56564fcd3a089f2e2f8dc872a710a4cf2ca9e4ce,"public String atFirst(String str)
{
    return str.substring(0, 1);
    if (str.substring(0, 1) = null)
    {
        return @;
    }
}
",,0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",,0
4be57b38f2b2c98beb57ee32b95c2ff896662228,"public int[] seriesUp(int n)
{
    int[] array = new int[n * (n + 1) / 2];
       
    for (int i = 0; i < array.length; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            for (int p = 1; p < j; p ++)
            {
                array[i] = p;
            }
        }
    }
    
    return array;
}
",,0
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
",,0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",,0
89d29f4f5d833c3359c7406ca1e2f3f2a7310cd1,"public int greenTicket(int a, int b, int c)
{
    if (a = b || a = c || b = c)
    {
        return 10;
    }
    else if (a = b && b = c)
    {
        return 20;
    }
    else
    {
        return 0;
    }
    
    
}
",,0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",,0
29962c4e1b8f67b762d407d24bf47dcc4c9e6213,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    for (int num = 0; num < 10; i - 10)
    {
        
    }
}
",,0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
",,0
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
",,0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
fd975fc2b0de30ea1fa6c9ae43f605604231b8a1,"public boolean endOther(String a, String b)
{
    if (a.substring(a.length() - b.length(), a.length()).equals(b) ||
        b.substring(b.length() - a.length(), b.length()).equals(a))
        return true;
    else 
        return false; 
}
",,0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",,0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",,0
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
",,0
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
",,0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",,0
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",,0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",,0
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",,0
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",,0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",,0
6609675c9d508c67f114bdaa1bb66dc312c97730,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}",,0
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",,0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",,0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",,0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",,0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",,0
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",,0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",,0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",,0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",,0
ce8faf0b0976ddb82152e029b4e00668a05ed30f,"public String without2(String str) 
{
    int l = str.length();
    if (l <= 1)
    {
        return str;
    }
    else if (l == 2)
    {
        return """";
    }
    else
    {
        if (str.substring(0, 2) == str.substring(l - 2, l))
        {
            return str.substring(0, 2) + "" == "" + str.substring(l - 2, l);
        }
        else
        {
            return str.substring(0, 2 + "" != "" + str.substring(l - 2, l);
        }
    }
}
",,0
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",,0
6f7f61c8665e5fbb33bb6cdb300c38706ffa9630,"public int centeredAverage(int[] nums)
{
    int average = 0;
    int sum = 0;
    int low = nums[0];
    int high = nums[0];
    boolean found = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > high)
        {
            high = nums[i];
        }
        
        if (nums[i] < low)
        {
            low = nums[i];
        }
    }
    
    for (int a : nums)
    {
        sum = sum + a;
    }
    
    sum = sum - low - high;
    
    average = sum / (nums.length - 2)
    
    return average;
}
",,0
4ab93bf88b80fa76f8c7c6f5499d40a451e7e897,"public boolean great; 

public boolean love6(int a, int b)
{
    Math.abs(a, b);
}
",,0
2ab613317018e535c7c370e1bf3fb0d86c7a9f9b,"public int[] tenRun(int[] nums)
{
    int[] result = new int[nums.length];
    int input;
    int value = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (input % 10 == 0 && input > value)
        {
            value = input;
        }
        
        if (value == -1)
        {
            result[i] = input;
        }
        else
        {
            result[i] = value;
        }
    }
    
    return result;
}
",,0
cc9d92e58c77513c6aab917cfcc7c112c1577e90,"public String[] fizzBuzz(int start, int end)
{
    String[] array = new String[end - start];
    
    for (int i = start; i < end; i++) 
    {
        if (i % 15 == 0) 
        {
            array[i - start] = ""FizzBuzz"";
        } 
        else if (i % 3 == 0) 
        {
            array[i - start] = ""Fizz"";
        } 
        else if (i % 5 == 0) 
        {
            array[i - start] = ""Buzz"";
        } 
        else 
        {
            array[i - start] = String.valueOf(i);
        }
    }
                                                      
    return array;
}
",,0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",,0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
18572af6232d9cb1c2ba72b57f3c247916dc8cd7,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums;
}
",,0
23603f323aca762522c6fa0ba976444d4e9ddb74,"public int makeChocolate(int small, int big, int goal)
{
    int smalls = goal % big;
    if (smalls == 0)
    {
        return -1;
    }
    return smalls;
}
",,0
da854431fc95a4fda3f5795de985db2ccfd6cecc,"public boolean xyzThere(String str)
{
    if (str.length() >= 3) {
   	 	for (int i = 0; i < str.length() - 3; i++) {
        	if (str.substring(i, i + 3).equals(""xyz"")) {
            	if (i == 0) {
                    return true;
                }
                else if (str.charAt(i - 1) == '.') {
                    return false;
                }
                else {
                    return true;
                }
        	}
            else {
               return false; 
            }
    	}
    }
    else {
        return false;
    }
}
",,0
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
",,0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",,0
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",,0
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",,0
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
d620f21e27a87e15d05a4f085e8ed51214622697,"public String alarmClock(int day, boolean vacation);
int alarmTime = 0;
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	alarmTime=7;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	alarmTime=10;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=off;
    	}
    }
return alarmTime;    
}
",,0
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
b03f6ee58d1c2efbc298c1b090d888a47d5425a9,"public boolean evenlySpaced(int a, int b, int c)
{
    if (b-a <= 1 && c-a >= 2 && c-b >= 2 
        || b-a >= 2 && c-a <= 1 && c-b >=2
        || b-a >=2 && c-a >= 2 && c-b <= 1)
        return true;
    return false;
}
",,0
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
a265c9de809f6f4e31156a9877b3656142f0e6db,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            while (nums[j] != 5 && j < nums[j - 1] != 4)
            {
                j++;
            }
            nums[j] = tempStorage;
            nums [i + 1] = 5;
            j = i + 2;
        }
    }
    return nums;
}",,0
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
",,0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",,0
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",,0
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
",,0
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
",,0
67e32e60ccf94c9e237b1ee60eec88d54337ee46,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (( n > 12 && n < 15) ||( n > 16 && n < 20 )) {
     return 0;
   }
   return n;
}
",,0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",,0
eb40012d4b37cf5da376cf00035ed5e704fcbffc,"public int[] tenRun(int[] nums)
{
    for (int i = -1; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            i++
        }
        else
        {
            nums[i] = 10;
        }
    }
    return nums;
}",,0
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
",,0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",,0
9dc0767266c1756dfc9cc953a7b44c96b56ff94a,"public int sum67(int[] nums)
{
	int sum = 0;
	//boolean sixMode = false;
	for(int i = 0; i < nums.length; i++)
	{
		if (i != 6)
		{
			sum += nums[i];
	}
	return sum;	   
}
",,0
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
",,0
6bb0ee0ad18b7740337fbdd1e749d82571043674,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return ""@"";
    }
    else
    {
        return ""@@"";
    }
}
",,0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",,0
2dc5430cd182c160d91ebc09f7797fb639ddf464,"public boolean has77(int[] nums)
{
   
    boolean result = false;
  for (int i = 0; i < nums.length-1; i++)
  if ((nums[i] == 7 && nums[i+1] == 7))
  result = true;
   for (int i = 0; i < nums.length-2; i++)
  if ((nums[i] == 7 && nums[i+2] == 7))
  result = true;
    

}
return false;
",,0
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",,0
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",,0
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
",,0
2fca6215c9c9afb58d28887169dfe435558d7825,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a <= 21 && a > b)
    {
        return a;
    }
    else if (b <= 21 && b > a)
    {
        return b;
    }
    else if (b <= 21 && a > 21)
    {
        return b;
    }
    else
    {
     	return a;   
    }
}
",,0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",,0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",,0
5455ec6afe437e7506504e1f1428a5a0b96a5669,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
    if (a > b)
    {
       return blackjack(a, 0);
    }
    else if (b > a)
    {
        return blackjack(0, b);
    }
    } 
    return 0;
}

",,0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",,0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",,0
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
3ffbe27f13432d33b39ddbe8b4cbe4e06c086bc6,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 14 && a != 15)
     {
         return 0;
     }
    if (b >= 13 || b <= 19 && b != 14 && b != 15)
     {
         return 0;
     }
    if (c >= 13 || c <= 19 && c != 14 && c != 15)
     {
         return 0;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return 0;
}
",,0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",,0
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",,0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",,0
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",,0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",,0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",,0
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",,0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",,0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",,0
be7dd1c681ece206447d7c19a5ae06f1777a4e05,"public boolean xyzThere(String str)
{
 
    if (str.length () >= 3  && 
        str.substring(0,3).equals(""xyz"") )
    {
        return true;
    }
        for (int x = 0; x < str.length() -2; x++)
        {
   			if (str.charAt(x) != '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return true;
    }
  
    {
        return false;
    }
            {return false;}
}
}
",,0
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",,0
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",,0
da854431fc95a4fda3f5795de985db2ccfd6cecc,"public boolean xyzThere(String str)
{
    if (str.length() >= 3) {
   	 	for (int i = 0; i < str.length() - 3; i++) {
        	if (str.substring(i, i + 3).equals(""xyz"")) {
            	if (i == 0) {
                    return true;
                }
                else if (str.charAt(i - 1) == '.') {
                    return false;
                }
                else {
                    return true;
                }
        	}
            else {
               return false; 
            }
    	}
    }
    else {
        return false;
    }
}
",,0
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",,0
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
083ca5818f3f055e87fb758cb9de020f40601414,"public int[] withoutTen(int[] nums)
{
    int[] ten = new int[nums.length];
    int result = 0;
    for (int i = 0;i<nums.length;i++)
    {
        if (nums[i] == 10)
        {
            nums[i] = 0;
        }
        if (nums[i] != 10)
        {
            ten[result++] = nums[i];
        }
    }
    return nums;
}
",,0
3b24fd13da29cf3eaf6ecbfb5f5dfeb4cbdd236e,"public int noTicket(int 0);
private int 1;
private int 2;
public int caughtSpeeding(int speed, boolean isBirthday)
{
    0 = noTicket;
    1 = smallTicket;
    2 = bigTicket;
    if (isBirthday)
    {
        if (speed <= 65)
        {
            return ""0"";         	
       	}
        else if (speed >= 66 && speed <= 85)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
            
    }
    else
    {
        if (speed <= 60)
        {
            return ""0"";         	
       	}
        else if (speed >= 61 && speed <= 80)
        {
            return ""1"";
        }
        else
        {
			return ""2"";
        }
    
    }
}  
",,0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",,0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",,0
390cb0d114ae7595435ca6326f70fb705ed79016,"public int sum67(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            for (int j = i; nums[j] == 7; j++)
            {
                if (j == nums.length - 1)
                {
                    return sum;
                }
                else
                {
                    i = j + 1;
                }
            }
        }
        sum += nums[i];
    }
    return sum;
}
",,0
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
",,0
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
",,0
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",,0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",,0
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",,0
203f9c47a0738c4f7deb3aa08f1ac17b6d91cac6,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    int index = 0;
    
    for (int i : nums)
    {
        if (i != 10)
        {
            array[index] = i;
            index++;
        }
    }
    
   return array;
}
",,0
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",,0
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
",,0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",,0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",,0
581f512cb2e6a33700b10b039e861484be3ce8e1,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
    	if nums[i] != 13
        {
        	sum += nums[i];
        }
        else if (nums[i] == 13 && i < (nums.length - 1))
        {
        	nums[i] = 0;
        }
        return sum;
    }
}
",,0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",,0
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",,0
56564fcd3a089f2e2f8dc872a710a4cf2ca9e4ce,"public String atFirst(String str)
{
    return str.substring(0, 1);
    if (str.substring(0, 1) = null)
    {
        return @;
    }
}
",,0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",,0
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
",,0
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",,0
0596e9fad0e491fa66802102678ad39fda317949,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
    
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
        return num + (10 - round);
    else 
        return num + (round - 10);
    
}
",,0
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
",,0
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",,0
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",,0
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
",,0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",,0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",,0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",,0
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",,0
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
",,0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",,0
1d6179ccdc1c6fce139143f569025a679c1301a0,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        	largeOdd == nums[i];
        if (nums[i] == 0)
        	nums[i] == largeOdd;
    }
    return nums;
}",,0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",,0
5b9eb535280570f293684ef95c107bc80160a334,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = len;
	for (int i =0; i <range;i++)
    {
		if (!(nums[i] == nums[nums.length - range + i]))
        {
			result = false;
        }
    }
return result;
}
",,0
f31330f56c18e1f1b8fca287085661999fcfd64e,"public int blackjack(int a, int b)
{
    if (a > 21) {
    	if (b > 21) {
            return 0;
        }
        return b;
    }
    if (a < b && b <= 21) {
        return b;
    }
    else 
        return a;
}
",,0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
",,0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",,0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",,0
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
",,0
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
",,0
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",,0
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
",,0
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
",,0
f90f4209c0769229c85ac2c0392970d7920341e4,"public String alarmClock(int day, boolean vacation)
{
        alarmClock(0, true) -> ""off"";
        alarmClock(6, true) -> ""off""   
        alarmClock(1, true) -> ""10:00""
        alarmClock(2, true) -> ""10:00""
        alarmClock(3, true) -> ""10:00""
        alarmClock(4, true) -> ""10:00""
        alarmClock(5, true) -> ""10:00"" 
}
",,0
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",,0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",,0
be7dd1c681ece206447d7c19a5ae06f1777a4e05,"public boolean xyzThere(String str)
{
 
    if (str.length () >= 3  && 
        str.substring(0,3).equals(""xyz"") )
    {
        return true;
    }
        for (int x = 0; x < str.length() -2; x++)
        {
   			if (str.charAt(x) != '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return true;
    }
  
    {
        return false;
    }
            {return false;}
}
}
",,0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",,0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",,0
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",,0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",,0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",,0
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
",,0
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",,0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",,0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",,0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",,0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",,0
bd6a0818d02de2faff72753b137582927a9653f1,"public int countClumps(int[] nums)
{
    boolean b = false;
    int a = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !b)
        {
            a++;
             b = true;
        }
        else if (nums[i] != nums[i + 1])
        {
            b = false;
        }
    }
    return a;
}
",,0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",,0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
",,0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",,0
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
",,0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",,0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",,0
37b3603a9c536199358b2c9966faa16950f57c6d,"public int countCode(String str)
{
    int yum = 0;
    int yes = str.length();

for (int i=0; i < yes - 3; i++)
{
if (str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
yum++;
} 
return yum;
}
",,0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",,0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",,0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",,0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",,0
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",,0
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",,0
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",,0
1b4bc3db4384e557545a3c1666dbcb582abe07c0,"public int redTicket(int a, int b, int c)
{
    if(a = 2 && b == 2 && c == a)
    {
        return 10;
    }
    else if(a == b == c)
    {
        return 5;
    }
    else if(a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",,0
b9fbdeb0d25edd847f75474416127f7deac2ef05,"public int blackjack(int a, int b)
{ assert(a > 0);
 assert(b>0);
    if ((a > 21) && (b > 21)) {
        return 0;
    } else if (a > 21) {
        return b;
    } else if (b > 21) {
        return a;
    }
 int difference_a_21 = 21 - a;
 int difference_b_21 = 21 - b;
 if (difference_a_21 > difference_b_21) {
 return b; 
 } else {
     return a;
 }
}
",,0
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
",,0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",,0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",,0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",,0
be225d062886f65c118e2566d143dcddc80b84fe,"public int loneSum(int a, int b, int c)
{
    if (a != b && a != c)
    {
     	return a + b + c;   
    }
    else if (a != b && a == c)
    {
		return b;
    }
    else if (a != c && a == b)
    {
        return c;
    }
    else if (b != c && b == a)
    {
        return c;
    }
    else if  (a != b && b == c)
    {
     	return a;   
    }
    return 0;
}
",,0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",,0
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
",,0
a3cfe4acc0878f7a98ccbc168df9dff28266dbd7,"public int[] frontPiece(int[] nums)
{
    int [] grid = new int[2];
    
    // establish logi for checking nums.
    // add the proper elements of nums into a new array 
    if (nums.length == 1)
    {
        return grid[0] = nums[0];
    }
    else if (nums.length == 0)
    {
        return grid;
    }
    else
    {
        return grid[nums[0], nums[1]];
    }
}
",,0
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
",,0
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
",,0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",,0
fe6f1db71252da2edc7dfe1ed53b97e3e8c7d386,"public int roundSum(int a, int b, int c)
{
    int sum=0;
	sum=sum+round10(a);

	sum=sum+round10(b);

	sum=sum+round10(c);
	return sum;
}

public int round10(int num)
{
    if(num%10 >4)
    {
		return (((num/10)+1)*10);
    }
	else 
    {
        return ((num/10)*10);
    }
}
",,0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",,0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",,0
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
",,0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",,0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",,0
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
60bfdea9c8f9dfd5dfc76b26abcaa887222776a0,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
    	return (20);
    }
    else if (a == b || b == c || a == c)
    {
    	return (10);
    }
    else
    {
    	return (0);
    }
}
",,0
b8e6a00418b434fa78ad4b4b0a8eeae15013af79,"public String without2(String str) 
{
    if (str.length() <= 1)
    {
        return str;
    }
    else
    {
        if (str.substring(0, 2) == str.substring(str.length() - 2, str.length()))
            {
                return str.substring(2, str.length());
            }
            else
            {
                return str;
            }
    }
}
",,0
4eb02550729357ce44f3197558f31fd46783efb7,"public int[] fix45(int[] nums)
{
    int i;
    int r;
    for (r = 0; r < nums.length; r++)
    {
        if (nums[r] == 5 && nums[r-1] != 4 && r - 1 >= 0)
        {
            for (i = r; nums[i] != 4; i++)
            {
                r++;
            }
            if (nums[i] == 4)
            {
            	int temp = nums[i+1];
            
            	nums[i+1] = nums[nums.length-1];
                nums[r] = temp;
            	//nums[nums.length-1] = temp;
            }
        }
    }
    return nums;
}
",,0
4307c880e761ef8bc8ec7c3f9714141604781111,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    if (isMorning && (!isMom))
    {
        return false;
    }
    else
    {
        return true;
    }
    
}
",,0
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
",,0
739598df6f10e1b41997fbbce33f2e2bf0fd995e,"public boolean has77(int[] nums)
{
    int x = nums.length;
    for (int i = 0; i < x; i++)
    {
        if (i < x - 1 && nums.[i] == 7 && nums.[i + 1] == 7)
        {
            return true;
        }
        if (i < x - 2 && nums.[i] == 7 && nums.[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
",,0
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",,0
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",,0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",,0
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",,0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",,0
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",,0
4ba46181a66bb2f3cf45d38876db8736b1ebda46,"public boolean in1To10(int n, boolean outsideMode)
{
    return ((n >= 1 && n<=10 && !outsideMode) || (n > 10 || n < 1 && outsideMode));
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",,0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",,0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",,0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",,0
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
",,0
62c62c2b35bd444c54959c776279bfb352a08834,"public int dateFashion(int you, int date)
{
    if (you >= 8) || (date >= 8))
    {
        return 2;
    }
    else if (you <= 2) || (date <= 2))
    {
        return 0;
    }
    else
    {
        return 1;
    }
    
}
",,0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",,0
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
",,0
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
",,0
c1787c3579abadd7e03345d1ff93d595d3346793,"public String without2(String str) 
{
    if (name.substrnig(0, 2) == name.substring(name.length() -2, name.length()))
    {
        return ""name.substring(0, 2)"";
    }
    else if (number.substring(0, 2) == number.substring (name.length() -2, name.length()))
    {
        return ""Hi"";
    }
    else
    {
        return ""name.substring(0)"";
    }
}

",,0
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",,0
b89d4f5b0553bf0bb557b619c4bc03e05f4481a0,"public String[] fizzBuzz(int start, int end)
{
    for (var i = 1; i <= 20; i++) 
    {
        var result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",,0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",,0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",,0
3d11719630fc8c44b85deba0b9752e36fb374a27,"public int luckySum(int a, int b, int c)
{
    if (a = 13)
    {
        return 0;
    }
    else if (b = 13)
    {
        return a;
    }
    else if (c = 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",,0
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",,0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",,0
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",,0
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
",,0
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
",,0
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
",,0
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",,0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",,0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",,0
ecef8ffff5f622c9ab6799c53c46541bd578254a,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean ifSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (ifSix)
        {
            if (nums[i] == 7)
                ifSix = false;
        }
        else if (nums[i] == 6)
        {
            ifSix = true;
        }
        //if ifSix is true, then it goes back into the for loop 
        //and the first if statement becomes true
        else
        {
            sum = sum + nums[i];
        }
        //takes the sum of the numbers when there is no linee of numbers starting
        //with a 6 and ending with a 7
    }
    return sum;
}
",,0
64e6a1b1c2176532ea3545edbf85eecc952dbf18,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a;
    return diffOne == diffTwo;
}
",,0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",,0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
de3eb3fe1397ad22d68e3973fbebeb2a5b3b1849,"public int[] fizzArray(int n)
{
    int[] fizz = new int[n];
    for (int i = 0; i < n; i++)
    {
        fizz[i] = i;
    }
    return fizz;
}
",,0
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",,0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",,0
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
",,0
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
",,0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",,0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",,0
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
",,0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",,0
9f9cafcc5ccefbd90bb92f943d8cecbbd4366dab,"public int makeChocolate(int small, int big, int goal)
{
    int rbig = goal/5;
    int rem = goal%5;
    int x = rbig - big;
    int rem2 = rem + (x*5);
    if (big<rbig && small>=rem2)
        {
            return rem2;
        }
    else if (big >= rbig && rem>=small)
    {
     return rem;   
    }
    else
    {
        return -1;
    }
        
        
}
",,0
dba6c271b79d741d024f67f5231ab6a5ca257498,"public int[] zeroMax(int[] nums)
{
    int max;
    for (int i = 0; i < nums.length -1; i+= 1) {
        if (nums[i] == 0) {
            max = 0;
            for ( int j = i+1; j < nums.length; j+=1) {
                if (nums[j] > max && nums[j] %2 ==1) {
                    ma = nums[j];
                }
                if (max !=0 ) {
                    nums[i] = max;
                }
            }
        }
    }
    return nums;
}
",,0
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
",,0
dc20b50f1f6fc266d80c9cceb3e26ca923d1b02f,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
    //return nums;
   int start = nums[0];
    for (int i = 0; i < nums.length; i++)
    {
     	int j = 1;
        nums[i] = nums[j];
        j++;
        //nums[i] = nums[i + 1];
        /*if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }*/
              	
    }
    
    
    return nums;   
}
",,0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",,0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",,0
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",,0
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",,0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",,0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",,0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",,0
67e32e60ccf94c9e237b1ee60eec88d54337ee46,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (( n > 12 && n < 15) ||( n > 16 && n < 20 )) {
     return 0;
   }
   return n;
}
",,0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",,0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",,0
888a63dff1f59fa6a944754dead51bf5ff29d397,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}",,0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",,0
6d72f5b621649af66f06d05181162fe55168a76e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
}
",,0
cd727adb54733c5b0e8ec8f90e3a20c4ce931c92,"public int makeChocolate(int small, int big, int goal)
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
    {
        return remainder;
    }
        
    return - 1;
}
",,0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",,0
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
",,0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",,0
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
",,0
4ba46181a66bb2f3cf45d38876db8736b1ebda46,"public boolean in1To10(int n, boolean outsideMode)
{
    return ((n >= 1 && n<=10 && !outsideMode) || (n > 10 || n < 1 && outsideMode));
}
",,0
75d0dc362a4c31d014837d1a8c1fe16ca29a92fa,"public boolean xyBalance(String str)
{
    int length = str.length() - 1;
    char character;
    for (int i = length; i >= 0; i--)
    {
        character = str.charAt(i);
        if(character == 'x')
        {
            return false;
        }
        else if(character == 'y')
        {
            return true;
        }
    }
    return true;
}
",,0
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
",,0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
",,0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",,0
da35db888e070aad3d1910413f0731e4b429579c,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (20 - n < 7  && 20 - n < 1)
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
",,0
9dfb9d8285fed77ebe058ec80bfb80f2f1a5db2a,"public boolean sameEnds(int[] nums, int len) {
    for (int i = 0, j = nums.length - len; i < len; i++, j++)
        if (nums[i] != nums[j]) return false;
    return true;
}
",,0
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",,0
6f7f61c8665e5fbb33bb6cdb300c38706ffa9630,"public int centeredAverage(int[] nums)
{
    int average = 0;
    int sum = 0;
    int low = nums[0];
    int high = nums[0];
    boolean found = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > high)
        {
            high = nums[i];
        }
        
        if (nums[i] < low)
        {
            low = nums[i];
        }
    }
    
    for (int a : nums)
    {
        sum = sum + a;
    }
    
    sum = sum - low - high;
    
    average = sum / (nums.length - 2)
    
    return average;
}
",,0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",,0
cdbd6769faf44b710f4b50d3f75878e7dff820b5,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    return ((a + b) < 10 || (a + b) > 19);
}
",,0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",,0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",,0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",,0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",,0
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
",,0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",,0
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
0052f96ceb63d13b4f7dcf7cc400966906099f39,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}
}
}",,0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",,0
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
",,0
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",,0
0268bed73e98e55237abf9a4c5cd08cd46fa56bc,"public int noTeenSum(int a, int b, int c)
{
    
    int d = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return d;

}

public int fixTeen(int n)
{
    if (n == 15 || n == 16)
    {
        return n;
    }
    else if (n == 13 && n == 14 && n == 17 && n == 18 && n == 19)
    {
        return 0;
    }
    else
    {
        return n;
    }
        
}
",,0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
6f412fb97dacfeab711397d737336f16f8b3a81c,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder();
    for (int i = 0; i < n; i++)
    {
    	sb.append(str.charAt(str.length()-1));
    }
    return sb.toString();
}
",,0
dabbc0fac0e4efb2d8353000f3f477c0332d8b9b,"public boolean endOther(String a, String b)
{
    String astring = a.toLowerCase();
    String bstring = b.toLowerCase();
    
    if (astring.endsWith(bstring) || bstring.endsWith(astring))
    {
        return true;
    }
    else 
    {
        return false;
    }
    
}
",,0
2efc3b1d0acaa60b452bf611f88e4f3873fd00aa,"public boolean isEverywhere(int[] nums, int val)
{
    int b = 0;
    for (int i = 1; i < nums.length - 1; i++) {
        if (nums[i] == val || nums[i-1] == val ||
            nums[i+1] == val) {
            	b++;
        }
    }
    return b == nums.length - 2;
}
",,0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",,0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",,0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",,0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
f975c769611523b9ff8e0c8e7baa2a5d2b94373c,"public boolean twoTwo(int[] nums)
{
    int i;
    for (i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i+1] != 2)
            {
                return false;
            }
            i = i +2;
        }
    }
    if (nums.length >= 3)
    {
	if (nums[nums.length - 1] == 2 && nums[nums.length - 2] != 2)
        {
            return false;
        }
    }
    else
    return true;
}
",,0
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
",,0
6124c0328346f983dc55e9574073d07ecf1438e4,"public int luckySum(int a, int b, int c)
{
    if (a == b)
    {
        if (a == c)
            return 0;
    	return c;
    }
    if (a == c)
    {
        return b;
    }
    if (b == c)
    {
        return a;
    }
    return (a + b + c);
}
",,0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",,0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",,0
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
",,0
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",,0
727d541babe278c063e729dab201403c18c6f003,"public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        str == ""bread"" - str - ""bread"";
    }
    else
    {
        return """";
    }
}
",,0
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
",,0
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
",,0
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
",,0
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
c531b36cd72156cb65bd26c919a9de7a647ca456,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int x = num % 10;
    if (x >= 5)
    {
        return num + (10 - x);
    }
    else
    {
        return num - x;
    }
}
",,0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",,0
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",,0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",,0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",,0
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",,0
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",,0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",,0
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
",,0
a2a2884e41048d06a4cb030480f7393277c7ec9a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        sum = sum + nums[i];
        if (nums[i] == 13)
        {
            sum = sum - (13 = nums[i + 1]));
        }
    }
    return sum;
}
",,0
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
",,0
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
",,0
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


",,0
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",,0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",,0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
ed8567dc122263a3f23fdbe2e489dcbf9fe4850d,"public String repeatEnd(String str, int n)
{
    String endString = """";
        
        for (int x = 0; x < n; x++)
        {
            String repString = str.substring(str.length() - n);
            endString = ensString + repString;
        }
    {
        return endString;
    }
}
",,0
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
",,0
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
",,0
7a311480e1038e58bd263cd3dd91b77fce57edfa,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}",,0
4a29778f5e630d1023c96d9cd41c9f0172acdddd,"public int caughtSpeeding(int speed, boolean isBirthday)
{
   if (isBirthday == false)
   {
   	 if (speed <= 60)
   	 {
        return 0;    
   	 }
     else if (speed >= 61 && speed <= 80)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
    
    
    
    else
   {
        
        if (speed <= 65)
   	 {
        return 0;    
   	 }
     else if (speed >= 66 && speed <= 85)
     {
      return 1;   
         
     }
     else
     {
      
         return 2;
         
     }
   }
             
        
    
    
    
    
    
    
    
}
",,0
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
",,0
a6ef869527e799ebeaa3435595e0271453b97469,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    int temperature = temp;
    boolean summer = isSummer;
    int minTemp = 60;
    int maxTemp = 90;
    boolean play = false;
    if (summer == true)
    {
        maxTemp += 10;
    }
    if (temp >= minTemp && temp <= maxTemp)
    {
        play = true;
    }
    return (play);
}
",,0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",,0
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",,0
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",,0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",,0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",,0
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
",,0
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",,0
f2a0ae7b1e316eb53dc6d43a4369f211fba8f01a,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 < 5)
        return num - (num%10);
    else
        return num + (10 - (num%10));
}
",,0
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
",,0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",,0
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",,0
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
",,0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",,0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",,0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",,0
6f7f61c8665e5fbb33bb6cdb300c38706ffa9630,"public int centeredAverage(int[] nums)
{
    int average = 0;
    int sum = 0;
    int low = nums[0];
    int high = nums[0];
    boolean found = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > high)
        {
            high = nums[i];
        }
        
        if (nums[i] < low)
        {
            low = nums[i];
        }
    }
    
    for (int a : nums)
    {
        sum = sum + a;
    }
    
    sum = sum - low - high;
    
    average = sum / (nums.length - 2)
    
    return average;
}
",,0
c64c9e9c0a786ef3732a68209a390d30d8284fd4,"public int dateFashion(int you, int date)
{
   if ((you >= 2 || date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 || date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
",,0
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",,0
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
",,0
08fa5ac960d3ab8ef2af29ef9f42e5d116bda6bf,"public int sum3(int[] nums)
{
    int sum = 0;
    
    for (int number : nums)
    {
        sum = sum + number;
    }
     return sum;   
}
",,0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",,0
9d7ce68273a324eab8e1ea7149aef4eb81045ee1,"public boolean canBalance(int[] nums)
{
    int merlinL = 0;
    int merlinR = 0;
    
    for (int i = 0; i<nums.length; i++)
    {
         merlinL = merlinL + nums[i]; 
    }
    
    for (int i = 0; i<nums.length; i++)
    {
        merlinR = merlinR + nums[i];
        merlinL = merlinL - nums[i];
    }
    
    if (merlinR == merlinL)
    {
        return true;
    }
    
    return false;
}
",,0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",,0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
",,0
8a9cbf9360adbaaf40b9eb0c074c2aa41cebf9c1,"public boolean love6(int a, int b)
{
    if (a == 6 || b == 6)
    {
        return true
    }
    if (a - b == 6 || b - a == 6)
    {
        return true
    }
    if (a + b == 6)
    {
        return true
    }
}
",,0
ccd2bf2a919c94599e57e4e4ed5b9e3e8a61eb4b,"public boolean canBalance(int[] nums)
{
    int merlinL = 0;
    int merlinR = 0;
    
    for (int i = 0; i<nums.length; i++)
    {
         merlinR = merlinR + nums[i]; 
    }
    
    for (int i = 0; i<nums.length; i++)
    {
        merlinL = merlinL + nums[i];
        merlinR = merlinR - nums[i];
    }
    
    if (merlinR == merlinL)
    {
        return true;
    }
    
    return false;
}
",,0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",,0
d31613611b4ec7e63b836c38fd0b1e9818fbc5fc,"public boolean canBalance(int[] nums)
{
    int merlinL = 0;
    int merlinR = 0;
    
    for (int i = 0; i<nums.length; i++)
    {
         merlinR = merlinR + nums[i]; 
    }
    
    for (int i = 0; i<=nums.length - 2; i++)
    {
        merlinL = merlinL + nums[i];
        merlinR = merlinR - nums[i];
    }
    
    if (merlinL == merlinR)
    {
        return true;
    }
    
    return false;
}
",,0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",,0
4a63be8553ad24a10f87fadd9670f90ac23241ab,"public boolean xyBalance(String str)
{
   boolean ychar = false;
   for (int i = str.length() - 1; i >= 0; i--)
        {
       		if(str.charAt(i) == 'y') //true when every x is balanced with a y after
            {
                ychar = true;
                return true;
            }
        	if(!ychar && str.charAt(i) == 'x')
            {
                return false;
            }
   		}
    return true;
}
",,0
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",,0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",,0
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",,0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",,0
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
",,0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",,0
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
",,0
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",,0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",,0
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",,0
d3aaf45fcea37c41d242c6ed45bf01be9decec01,"public int[] frontPiece(int[] nums)
{
   if(nums.length >= 2)
   {
       int[] array = {nums[0], nums[1]};
       return array;
   }
    
    return nums; 

        
}
",,0
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
",,0
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
",,0
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
",,0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",,0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",,0
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",,0
6bb0ee0ad18b7740337fbdd1e749d82571043674,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return ""@"";
    }
    else
    {
        return ""@@"";
    }
}
",,0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",,0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
05b23fcc737fcb6b3c50cd8949cae2a6c045d1a0,"public String[] fizzBuzz(int start, int end)
{
    String[] series = new String[end - start];
    for (int i = 0; start < end; i++)
    {
        if ((start % (3 * 5)) == 0)
        //when it is multiples of both 3 and 5
        {
        	series[i] = ""FizzBuzz"";
        }
        else if ((start % 5) == 0)
        {
            series[i] = ""Buzz"";
        }
        else if ((start % 3) == 0)
        {
            series[i] = ""Fizz"";
        }
        else
        {
            series[i] = String.valueOf(start);
        }
        start++;
    }
    return series;
        
}
",,0
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",,0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",,0
eb3954d897ab04a8ee9649988f3d26e98aae722f,"public String[] fizzBuzz(int start, int end)
{
    String[] result = new String[end - start];
    
    for (int i = 0; i < end - 1; i++)
    {
        if ((i + 1) % 15 == 0 && i > 0)
        {
            result[i] = ""FizzBuzz"";
        }
        else if ((i + 1) % 3 == 0 && i > 0)
        {
            result[i] = ""Fizz"";
        }
        else if ((i + 1) % 5 == 0 && i > 0)
        {
            result[i] = ""Buzz"";
        }
        else {
            result[i] = String.valueOf(i + start);
        }
    }
    
    return result;
}
",,0
faaaa4b9637f7003d240f0cdc7c5c6bf28c27cdb,"public boolean isEverywhere(int[] nums, int val)
{
    if (nums.length == 0) {
        return true;
    }
    int b = 0;
    for (int i = 1; i < nums.length; i++) {
        if (nums[i] == val || nums[i-1] == val) {
            	b++;
        }
    }
    return b == nums.length - 1;
}
",,0
9bb5e21f3a10d7ec32b3825e14061232985ba3c2,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2){
		return 0;
    }else if(you >= 8 || date >= 8){
		return 2;
    }else {
        return 1;
    }
}
",,0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",,0
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
",,0
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
",,0
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
",,0
63bc9b6a7e3b8866c3ea0d84d282e25f9716e838,"public String mixString(String a, String b)
{
    String result = """"; 
    int index = 0;
    
    if (a.length() >= b.length()) {
        index = b.length(); 
    }
    if (a.length() <= b.length()) {
        index = a.length(); 
    }
    for (int i = 0; i < index; i++) {
        result += a.substring(i, i + 1) + b.substring(i, i + 1);
    }
    if (a.length() < b.length()) {
        result += b.substring(a.length(), b.length()); 
    }
    if (a.length() > b.length()) {
        result += a.substring(b.length(), a.length()); 
    }
    return result; 
}
",,0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
11285264b3baf07c8ff3000362055856653bccff,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i = 0; i < array.length; i++)
    {
        array[i] = 0;
    }
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            array[i] = nums[i];
        }
        else
        {
            // find the next # that isn't 10
            for (int j = i + 1; j < nums.length; j++)
            {
                if (nums[j] != 10)
                {
                 	array[i] = nums[j];
                    i = j; 
                    break;
                }      
            }
        }
    }
    
    return array;
    
}
",,0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
",,0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",,0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
",,0
609cc3f20dd1f3529a02ebbed8384395c8400b2b,"public int countEvens(int[] nums)
{
    int evens = 0;
    for (int number: countEvens)
    {
        if (number % 2 == 0)
        {
            evens = evens + 1;
        }
    }
    return evens;
}
",,0
9f87b2b05c03f2be8a156ec1c96ef54488b5591a,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean check = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (check)
        {
         	if (nums[i]==7)
            {
                check = false;
            }
        }
        else if (nums[i]==6)
        {
            check = true;
        }
        else
        {
            sum = sum + nums[i];
        }
    }
    return sum;
}
",,0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",,0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",,0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",,0
fd975fc2b0de30ea1fa6c9ae43f605604231b8a1,"public boolean endOther(String a, String b)
{
    if (a.substring(a.length() - b.length(), a.length()).equals(b) ||
        b.substring(b.length() - a.length(), b.length()).equals(a))
        return true;
    else 
        return false; 
}
",,0
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",,0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",,0
43b70a5866a0d2fd735f1d510fe02fe1e67f82ab,"public boolean xyzThere(String str)
{
    int length = str.length();
    boolean contains = false;
    boolean hasPeriod = false;
    if (length >= 3)
    {
        for (int i = 0; i < length-1; i++)
        {
            if (str.charAt(i) == 'x' && str.charAt(i+2) == 'z')
            {
                contains = true;
            }
            if (str.substring(i, i+4).equals("".xyz""))
            {
                hasPeriod = true;
                int remainder = length - i;
                i = i + remainder;
            }
        }
        if (hasPeriod == true)
        {
            contains = false;
        }
    }
    return contains;
}
",,0
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",,0
faaaa4b9637f7003d240f0cdc7c5c6bf28c27cdb,"public boolean isEverywhere(int[] nums, int val)
{
    if (nums.length == 0) {
        return true;
    }
    int b = 0;
    for (int i = 1; i < nums.length; i++) {
        if (nums[i] == val || nums[i-1] == val) {
            	b++;
        }
    }
    return b == nums.length - 1;
}
",,0
a5ef4e9ae777060ed56015c4182bbe5b63e80d69,"public boolean evenlySpaced(int a, int b, int c)
{
    return (a == b && b ==c);
    return ((Math.abs(a-b) == Math.abs(b-c)) || (Math.abs(a-c) == Math.abs(a-b)) || (Math.abs(c-a) == Math.abs(b-c)));    
}
",,0
81e7a0cc2be664f591193cbf1db5ade462037da6,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    	return 20;
 	if (a == b || a == c || b == c)
    	return 10;
  else;
    return 0;
}
",,0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",,0
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

",,0
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
",,0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",,0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",,0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",,0
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",,0
e503bcd53b6c1b8e1f5bceead47b945857b50e9a,"public int dateFashion(int you, int date)
{
    if ( you >= 8 && date >= 8)
    {
        return 2;
    }
    if ( you <= 2 && date <= 2)
    {
        return 0;
    }
     if ( you >= 8 && date <= 8)
    {
        return 1;
    }
   if ( you <= 8 && date >= 8)
    {
        return 1;
    }
    }
    else 
        return 1;
}
",,0
39483c437921abc8fe24406f9d159f633a6ed263,"public boolean xyzThere(String str)
{

    if (str.startsWith(""xyz"") || str.endsWith(""xyz""));
        
    {
        return true;
    }
        for (int x = 0; x < str.length() -2; x++)
        {
   			if (str.charAt(x) == '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return false;
    }
        
        }
    {return false;}

}
",,0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",,0
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",,0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",,0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",,0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",,0
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",,0
2ed7f6d787e101490eeaad0609644558aad02f27,"public String atFirst(String str)
{
    if (str.length() >= 2)
       return str.substring(0, 2);
    else if (str.length() == 1)
        return str.subcharAt(0) = ""@"";
    else 
        return ""@@"";
        
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",,0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",,0
5455ec6afe437e7506504e1f1428a5a0b96a5669,"public int blackjack(int a, int b)
{
    if (a <= 21 && b <= 21)
    {
    if (a > b)
    {
       return blackjack(a, 0);
    }
    else if (b > a)
    {
        return blackjack(0, b);
    }
    } 
    return 0;
}

",,0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",,0
d8f6de34bbb4daabf4789e4930885c05e8604106,"public int countClumps(int[] nums)
{
    int clumpNum = 0;
    int clump = 0;
    for (int = 0; i < nums.length - 1; i++)
    {
     	if (clump == 0 && nums[i] == nums[i+1])
        {
            clumpNum++;
            clump++;
        }
        else
        {
         	clump = 0;   
        }
    }
    return clumpNum;
}
",,0
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
",,0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",,0
cc9d92e58c77513c6aab917cfcc7c112c1577e90,"public String[] fizzBuzz(int start, int end)
{
    String[] array = new String[end - start];
    
    for (int i = start; i < end; i++) 
    {
        if (i % 15 == 0) 
        {
            array[i - start] = ""FizzBuzz"";
        } 
        else if (i % 3 == 0) 
        {
            array[i - start] = ""Fizz"";
        } 
        else if (i % 5 == 0) 
        {
            array[i - start] = ""Buzz"";
        } 
        else 
        {
            array[i - start] = String.valueOf(i);
        }
    }
                                                      
    return array;
}
",,0
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",,0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
bb771f79da2e164515e0325c84eaa2dbd392e69b,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = 0;
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}",,0
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",,0
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",,0
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
",,0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",,0
21f49c70a5574e177ee0e928d52f7656fb37a03a,"public boolean canBalance(int[] nums)
{
    int same = 0;
    int sum = 0;
    for (int i=0;i<nums.length;i++)
    {
        sum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        same += nums[i];
        sum -= nums[i];
    
    if (same == sum)
    {
        return true;
    }
    }
    return false;
}",,0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
fd5de8c5b537d303a4be24a5042fbffcf8a20d66,"public boolean xyBalance(String str)
{
    //String last = str.substring(str.length()); //the last char
    int counter1 = 0;
    int counter2 = 0;
    char y = 'y';
    char x = 'x';
    String a = Character.toString(y);
    String b = Character.toString(x);
    
   	if (str.length() >= 2)
    {
        for (int i = 0; i < str.length() - 1; i ++) //go through every
        {
            String current = str.substring(i, i+1);
            int later = str.lastIndexOf(x); //2
            for (int j = later; j < str.length(); j ++) //
            {
                String current2 = str.substring(j, j+1);
                if (current2.equals(a))
                {
                    counter2 ++;
                }
            }
            if (current.equals(b))
            {
                counter1 ++;
            }
        }
        if (counter2 >= counter1)
        {
            return true;
        }
        else if (counter1 == 0 && counter2 == 0)
        {
            return true;
        }
        return false;
    }
    else
    {
        if (str.equals(a)||str.equals(""""))
        {
            return true;
        }
        return false;
    }
}
    ",,0
973a65e488a4e69e584103f0d002d5460eb046f6,"public boolean xyBalance(String str)
{
    //String last = str.substring(str.length()); //the last char
    int counter1 = 0;
    int counter2 = 0;
    char y = 'y';
    char x = 'x';
    String a = Character.toString(y);
    String b = Character.toString(x);
    
   	if (str.length() >= 2)
    {
        for (int i = 0; i < str.length() - 1; i ++) //go through every
        {
            String current = str.substring(i, i+1);
            int later = str.lastIndexOf(x); //2
            for (int j = later; j < str.length(); j ++) //
            {
                String current2 = str.substring(j, j+1);
                if (current2.equals(a))
                {
                    counter2 ++;
                }
            }
            if (current.equals(b))
            {
                counter1 ++;
            }
        }
        if (counter2 >= counter1)
        {
            return true;
        }
        return false;
    }
    else
    {
        if (str.equals(a))
        {
            return true;
        }
        return false;
    }
}
    ",,0
69e641533574f585ccebe26430c3b79103b5c593,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else if (isMorning} 
    {
        if (isMom)
        {
            return true:
        }
        else
        {
            return false;
        }
    }
    else
    {
        return true;
    }
}
",,0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",,0
b62f1274c56d44cf8761535a5c06a838683ec7c5,"public boolean sameEnds(int[] nums, int n)
{
    boolean a = false;
    for	(int i = 0; i < n; i++)
    {
        if (nums[i] == nums[nums.length - n + i])
        {
            a = true;
        }
        else
        {
            a = false;
        }
    }
    return a;
}
",,0
63bc9b6a7e3b8866c3ea0d84d282e25f9716e838,"public String mixString(String a, String b)
{
    String result = """"; 
    int index = 0;
    
    if (a.length() >= b.length()) {
        index = b.length(); 
    }
    if (a.length() <= b.length()) {
        index = a.length(); 
    }
    for (int i = 0; i < index; i++) {
        result += a.substring(i, i + 1) + b.substring(i, i + 1);
    }
    if (a.length() < b.length()) {
        result += b.substring(a.length(), b.length()); 
    }
    if (a.length() > b.length()) {
        result += a.substring(b.length(), a.length()); 
    }
    return result; 
}
",,0
f6813268f36f79d3489d3036c6a71d542f00fe8b,"public boolean sameEnds(int[] nums, int n)
{
    boolean a = false;
    for	(int i = 0; i < n; i++)
    {
        if (nums[i] == nums[nums.length - n + i])
        {
            a = true;
        }
        else
        {
            a = false;
        }
    }
    return a;
}
",,0
2554504cf73dcc772aa6c40d5e1c117584eceb44,"public int sum13(int[] nums)
{
    int total = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (i > 0)
        {
            if (nums[i] != 13 && nums[i - 1] != 13)
            {
                total += nums[i];
            }
        }
        else
        {
            if (nums[i] != 13)
            {
                total += nums[i];
            }
        }
    }
    
    return total;
}
",,0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",,0
13e7726e22c3130d052d705ea6bb06b6b0869917,"public int sortaSum(int a, int b)
{
    if (Math.abs(a + b >= 10) && Math.abs(a + b <= 19))
        {
            return 20;
        }
    else
        {
            return Math.abs(a + b);
        }
}
",,0
532a012b0ec202d27262b383dc13089aef7e1e3b,"public int dateFashion(int you, int date)
{
   if ((you >= 2 && date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 && date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
",,0
f90f4209c0769229c85ac2c0392970d7920341e4,"public String alarmClock(int day, boolean vacation)
{
        alarmClock(0, true) -> ""off"";
        alarmClock(6, true) -> ""off""   
        alarmClock(1, true) -> ""10:00""
        alarmClock(2, true) -> ""10:00""
        alarmClock(3, true) -> ""10:00""
        alarmClock(4, true) -> ""10:00""
        alarmClock(5, true) -> ""10:00"" 
}
",,0
2fca6215c9c9afb58d28887169dfe435558d7825,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a <= 21 && a > b)
    {
        return a;
    }
    else if (b <= 21 && b > a)
    {
        return b;
    }
    else if (b <= 21 && a > 21)
    {
        return b;
    }
    else
    {
     	return a;   
    }
}
",,0
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
",,0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",,0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",,0
fda71b2582c559b53069b970b54899ccdef19aaf,"public boolean endOther(String a, String b)
{
    for (int i = 0; i < a.length(); i++)
    {
        if (a.toLowerCase().substring(i).equals(
            b.toLowerCase()))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",,0
f4c32c9dc2461a16fffa716b01b092ad7dfe57b5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
        return 0;
    else if ( b == 13 )
        return a;
    else if ( c == 13 )
        return a + b;
    return a + b + c;
        
}
",,0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",,0
ac791e33437b3b26bd56526f8f1a68c958771022,"public int sum3(int[] nums)
{
    return nums[0]+nums[1]+nums[2];
}
",,0
9dfb9d8285fed77ebe058ec80bfb80f2f1a5db2a,"public boolean sameEnds(int[] nums, int len) {
    for (int i = 0, j = nums.length - len; i < len; i++, j++)
        if (nums[i] != nums[j]) return false;
    return true;
}
",,0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",,0
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
",,0
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
",,0
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
",,0
9f87b2b05c03f2be8a156ec1c96ef54488b5591a,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean check = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (check)
        {
         	if (nums[i]==7)
            {
                check = false;
            }
        }
        else if (nums[i]==6)
        {
            check = true;
        }
        else
        {
            sum = sum + nums[i];
        }
    }
    return sum;
}
",,0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",,0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
",,0
b16439cf6ef5c619010c64a8fb33444995f538e6,"public String plusOut(String str, String word)
{
    String returnString = """";
    int lastIndex = str.indexOf(word);
    int i = lastIndex;
    
    while (i < str.length())   
    {
        if (i == str.indexOf(word, lastIndex))
        {
            returnString = returnString + word;
            lastIndex = i;
            i += (word.length() - 1);
        }
        
        else
        {
            returnString = returnString + ""+"";
            i++;
        }
    }
	return returnString;
}
",,0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",,0
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
",,0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",,0
3f9fb6fe01554295f4eba9d360fb11240c63107c,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
        if (str.substring(i).startsWith(""b"") 
            && str.substring(i + 2).startsWith(""b""))
        {
            return true;
        }
    }
    return false;
}
",,0
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",,0
e7b6e4f287f8c6938b8b88652157d73da80ecef9,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i+1])
        {
            count++;
            for (int j = 2; j == nums[i]; j++)
            {
            	i++;
            }
        }
    }
    return count;
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
1d6179ccdc1c6fce139143f569025a679c1301a0,"public int[] zeroMax(int[] nums)
{
	 int largeOdd = 0;
    for (int i = nums.length - 1; i >= 0; i--)
    {
    	if (nums[i] % 2 == 1 && nums[i] > largeOdd)
        	largeOdd == nums[i];
        if (nums[i] == 0)
        	nums[i] == largeOdd;
    }
    return nums;
}",,0
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}",,0
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
",,0
9e2323cd896bf8c878fad40b42eac0e930afede4,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    String str = String.valueOf(num);
    int stringLength = str.length();
    int lastDigit = Integer.parseString(stringLength);
    if (lastDigit >= 0 && lastDigit < 5)
    {
        return num - lastDigit;
    }
    else if (lastDigit >= 5)
    {
        return num + (10 - lastDigit);
    }
}",,0
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
",,0
79c400ee8222fb6d1d7b1531cd6b530ece9e291d,"public int blackjack(int a, int b)
{
    if (Math.abs(21 - a) < (Math.abs(21 - b)) && a < 21)
    {
        return a;
    }
        else if (Math.abs(21 - a) > (Math.abs(21 - b)) && b < 21)
        {
            return b;
        }
    else 
    {
     return 0;
    }
            
}
",,0
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
",,0
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
",,0
9f98cd5893ed8711953832332cb9e68381d2d182,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str.substring(str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
",,0
8a29e1c786ef24718722e3ee466fc07ef0e18808,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            int storage = 0;
            for (int j  = i; j < nums.length; j++)
            {
                if (j % 2 == 1 && j > storage)
                {
                    storage = j;
                }
            }
            nums[i] = storage;
        }
    }
    return nums;
}
",,0
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",,0
4ba46181a66bb2f3cf45d38876db8736b1ebda46,"public boolean in1To10(int n, boolean outsideMode)
{
    return ((n >= 1 && n<=10 && !outsideMode) || (n > 10 || n < 1 && outsideMode));
}
",,0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",,0
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
",,0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",,0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",,0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",,0
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
",,0
d6752f75c103ddd855cd95eb763012b6e4411ea2,"public boolean endOther(String a, String b) {
    if(a.length() < b.length()) {
        String temp = a;
        a = b.toLowerCase();
        b = temp.toLowerCase();
    }
                  
    return a.substring(a.length() - b.length()).equals(b);
}",,0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",,0
b05268e4079f92fa8c479a385b128576976d16c9,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    String value = '@';
    
    if (result.length() == 0)
    {
        result.charAt(0) = '@';
        result(1) = '@';
    }
    else if (result.length() == 1)
    {
        result(1) = '@';
    }
    else
    {
        result = result;
    }
    
    return result;
}
",,0
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
",,0
1db6c5ef548ac31ea212a8e1c550b8c518d219ef,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"";
    }
        
        
}
",,0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",,0
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
",,0
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",,0
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
",,0
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",,0
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
",,0
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
",,0
e0d4c69d7595be4d7524172434e2cc21e57661e9,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
        {
            i = i + 1;
            continue;
        }
        sum += nums[i];
    }
    return sum;
        
}
",,0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",,0
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
",,0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",,0
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
",,0
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",,0
4951e3e93960ed4399945d8a349ac025dd9fc00d,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum<= 19)
    {
     	sum = 20;   
    }
    return sum;
}
",,0
09a8c33c60aa11c021e8b84d90d8a62d6b24e858,"public boolean canBalance(int[] nums)
{
    int total = 0;
    int length = nums.length;
    for ( int i = 0; i < length; i++ )
    {
        total += nums[i];
    }
    
    if ( total % 2 == 1 )
    {
        return false;
    }
    else
    {
        if ( total == 0 && length == 1 )
        {
            return false;
        }
        else
        {
        	int smallTotal = 0;
        	int j = 0;
        	while ( smallTotal < total / 2 )
        	{
            	smallTotal += nums[j];
            	j++;
        	}
        	return ( smallTotal == ( total / 2 ) );
        }
    }
}
",,0
0615e4e3628f3968baa7039844e88175c1722d19,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend)
    {
        return (cigar >= 40);
    }//end if
    
    return (cigars >= 40 && cigars <= 60);
    
    
}
",,0
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",,0
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
",,0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",,0
c1787c3579abadd7e03345d1ff93d595d3346793,"public String without2(String str) 
{
    if (name.substrnig(0, 2) == name.substring(name.length() -2, name.length()))
    {
        return ""name.substring(0, 2)"";
    }
    else if (number.substring(0, 2) == number.substring (name.length() -2, name.length()))
    {
        return ""Hi"";
    }
    else
    {
        return ""name.substring(0)"";
    }
}

",,0
6d72f5b621649af66f06d05181162fe55168a76e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
}
",,0
ac56ebb37416cf67034dc6f6ce26c8c432a5568d,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == (str - (str.length() - 2)))
            {
                return (str.substring(2));
            }
        else
            {
                return str;
            }
    }        
    else
    {
        return str;
    }
}
",,0
c7972a0c52578814fdc1e75cdf7b2b9b87eaaa39,"public boolean evenlySpaced(int a, int b, int c)
{
    if ( a > b && b > c || c > b && b > a)
    {
        return ( a - b == b - c);
    }
    else if ( b > a && a > c || c > a && a > b)
    {
        return ( b - a == a - c);
    }
    else
    {
        return ( a - c == c - b);
    }
    
}
",,0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",,0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",,0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",,0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",,0
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
",,0
64e6a1b1c2176532ea3545edbf85eecc952dbf18,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a;
    return diffOne == diffTwo;
}
",,0
7d2cc44f9ddcd55a93d3738c84d32d272d1abe0d,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int i = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[i++] = k;
        }
     }
  return result;

}
",,0
ff4d3fccfe514870f69c27a376b8457b4bff138d,"public String repeatEnd(String str, int n)
{
    StringBuilder stringbuild = new StringBuilder(n*n);
    String last = str.substring(str.length() - n);
    for(int i = 0; i < n; i++)
    {
     	stringbuild.append(last);   
    }
    return stringbuild.toString();
}
",,0
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
",,0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",,0
cc9d92e58c77513c6aab917cfcc7c112c1577e90,"public String[] fizzBuzz(int start, int end)
{
    String[] array = new String[end - start];
    
    for (int i = start; i < end; i++) 
    {
        if (i % 15 == 0) 
        {
            array[i - start] = ""FizzBuzz"";
        } 
        else if (i % 3 == 0) 
        {
            array[i - start] = ""Fizz"";
        } 
        else if (i % 5 == 0) 
        {
            array[i - start] = ""Buzz"";
        } 
        else 
        {
            array[i - start] = String.valueOf(i);
        }
    }
                                                      
    return array;
}
",,0
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",,0
0596e9fad0e491fa66802102678ad39fda317949,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
    
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
        return num + (10 - round);
    else 
        return num + (round - 10);
    
}
",,0
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",,0
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",,0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",,0
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
",,0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
532a012b0ec202d27262b383dc13089aef7e1e3b,"public int dateFashion(int you, int date)
{
   if ((you >= 2 && date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 && date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
",,0
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",,0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",,0
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
",,0
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",,0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
26bc37d1d0a520cad0dce5a5034e6ee5e7a7dd98,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        int sandwichLength = str.length();
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",,0
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",,0
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
",,0
ed8567dc122263a3f23fdbe2e489dcbf9fe4850d,"public String repeatEnd(String str, int n)
{
    String endString = """";
        
        for (int x = 0; x < n; x++)
        {
            String repString = str.substring(str.length() - n);
            endString = ensString + repString;
        }
    {
        return endString;
    }
}
",,0
30be73bbeac431013d86b50a0b55732a80da7e55,"public boolean evenlySpaced(int a, int b, int c)
{
    if (c - b == b - a)
        return true;
}
",,0
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",,0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",,0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",,0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",,0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",,0
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",,0
e22ce5e6a4c5b1b12e61c7366855f779f8ae64f3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return str + ""@"";
    }
    else
    {
        return ""@@"";
    }
}
",,0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",,0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",,0
c72936a1839694da8df5554d66db79bf67bec60c,"public int caughtSpeeding(int speed, boolean isBirthday)
{ 
    if (isBirthday)
    {
        speed = speed + 5
    }
	if (speed <= 60)
	{
    	return 0;
	}
    
	if (speed >= 61 && speed <= 80)
	{
    	return 1;
	}
    
	if (speed >= 81)
	{
    	return 2;
	}
	
}
",,0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",,0
ee4502f84ab64a89a3611ec63c2ddf8bb4dfd493,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return c;
    }
    else if ( b == 13)
    {
        return 0;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",,0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",,0
9bb5e21f3a10d7ec32b3825e14061232985ba3c2,"public int dateFashion(int you, int date)
{
    if(you <= 2 || date <= 2){
		return 0;
    }else if(you >= 8 || date >= 8){
		return 2;
    }else {
        return 1;
    }
}
",,0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",,0
a5ef4e9ae777060ed56015c4182bbe5b63e80d69,"public boolean evenlySpaced(int a, int b, int c)
{
    return (a == b && b ==c);
    return ((Math.abs(a-b) == Math.abs(b-c)) || (Math.abs(a-c) == Math.abs(a-b)) || (Math.abs(c-a) == Math.abs(b-c)));    
}
",,0
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
",,0
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",,0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",,0
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
",,0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",,0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",,0
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
",,0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",,0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",,0
d8f6de34bbb4daabf4789e4930885c05e8604106,"public int countClumps(int[] nums)
{
    int clumpNum = 0;
    int clump = 0;
    for (int = 0; i < nums.length - 1; i++)
    {
     	if (clump == 0 && nums[i] == nums[i+1])
        {
            clumpNum++;
            clump++;
        }
        else
        {
         	clump = 0;   
        }
    }
    return clumpNum;
}
",,0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",,0
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",,0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",,0
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
e87542225324deb36fc5891405e6401d53aab2a3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed -= 5;
    }
    if (speed=<60)
    {
        return 0;
    }
    if (speed>=61 && speed<= 80)
    {
        return 1;
    }
    if (speed>=81)
    {
        return 2;
    }
}
",,0
2ab613317018e535c7c370e1bf3fb0d86c7a9f9b,"public int[] tenRun(int[] nums)
{
    int[] result = new int[nums.length];
    int input;
    int value = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (input % 10 == 0 && input > value)
        {
            value = input;
        }
        
        if (value == -1)
        {
            result[i] = input;
        }
        else
        {
            result[i] = value;
        }
    }
    
    return result;
}
",,0
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
",,0
1198f499ca9865d622d49c9fe202af9446bcce1c,"public String repeatEnd(String str, int n)
{
    String result = """";
    for (int i = 0; i < n; i++)
    {
        result += str.substring(str.length() - n);
    }
    return result;
}
",,0
6bb0ee0ad18b7740337fbdd1e749d82571043674,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return ""@"";
    }
    else
    {
        return ""@@"";
    }
}
",,0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
3f9fb6fe01554295f4eba9d360fb11240c63107c,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
        if (str.substring(i).startsWith(""b"") 
            && str.substring(i + 2).startsWith(""b""))
        {
            return true;
        }
    }
    return false;
}
",,0
6ea39f9aa93fe4c8dc595c700952b2b7901026d0,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = %num;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",,0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",,0
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",,0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",,0
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
",,0
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",,0
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",,0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",,0
00ceb5ab09c0af0ca39126b94f3b83d09f33faa7,"public boolean has77(int[] nums)
{
    Boolean result = false;
    for (int i = 1; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && (nums[i - 1] == 7 || nums[i + 1] == 7))
            {
                result = true;
            	break;
            }
        else if (nums[i - 1] == 7 && nums[i + 1] == 7)
        {
            result = true;
            break;
        }
    }
    return result;
}
",,0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",,0
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
",,0
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",,0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",,0
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
",,0
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",,0
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
",,0
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
",,0
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
",,0
2d3aaa72496f81c75c50aa901ede6999be98d6d9,"public int loneSum(int a, int b, int c)
{
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
",,0
9dfb9d8285fed77ebe058ec80bfb80f2f1a5db2a,"public boolean sameEnds(int[] nums, int len) {
    for (int i = 0, j = nums.length - len; i < len; i++, j++)
        if (nums[i] != nums[j]) return false;
    return true;
}
",,0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",,0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",,0
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",,0
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",,0
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",,0
3bfe605f68e12c9d3fe2391ac78c50b7339ea224,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
	b = b.toLowerCase();    
    return(a.lastIndexOf(b)<=a.length()-b.length()||b.lastIndexOf(a)<=b.length()-a.length());
}
",,0
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
",,0
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",,0
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
",,0
c65c6b3814047b3aaef3794d06b2e294c8c889f4,"public String repeatEnd(String str, int n)
{
    StringBuilder stbuild = new StringBuilder(n*n);
    String last = str.substring(str.length() - n);
    for (int i = 0; i < n; i++)
    {
        stbuild.append(last);
    }
    return stbuild.toString();
}
",,0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",,0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",,0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",,0
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",,0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",,0
49c3fe42791682d66a90f553422c9d4f389e55d4,"public boolean has77(int[] nums)
{
    for (int x = 0; x < nums.length; x++)
    {
        if ((nums[x] == 7 && nums[x+1] == 7) || (nums[x] == 7 && nums[x + 2] == 7))
        {
            return true;
        }
    }
    return false;
}
",,0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
cdd987fe22a2c2a5848e5fca825333eda6c5ff22,"public String zipZap(String str)
{
    return str.replaceAll(""z.p"",""zp"");
    /**String first = """";
    String out = """";
    String contain = """";
    for (int i = 0; i < str.length() - 3; i ++)
    {
        first = str.substring(0, i);
        contain = str.substring(i, i+4);
        if (contain.charAt(i) == 'z' && contain.charAt(i+3) == 'p')
        {
            
            str = str.replace(newS, re);
        }
    }**/
}
",,0
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",,0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",,0
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
",,0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",,0
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",,0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",,0
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",,0
dc20b50f1f6fc266d80c9cceb3e26ca923d1b02f,"public int[] shiftLeft(int[] nums)
{
 	//int[] newArray = new int[nums.length];
    //int count = 0;
    //return nums;
   int start = nums[0];
    for (int i = 0; i < nums.length; i++)
    {
     	int j = 1;
        nums[i] = nums[j];
        j++;
        //nums[i] = nums[i + 1];
        /*if (nums[i] == nums.length)
        {
            nums[i + 1] = start;   
        }*/
              	
    }
    
    
    return nums;   
}
",,0
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
",,0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",,0
eabf29a115776da8e379096d41db0d505c7e5795,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[1+i])
                isClump = false;
        }
        else if (nums[i] == nums[i+1])
        {
            isClump == true;
            clumps++
        }
    }
    return clumps;
}
",,0
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
",,0
c565833b540b15f532d3914a5a40bfc2a010cfa6,"public int countClumps(int[] nums)
{
    int counter = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (i < nums.length - 1 && nums[i] == nums[i] + 1)
        {
            counter++;
        }
    }
    return counter;
}
",,0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",,0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",,0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",,0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",,0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",,0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",,0
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
4969ff57664d96172e1d837e2441b526164e9da1,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c)
    {
        return 0;
    }
    else if (a == b && b == c)
    {
        return 20;
    }
    else
    {
        return 10;
    }
}
",,0
2ab613317018e535c7c370e1bf3fb0d86c7a9f9b,"public int[] tenRun(int[] nums)
{
    int[] result = new int[nums.length];
    int input;
    int value = -1;
    
    for (int i = 0; i < nums.length; i++)
    {
        input = nums[i];
        
        if (input % 10 == 0 && input > value)
        {
            value = input;
        }
        
        if (value == -1)
        {
            result[i] = input;
        }
        else
        {
            result[i] = value;
        }
    }
    
    return result;
}
",,0
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",,0
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",,0
6ccaf37a8d9757fc57014287316ecd9409820fe7,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 || sum <= 19)
        return 20;
    else
        return sum;
    
}
",,0
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",,0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
",,0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",,0
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}",,0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
",,0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
e352a60d0f0071b6a216e1e28616df56bccf719c,"public int countCode(String str)
{
    int code;
    int iteration = 0;
    int length = str.length() - 3;
    while (iteration > length)
    {
     	if (str.charAt(iteration) == ""c"" && str.charAt(iteration + 1) == ""o"" && str.charAt(iteration + 3) == ""e"")
        {
         	code += 1;
            iteration += 1
        }
    }
    return code;
}
",,0
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
",,0
cd727adb54733c5b0e8ec8f90e3a20c4ce931c92,"public int makeChocolate(int small, int big, int goal)
{
    if goal >= 5 * big:
        remainder = goal - 5 * big
    else:
        remainder = goal % 5
        
    if remainder <= small:
    {
        return remainder;
    }
        
    return - 1;
}
",,0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",,0
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
",,0
87b2b1811ad58d7a1fff515864427654134ed8fa,"public int[] fix45(int[] nums)
{
    int j = 0;
	for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
        {
            int tempStorage = nums[i + 1];
            if (j == 0)
            {
            	while (nums[j] != 5)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
            
            else
            {
                while (nums[j] != 5 && nums[j - 1] != 4 && j < nums.length)
            	{
             	   j++;
            	}
            	nums[j] = tempStorage;
            	nums [i + 1] = 5;
            	j = i + 2;
            }
        }
    }
    return nums;
}",,0
67e32e60ccf94c9e237b1ee60eec88d54337ee46,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (( n > 12 && n < 15) ||( n > 16 && n < 20 )) {
     return 0;
   }
   return n;
}
",,0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",,0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",,0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",,0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",,0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",,0
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
",,0
a6ef869527e799ebeaa3435595e0271453b97469,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    int temperature = temp;
    boolean summer = isSummer;
    int minTemp = 60;
    int maxTemp = 90;
    boolean play = false;
    if (summer == true)
    {
        maxTemp += 10;
    }
    if (temp >= minTemp && temp <= maxTemp)
    {
        play = true;
    }
    return (play);
}
",,0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",,0
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",,0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",,0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",,0
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
",,0
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",,0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",,0
9f87b2b05c03f2be8a156ec1c96ef54488b5591a,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean check = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (check)
        {
         	if (nums[i]==7)
            {
                check = false;
            }
        }
        else if (nums[i]==6)
        {
            check = true;
        }
        else
        {
            sum = sum + nums[i];
        }
    }
    return sum;
}
",,0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",,0
114368c5fd53eeca608a64fb280ab3e72eaeea4a,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != 13)
        {
            sum += nums[i];
        }
        else
        {
            i += 1;
        }
    }
    if (nums[nums.length-2] != 13 && nums[nums.length-1] != 13)
    {
        sum += nums[nums.length-1];
    }
    return sum;
}
",,0
e444710aa658e2dde4799f8965284cd20bc98f6a,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
        int even = 0;
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;
}
",,0
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
",,0
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
",,0
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
",,0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",,0
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",,0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",,0
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
",,0
2f0a2b01b8d36b9b41d35269fb9c59a0cd367b3b,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int lastDigit = num % 10;
    if (lastDigit >= 5)
    {
        int roundUp = num + (10 - lastDigit);
        return roundUp;
    }
    else
    {
        int roundDown = num - lastDigit;
        return roundDown;
    }
}",,0
5d799e5cd908a22f7d459965e0739103058d4643,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
    
    while(i < str.length())
    {
        if(i <= str.length() - word.length() && 
           str.substring(i, i+word.length()).equals(word))
        {
            result.append(word);
            i +=word.length();
        }
        else
        {
            result.append(""+"");
            i++;
        }
    }
    return result.toString();
}
",,0
da854431fc95a4fda3f5795de985db2ccfd6cecc,"public boolean xyzThere(String str)
{
    if (str.length() >= 3) {
   	 	for (int i = 0; i < str.length() - 3; i++) {
        	if (str.substring(i, i + 3).equals(""xyz"")) {
            	if (i == 0) {
                    return true;
                }
                else if (str.charAt(i - 1) == '.') {
                    return false;
                }
                else {
                    return true;
                }
        	}
            else {
               return false; 
            }
    	}
    }
    else {
        return false;
    }
}
",,0
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",,0
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
",,0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",,0
7a311480e1038e58bd263cd3dd91b77fce57edfa,"

public static int[] fizzArray(int n) {


int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}

public static void main(String[] args) {

int n=5;

int[] fizArr=fizzArray(n);

System.out.println(""Fizz array of size:::""+n);

for (int i = 0; i < fizArr.length; i++) {

System.out.print(fizArr[i]+""\t"");

}

}

}",,0
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
850b29b41eb8755b65684da314498e5f9f502ead,"public int[] frontPiece(int[] nums)
{
    if (nums.length .isEqual(1)
        return nums;
    if (nums.length .isEqual(2)
        return nums;  
    else
        int[] sum = new int [nums.length];
        sum[0] = nums[0];
        sum[1] = nums[1];
        return sum;
    
   // int[] sum = new int [nums.length-1];
    //for (int i = 0; i < nums.length; i++)
      //  sum[i] = nums[i];
   //return sum;
}
",,0
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",,0
35aba5f59d8333186e6c14dca33d6a77b87aecb5,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == val && nums[i-1] == val)
        {
            return true;
        }
    }
    return false;
}
",,0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",,0
1681af7aa16ac3fb94528b92d2877cfb3db6c161,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;   
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;   
    }
    else
    {
     	return 1;   
    }
}
",,0
a977b6cf852582a9ace439284eb96b27e9abc28d,"public String getSandwich(String str)
{
    boolean firstPart = str.startsWith(""bread"");
    boolean lastPart = str.endsWith(""bread"");
    if (firstPart && lastPart)
    {
        int strLength = str.length();
        String middle = str.substring(5, strLength - 5);
        return middle;
    }
    else
    {
        return """";
    }
}",,0
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",,0
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
",,0
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
",,0
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
",,0
b0de87b4e81b39ba1a103570a5c0ea6664ef233b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        int noticket = 0;
    }
}
",,0
51d726f3ba7d0bdf6df41f275be7d3e5ae0b21ed,"public String getSandwich(String str)
{
    int firstBread = -1;
    int lastBread = -1;
    for (int i = 0; i < str.length() - 5; i++)
    {
        if (str.substring(i, i+5).equals(""bread""))
        {
            firstBread = i;
            i = str.length();
        }
    }
    for (int j = str.length() - 5; j > 0; j--)
    {
        if (str.substring(j, j+5).equals(""bread""))
        {
            lastBread = j;
            j = 0;
        }
    }
    if(firstBread != -1 && lastBread != -1 && firstBread != lastBread)
        return str.substring(firstBread + 5, lastBread);
    return """";
}
",,0
f7983b055e29ca99b62c39572a59a426e03eb1ca,"public int loneSum(int a, int b, int c)
{
    if (a == b) {
        return c;
    } else if (b == c) {
        return a;
    } else if (a == c) {
        return b;
    } else if (a == b && b == c && a == c) {
        return 0;
    } else {
        return a + b + c;
    }
}
",,0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",,0
7e7c66de43f3403869e2a5e32affc77e3e798f68,"public int sum13(int[] nums)
{
    boolean before = false;
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (before == true)
        {
            continue;
        }
        
        if (nums[i] != 13)
        {
        	sum = sum + nums[i];
            before = flase;
        }
        else
        {
            before = true;
        }
            
    }
    return sum;
}
",,0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
",,0
7ccd160da42b775254477045699a8be0b1a7e3ea,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        return 2;
    }
    else if (you <= 2 || date <= 2) {
        return 0;
    }
    else {
        return 1;
    }
        
}
",,0
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",,0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",,0
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
",,0
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
",,0
212811dc0ec0c0bf43b0a9cdee67b4332db56595,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
        if ((nums[i] == 7 && nums[i + 1] == 7))
        {
         	return true;   
        }
        else if ((nums[i] == 7 && nums[i + 2] == 7))
    }
    return false;
}
",,0
9a762998ef3f0abdaeaa9e34d97d58d792cb6be4,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMom)
        return true;
    return (!isMorning);
}
",,0
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",,0
852602c47446f37d36d8cc336a76e90619329e74,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend){
    	return (40 <= cigars);
    }
    else{
    	return(40 <= cigars && cigars <= 60);
    }
}
",,0
ab752aa9f041e605c697b86bdcb50aa8b25db534,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
",,0
0fad8b415867f8a1a716acf8bf5e3f25c3071ff9,"public int countClumps(int[] nums)
{
    int counter = 0;
    boolean clumps = false;
    for (int x = 0; x < nums.length - 1; x++)
    {
        if (clumps)
            if(nums[x] != nums[x+1])
            {
                clumps = false;
            }
        else if (nums[x] == nums[x+1])
        {
            clumps = true;
       		counter++;
    	}
    }
    return counter;
}
",,0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",,0
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
",,0
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
",,0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",,0
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
",,0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",,0
64520cbb7c1e44f2b914c32b1d9f62b2e03ce23e,"public boolean twoTwo(int[] nums)
{
    for( int i =0; i<nums.length; i++)
    {
     	if (nums[i] == 2)
        {
            int count = 0;
        	for (int j =i; j<nums.length; j++)
            if (nums[j] ==2)
                count++;
        	else
                break;
        }
        i = i + count;
        if (count < 2)
            return false;
    }
    return true;
}
",,0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",,0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",,0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
08b070ce9c21826ebf0a02af3bc02e91dbf0005d,"public int[] frontPiece(int[] nums)
{
    boolean lessThanTwo = (nums.length < 2);
    if (lessThanTwo)
    {
        return nums;
    }
    else
    {
        return nums[0 1]
    }
}",,0
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
",,0
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",,0
7ee540611323a35160a97c8f3d841b30ffcc0e49,"public int sum3(int[] nums)
{
    int sumOfArray = 0;
    for (int i : nums)
    {
        sumOfArray += i;
    }
    return sumOfArray;
}
",,0
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
",,0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",,0
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",,0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",,0
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
",,0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",,0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",,0
204385efad990a01e31f7663d5cfa3882f1dbd89,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    
    if (a != b && b != c && c!= a)
    {
        return sum;
    }
    
    else if (a == b)
    {
        return c;
    }
    
    else if (a == c)
    {
        return b;
    }
    
    else if (b == c)
    {
        return a ;
    }
    
    else
    {
        return 0;
    }
}
",,0
c3f23ac2ec5c833dc9221dad8b3933a5ab317603,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
        return (cigars >= 40);
    return (cigars >= 40 && cigars <= 60);
    
          
}
",,0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",,0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",,0
caec91f2ba0d25b3a96d93bbc7e6ff92f4dfdd72,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off""
        }
    }
    else if (day > 0 && day < 6)
    {
        return ""7:00"";
    }
    else
    {
        return ""10:00"";
    }
}
",,0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",,0
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
",,0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",,0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",,0
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",,0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
",,0
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
",,0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",,0
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",,0
6982b1059a99a477863e5ace357073e7b8d1bc82,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i < nums.length; i++)
    {
    	if (i+1 < nums.length && i-1 >= 0)
        {
        	if (nums[i+1] == val || nums[i] == val)
            {
            	everywhere = true;
                
            }
            else
            {
            	everywhere = false;
            }
        }        
    }
    return everywhere;
}
",,0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",,0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
",,0
7064ceaee0d8de14281e9b67153b371ec2460498,"public String[] fizzBuzz(int start, int end)
{
    for (int i = 1; i <= 20; i++) 
    {
        String result = """";
        if (i % 3 == 0)    
        { 
            result = ""Fizz""; 
        }
        else if (i % 5 == 0)    
        { 
            result += ""Buzz""; 
        }
        else if (result == """")  
        { 
            result = i; 
        }
        return result; 
    }
}
",,0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",,0
88111a1b682c4e3263232c7e42baecf389dd8a17,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0)
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
    else
    {
    	return 0;
    }
}
",,0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",,0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",,0
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",,0
0615e4e3628f3968baa7039844e88175c1722d19,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if(isWeekend)
    {
        return (cigar >= 40);
    }//end if
    
    return (cigars >= 40 && cigars <= 60);
    
    
}
",,0
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",,0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",,0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",,0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",,0
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",,0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
f975c769611523b9ff8e0c8e7baa2a5d2b94373c,"public boolean twoTwo(int[] nums)
{
    int i;
    for (i = 0; i < nums.length-1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i+1] != 2)
            {
                return false;
            }
            i = i +2;
        }
    }
    if (nums.length >= 3)
    {
	if (nums[nums.length - 1] == 2 && nums[nums.length - 2] != 2)
        {
            return false;
        }
    }
    else
    return true;
}
",,0
5f6ff2faba9720dd4b2b611b38603a236bff690c,"public String plusOut(String str, String word)
{
    int wordPlace = str.indexOf(word);
    int wordLength = word.length();
    int i = 0;
    int h = 0;

    while (wordPlace != -1)
        str = str.replace(str.substring(i, wordPlace), ""+"");
    	i = wordPlace + wordLength;
  		wordPlace = str.indexOf(word, i);
    str = str.replace(str.substring(i, str.length(), ""+""));
    return string;
    	
}
",,0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",,0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
19ba7bfcee6055c6de2d7811621ab2cb9e901bcd,"   public static boolean bobThere( String str )
    {
        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( str.charAt( i ) == 'b' && str.charAt( i + 2 ) == 'b' )
            {
                return true;
            }
        }

        return false;
    }
",,0
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",,0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",,0
e444710aa658e2dde4799f8965284cd20bc98f6a,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
        int even = 0;
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;
}
",,0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",,0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",,0
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",,0
b03f6ee58d1c2efbc298c1b090d888a47d5425a9,"public boolean evenlySpaced(int a, int b, int c)
{
    if (b-a <= 1 && c-a >= 2 && c-b >= 2 
        || b-a >= 2 && c-a <= 1 && c-b >=2
        || b-a >=2 && c-a >= 2 && c-b <= 1)
        return true;
    return false;
}
",,0
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",,0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",,0
6a4b7f9298a793fdb179e8db7f59699092e3325c,"public int noTeenSum(int a, int b, int c)
{
	int s = fixTeen(a)+fixTeen(b)+fixTeen(c);
}

public int fixTeen(int n)
{
    if ((n>=13 && n<=14) || (n>=17 && n<=19))
    {
        n=0;
    }
    return n;
}
",,0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",,0
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",,0
a5ef4e9ae777060ed56015c4182bbe5b63e80d69,"public boolean evenlySpaced(int a, int b, int c)
{
    return (a == b && b ==c);
    return ((Math.abs(a-b) == Math.abs(b-c)) || (Math.abs(a-c) == Math.abs(a-b)) || (Math.abs(c-a) == Math.abs(b-c)));    
}
",,0
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",,0
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
",,0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",,0
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
",,0
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
",,0
7f90669d0301966f6989df5c128ccae77d7e6655,"public int noTeenSum(int a, int b, int c)
{
	int s = fixTeen(a)+fixTeen(b)+fixTeen(c);
    return s;
}

public int fixTeen(int n)
{
    if ((n>=13 && n<=14) || (n>=17 && n<=19))
    {
        n=0;
    }
    return n;
}
",,0
3a6926253f22b4fe6d5e934cbd56d32c6fdabb31,"public String without2(String str) 
{
int Length = str.length();   
String beginning = str.substring(0, 2);
String ending = str.substring(Length -2, Length);
     
    if (Length == 2)
    {return """";}
    
    if (Length < 2)
    {return str;}
    
    if (Length >= 2 && beginning.equals(ending))
    {return str.substring(2);}
    
    if (Length < 2 && beginning.equals(ending))
    {return str;}
     
    else 
    {return str;}
}
",,0
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",,0
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
",,0
6b24071e22eb2bc6ac5cf2a14e2289ef0348213a,"public boolean has77(int[] nums)
{
    boolean has = false;
    for (int i = 0; i < nums.length; i++) {
        if (i < nums.length - 1 && nums[i] == 7 && nums[i + 1] == 7) {
            has = true;
        }
        else if (i < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7) {
            has = true;
        }
    }
    return has;
}
",,0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",,0
d5379a74cb52b1e9fe6f485b384be10574f7a254,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
064dcb97d53aec176cb4a9be008bb62a5f0e718a,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
",,0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",,0
739598df6f10e1b41997fbbce33f2e2bf0fd995e,"public boolean has77(int[] nums)
{
    int x = nums.length;
    for (int i = 0; i < x; i++)
    {
        if (i < x - 1 && nums.[i] == 7 && nums.[i + 1] == 7)
        {
            return true;
        }
        if (i < x - 2 && nums.[i] == 7 && nums.[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
",,0
b9e0f477924771925580b5247741afedf2a8f593,"public String plusOut(String str, String word)
{
    String newstring = """";
    int i = 0;
    while (i < str.length())
    {
        if (i < str.length() - word.length())
        {
            if (str.substring(i, i + word.length()).equals(word))
            {
                newstring += word;
                i += word.length();
            }
            else
            {
                newstring += ""+"";
                i += 1;
            }
        }
        else
        {
            newstring += ""+"";
            i += 1;
        }
    }
    return newstring;
}
",,0
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
",,0
e39038022e43c460d4b4320994329123654acc5b,"public int[] frontPiece(int[] nums)
{
    if (nums.size() >= 2)
    {
    	int[] firstTwo = new Array[2];
        for (int i = 0; i < nums.size(); i++)
        {
            firstTwo[i] = nums[i];
        }
        return firstTwo;
    }
    else
    {
        int[] first = new Array[1];
        for (int i = 0; i < nums.size(); i++)
        {
            first[i] = nums[i];
        }
        return first;
    }
}
",,0
bb771f79da2e164515e0325c84eaa2dbd392e69b,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = 0;
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}",,0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",,0
9222afd237f2a153dec01f15809e88ec81bac994,"public String plusOut(String str, String word)
{
    String trivialEnd = """";
    int n = 0;
    
    while (n <= str.length())
    {
       if (str.substring(n).startsWith(word))
       {
           trivialEnd += word;
           n += word;
           
       }
        else 
        {
            trivialEnd += '+';
            n++
        }   
    }   
    return trivialEnd;
}
",,0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",,0
88dffbb77f35c14f614d510d552cf3eb77cab50a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
 	if(isBirthday)
    {
    	if(speed<=65)
        {
        	return 0:
        }
        
        else if(speed>= 66 && speed<=85)
        {
        	return 1:
        }
        
        else if(speed>=86)
        {
        	return 2;
        }
    }
    
    if(!isbirthday)
    {
    	if(speed<=60)
        {
        	return 0;
        }
        
        if(speed >=61 && speed<=80)
        {
        	return 1;
        }
        
        if(speed>=81)
        {
        	return 2;
        }
    }
}
",,0
fb3b878ff7c89e0940c66e22faadec79ac2996e7,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i: int[])
    {
     	sum = sum + i;
    }
    return sum;
}
",,0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
05161d04ee294bff885a6b46878125ddcd59cc71,"public boolean evenlySpaced(int a, int b, int c)
{
      if (a == b && b == c)
           return true;
       if (a == b || a == c || b == c)
           return false;
       return ((Math.abs(a - b) == Math.abs(b - c))
               || (Math.abs(a - c) == Math.abs(a - b)) || (Math.abs(c - a) == Math.abs(b - c)));
}
",,0
88c1f2b7e034b96bbf5743de2db63f04595bb1b4,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19)
    {
        if (n == 15 || n == 16)
        {
            return n;
        }
        else
        {
            return 0;
        }
    }
    else 
    {
        return n;
    }
}
",,0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",,0
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",,0
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
",,0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",,0
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",,0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",,0
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",,0
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",,0
f4b03862b0451a373caa9f6bb7390b99d9c24f62,"public String atFirst(String str)
{
    return str.substring(0, 2);
}
",,0
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
a07a8703a9cafd5f2dd00f03a9d186fc390e15f9,"public String zipZap(String str)
{
    String s = """";
    int x = 0;
    int y = 0;
    if (str.length() < 3) {
        return str;
    }
    else {
        for (int i = 0; i < str.length() - 2; i++) {
            if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p') {
                x++;
            }
        }
    	while (s.length() != str.length() - x && y < str.length() - 2) {
            if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p') {
                s = s + ""zp"";
                y = y + 2;
            }
            else {
                s = s + str.charAt(y);
            }
            y++;
        }
    }
    return s;
            
        
}
",,0
774fb6ad9286581a00dc73adcaae63d8b283ddb1,"public boolean endOther(String a, String b)
{
    String strA = a.toLowerCase();
    String strB = b.toLowerCase();
    return (strA.endsWith(strB) || strB.endsWith(strA));
}
",,0
e444710aa658e2dde4799f8965284cd20bc98f6a,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
        int even = 0;
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;
}
",,0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
",,0
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

",,0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",,0
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",,0
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
",,0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",,0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",,0
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",,0
a24dfce9bb2b97aec0c2a859f3855e3285de4fff,"public int[] seriesUp(int n)
{
    
    int[] array = new int[n * (n + 1) / 2];
    
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i; j++)
        {
            array[(i - 1) * 2] = j;
        }
    }
    
    return array;
}
",,0
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",,0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",,0
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",,0
a43f9daaa9b5cc98acfe197b9157d9de345febf6,"public int[] frontPiece(int[] nums)
{
    for (int numbers: nums; int i = 0; i < 2; i++)
    {
        int number[i] = numbers;
    }
    return number;
}
",,0
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",,0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",,0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",,0
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
",,0
56ac97e6ac311645870c594b750311820db92f19,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        n = 0;
}
",,0
ce8faf0b0976ddb82152e029b4e00668a05ed30f,"public String without2(String str) 
{
    int l = str.length();
    if (l <= 1)
    {
        return str;
    }
    else if (l == 2)
    {
        return """";
    }
    else
    {
        if (str.substring(0, 2) == str.substring(l - 2, l))
        {
            return str.substring(0, 2) + "" == "" + str.substring(l - 2, l);
        }
        else
        {
            return str.substring(0, 2 + "" != "" + str.substring(l - 2, l);
        }
    }
}
",,0
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
",,0
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
",,0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",,0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",,0
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",,0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
",,0
35d9b062c4dbef1d54afafa5c0a45c7133104055,"public int[] fix45(int[] nums)
{
    int k = 0
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4 && nums[i + 1] != 5)
        {
            for(; (nums[k] != 5 || (k != 0 && nums[k - 1] == 4));)
            {
                k++;
            }
            nums[k] = nums[i + 1];
            nums[i + 1] = 5;
        }
 
    }
    return nums;
}
",,0
dc77d9f47e20012cfdff686d71cf058927245c62,"public int roundSum(int a, int b, int c)
    return round10(a) + round10(b) + round10(c));

public int round10(int num)
{
    int digit = num % 10;
	if (digit >= 5)
        return num = (10 - digit);
    return num - digit;
}
",,0
85186d01b27aef9c80c8886dd1799d8cc625e0aa,"public int luckySum(int a, int b, int c)
{
    else if (a == 13)
    {
        return c;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

",,0
a5ef4e9ae777060ed56015c4182bbe5b63e80d69,"public boolean evenlySpaced(int a, int b, int c)
{
    return (a == b && b ==c);
    return ((Math.abs(a-b) == Math.abs(b-c)) || (Math.abs(a-c) == Math.abs(a-b)) || (Math.abs(c-a) == Math.abs(b-c)));    
}
",,0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",,0
0e68a96660515e0852bbeffb5ec3b3954d4b1625,"public int[] seriesUp(int n)
{
     int[] result = new int[n * (n + 1) / 2];
 	 int initial = 0;
 	 for (int j = 1; j <= n; j++)
     {
    	for (int k = 1; k <= j; k++)
        {
      		result[initial ++] = k;
        }
     }
  return result;

}
",,0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",,0
8ddbd5941c7b99d6290f2265a1e4ef543437a966,"public String atFirst(String str)
{
    int length = str.length();
    
	if (length >= 2)
    {
		return str.substring(0, 2);
    }
	else if(length == 1)
    {
		return (str.charAt(0)+""@"");
    }
	else
    {
		return ""@@"";
    }
}
",,0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",,0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",,0
1889c30f0414785c8f5f8afe2dc4eaf09520169f,"public boolean twoTwo(int[] nums)
{
    boolean hasTwo = true;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 2) {
                if ((i != 0 && nums[i - 1] == 2) || (nums.length - 1 > i && nums[i + 1] == 2 )) {
                    hasTwo = true;
                    i++;
                } else {
                    hasTwo = false;
                }
            }
        }
        return hasTwo;
}
",,0
3346da11a1577c65c28f5fd8f3cb34d9688ec419,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday = true)
    {
    	{
        	speed = speed - 5;
    	}
    }
    
    if (speed <= 60)
    {
    {
        return 0;
    }
    elseif (speed >= 61 && speed <=80)
    {
        return 1;
    }
	 else
    {
        return 2;
    }
    }
}
",,0
694790c1e8c76d4ca44177dcfcd59f8296f6f898,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
    	else if (day == 0 || day == 6)
        {
            return ""off"";
        }
}	
",,0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",,0
f4116059c58c9c261368e947c61d5d8d125ff72d,"public boolean canBalance(int[] nums)
{
    int samesum = 0;
    int sumsame = 0;
    for (int i=0;i<nums.length;i++)
    {
        samesum += nums[i];
    }
   
    for (int i=0;i<=nums.length-2;i++)
    {
        sumsame += nums[i];
        samesum -= nums[i];
    }
    if (samesum == sumsame)
    {
        return true;
    }
    return false;
}
",,0
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
",,0
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
",,0
d2f1c8d6b183cb0ec9bea7b06200b3ce1b721898,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars>= 40);
    }
    else
    {
        return  (cigars >= 40 && cigars<= 60)
        
}
",,0
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",,0
265f1f469f36912bddad02dbbd6b2e229eca0a06,"public int[] tenRun(int[] nums)
{
    int[] ten = new int[nums.length];
    boolean isTen = false;
    private int tenMult;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0 && nums[i] != tenMult)
        {
            isTen = true;
            tenMult = nums[i];
            ten[i] = nums[i];
        }
        
        else if (isTen)
        {
            ten[i] = tenMult;
        }
        
        else
        {
            ten[i] = nums[i];
        }
    }
 	return ten;
}",,0
7ca00176b20799e273b5b67825a48a94a29ac8cc,"public int[] zeroMax(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
    return nums;
}





public int[] findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

",,0
6741b56c979c49e6c1c5b18c77a387cfc473512d,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length(); i++)
    {
        sum += nums[i];
    }
    return sum;
        
}
",,0
26bc37d1d0a520cad0dce5a5034e6ee5e7a7dd98,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        int sandwichLength = str.length();
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",,0
2fca6215c9c9afb58d28887169dfe435558d7825,"public int blackjack(int a, int b)
{
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a <= 21 && a > b)
    {
        return a;
    }
    else if (b <= 21 && b > a)
    {
        return b;
    }
    else if (b <= 21 && a > 21)
    {
        return b;
    }
    else
    {
     	return a;   
    }
}
",,0
b582494b7566fd2e40e9699094879d12819c2f07,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean lastSix = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
            lastSix = true;
        }
        else if (nums[i] == 7)
        {
            lastSix = false;
        }
        if (lastSix == false)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",,0
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
",,0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",,0
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",,0
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
4cad14f6dc235bb7665a336718b0bc721df9ddd2,"public boolean isEverywhere(int[] nums, int val)
{
    Boolean result = true;
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            result = true;
        }
        else
        {
            result = false;
            break;
        }
    }
    return result;
}
",,0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",,0
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
",,0
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",,0
f720cc450f616d826f746ce4609c79ab1860b68a,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n.length;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",,0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",,0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",,0
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
",,0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",,0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",,0
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
",,0
cd36011e020ffc41188de2b7cfe5e55af586b032,"public int redTicket(int a, int b, int c)
{
    if ((a == 2) && (b == 2) && (c == 2))
    {
        return 10;
    }
    else if ((a == b) && (b == c))
    {
        return 5;
    }
    else if ((b != a) && (c != a))
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",,0
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",,0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
",,0
63c16bfedccd87efec3a9615707b53bae96e87cb,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
      
    for(int i = 0; i < str.length() - 5; i++) {
        if(str.substring(i, i + 5).equals(""bread"")) {
            first = i;
            break;
        }
    }
                                
    for(int i = str.length() - 5; i >= 0; i--) {
        if(str.substring(i, i + 5).equals(""bread"")) {
            last = i;
            break;
        }
    }
                                                          
    if(first != -1 && last != -1 && first != last)
        return str.substring(first + 5, last);
                                                                    
    return """";
}
",,0
529d313f0a353b81e3a1ca5e020890023e995836,"public String without2(String str) 
{
     if (str.length() >= 2 && str.substring(0, 2).equals(str.substring(str.length() - 2))) {
           return str.substring(2, str.length());
       }
       return str;
}
",,0
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
",,0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",,0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",,0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
a767440796f740efacb74e1a68a50c6ef184a501,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length - 1; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
",,0
9f87b2b05c03f2be8a156ec1c96ef54488b5591a,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean check = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (check)
        {
         	if (nums[i]==7)
            {
                check = false;
            }
        }
        else if (nums[i]==6)
        {
            check = true;
        }
        else
        {
            sum = sum + nums[i];
        }
    }
    return sum;
}
",,0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",,0
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",,0
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
",,0
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
",,0
5751db3148c8805ad9e482b9dedd7ade5357ba47,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
         if(str.substring(i, i + 5).equals(""bread"")) 
         {
            first = i;
            break;
         }
    }
    for (int i = 0 ; i < str.length() - 5 ; i++)
    {
     	if(str.substring(i, i + 5).equals(""bread"")) 
        {
            last = i;
            break;
        }
    }
    if (first != -1 && last != -1 && first != last)
    {
        return str.substring(first + 5, last);
    }
    else
    {
    return """";
    }
}
",,0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",,0
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",,0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",,0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",,0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",,0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",,0
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
",,0
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
",,0
172b1add93db57d2a40bf171672074b4b4174560,"public int[] tenRun(int[] nums)
{
    int savedval = 0;
    while (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            savedval = nums[i];
            i++;
            
            while (nums[i] % 10 != 0)
            {
                nums[i] = savedval;
                i++;
            }
        }
    }
    return nums;
}
",,0
d7c652fe7617faefbf9d4f1a9e2917b5bcf5efcc,"public int[] tenRun(int[] nums)
{
    int replace = nums[0];
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] % 10 == 0) {
            replace = nums[i];
        }
        else if (replace % 10 != 0) {
            replace = nums[i]
        }
        nums[i] = replace;
    }
    return nums;
}
",,0
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",,0
6bb0ee0ad18b7740337fbdd1e749d82571043674,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else if (str.length() == 1)
    {
        return ""@"";
    }
    else
    {
        return ""@@"";
    }
}
",,0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",,0
69c58fcabd6b83f9f221be01a00d93bea5ce9a45,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
        return (temp >= 60 && temp <= 100);
    return (temp >= 60 && temp <= 90);
}
",,0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",,0
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",,0
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",,0
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",,0
ce358c1658e28aea5b1e49244b3ee450ce781411,"public int[] shiftLeft(int[] nums)
{
    int shifted[] = new int[nums.length];
    if((nums.length == 0) || (nums.length == 1))
    {
        return nums;
    }
    else
    {
        for(int i = 0; i < nums.length - 1; i++)
        {
            shifted[i] = nums[i + 1];
            shifted[nums.length - 1] = nums[0];
        }
        return shifted;
    }
}
",,0
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
f8a88d04552686ba064b8db06f097f9921d6b1eb,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
		return (n <= 1 || n >= 10);
	else
    return (n >= 1 && n <= 10);
}
",,0
9050b974ad390bfb7881add0a55419bac94d1aff,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length - 1; i++)
    {
    	if (nums[i -1] == val || nums[i + 1] == val)
        {
        	return true;
        }
    }
}
",,0
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",,0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",,0
1aa3dd42dd551631d81dfd00430790bbaab18ef3,"public boolean bobThere(String str)
{
    int firstB = str.indexOf(""b"");
    int lastB = str.lastIndexOf(""b"");
    if (firstB = lastB)
    {
        return false;
    }
    else if (lastB - firstB == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}",,0
8ddbd5941c7b99d6290f2265a1e4ef543437a966,"public String atFirst(String str)
{
    int length = str.length();
    
	if (length >= 2)
    {
		return str.substring(0, 2);
    }
	else if(length == 1)
    {
		return (str.charAt(0)+""@"");
    }
	else
    {
		return ""@@"";
    }
}
",,0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",,0
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
3d11719630fc8c44b85deba0b9752e36fb374a27,"public int luckySum(int a, int b, int c)
{
    if (a = 13)
    {
        return 0;
    }
    else if (b = 13)
    {
        return a;
    }
    else if (c = 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",,0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
9ab9adfbd148ab36fea8046986a42317f6b53a8e,"public String plusOut(String str, String word)
{
      String output = """";
      int i = 0 ;

      while(i < str.length() ) 
      {
         if (str.substring(i).startsWith(word)) 
         {
            output = output + word;
            i = i + word.length();
         } 
         else 
         {
            result = result + ""+"" ;
            i++;
         }
      }

      return output;
}",,0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",,0
739598df6f10e1b41997fbbce33f2e2bf0fd995e,"public boolean has77(int[] nums)
{
    int x = nums.length;
    for (int i = 0; i < x; i++)
    {
        if (i < x - 1 && nums.[i] == 7 && nums.[i + 1] == 7)
        {
            return true;
        }
        if (i < x - 2 && nums.[i] == 7 && nums.[i + 2] == 7)
        {
            return true;
        }
    }
    return false;
}
",,0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",,0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
e0d4c69d7595be4d7524172434e2cc21e57661e9,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
        {
            i = i + 1;
            continue;
        }
        sum += nums[i];
    }
    return sum;
        
}
",,0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",,0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",,0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",,0
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
",,0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",,0
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",,0
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",,0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",,0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
0937e6dd9ebb20fc9fd77b500ff77f9fb966d27e,"public String zipZap(String str)
{
	if (str.length() < 3) 
    {
        return """"; 
    }
String result = """";

	for (int i = 0; i < str.length() - 2; i += 3)
    {
		result = result + str.substring(i + 1, i + 3) + str.substring(i, i + 1);
    }
return result;
}
",,0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",,0
1ce3f9a47a09f95d1a1ca35bc1930be42f6a28cb,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8  ) 
    {
        return 2;
    }
    
    else if ((you <= 2 || date <= 2 ) || (you = 9 || date = 2)||
            (you = 10 || date = 2) || (you = 2 || date = 9))
    {
        return 0;
    } 
   
    
    
    else 
    {
        return 1;
        
    }
              
    
}
",,0
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",,0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",,0
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
",,0
b03f6ee58d1c2efbc298c1b090d888a47d5425a9,"public boolean evenlySpaced(int a, int b, int c)
{
    if (b-a <= 1 && c-a >= 2 && c-b >= 2 
        || b-a >= 2 && c-a <= 1 && c-b >=2
        || b-a >=2 && c-a >= 2 && c-b <= 1)
        return true;
    return false;
}
",,0
b36f8e98d080db1d5f4e9650a10969a243b9fd26,"public String zipZap(String str)
{
    int a = str.length();
    
    String result = """";
    
    for ( int y = 0; y < a - 2; y++)
    {
        if (str.charAt(y) == 'z' && str.charAt(y + 2) == 'p')
        {
            result = result + ""zp"";
            y = y + 2;
        }
        else
        {
            result = result + str.charAt(y);
        }
    }
    return result;
}
",,0
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",,0
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
",,0
11285264b3baf07c8ff3000362055856653bccff,"public int[] withoutTen(int[] nums)
{
    int[] array = new int[nums.length];
    
    for (int i = 0; i < array.length; i++)
    {
        array[i] = 0;
    }
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            array[i] = nums[i];
        }
        else
        {
            // find the next # that isn't 10
            for (int j = i + 1; j < nums.length; j++)
            {
                if (nums[j] != 10)
                {
                 	array[i] = nums[j];
                    i = j; 
                    break;
                }      
            }
        }
    }
    
    return array;
    
}
",,0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",,0
9a762998ef3f0abdaeaa9e34d97d58d792cb6be4,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
        return false;
    if (isMom)
        return true;
    return (!isMorning);
}
",,0
3d4c1103cc1b9f1262e0e2e77865c91089068160,"public boolean canBalance(int[] nums)
{
    int sum1 = 0;
    for (int = 0; i < nums.length / 2; i++)
    {
        sum1 = sum1 + nums[i];
    }
    int sum2 = 0;
    for (int j = nums.length / 2; j < nums.length; j++)
    {
        sum2 = sum2 + nums[j]
    }
	return sum1 = sum2;
}",,0
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
",,0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",,0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",,0
fae2f7dfe0c7f6a36eed081761f1d04f77387b4b,"

    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }

",,0
9ecf844f1f204bb4033d9d6a0027d8c4a1d17f71,"public int[] zeroMax(int[] nums)
{
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            nums[i].findMaxOdd(i, nums);
        }
    }
    return nums;
}





public int findMaxOdd(int i, int[] nums)
{
    int maxOdd;
    maxOdd = 0;
    
    for (int b = i; b < nums.length - 1; b++)
    {
        if (nums[b] % 2 != 0 && nums[b] > maxOdd)
        {
            maxOdd = nums[b];
            nums[i] = nums[b];
        }
    }
    return maxOdd;
}

",,0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",,0
0596e9fad0e491fa66802102678ad39fda317949,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
    
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
        return num + (10 - round);
    else 
        return num + (round - 10);
    
}
",,0
99ac88b2bf5d16d68a807ece64118eb57cbc9af9,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (num >= 5)
        return num + 10 - round;
    else 
        return num - round;
}
",,0
5794a069a7e35d299897c624560aba01f49de48b,"public int greenTicket(int a, int b, int c)
{
    if(a == b == c)
    {
        return 20;
    }
    else if(a == b || b == c || a == c)
    {
        return 10;
    }
    else
    {
     	return 0;   
    }
}
",,0
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
",,0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",,0
a6ef869527e799ebeaa3435595e0271453b97469,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    int temperature = temp;
    boolean summer = isSummer;
    int minTemp = 60;
    int maxTemp = 90;
    boolean play = false;
    if (summer == true)
    {
        maxTemp += 10;
    }
    if (temp >= minTemp && temp <= maxTemp)
    {
        play = true;
    }
    return (play);
}
",,0
5b9eb535280570f293684ef95c107bc80160a334,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = len;
	for (int i =0; i <range;i++)
    {
		if (!(nums[i] == nums[nums.length - range + i]))
        {
			result = false;
        }
    }
return result;
}
",,0
62e36709dfbb8ccf2b58f4172916a82a8435bc7a,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int roundSum = a + b + c;
    return roundSum;
}

public int round10(int num)
{
    int round10 = 0;
    int roundedNum = num % 10;

    if (num < 10)
    {
        if (num / 5 >= 1)
        {
            num = (10 - num) + num;
        }
        else
        {
            num = 0;
        }      
    }
    else 
    {
       	if (roundedNum >= 5)
       	{
            roundedNum = 10 - roundedNum;
            num = roundedNum + num;
       	}
       	else if ((roundedNum < 10) && (roundedNum != 0))
       	{
            num = num - roundedNum;
       	}
    }
    round10 = num;
    return round10;
}
",,0
dfffcbe4f68182cb544f94125537be19361aefa9,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 4)
            nums[i + 1] = 5;
    }
    return nums
}
",,0
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",,0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
b9fbdeb0d25edd847f75474416127f7deac2ef05,"public int blackjack(int a, int b)
{ assert(a > 0);
 assert(b>0);
    if ((a > 21) && (b > 21)) {
        return 0;
    } else if (a > 21) {
        return b;
    } else if (b > 21) {
        return a;
    }
 int difference_a_21 = 21 - a;
 int difference_b_21 = 21 - b;
 if (difference_a_21 > difference_b_21) {
 return b; 
 } else {
     return a;
 }
}
",,0
91a1a1f43a992f4f97b2421fe9b084e96d7ef517,"public int makeChocolate(int small, int big, int goal)
{
    while (goal >= 5)
    {
        goal -= 5;
    }
    return goal;
}
",,0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",,0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",,0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",,0
1ce3f9a47a09f95d1a1ca35bc1930be42f6a28cb,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8  ) 
    {
        return 2;
    }
    
    else if ((you <= 2 || date <= 2 ) || (you = 9 || date = 2)||
            (you = 10 || date = 2) || (you = 2 || date = 9))
    {
        return 0;
    } 
   
    
    
    else 
    {
        return 1;
        
    }
              
    
}
",,0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
c64c9e9c0a786ef3732a68209a390d30d8284fd4,"public int dateFashion(int you, int date)
{
   if ((you >= 2 || date >= 2) && (you >= 8 || date >= 8))
       return 2;
   if ((you >= 2 || date >= 2) && !(you >= 8 || date >= 8))
       return 1;
   return 0;
}
",,0
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
",,0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",,0
2ff10cecd8d8545349c487d248173bc2054ee147,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( nums[i] == 7 && nums[i + 1] ==7)
        {
            return true;
        }
        else if (nums[i] == 7 && nums[i + 				2] == 7)
        {
            return true;
        }    
        return false;
    }
    
}
",,0
b20d525ead268bb3eced9c95cb88481aa8aab61d,"public int makeChocolate(int small, int big, int goal)
{
	if (goal > 5*big)
    {
       goal = goal - 5 * big); 
    }
    else
    {
        goal = goal % 5;
    }
    if (goal <= small)
    {
        return goal;
    }
    return -1;
}
",,0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
f4b03862b0451a373caa9f6bb7390b99d9c24f62,"public String atFirst(String str)
{
    return str.substring(0, 2);
}
",,0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
",,0
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
",,0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",,0
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",,0
4ad8b085303cb504473ebc53ca9be9a49bce6620,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if(isBirthday)
		speed -= 5; //  diff limit is higher now
	if(speed <= 60)
		return 0;
	else if(speed <= 80)
		return 1;
	else
		return 2;
    
}
",,0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",,0
05b23fcc737fcb6b3c50cd8949cae2a6c045d1a0,"public String[] fizzBuzz(int start, int end)
{
    String[] series = new String[end - start];
    for (int i = 0; start < end; i++)
    {
        if ((start % (3 * 5)) == 0)
        //when it is multiples of both 3 and 5
        {
        	series[i] = ""FizzBuzz"";
        }
        else if ((start % 5) == 0)
        {
            series[i] = ""Buzz"";
        }
        else if ((start % 3) == 0)
        {
            series[i] = ""Fizz"";
        }
        else
        {
            series[i] = String.valueOf(start);
        }
        start++;
    }
    return series;
        
}
",,0
4104adb19668d1e41a0c2b2850ca3d2b45e25648,"public int[] fix45(int[] nums)
{
    int n = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            n++;
        }
    }
    int[] nums5 = new int[n];
    int n5 = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 5)
        {
            nums5[n5] = i;
            n5++;
        }
    }
    int count5 = 0
    for (ints i : nums)
    {
        if (i < nums.length - 1 && nums[i] == 4 && nums[i + 1] == 5)
        {
            // no change needed
        }
        else if (i < nums.length - 1 && nums[i] == 4)
        {
            nums[nums5[count5]] = nums[i + 1];
            nums[i + 1] = 5;
            count5++;
        }
    }
    return nums;
}",,0
dfad16430c497ed649824aea5c7d8a99c9b12fc6,"public int loneSum(int a, int b, int c)
{
    int sum = a + b + c;
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return sum;
    }
}
",,0
8204d1d388be1d8f6ff356d7d0070f87221a406e,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1])
            {
                clumps++;
            }
    }
    return clumps;
}
",,0
49eb57187ce32f7392ba9eb954bfc79921194a03,"public int countCode(String str)
{
    int count = 0;
    int i = 0;
    int length = str.length() - 3;
    while (i < length)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) = ""e"")
        {
            count++;
        }
        else
        {
            i++
        }
    }
    return times;
}
",,0
45c6f2acab29e9cc160c248c2988bb8e33eb2e0c,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer)
        return (temp >= 60 && temp <= 100);
    	return (temp >= 60 && temp <== 90);
}
",,0
bc4b89162ccb0995530e8ad5e7b3c299b69ad2c6,"public int dateFashion(int you, int date)
{
    
    if (you >= 8 && date >= 8)
    {
        return 2;
    }
    else if (you >= 8 || date >= 8)
    {
        if (you <= 2 || date <= 2)
        {
            return 0;
        }
        else 
        {
            return 2;
        }
    else
    {
        return 1;
    }
    return 0;
}
",,0
2ff4718cde15ee630d5b17aa4f1422713bf24792,"public int centeredAverage(int[] nums)
{
    int smallest = 100;
    int greatest = -1;
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] < smallest)
        {
            smallest = nums[i];
        }
        if (nums[i] > greatest)
        {
            greatest = nums[i];
        }
        sum += nums[i];
    }
    sum = sum - smallest - greatest;
    int length = nums.length - 2;
    return sum/length;
}
",,0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",,0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",,0
e5feac9d2e81ca6fe14f6513eaf75e8f6f080104,"public int redTicket(int a, int b, int c)
{
    int result = 0;
    
    if ( a == b == c == 2)
    {
        result = 10;
    }
    else if ( (a == b == c == 1) || (a == b == c == 0))
    {
        result = 5;
    }
    else if ( b != a && c != a)
    {
        result = 1;
    }
    else
    {
        result = 0;
    }
    
    return result;
}
",,0
7e7c66de43f3403869e2a5e32affc77e3e798f68,"public int sum13(int[] nums)
{
    boolean before = false;
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (before == true)
        {
            continue;
        }
        
        if (nums[i] != 13)
        {
        	sum = sum + nums[i];
            before = flase;
        }
        else
        {
            before = true;
        }
            
    }
    return sum;
}
",,0
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

",,0
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",,0
c8a0be59dec0a41242ebf952c04bb2e31259d489,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
",,0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",,0
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",,0
bc411f1d4fdc4db77fce57a6a849ec3ecc76f9f9,"public boolean isEverywhere(int[] nums, int val)
{
    boolean result = true
    for (int i; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
            return result;
        }
        else if (nums[i+1] == val)
        {
            return result;
        }
        else
        {
            result = false;
        }
    }
    return result;
}
",,0
74e88c7184092d0fdb534f52a31615c6c539dc42,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a) + fixTeen(b) + fixTeen(c); 
}

public int fixTeen(int n)
{
    if (n >= 12 && n < 15 || n > 16 && n <=19)
    {
        return 0;
    }
    else
    {
        return n;
    }
}
",,0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
64e6a1b1c2176532ea3545edbf85eecc952dbf18,"public boolean evenlySpaced(int a, int b, int c)
{
    int diffOne = b - a;
    int diffTwo = c - b;
    int diffThree = c - a;
    return diffOne == diffTwo;
}
",,0
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",,0
4d828ce02db3a73ae3ed9dc5a6b6282bbd271592,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        String start = str.substring(0, 1);
        String end = str.substring(str.length() - 2, str.length() - 1);

        if (start == end)
        {
            return str.substring(2);
        }
        else
        {
            return str;
        }
    }
    else
    {
        return str;
    }
    
}
",,0
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
",,0
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
",,0
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",,0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",,0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",,0
d169c38de21b64885c7d05ac289211c68831d042,"public String getSandwich(String str)
{
    if (str.lenth() < 2)
        return null;
    else
        return str(1) + str(2)
}
",,0
51d726f3ba7d0bdf6df41f275be7d3e5ae0b21ed,"public String getSandwich(String str)
{
    int firstBread = -1;
    int lastBread = -1;
    for (int i = 0; i < str.length() - 5; i++)
    {
        if (str.substring(i, i+5).equals(""bread""))
        {
            firstBread = i;
            i = str.length();
        }
    }
    for (int j = str.length() - 5; j > 0; j--)
    {
        if (str.substring(j, j+5).equals(""bread""))
        {
            lastBread = j;
            j = 0;
        }
    }
    if(firstBread != -1 && lastBread != -1 && firstBread != lastBread)
        return str.substring(firstBread + 5, lastBread);
    return """";
}
",,0
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",,0
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
",,0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",,0
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",,0
8243c75a69e18cb6c9f02b072995835b37129ed9,"public boolean sameEnds(int[] nums, int len) {
boolean result = true;
int range = len;
for (int i =0; i <range;i++)
if (!(nums[i] == nums[nums.length - range + i]))
result = false;
return result;
}
",,0
5b9eb535280570f293684ef95c107bc80160a334,"public boolean sameEnds(int[] nums, int n)
{
    boolean result = true;
	int range = len;
	for (int i =0; i <range;i++)
    {
		if (!(nums[i] == nums[nums.length - range + i]))
        {
			result = false;
        }
    }
return result;
}
",,0
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
",,0
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",,0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
13e7726e22c3130d052d705ea6bb06b6b0869917,"public int sortaSum(int a, int b)
{
    if (Math.abs(a + b >= 10) && Math.abs(a + b <= 19))
        {
            return 20;
        }
    else
        {
            return Math.abs(a + b);
        }
}
",,0
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
",,0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
",,0
a2ef5d82ffeb0d2c874c95de31b9ca6d0e3da825,"public String repeatEnd(String str, int n)
{ 	
    String res=str.substring(str.length()-n);//n = 0 return null or exception?
    for(int i=1;i<n;i++)
    {		// String res?
            res=res+str.substring(str.length()-n);
    return res;
    }
}
",,0
98d9a8194dbc20c147293014593532214cd465c0,"public String without2(String str) 
{
    if (str.length >= 2)
    {
        return str.substring(2);
    }
    return str;
}
",,0
ec63a2a322daae8c193b8ea6e6526483db88ece9,"public String repeatEnd(String str, int n)
{
    StringBuilder sb = new StringBuilder(str.length() * n);
    int i = 0;
    for (i = 0; i < n; i++)
    {
        sb.append(str);
    if (str.length() - n == 0)
    	{
      		return str;
   		}
   		else
    	{
       	String a = str.substring((str.length() - n), str.length());
           return sb.append(str); 
    	}
    }
    
}
",,0
cdbd6769faf44b710f4b50d3f75878e7dff820b5,"public int sortaSum(int a, int b)
{
    if ((a + b) >= 10 || (a + b) <= 19)
    {
        return 20;
    }
    return ((a + b) < 10 || (a + b) > 19);
}
",,0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",,0
81751a12c5ec992c144276982e9c0355c20cd858,"public int greenTicket(int a, int b, int c)
{
    if ( a== b && b == c && a == c)
    {
        return 20;
    }
    
    else if (a == b || b == c || c == a)
    {
        return 10;
    }
    
    else
    {
        return 0;
    }
}
",,0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",,0
02147d9667e7c7351ffb86ca3824dc38f22906f0,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
    
}
",,0
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
",,0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",,0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",,0
a23678b6f1ed32125aafce452d7f4f6449fb3591,"public int makeChocolate(int small, int big, int goal)
{
    int numLeft = goal % 5;
    if ((small + (big*5)) < goal) // if total number of bars is not enough
    {
        return -1;
    }
    else if ((big * 5) == goal) 
    {
        return numLeft;
    }
    if (numLeft <= small)
    {
        return numLeft;
    }
    else
    {
        return goal - (big*5);
    }
}
",,0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",,0
68c510e3ae2a5f68173421badd6c7e8d285e1fd9,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        return 0
    }
    else if (speed >= 61 && speed <= 80)
    {
        return 1
    }
    else if (speed >= 81)
    {
        return 2
    }
}
",,0
dc6a6be34aeb6a896ca19ef069d61be48399cea6,"public String plusOut(String str, String word)
{
    StringBuffer result = new StringBuffer();
    int i = 0;
      
    while(i < str.length()) {
        if(i <= str.length() - word.length() && 
            str.substring(i, i + word.length()).equals(word)) {
            result.append(word);
            i += word.length();
        } else {
            result.append(""+"");
            i++;
        }
    }
 
    return result.toString();
}
",,0
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


",,0
fb3b878ff7c89e0940c66e22faadec79ac2996e7,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i: int[])
    {
     	sum = sum + i;
    }
    return sum;
}
",,0
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",,0
d5ead5b3e99b68ea106d3bde1308448d1b98dfae,"public boolean xyBalance(String str)
{
    int numX = 0;
    int numY = 0;
    
    for (int i = 0; i < str.length(); i++)
    {
        if (charAt(i) == 'x')
        {
            numX++;
        }
        
        if (charAt(i) == 'y')
        {
            numY++;
        }
    }
    
    if (numX == numY)
    {
        return true;
    }
    
    else 
    {
        return false;
    }
}",,0
bbe06fdc5184357ca1c3d215ff4af4bf9eb1cc28,"public int countCode(String str)
{
    int number = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e') //first 2 letters are 'co' and the last letter is 'e'
        {
            number++;
        }
    }
    return number;
}
",,0
745f12119fb1eefe0979dda6203e5cf8a5febee0,"public String getSandwich(String str)
{
    int firstBread = str.indexOf(""bread"");
    int lastBread = str.lastIndexOf(""bread"");
    if (firstBread > -1 && lastBread > -1)
        return str.substring(firstBread, lastBread);
    else
        return """"
}
",,0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",,0
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
",,0
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",,0
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
",,0
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",,0
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",,0
932d6c2d18843b44bcb0e9cd384ae7c9965b18df,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
            i++;
        else 
            sum += nums[i];
    }
    return sum;
}
",,0
2f0a2b01b8d36b9b41d35269fb9c59a0cd367b3b,"public int roundSum(int a, int b, int c)
{
    int aRound = round10(a);
    int bRound = round10(b);
    int cRound = round10(c);
    return a + b + c;
}

public int round10(int num)
{
    int lastDigit = num % 10;
    if (lastDigit >= 5)
    {
        int roundUp = num + (10 - lastDigit);
        return roundUp;
    }
    else
    {
        int roundDown = num - lastDigit;
        return roundDown;
    }
}",,0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",,0
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
",,0
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
",,0
42d14e5184e627d129da271f04fa829a5af3ffd1,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.subString(first + str.length(), last.str.length());
    }
    else
    {
        return """";
    }
}
",,0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",,0
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
",,0
3bfb3ae26ec39cb8f053b3dbc8b4b0aada314a41,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 1;
    }
    else
    {
        return 1;
    }
}
",,0
38631bcd830b4dd509fb4ee95095b048edb46072,"public String atFirst(String str)
{	
    n= string(0, -1)
    if (n > 2)
    {
     	return substring(0, 2);
    }
    else
    {
        return ""@@"";
    } 
}
",,0
b821cf02f8191be808d171039ab2ccf3c6170e43,"boolean beforeX = false;
boolean isSatisfied = false;

public boolean xyBalance(String str)
{

    for (int i = 0; i < str.length(); i++)
    { 
        if (str.substring(i, i + 1).equals(""x""))
        {
         	beforeX = true;   
        }
                
        if (str.substring(i, i + 1).equals(""y"") && beforeX &&
           !str.substring(i + 1).equals(""x""))
        {
            isSatisfied = true;
        }

    }
    
    return isSatisfied;
}
",,0
cf6036cc34155af32690c2a41cc6f1def095e657,"public int countClumps(int[] nums)
{
    boolean areSame = false;
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        int compareLow = nums[i];
        int compareHigh = nums[i + 1];
        if (compareLow == compareHigh && !areSame)
        {
            clumps++;
            areSame = true;
        }
        else if (compareLow != compareHigh)
        {
            areSame = false;
        }
    }
    return clumps;
}
",,0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",,0
3f9fb6fe01554295f4eba9d360fb11240c63107c,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
        if (str.substring(i).startsWith(""b"") 
            && str.substring(i + 2).startsWith(""b""))
        {
            return true;
        }
    }
    return false;
}
",,0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",,0
5a541bfa3c25751105bfc205494e62135fea40e0,"public boolean twoTwo(int[] nums)
{
    boolean answer = false;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2 && nums[i + 1] == 2)
        {
            answer = true;
        }
    }
    return answer;
}
",,0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
",,0
75e2475837f486af53f13a628ed8878895abe816,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if ((first < last) && (first != -1) && (last != -1))
    {
        return str.substring(first + ""bread"".length(), last);
    }
    else
    {
        return """";
    }
}
",,0
8a784cb08df86d4814219f2b557c5cfa0f28180c,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend)
    {
        return (cigars >= 40);
    else
    {
        return (cigars >= 40 && cigars <= 60);
    }
}
",,0
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",,0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",,0
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
",,0
89b773ce42f1920ae478220b9e65deebf3af5445,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
    {
     	return num + 10 - round;
    }
    else
    {
    return num - round;
    }
}
",,0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",,0
ef879e2f72f113b983bbf8871d0f5ca47f242ca1,"public boolean bobThere(String str)
{
    int firstBLocation = str.indexOf(""b"");
    int nextBLocation = str.indexOf(""b"", firstBLocation + 2);
    if (firstBLocation != nextBLocation && nextBLocation - firstBLocation == 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}
",,0
948b5b2528e52a0cd157a7b353521353f3da1fef,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
     return (isMom || (!(isAsleep)));

}
",,0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",,0
394c038b159fe2d6ee1169068e5e3b8de3fafc51,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday = true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",,0
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
",,0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",,0
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
",,0
07bfb6fcfa70e37188bff5b83b62a677ed999984,"public int countClumps(int[] nums)
{
    int numClumps = 0;
    boolean sameClump = true;
    int lastVal = -1
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == lastVal && !sameClump)
        {
            numClumps++;
            sameClump = true;
        }
        else if (nums[i] != lastVal)
        {
            sameClump = false;
        }
        lastVal = nums[i];
    }   
    return numClumps;
}
",,0
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",,0
27986e92f636a98dd570597a3cc6cc2f8c45faad,"public int blackjack(int a, int b)
{
    if (int a>21 && int b>21);
    {
        return 0;
    }
    else if (int a > 21);
    {
        return 'b';
    }
    else if (int b > 21);
    {
        return 'a';
    }
    else if ((21-a)>(21-b));
    {
        return 'a';
    }
    else
    {
        return 'b';
    }
}
",,0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",,0
67e32e60ccf94c9e237b1ee60eec88d54337ee46,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (( n > 12 && n < 15) ||( n > 16 && n < 20 )) {
     return 0;
   }
   return n;
}
",,0
1a6b2d2914beda64eb1cd7bdd81f8af7ec63c626,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 2; i++)
    {
    	if (nums[i] == val)
        {
            
        }
        else if (nums[i - 1] == val || nums[i + 1] == val)
        {
           
        }
        else
        {
            return false;
        }
    }
    return true;
}
",,0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",,0
6e8cdb312eaf547b8488629b9abc249fe869a96d,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
    if(a == b && b == c)
        return 5;
    if (a != b && a != c)
        return 1;
    return 0;
}
",,0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",,0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",,0
2ecbcee75f8da434b075efdb59961639726be432,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums [i] != val && nums [i + 1] != val)
                                     return false;
    }
        return true;
}
",,0
6b646a795b338148478f755625a34d522f65cbd5,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    { 
        return 0;
    }
    else if ( b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
9222afd237f2a153dec01f15809e88ec81bac994,"public String plusOut(String str, String word)
{
    String trivialEnd = """";
    int n = 0;
    
    while (n <= str.length())
    {
       if (str.substring(n).startsWith(word))
       {
           trivialEnd += word;
           n += word;
           
       }
        else 
        {
            trivialEnd += '+';
            n++
        }   
    }   
    return trivialEnd;
}
",,0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",,0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",,0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",,0
a23678b6f1ed32125aafce452d7f4f6449fb3591,"public int makeChocolate(int small, int big, int goal)
{
    int numLeft = goal % 5;
    if ((small + (big*5)) < goal) // if total number of bars is not enough
    {
        return -1;
    }
    else if ((big * 5) == goal) 
    {
        return numLeft;
    }
    if (numLeft <= small)
    {
        return numLeft;
    }
    else
    {
        return goal - (big*5);
    }
}
",,0
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
",,0
c95c93f8d1fa224a7fbbc0fb3c04049e5934f3d4,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            return true;
        }
    }
    return false;
    
}
",,0
1c41d4e0384d8434e2ede83f65126160d51b7dce,"public int roundSum(int a, int b, int c)
{
   return a.round10() + b.round10() + c.round10;
}

public int round10(int num)
{
    //local var
    int num2 = num%;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num3;
    }
}
",,0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",,0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",,0
e0d4c69d7595be4d7524172434e2cc21e57661e9,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
        {
            i = i + 1;
            continue;
        }
        sum += nums[i];
    }
    return sum;
        
}
",,0
eac780890e26b1c9671511a39d4dbcf2d8adc014,"public int makeChocolate(int small, int big, int goal)
{
    int remainder;
    if (goal >= 5 * big)
    {
        return remainder = goal - 5 * big;
    }
    else 
    {
        return remainder = goal % 5;
    }
        
    if (remainder <= small)
    {
        return remainder;
    }
        
    return -1; 
}
",,0
888a63dff1f59fa6a944754dead51bf5ff29d397,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}",,0
557026f064a89be4df627a611b8a898f7a2fc2f3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if ((nums[i] != val) || (nums[i + 1] != val))
        {
            return flase;
        }          
        
    }
     return false;
}
",,0
1889c30f0414785c8f5f8afe2dc4eaf09520169f,"public boolean twoTwo(int[] nums)
{
    boolean hasTwo = true;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 2) {
                if ((i != 0 && nums[i - 1] == 2) || (nums.length - 1 > i && nums[i + 1] == 2 )) {
                    hasTwo = true;
                    i++;
                } else {
                    hasTwo = false;
                }
            }
        }
        return hasTwo;
}
",,0
3d088c99682ac46b925aca4d080f86b0d194750d,"public int luckySum(int a, int b, int c)
{
    if ( a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return (a + b);
    }
    else
    {
        return (a + b + c);
    }
}
",,0
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",,0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",,0
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
",,0
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
",,0
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
",,0
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
c531b36cd72156cb65bd26c919a9de7a647ca456,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int x = num % 10;
    if (x >= 5)
    {
        return num + (10 - x);
    }
    else
    {
        return num - x;
    }
}
",,0
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",,0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",,0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",,0
7456c11888628de105891f3f5bc262ecd54ad7d3,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day > 0 && day < 6)
        {
            return ""10:00"";
        }
        if (day == 0 || day == 6)
        {
            return ""off""            
        }
    }
    else
        if (day > 0 && day < 6)
        {
            return ""7:00"";
        }
        if (day == 0 || day == 6)
        {
            return ""10:00""            
        }
    
}
",,0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",,0
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",,0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",,0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",,0
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",,0
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
",,0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",,0
4ba46181a66bb2f3cf45d38876db8736b1ebda46,"public boolean in1To10(int n, boolean outsideMode)
{
    return ((n >= 1 && n<=10 && !outsideMode) || (n > 10 || n < 1 && outsideMode));
}
",,0
987f265fb4f09a7db40586aa6a321d7c612fa526,"public boolean has77(int[] nums)
{
    int count = 0;
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            count = 1;
        }
        else if (nums[i] == 7 && nums[i+2] == 7 && i < nums.length - 3)
        {
            count = 1;
        }
    }
    // okay, another approach is to check if there are two 7's.
    // if there are, store their [] as variables
    // if the difference between them is greater than 2, then false
    
    return (count == 1);
}
",,0
44a9f4ec3b4a6a2ecc39a8beb8b7668b4b148e2f,"public boolean bobThere(String str)
{
    int l = str.length() - 2;
    
    for (int i = 0; i < l; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",,0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",,0
a4d1bc3038b54203282e8ed1263b2a8b7e9b2aba,"public int roundSum(int a, int b, int c)
{
   return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    //local var
    int num2 = num % 10;
    int num3 = 10 - num2;
    
    //method
    if (num2 >= 5)
    {
        return num + num3;
    }
    else
    {
        return num - num2;
    }
}
",,0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
d6142b31c1b7e8ef25551ea3bd1a1d189359460b,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (isClump)
        {
            if (nums[i] != nums[i + 1])
                isClump = false;
        }
        else if (nums[i] == nums [i + 1])
        {
            isClump = true;
        	clumps++;
        }
    }
    return clumps;
    
}
",,0
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
",,0
556a51f5587711febfedd4c384ada96658e6c8b2,"public boolean in1To10(int n, boolean outsideMode)
{
    int n 
        
    if (n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6 || n == 7 || n === 8 || n == 9 || n == 10)
    {
        return false;
    }
    if (n <= 1 || n >= 10)
    {
        return true;
    }
}
",,0
6367eac25cd704643f84891ee75af7a9bfb2cddc,"public int blackjack(int a, int b)
{
    if ( (a >= 0 && b >= 0))
    {
    	if (a > 21 && b > 21)
        {
        	return 0;
        }
        else if ( a > 21 && b < 21)
        {
        	
            return b;
        }
        else if ( a < 21 && b > 21)
        {
        	return a;
        }
        else
        {
        	if (Math.abs(21 - a) <= Math.abs(21 - b))
            {
            	return a;
            }
            else
            {
            	return b;
            }
        }
    }
",,0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
727d541babe278c063e729dab201403c18c6f003,"public String getSandwich(String str)
{
    if (str.startsWith(""bread"") && str.endsWith(""bread""))
    {
        str == ""bread"" - str - ""bread"";
    }
    else
    {
        return """";
    }
}
",,0
922be35696a71f169aae8dbd213c7c1c9f7ffcd0,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
0596e9fad0e491fa66802102678ad39fda317949,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
    
}

public int round10(int num)
{
    int round = num % 10;
    if (round >= 5)
        return num + (10 - round);
    else 
        return num + (round - 10);
    
}
",,0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",,0
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",,0
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


",,0
51fae40e9861d7b67fbaedf2d011c3a432f13b51,"public boolean xyzThere(String str)
{
    int i = -1;
    while ((i = str.indexOf(""xyz"", i + 1)) != -1)
    {
        if (i == 0 || (str.charAt(i - 1) != "".""))
        {
            return true;
        }
    }
    return false;
}
",,0
6e4190526c8769e0db69f3dce1afccb32c3fecc3,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (a == c)
    {
        return b;
    }
    else if (b == c)
    {
        return a;
    }
    else
    {
        return a + b + c;
    }
}",,0
50fc5548b4c280c979ac6975a7bb87ce2dd53269,"public int noTeenSum(int a, int b, int c)
{
	return(fixTeen(a) + fixTeen(b) + fixTeen(c));
}

public int fixTeen(int n)
{
    if ((n >= 13 && n <= 19) && (n != 15 || n != 16))
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
",,0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",,0
4979a941c28b304b1a87012820a199ed508f05b1,"public int blackjack(int a, int b)
{
	if (a > 21 && b > 21)
    {
     	return 0;   
    }
    else if (a > 21)
    {
        return b;
   	}
    else if (b > 21)
    {
     	return a;   
    }
    if (21 - a > 21 - b)
    {
     	return b;   
    }
    else
    {
     	return a;   
    }
    
}
",,0
81616ec5cc0a1147313f115f431365f002577320,"public String getSandwich(String str)
{
    int l = str.length();
    if (l <= 10)
    {
        return """";
    }
    // first bread
    int p = 0;
    int i = 0;
    while (i <= l)
    {
        int iend = i + 5;
        String bread1 = str.substring(i, iend);
        if (bread1.equals(""bread""))
        {
            p = iend;
            i = l + 1;
        }
        i = i + 1;
    }
    // last bread
    int pl = 0;
    int o = l;
    while (o >= p)
    {
        int ostart = o - 5;
        String bread2 = str.substring(ostart, o);
        if (bread2.equals(""bread""))
        {
            pl = ostart;
            o = p - 1;
        }
        o = o - 1;
    }
    int p0 = pl - 1;
    if (pl > p)
    {
    	String re = str.substring(p, pl);
    	return re;
    }
    else
    {
        return """";
    }
}",,0
1cc0152402337d91498b89c49c65cdee749f89be,"public boolean canBalance(int[] nums)
{
    int leftSum = 0;
  	for (int i = 0; i < nums.length; i++) 
    {
    	leftSum += nums[i];
    	int rightSum = 0;
    	for (int j = t - 1; j > i; j--) 
    	{
      		rightSum += nums[j];
    	}
    	if (rightSum == leftSum)
        {
      		return true;
        }
  	}
  	return false;
}
",,0
9dfb9d8285fed77ebe058ec80bfb80f2f1a5db2a,"public boolean sameEnds(int[] nums, int len) {
    for (int i = 0, j = nums.length - len; i < len; i++, j++)
        if (nums[i] != nums[j]) return false;
    return true;
}
",,0
4558e3133cd15ecd40d08300419f6962561f9dbf,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
    if (nums[i] == val || nums[i + 1] == val)
    {
     return true;   
    }
    else
    {
     return false;   
    }
    }
}
",,0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",,0
3ebfce3cf11d33b8d63adc51fe0004e44e1b8968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
        return 0;
    else if (b == 13)
        return a;
    else if (c == 13)
        return a + b;
    else
        return a + b + c;
}
",,0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",,0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
",,0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",,0
7d926ad0829e4d370d9dae223761f33585fa7fe3,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        return (str.substring(0, 2));
    }
    else
    {
        return ""@@"" + str.substring(2);
    }
        
        
}
",,0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",,0
e782e855c718d5d72eb1c47b31cc0c9050d6b269,"public String without2(String str) 
{
    // Given a string, if a length 2 substring appears at both its beginning and end,
// return a string without the substring at the beginning, so ""HelloHe"" yields ""lloHe"".
// The substring may overlap with itself, so ""Hi"" yields """". Otherwise, return the original string unchanged.
public String without2(String str)
{
	int len = str.length();
	if(len >= 2)
	{
		if(str.substring(0,2).equals(str.substring(len-2, len)))
			return str.substring(2);
		else
			return str;
	}
	else
		return str;
}
}
",,0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",,0
ab752aa9f041e605c697b86bdcb50aa8b25db534,"public int countClumps(int[] nums)
{
    int clump = 0;
    int n = 0;
    for (; n < nums.length; n++)
    {
        if (nums[n-1] == n && nums[n-1] > 0 || nums[n+1] == n && nums[n+1] < 				nums.length)
        {
            clump++;
        }
    }
    return clump;
}
",,0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",,0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",,0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",,0
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",,0
ff4d3fccfe514870f69c27a376b8457b4bff138d,"public String repeatEnd(String str, int n)
{
    StringBuilder stringbuild = new StringBuilder(n*n);
    String last = str.substring(str.length() - n);
    for(int i = 0; i < n; i++)
    {
     	stringbuild.append(last);   
    }
    return stringbuild.toString();
}
",,0
06d8c76abed0f952e57d7cac3ed1759a9584d990,"public String getSandwich(String str)
{
    int length = str.length();
    int breadStart = str.indexOf(""bread"");
    int breadEnd = str.lastIndexOf(""bread"");
    if (breadStart != breadEnd && breadEnd > 5)
    {
        return (str.substring(breadStart + 5, breadEnd)  );
    }
    else
    {
        return """";
    }
    
}
",,0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",,0
30ed841a883414ca378b951718dae8e5f58e90be,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            break;
        }
        sum += nums[i];
    }
    return sum;
}
",,0
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
353250dbb0f7d8b1345775c3b7683b3a5c68b0d5,"public int makeChocolate(int small, int big, int goal)
{
    // small = 1 kilo each
    // big = 5 kilos each
    int numBig = 0;
    int numSmall = 0;
    numBig = goal / 5;
    numSmall = goal % 5;
    int sum = 5 * numBig + numSmall;
    
    if (numSmall > small)
    {
    	return -1;
    }
    else if (sum == goal)
    {
        return numSmall;
    }
    else
    {
        while (sum < goal && numSmall < small)
        {
            sum++;
            numSmall++;
        }
        
        if (goal == sum)
        {
            return numSmall;
        }
        else
        {
            return -1;
        }
            
    }
}
",,0
a6e301c297d4ed6115399fb116f7348433119b47,"public boolean in1To10(int n, boolean outsideMode)
{
    return(n >= 1 && n <= 10);
        
    if(outsideMode)
        return( n <= 1 || n >= 10);
            
    return false;
}
",,0
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",,0
2dec94789ad2db07905f14995eddc4d0c9fb74f2,"public int makeChocolate(int small, int big, int goal)
{
    if ((small + big * 5) < goal)
    {
     	return -1;   
    }
    int smallLeftOver = goal - big * 5;
    /*if (smallLeftOver <= 0)
    {
     	return 0;   
    }*/
    if (big * 5 > goal)
    {
     	return goal % 5;   
    }
    else 
    {
     	return smallLeftOver;   
    }
}
",,0
f501197722b8ce08e96f0fce9ab29fefe7f90f24,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a, b;
    }
    else
    {
        return a, b, c;
    }
    
}",,0
de7793b415cacd52a6aea059f112e95ea1439d11,"public int[] tenRun(int[] nums)
{  
    for (int i = 0; i < nums.length; i++)
    {
        int number = nums[i];
        if (nums[i] % 10 == 0)
        {
         	number = nums[i];   
        }
        else
        {
            nums[i] = number; 
        }
    }
    return nums;
}
",,0
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",,0
87346e3e31d1cd09cf1ea78408fe3cd51d049e2e,"public int sum13(int[] nums)
{
    sumNum = 0;
    if (nums.length == 0)
    {
        return sumNum;
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 13)
        {
            i += 1;
        }
        else
        {
            sumNum += nums[i];
        }
    }
    return sumNum;
}
",,0
9dac04bb2f7fda8903e5bfb22db24be22b58edc6,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
",,0
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",,0
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
",,0
445090f74599d9d1eaf6ac03e9429e6724bd06ef,"public int roundSum(int a, int b, int c)
{
    
}

public int round10(int num)
{
    int round = num % 10
    if (num >= 5)
        return num + 10 -  round
    else 
        return num - round
}
",,0
6f9b0c7941b581f9e02f1660412aeafc8e6dd0a4,"public boolean sameEnds(int[] nums, int n)
{
    int[] numss = Arrays.copyOfRange(nums, 0, n);
    int[] numsss = Arrays.copyOfRange(nums, nums.length-n, nums.length);
    return Array.euquals(numss, numsss);
        
}
",,0
b6541aae5e7a533d805a3e9f2f99eff53e3d874b,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
e449000228690301ed3d3de32e7ccd3ba51bef53,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day >= 1 && day <= 5)
        {
            return alarmClock;
        }
    }
}
",,0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",,0
2341aa02180229566878128a50f5ccba14fdcee3,"public int[] frontPiece(int[] nums)
{
    int number[] = new int[2];
    for (int numbers: nums)
    {
        number[i] = numbers;
    }
    return number;
}
",,0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",,0
20af20d4141bbd142188eeeb17c4046e6db99173,"public int countClumps(int[] nums)
{
    int clump = 0; 
    boolean newClump = true;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (newClump && nums[i] == nums[i + 1])
        {
            clump++;
            i++;
            newClump = false;
        }
        if (nums[i] != nums[i + 1])
        {
            newClump = true;
        }
    }
    
    return clump;
}
",,0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",,0
0a61e8ae7fb75d2e2ccaa924439324fd0c714ae7,"public boolean bobThere(String str)
{
    int length = str.length() - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
    }
    return false;
}
",,0
4235496ebf6598fa98499554c7e8810f24a343da,"public int countCode(String str)
{
    for(int x = 0; x <= str.length(); x++)
    {
        int count = 0;
        if (str.charAt(x) == 'c' && str.charAt(x + 1) == 'o' 
            && str.charAt(x+3) == 'e')
        {
            count = count + 1;
        }
    }
    return count;
}
",,0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",,0
6434b911e74e0d2939d97a8820552e19fd926f60,"public int countClumps(int[] nums)
{
      int current = -1, clump = 0;
  for(int i = 0; i < nums.length - 1; i++) {
    if(nums[i] == nums[i + 1] && nums[i] != current) {
       current = nums[i];
       clump++;
    } else {
       if(nums[i] != current) {
          current = -1;
       }
    }
  }
  return clump;
}
",,0
8263e12f698977861aa9fa2757973cb0e5cac769,"public int blackjack(int a, int b)
{
	if ((a >= 0 && b >= 0)) && (a <= 21 && b <= 21))
    {
		int diffa = 21 - a;
		int diffb = 21 - b;
		if (diffa > diffb)
		{
			return b;
                
		}
		else
		{
			return a;
		}
	}
	else if ((a >= 0 && b >= 0)) && (a <= 21 && b > 21))
    {
    	return a;
    }
    else if ((a >= 0 && b >= 0)) && (a > 21 && b <= 21))
    {
    	return b;
    }
    else
    {
    	return 0;
    }
}
",,0
c5d364aebfeaf536888aa2177a5459f2c3dcb34e,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i < nums.length; i++)
    {
    	if (i+1 < nums.length && i-1 >= 0)
        {
        	if (nums[i+1] == val || nums[i] == val)
            {
            	everywhere = true;
                
            }            
        }        
    }
    return everywhere;
}
",,0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",,0
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",,0
00b92ee27132d76a1fc8089eb77e03b601b69c27,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}",,0
6810b79d393e12dc91b62054efb8a24424172b6e,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
aa7c4292be6ad85ad39c17fc1a9d375080d90df3,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val || nums[i - 1] == val))
        {
        }
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
3fd47ef1f62ceb7a17e9f52c53ba9f1a964f4d05,"public int loneSum(int a, int b, int c)
{
    if ((a == b) && (b == c))
    {
        return 0;
    }
    else if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
6a200d12723f9e254906a4c4d6061927e68dbe5d,"public int caughtSpeeding(int speed, boolean isBirthday)
{
	int value = 0; 
  
	if (isBirthday) {
    	speed += 5;
 	}
  	if ( speed <= 60 ) {
    	return 0;
  	}
  	if (speed >= 61 && speed <= 80) {
    	return 1;
  	}
  	if (speed >= 81) { 
    	return 2;
  	} 
  	return value;
}
",,0
6df6127758cd9f2ab7f4ebbed30d50f1fabcb1f1,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int i = 0;
    if (isBirthday)
    {
        i = 5;
    }
   
    if (speed <= 60 + i)
    {
        return 0;
    }
    else if (speed >= 61 + i && speed <=80 + i )
    {
        return 1;
    }
    else
    {
        return 2;
    }
    
}
",,0
4a80e78375b00da23922dc0222b2e30aa98ac914,"public String without2(String str) 
{
    String result = "" "";
    
     if ( str.length() < 2)
    {
        result = str;
    }
    
    return result; 
    
    String x = str.substring(0, 2);
    
    String y = str.substring(str.length() - 2);
    
    if ( x.equals(y))
    {
        
        result = str.substring(2);
    }
    else
    {
        result = str;
    }
    
    return result;
}
",,0
6f7f61c8665e5fbb33bb6cdb300c38706ffa9630,"public int centeredAverage(int[] nums)
{
    int average = 0;
    int sum = 0;
    int low = nums[0];
    int high = nums[0];
    boolean found = false;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] > high)
        {
            high = nums[i];
        }
        
        if (nums[i] < low)
        {
            low = nums[i];
        }
    }
    
    for (int a : nums)
    {
        sum = sum + a;
    }
    
    sum = sum - low - high;
    
    average = sum / (nums.length - 2)
    
    return average;
}
",,0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",,0
f33160f9d8c1a76b2c1ada81ffc8fe471a18ac18,"public int makeChocolate(int small, int big, int goal)
{
    int num = goal % 5; // small needed with enough big
    int num2 = goal / 5; // big needed exculeding small
    int count = 0;
    
    if (num > small || (num2 > big) && ((goal - (big * 5)) - small > 0)) 
    {
        return -1;
    }
    else if (num2 <= big) 
    {
        while (goal > 0 && big > 0)
        {
            goal = goal - 5;
            big --;
        }
        
        while (goal > 0)
        {
            goal --;
            count ++'
        }
    }
    else
    {
       return -2;
    }
}
",,0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",,0
774d6a5a76085895e9082c283781a9b2580f6ecd,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == val)
        {
        }
        else if (i < nums.length - 1 && (nums[i + 1] == val))
        {
        }
        else if (i > 0 && nums[i - 1] == vall)
        else
        {
            return false;
        }
    }
  return true;
    
}
",,0
e731eb5c29829cb177779539df3da7e4ea5d6813,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else if ( you >= 8 || date >= 8)
    {
        return 2;
    }
    else
    {
        return 1;
    }
}
",,0
d620f21e27a87e15d05a4f085e8ed51214622697,"public String alarmClock(int day, boolean vacation);
int alarmTime = 0;
{
    if (!vacation)
    {
    	if (day >1 && day <6)
    	{
        	alarmTime=7;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=10;
    	}
    }
    else
    {
        if (day >1 && day <6)
    	{
        	alarmTime=10;
    	}
    	else if (day=0 || day=6)
    	{
    	    alarmTime=off;
    	}
    }
return alarmTime;    
}
",,0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",,0
90671fe421a4a0d9e33327e29fe0752765105980,"public String zipZap(String str)
{
    String k = """";
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.deleteCharAt(i + 1);
    }
    }
    return str;
}
",,0
179e17777e55b403d3a85f0f0a37b01d8e3650d4,"public String without2(String str) 
{
	if (str.length() >= 2)
    {
    	if (str.substring(0, 2) == str.substring(str.length() - 2))
    	{
        	return str.substring(2, str.length());
    	}
        else
        {
         	return str;   
        }
    }
    else
    {
    	return str;
    }
    
}
",,0
bb771f79da2e164515e0325c84eaa2dbd392e69b,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = 0;
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}",,0
4451f56f297e641c3925f657e88b73a66a82c8d0,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++){
        if (nums[i] % 10 == 0 && i != nums.length - 1){
            int storage = nums[i];
            i++;
            while (nums[i] % 10 != 0 && i != nums.length - 1){
                nums[i] = storage;
                i++;
            }
        }
    }
    return nums;
}
",,0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",,0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",,0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",,0
8141614e2f84bc6e34254af7c2e2e4d859a39e2a,"public int countEvens(int[] nums)
{
    int result = 0;
    
    for (i = 0; i < nums.length; i++)
    {
        if ( nums[i] % 2 == 0)
        {
            result += 1;
        }
            
    }
    
    return result;
}
",,0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",,0
696b6674f7cdaafae688b2b80fa68dfc6c1dfccb,"public int[] fix45(int[] nums)
{
    int[] result = nums;
  for (int i = 0; i < nums.length; i++)
        if (nums[i] == 5 && i == 0
            || nums[i] == 5 && nums[i - 1] != 4) {
            int pos5 = i;
            for (int j = 0; j < nums.length; j++)
                if (nums[j] == 4 && nums[j + 1] != 5) {
                    int temp = nums[j + 1];
                    nums[j + 1] = 5;
                    nums[pos5] = temp;
                    break;
                }
    }
    return nums;
}
",,0
c32e8df18759f85c9ca9cc1ff3051aa396bf5a33,"public boolean evenlySpaced(int a, int b, int c)
{
    int[3] arrInOrder;
    arrInOrder[0] = a;
    arrInOrder[1] = b;
    arrInOrder[2] = c;
    
    int small;
    int med, big;
   /**
    if ((a > b) && (a > c)) // if a is the biggest
   {
		if (b > c)
        {
            big = a;
            med = b;
            small = c;
        }
       else
       {
           
       }
       
   }
   */
}
",,0
ead7334f0365e9fbdf527b2685b53b4b8b597dba,"public int countCode(String str)
{
    int counter = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if(str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            counter++;
        }
    }
    return counter;
}
",,0
55a22f0922e15c6f5b6b0a0739a27eb1c2007423,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
     	return 2;  
    }
    else if (you <= 2 || date <= 2)
    {
     	return 0;
    }
    else
    {
     	return 1; 
    }
}
",,0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",,0
418ceebe3b6673017881e22eed19ed28eef4b664,"public String without2(String str) 
{	
    int n = str.length();
    if (str.substring (0, 2) == str.substring(n -2, n))
    {
        return str.substring (2, n);
    }
    else if (n < 2)
    {
        return str;
    }
    else if ( n == 2)
    {
        return """";
    }
    else 
    {
        return str;
    }
}
",,0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",,0
cabf3cab4e0e4fa53a7289185638906b37a62f3a,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n <= 19 && n >= 13)
    {
        if (n >= 15 && n <= 16)
        {
            return n;
        }
    	else
        {
            return 0;
        }
    }
    else
    {
        return n;
    }	
}
",,0
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
",,0
4cbf8228090da8fc7b21c3ef3a6ecea59b0f8e5f,"public int roundSum(int a, int b, int c)
{
	return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int value = num % 10
    if (value >= 5)
    {
        return num + (10 - value);
    }
}
",,0
e3ca0205d988751a8bcc80a617f048d01dfa7c60,"public int[] tenRun(int[] nums)
{
    int[] ten = new int[nums.length];
    boolean isTen = false;
    int tenMult = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0 && nums[i] != tenMult)
        {
            isTen = true;
            tenMult = nums[i];
            ten[i] = nums[i];
        }
        
        else if (isTen)
        {
            ten[i] = tenMult;
        }
        
        else
        {
            ten[i] = nums[i];
        }
    }
 	return ten;
}",,0
7ad991a24edd45eac9dde28ce5f6b6a462d3b44f,"public String without2(String str) 
{
    String endLetters;
    endLetters = str.substring(str.length() - 1, str.length()); // I don't know how many letters there are!!
    // ^ use a method that gets the length of a string. Use "".getLength - 1"" and ""- 2?""
    String startLetters;
    startLetters = str.substring(0, 1);
    
    String middleLetters;
    middleLetters = str.substring(2, str.length() - 3);
        
    if (endLetters == startLetters)
    {
        return middleLetters;
    }
    else 
    {
        return str;
    }
}
",,0
888a63dff1f59fa6a944754dead51bf5ff29d397,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = nums[0];
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}",,0
1129ef37162a6b236aba63fdc6b01dbc55e8c4c0,"public String getSandwich(String str)
{
    int startBread = str.indexOf(""bread"");
    int endBread = str.lastIndexOf(""bread"");
	boolean firstBread = str.startsWith(""bread"", startBread);
    boolean lastBread = str.startsWith(""bread"", endBread);
    if (firstBread == true && lastBread == true)
    {
        return str.substring(startBread, endBread);
    }
    else 
    {
        return """";
    }
}
",,0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",,0
170f0b11c2a6d9e34a558a8546c9ec6b3f1cabea,"public int centeredAverage(int[] nums)
{
    int sum = 0;
    int min = nums[0];
    int max = nums[0];
    for (int i =0;i<nums.length-1;i++)
    {
        sum += nums[i];
        min = Math.min(min, nums[i]);
        max = Math.max(max, nums[i]);
    }
    sum = sum-max;
    sum = sum -min;
    sum = sum/(nums.length-2);
    return sum;
}
",,0
74f782bb2481e582b3f2648072d24b57ccbc7004,"public boolean xyBalance(String str)
{
    int x = 0;
    int y = 0;
    for (int i = 0; i <= str.length() - 1; i++)
    {
        if (str.charAt(i) == x)
        {
            int x = x + 1;
        }
    	else if (str.charAt(i) == y)
        {
            int y = y + 1;
        }
    }
    if (x >= y)
    {
        return true;
    }
    return false;
}
",,0
fae2f7dfe0c7f6a36eed081761f1d04f77387b4b,"

    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }

",,0
bb95327d0292272d65dd996e6aa6f61c87319399,"public boolean endOther(String a, String b)
{
    if a.length() == ""a"" + ""b""
        return b.substring(0,1).toLowerCase();
}
",,0
bb771f79da2e164515e0325c84eaa2dbd392e69b,"public int centeredAverage(int[] nums)
{
    int min = nums[0];
    int max = 0;
    int sum = 0;
    
    for (int i = 0; i < nums.length; i++) 
    {
    	max = Math.max(max, nums[i]);
        min = Math.min(min, nums[i]);
        sum += nums[i];
    }
    
    return (sum - max - min) / (nums.length - 2);
}",,0
12626584cf03ea4745d784306eda461c10cf8ebd,"public String atFirst(String str)
{
    if str.length
    return str.substring(0,2);
}
",,0
15c1ea0d3be674bd35044a56e7c3ff41be8f1a5a,"public String zipZap(String str)
{
   int leg = str.length();
   int l = leg - 2;
   int s = 0;
   char c;
   StringBuilder build = new StringBuilder(leg);
    while ( s < leg)
    {
        c = str.charAt(s);
        if (c == 'z' && s < l && str.charAt(s + 2) == 'p')
        {
            build.append(""zp"");
            s += 3;
        }
        else 
        {
            build.append(c);
                s++;
        }
        
            
    }
    return build.toString();
}
",,0
265f1f469f36912bddad02dbbd6b2e229eca0a06,"public int[] tenRun(int[] nums)
{
    int[] ten = new int[nums.length];
    boolean isTen = false;
    private int tenMult;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0 && nums[i] != tenMult)
        {
            isTen = true;
            tenMult = nums[i];
            ten[i] = nums[i];
        }
        
        else if (isTen)
        {
            ten[i] = tenMult;
        }
        
        else
        {
            ten[i] = nums[i];
        }
    }
 	return ten;
}",,0
ba64e188a7ff94c5ca147732e34becd1b2436677,"public String atFirst(String str)
{
    String result = str.substring(0, 2);
    
    return result;
}
",,0
a0760aa38653fd842ecffafbac419f7013b1b01b,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else
        if ( you <= 2 || date <= 2)
        {
            return 0;
        }
    else
    {
        return 1;
    }
}
",,0
50ca859db11586528decd21fe550a38fad81784e,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
   int numBase = num - (num-10);
    if (numBase > 4)
        return num + (10 - numBase);
    else
        return num - (10 - numBase);
}
",,0
196436f6a31b3c5fa13fcebfee2d326193bfb3b0,"public int redTicket(int a, int b, int c)
{
    if(a == 2 && b == 2 && c == 2)
        return 10;
          
    if(a == b && b == c)
        return 5;
                    
    if(a != b && a != c)
        return 1;
                            
    return 0;
}
",,0
831ed4e28f9f0f13738ec63d60d32dbc43f7e6ce,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you =< 2 || date =< 2)
    {
        return 0;
    }
    else
    {
        return 1; 
    }
        
}
",,0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
04cef91be148edb98d81bad85a4034195d094c36,"public int[] zeroMax(int[] nums)
{
    
    
    
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 0)
        {
            findMaxOdd(nums, i);
        }
    }
}





public int findMaxOdd(int[] array, int j)
{
    int maxOdd;
    maxOdd = 0;
    for (int b = j; b < array.length - 1; b++)
    {
        if (array[b] % 2 != 0 && array[b] > maxOdd)
        {
            array[j] = array[b];
        }
    }
    return array;
}

",,0
0b982a9a20853fc1fbc5d069b0a41cc50c2c1b33,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer)
    {
        return (temp <= 100 && temp >= 60);
    }
    return (temp >= 60 && temp <= 90);
}
",,0
e7aad59bc0f7416c80deba043153af59de5ea985,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i <= nums.length - 1; i++)
    {
        if (nums[i] == val || nums[i + 1] == val)
        {
            everywhere = true;
            break;
        }
    }
    return everywhere;
}
",,0
51ce13e0b186df6b2ec947573adbec59a269b9ac,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    else
    {
        if (!isMorning || isMom)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
",,0
0aca3d7061885a0b37e2339da9c654782b4a0467,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8)
    {
        return 2;
    }
    else if (you <= 2 || date <= 2)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",,0
7f78f41fe31215ebb096493c3d9761c7f77fa916,"public int loneSum(int a, int b, int c)
{
    if ( a == b && b == c) {
    return 0;
  }
  if ( a != b && b == c) {
    return a;
  }
  if ( a == c && c != b) {
    return b;
  }
  if ( a == b && b != c) {
    return c;
  }
  return a + b + c;
}
",,0
d2c95cc934b9c8ce35e6b24839b253627b9a7c8c,"public int[] shiftLeft(int[] nums)
{
    if (nums.length >= 2)
    {
        int shift = num[0];
        for (int i = 0; i < nums.length - 1; i++)
        {
            nums[i] = nums[i + 1];
        }
        nums[nums.length - 1] = shift;
    }
    return nums;
}
",,0
be7dd1c681ece206447d7c19a5ae06f1777a4e05,"public boolean xyzThere(String str)
{
 
    if (str.length () >= 3  && 
        str.substring(0,3).equals(""xyz"") )
    {
        return true;
    }
        for (int x = 0; x < str.length() -2; x++)
        {
   			if (str.charAt(x) != '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return true;
    }
  
    {
        return false;
    }
            {return false;}
}
}
",,0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",,0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",,0
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
",,0
c33b44f557fd7c2a3238818722cd845a74e96b85,"public int countClumps(int[] nums)
{
    boolean match = false;
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !match)
        {
            match = true;
            count++
        }
        else if (nums[i] != nums[i + 1])
        {
            match = false;
        }
    }
    return count;
}
",,0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",,0
3d11719630fc8c44b85deba0b9752e36fb374a27,"public int luckySum(int a, int b, int c)
{
    if (a = 13)
    {
        return 0;
    }
    else if (b = 13)
    {
        return a;
    }
    else if (c = 13)
    {
        return a + b;
    }
    else
    {
        return a + b + c;
    }
}
",,0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",,0
4451f56f297e641c3925f657e88b73a66a82c8d0,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++){
        if (nums[i] % 10 == 0 && i != nums.length - 1){
            int storage = nums[i];
            i++;
            while (nums[i] % 10 != 0 && i != nums.length - 1){
                nums[i] = storage;
                i++;
            }
        }
    }
    return nums;
}
",,0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",,0
c5d364aebfeaf536888aa2177a5459f2c3dcb34e,"public boolean isEverywhere(int[] nums, int val)
{
    boolean everywhere = false;
    for (int i = 0; i < nums.length; i++)
    {
    	if (i+1 < nums.length && i-1 >= 0)
        {
        	if (nums[i+1] == val || nums[i] == val)
            {
            	everywhere = true;
                
            }            
        }        
    }
    return everywhere;
}
",,0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",,0
ec0734122f4add509acf5c24dba4d8ba253e0c85,"public int roundSum(int a, int b, int c)
{
    a = this.round10(a);
    b = this.round10(b);
    c = this.round10(c);
    
    int sum = a + b + c;
    
    return sum;
}

public int round10(int num)
{
    int remainder = num % 10;
    
    if (remainder >= 5)
    {
        // round up
        num = num + (10 - remainder);
    }
    else
    {
        // round down
        num = num - remainder;
    }
    
    return num;
}
",,0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",,0
8f844faf4a77c8c1664086e5bcfba82f26569b2f,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i =0;i<nums.length;i++)
    {
        if (nums[i] == nums[i+1] && i < nums.length -1)
        {
            clumps++;
        }
    }
    return clumps;
}
",,0
122d8ac1ee71e5973b5d72aaf32c96f9aead3006,"public int luckySum(int a, int b, int c)
{
    int luckySum = a + b + c;
    if (a != 13 && b!= 13 && c!= 13)
    {
        return luckySum;
    }
    else if (a == 13)
    {
        return 0;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a + b;
    }
    return luckySum;
}
",,0
8ea0e17b60756ae019215592cbd3e7a8e04b0965,"public int countClumps(int[] nums)
{
    int clumps = 0;
    boolean isClump = false;
    for (int i = 0; i < nums.length - 1; i += 1) {
         if (isClump) {
             if {nums[i] != num[i + 1]) {
                 isClump = false;
             }
             else {
                 isClump = true;
                 clumps += 1;
             }
                }
         }
         return clumps;
}
",,0
a77d613083948b71c757aa65861a9fe355329648,"public int dateFashion(int you, int date)
{
    if (you >= 8 && date >= 8)
    {
    	return 2;
    }
    if (you <= 2 || date <=2)
    {
    	return 0;
    }
    else 
    {
    	return 1;
    }
}
",,0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",,0
14ced47f38f6da0c3afcc08c0bcb9ed96b5c73fe,"public String getSandwich(String str)
{
    if (str.indexOf(""bread"") > 0) // if there are two peices of bread
    {
         System.out.print(str.indexOf(""bread""));
        return ""no"";
    }
    else
    {
        return """";
    }
}
",,0
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",,0
39483c437921abc8fe24406f9d159f633a6ed263,"public boolean xyzThere(String str)
{

    if (str.startsWith(""xyz"") || str.endsWith(""xyz""));
        
    {
        return true;
    }
        for (int x = 0; x < str.length() -2; x++)
        {
   			if (str.charAt(x) == '.' && str.substring (x,
               x+3).equals(""xyz""))                              
    {
        return false;
    }
        
        }
    {return false;}

}
",,0
712ff1161f2e3dc8b175af9f7fb30b5e982a5d56,"public int countClumps(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && ( i == 0 || nums[i - 1] != nums[i]))
        {
         	count++;   
        }
    }
    return count;
}
",,0
e9a643c862a4712528df227bd0c86412692f6215,"public String zipZap(String str)
{
	String result = """";

	for (int i = 0; i < str.length() - 2; i++)
    {
		if (i == 0 || i % 3 == 0) 
        {
			result += str.substring(i + 1, i + 3);
			result += str.charAt(i);
		}
	}
return result;
}
",,0
35b9707aad5f20f180ef74fcf0950fdb0f71ce29,"public int countClumps(int[] nums)
{
    int clumps = 0;
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] == nums[i + 1]) {
            clumps += 1;
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i += 1;
            }
        }
    }
    return clumps;
}
",,0
56564fcd3a089f2e2f8dc872a710a4cf2ca9e4ce,"public String atFirst(String str)
{
    return str.substring(0, 1);
    if (str.substring(0, 1) = null)
    {
        return @;
    }
}
",,0
f084c8e316bc150f5798d68bfc4c45353feede72,"    public static boolean xyzThere( String str )
    {
        boolean result = false;

        for ( int i = 0; i < str.length() - 2; i++ )
        {
            if ( ""xyz"".equals( str.substring( i, i + 3 ) ) )
            {
                if ( i == 0 || str.charAt( i - 1 ) != '.' )
                {
                    return true;
                }
            }
        }

        return result;
    }
}
",,0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",,0
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",,0
