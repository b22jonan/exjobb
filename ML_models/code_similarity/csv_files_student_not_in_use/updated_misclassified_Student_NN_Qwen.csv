ID,Code,PromptType
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",0
b916e8075083db817cb0d3d485aec694cb9b22b8,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a)+fixTeen(b)+fixTeen(c);
}

public int fixTeen(int n)
{
    if n=19||n=13||n=14||n=17||n=18;
    	return 0;
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
9ac47f6c196a820eacbe8fca8359013950a2cc87,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (!isSummer && temperature >= 60 && temperature <= 90)
    {
        return true;
    }
    else if (isSummer && temperature >= 60 && temperature <= 100)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",0
19a5b90083c799114b8bccdc97fb09a69be2aba1,"public int greenTicket(int a, int b, int c)
{
    if (a == b || a == c || b == c)
        return 10;
	if (a == b && a == c || b == c)
        return 20;
    else
        return 0;
}
",0
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}",0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",0
83a9aaf35a8972085b71c5e056de43a7db192899,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
        for (int i = 0; i<n;i++)
        {
            result[i-1] = i;
        }
    return result;
}
",0
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",0
87a331d0b690ad01a48575ef537fbbc928271d6f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int x = i + 1; x < nums.length; x++)
            {
                if (nums[i] % 10 == 0 && nums[x] % 10 != 0)
                {
                    nums[x] = nums[i];
                }
            }
        }
    }
    
    return nums;
}
",0
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",0
666a7f0c20c29b5666745dfb4c61a7a881f21218,"public boolean evenlySpaced(int a, int b, int c)
{
    boolean spaced = false;
    int aMinusB = a - b;
    int aMinusC = a - c;
    if (aMinusB == aMinusC || aMinusB == -aMinusC)
    {
        spaced = true;
    }
    return spaced;
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
d96a0285c6ef424bb4ff5119134143d2d1c7d7b0,"public String alarmClock(int day, boolean vacation)
{
	if (vacation)
    {
       	if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
    {
        if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""10:00"";
        }
		else if (day == 0 || day == 6)
        {
            return ""off"";
        }
    }
}
",0
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",0
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}",0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",0
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",0
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}",0
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",0
57de305af5c397df593d610c754a2029157ce03a,"public int[] tenRun(int[] nums)
{
    for (int i =0; i <nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int j = i+1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i]; 
            }
        }
    }
    
    return nums; 
    
}
",0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",0
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
0dcf6449d4df310d3fe50618ea03c76712671149,"public boolean canBalance(int[] nums)
{
    int upperIndex = nums.length-1;
    int lowerIndex = 0;
    while(lowerIndex<upperIndex){
		int lowerSum = sum(nums,0,lowerIndex);
        int upperSum = sum(nums,lowerIndex,upperIndex);
        if(lowerSum==upperSum)
            return true;
        else if(lowerSum<upperSum)
            lowerSum++;
        else
            upperSum++;
    }
    return false;
}

private int sum(int[] nums,int a, int b){
    int sum = 0;
    for(int i = a; a < b; i++){
        sum+=nums[i];
    }
    return sum;
}",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",0
faa6cc44696d72e0fa85cc561584a1de159a4aa5,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
        return 0;
    if (you >= 8 || date >= 8)
        return 2;
    return 1;
}
",0
dc23e528bd74dbcdb541ee29b004f0426a8d31c4,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer && temp >= 60 && temp <= 100)
        return true;
    if (!isSummer && temp >= 60 && temp <= 90)
        return true;
    return false;
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
e4698e4cb15d0dd05657d0657c1cc55ad8badc8a,"public int loneSum(int a, int b, int c)
{
    if (a =! b && a != c)
    {
     	return a + b + c;   
    }
    return 0;
}
",0
9ac47f6c196a820eacbe8fca8359013950a2cc87,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (!isSummer && temperature >= 60 && temperature <= 90)
    {
        return true;
    }
    else if (isSummer && temperature >= 60 && temperature <= 100)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
d0240fa701f593a04989201ae92746b03b43df48,"public int loneSum(int a, int b, int c)
{
    int sum = a;
    if(b != a)
        sum += b;
    if(c!=a && c!=b)
        sum += c
    return sum;
}
",0
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
",0
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
",0
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
",0
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
1cc197e2eb09d07e1071b94d43d2811c158b6e04,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
     	if ( a == 2)
            return 10;
        return 5;
    }
    if (a != b && a != c)
        return 1;
    return 0;
}
",0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
",0
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",0
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
",0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",0
c2b5233c69ac3f268687caee60f7f68deec9a002,"public String zipZap(String str)
{
    String original = str;
boolean found = false;
if(str.length() == 3) {
if(Character.toString(str.charAt(0)).equals(""z"") && (Character.toString(str.charAt(2)).equals(""p""))) {
return ""zp"";
}
} else if(str.length() < 3) {
return str;
}
 
for(int i = 0; i + 3 < str.length(); i++) {
if(Character.toString(str.charAt(i)).equals(""z"") && Character.toString(str.charAt(i + 2)).equals(""p"")) {
str = str.substring(0, i) + Character.toString(str.charAt(i)) + Character.toString(str.charAt(i + 2)) + str.substring(i + 3, str.length());
found = true;
} else {
}
}
 
if(Character.toString(str.charAt(str.length() - 3)).equals(""z"") && Character.toString(str.charAt(str.length() - 1)).equals(""p"")) {
return str = str.substring(0, str.length() - 3) + Character.toString(str.charAt(str.length() - 3)) + Character.toString(str.charAt(str.length() - 1));
}
 
if(found) {
return str;
} else {
return original;
}
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}",0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",0
dc23e528bd74dbcdb541ee29b004f0426a8d31c4,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer && temp >= 60 && temp <= 100)
        return true;
    if (!isSummer && temp >= 60 && temp <= 90)
        return true;
    return false;
}
",0
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
",0
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}",0
87a331d0b690ad01a48575ef537fbbc928271d6f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int x = i + 1; x < nums.length; x++)
            {
                if (nums[i] % 10 == 0 && nums[x] % 10 != 0)
                {
                    nums[x] = nums[i];
                }
            }
        }
    }
    
    return nums;
}
",0
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",0
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
cdc404479946118fd95418c88f1d9ed0acf21084,"public boolean canBalance(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
        sum += nums[i];
    int sumSoFar = 0;
    for (int j = 0; j < nums.length; j++)
        sumSoFar += nums[j];
        System.out.println(sumSoFar);
        if (sum == 2 * sumSoFar)
            return true;
    return false;
}
",0
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",0
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",0
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
",0
d0240fa701f593a04989201ae92746b03b43df48,"public int loneSum(int a, int b, int c)
{
    int sum = a;
    if(b != a)
        sum += b;
    if(c!=a && c!=b)
        sum += c
    return sum;
}
",0
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
04bda391daee39fd96e623e7ac217c28831895a7,"public int greenTicket(int a, int b, int c)
{
    if (a != b)
    {
        if (a == c)
        {
            return 10;
        }
        else if (b == c)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    if (a == b)
    {
        if (a == c)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    if (b == c)
    {
        if (b == a)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (b != c)
    {
        if (b == a)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
    else if (c == a)
    {
        if (c == b)
        {
            return 20;
        }
        else
        {
            return 10;
        }
    }
    else if (c != a)
    {
        if (c == b)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }
  else
  {
      return 0;
  }
}
",0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",0
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",0
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",0
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",0
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",0
5774f2b700d8dfc9f30cd922b782e6b4d38d8924,"public boolean in1To10(int n, boolean outsideMode)
{
    if (outsideMode)
    {
        return (n <= 1 || n >= 10);
    }
    
    return (n >= 1 && n <= 10);
}
",0
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",0
e87542225324deb36fc5891405e6401d53aab2a3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed -= 5;
    }
    if (speed=<60)
    {
        return 0;
    }
    if (speed>=61 && speed<= 80)
    {
        return 1;
    }
    if (speed>=81)
    {
        return 2;
    }
}
",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
",0
faa6cc44696d72e0fa85cc561584a1de159a4aa5,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
        return 0;
    if (you >= 8 || date >= 8)
        return 2;
    return 1;
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
2093e5a6fbadbd5819e6c5199741af684cf78989,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum > 10)
        if (sum <19)
            return 20;
    return sum;
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
57de305af5c397df593d610c754a2029157ce03a,"public int[] tenRun(int[] nums)
{
    for (int i =0; i <nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int j = i+1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i]; 
            }
        }
    }
    
    return nums; 
    
}
",0
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",0
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",0
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
db19ea5f1cabdb8d39c12a6acfc593bd85bf4f95,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
    	{
     	   for (int j = i + 1; j < nums.length && nums[j] % 10 != 0; j++)
           {
            	nums[j] = nums[i];   
           }
    	}
    }
    return nums;
}
",0
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}",0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",0
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",0
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
ab6e01ad587cf8cc30f23754b8c8c9d3566dc7a4,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0;
    }
    if (b > 21)
    {
        return 0;
    }
    if (a > 21 && b > 21)
    {
        return 0;
    }

}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
bfabd7f60c9ae99dd394933051317b10e684ed16,"public int countEvens(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            return nums[i];
        }
    }
}
",0
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
",0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
",0
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}",0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",0
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
f0c481a9e07c60bea12e78a5079713f14b24c2a9,"public int blackjack(int a, int b)
{
    if(b > 21 && a < 21)
        return a;
    if(a>21 && b < 21)
        return b;
    if(a > b)
        return a;
    if (b > a)
        return a;
    return 0;
}
",0
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",0
c95c93f8d1fa224a7fbbc0fb3c04049e5934f3d4,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] == 7 && nums[i+1] == 7)
        {
            return true;
        }
    }
    return false;
    
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
30ed841a883414ca378b951718dae8e5f58e90be,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            break;
        }
        sum += nums[i];
    }
    return sum;
}
",0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
100f26d18ee4e0e1619542ed10f1e83b537d6b04,"public int sum3(int[] nums)
{
    sum = sum3[0];
    sum+=sum3[1];
    sum+=sum3[2];
    return sum;
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",0
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
",0
433d8d82491f06595b4a7fd44c977dbfb917d6b7,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] != 7 && nums[i+1] != 7)
        {
          return false;
        }
    }
    return true;
    
}
",0
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",0
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
",0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}",0
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
73ed1de85d5b22771d0d401395f97178f38186a0,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for (int i = 1; i < nums.length; i++)
	{
		sum += nums[i];
		if (nums[i] > max)
        {
			max = nums[i];
        }
		else if(nums[i] < min)
        {
			min = nums[i];
        }
	}
	return (sum - max - min) / (nums.length - 2)
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",0
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}",0
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
",0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
e503bcd53b6c1b8e1f5bceead47b945857b50e9a,"public int dateFashion(int you, int date)
{
    if ( you >= 8 && date >= 8)
    {
        return 2;
    }
    if ( you <= 2 && date <= 2)
    {
        return 0;
    }
     if ( you >= 8 && date <= 8)
    {
        return 1;
    }
   if ( you <= 8 && date >= 8)
    {
        return 1;
    }
    }
    else 
        return 1;
}
",0
0dcf6449d4df310d3fe50618ea03c76712671149,"public boolean canBalance(int[] nums)
{
    int upperIndex = nums.length-1;
    int lowerIndex = 0;
    while(lowerIndex<upperIndex){
		int lowerSum = sum(nums,0,lowerIndex);
        int upperSum = sum(nums,lowerIndex,upperIndex);
        if(lowerSum==upperSum)
            return true;
        else if(lowerSum<upperSum)
            lowerSum++;
        else
            upperSum++;
    }
    return false;
}

private int sum(int[] nums,int a, int b){
    int sum = 0;
    for(int i = a; a < b; i++){
        sum+=nums[i];
    }
    return sum;
}",0
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
",0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
faa6cc44696d72e0fa85cc561584a1de159a4aa5,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
        return 0;
    if (you >= 8 || date >= 8)
        return 2;
    return 1;
}
",0
54d76a50906e36a5f08f811e2d20104547a90a66,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2, i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++
        }
        else if (str.substring.(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
",0
8c18ab6d669eae2cffecd5890334825ce08a3bed,"public boolean twoTwo(int[] nums)
{
    boolean status = false;
    for ( int i = 0; i < nums.length; i++)
    {
        if ( nums[i] == 2 && nums[i + 1] == 2)
        {
            status = true;
        }
    }
    return status;
}
",0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
",0
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
57de305af5c397df593d610c754a2029157ce03a,"public int[] tenRun(int[] nums)
{
    for (int i =0; i <nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int j = i+1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i]; 
            }
        }
    }
    
    return nums; 
    
}
",0
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
",0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",0
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",0
ab6e01ad587cf8cc30f23754b8c8c9d3566dc7a4,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0;
    }
    if (b > 21)
    {
        return 0;
    }
    if (a > 21 && b > 21)
    {
        return 0;
    }

}
",0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
",0
d0240fa701f593a04989201ae92746b03b43df48,"public int loneSum(int a, int b, int c)
{
    int sum = a;
    if(b != a)
        sum += b;
    if(c!=a && c!=b)
        sum += c
    return sum;
}
",0
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
",0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
f0c481a9e07c60bea12e78a5079713f14b24c2a9,"public int blackjack(int a, int b)
{
    if(b > 21 && a < 21)
        return a;
    if(a>21 && b < 21)
        return b;
    if(a > b)
        return a;
    if (b > a)
        return a;
    return 0;
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",0
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
e1b0736faf96bd2a25e21db515ea12578509a542,"public int[] withoutTen(int[] nums)
{
    int tenCount = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            tenCount += 1;
        }
    }
    int[] val = new int[nums.length - tenCount];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            val[count] = nums[i];
        }
    }
    return val;
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",0
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",0
73ed1de85d5b22771d0d401395f97178f38186a0,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for (int i = 1; i < nums.length; i++)
	{
		sum += nums[i];
		if (nums[i] > max)
        {
			max = nums[i];
        }
		else if(nums[i] < min)
        {
			min = nums[i];
        }
	}
	return (sum - max - min) / (nums.length - 2)
}
",0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
2db49e564996f235354e1beafaa5dd2506725be5,"public int makeChocolate(int small, int big, int goal)
{
    int Big = goal/(big * 5);
    if ((big * 5) < goal)
    {
        if (goal - (big * 5) ) <= small
        {
      if (((big * 5) + (goal - (big * 5))) == goal)
        {
            return goal - (big * 5);
        } 
      else
       {
            return -1;
       }
    }
          }
    else
    {
        return -1;
    }
}
",0
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
",0
df0a292908496d7915866b403961e1038c88f56c,"public int noTeenSum(int a, int b, int c)
{
     if (a >= 13 || a <= 19 && a != 16 && a != 15)
     {
         return b + c;
     }
    if (b >= 13 || b <= 19 && b != 16 && b != 15)
     {
         return a + c;
     }
    if (c >= 13 || c <= 19 && c != 16 && c != 15)
     {
         return a + b;
     }
    else 
    {
        return a + b + c;
    }
}

public int fixTeen(int n)
{
    return n;
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
863743fea61e06d673131ef705425d4b67d43542,"public int loneSum(int a, int b, int c)
{
    if (a == b)
        return b + c;
    if (b == c)
        return a + c;
    if (a == c)
		return b + c;        
}
",0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",0
57de305af5c397df593d610c754a2029157ce03a,"public int[] tenRun(int[] nums)
{
    for (int i =0; i <nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int j = i+1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i]; 
            }
        }
    }
    
    return nums; 
    
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
a730369051672c668c3efc03eb8dcc6956e9beb3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	// Java arrays are initialized to 0 so no need to set the last elements to 0
	return arr;
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
9ac47f6c196a820eacbe8fca8359013950a2cc87,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (!isSummer && temperature >= 60 && temperature <= 90)
    {
        return true;
    }
    else if (isSummer && temperature >= 60 && temperature <= 100)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",0
e1b0736faf96bd2a25e21db515ea12578509a542,"public int[] withoutTen(int[] nums)
{
    int tenCount = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            tenCount += 1;
        }
    }
    int[] val = new int[nums.length - tenCount];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            val[count] = nums[i];
        }
    }
    return val;
}
",0
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
",0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",0
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
ab6e01ad587cf8cc30f23754b8c8c9d3566dc7a4,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0;
    }
    if (b > 21)
    {
        return 0;
    }
    if (a > 21 && b > 21)
    {
        return 0;
    }

}
",0
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",0
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
600821d9f75414292d281aa304cf31d2a4628fce,"public boolean endOther(String a, String b)
{
    if (this.endsWith(a) || this.endsWith(b))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
f6ddbc0da417974dd4cc3573369d1c5d478d80de,"public boolean has77(int[] nums)
{
    for ( int i = 0; i < nums.length; i++)
    {
        if ( i + 1 < nums.length && nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
        else if (i + 2 < nums.length && nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
        return false;
    }
}
",0
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
e87542225324deb36fc5891405e6401d53aab2a3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed -= 5;
    }
    if (speed=<60)
    {
        return 0;
    }
    if (speed>=61 && speed<= 80)
    {
        return 1;
    }
    if (speed>=81)
    {
        return 2;
    }
}
",0
a730369051672c668c3efc03eb8dcc6956e9beb3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	// Java arrays are initialized to 0 so no need to set the last elements to 0
	return arr;
}
",0
7c7871661cd4465fe9ca613614480b58e74f7aad,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        repeat = repeat + str.substring(str.length() - n);
    return repeat;
}
",0
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
",0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
5fb3ce593f880db45f81801eefc18c21cc1e8f84,"public boolean xyzThere(String str)
{
    boolean bef=str.indexOf(“xyz”)<str.indexOf(“.”);
boolean direc=str.lastIndexOf(“xyz”)>(str.lastIndexOf(“.”)+1);
boolean nodot=str.indexOf(“.”)==-1;
boolean noxys=str.indexOf(“xyz”)==-1;
if(noxys) return false;
if(nodot) return true;
if(bef) return true;
if(direc) return true;
return false;
}
",0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",0
2d93e4072a980ef993907c9526395445c01a414f,"public boolean xyBalance(String str)
{
    boolean t=true;
    for (int i=0; i<str.length()-1; i++)
    {
        if (str.charAt=='y')
        {
            t=true;
        }
        if (str.charAt=='x' && !str.charAt=='y')
        {
            t=false;
        }
    }
    return t;
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
30ed841a883414ca378b951718dae8e5f58e90be,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            break;
        }
        sum += nums[i];
    }
    return sum;
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",0
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
",0
b916e8075083db817cb0d3d485aec694cb9b22b8,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a)+fixTeen(b)+fixTeen(c);
}

public int fixTeen(int n)
{
    if n=19||n=13||n=14||n=17||n=18;
    	return 0;
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",0
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
",0
600821d9f75414292d281aa304cf31d2a4628fce,"public boolean endOther(String a, String b)
{
    if (this.endsWith(a) || this.endsWith(b))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
98b9da9cd6b1d5d31833f2df73886f3bf1393496,"public int greenTicket(int a, int b, int c)
{
 
    
    
    
    return 0;
}
",0
faa6cc44696d72e0fa85cc561584a1de159a4aa5,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
        return 0;
    if (you >= 8 || date >= 8)
        return 2;
    return 1;
}
",0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",0
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
cee57656ca16e1dba36c9adc7d7dbfc622398c9a,"public int sum13(int[] nums)
{
    int sum = 0;
        if (nums.length < 1) {
            return 0;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 13) {
                i++;
                continue;
            }
            sum += nums[i];
        }
        return sum;
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
57de305af5c397df593d610c754a2029157ce03a,"public int[] tenRun(int[] nums)
{
    for (int i =0; i <nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int j = i+1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i]; 
            }
        }
    }
    
    return nums; 
    
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
b1a0288831ecb0ae603b3c1ba2ee301b5ebd4583,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2 || nums[i - 1] != 2)
            {
                return false;
            }
        }
    }
    return true;
}",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
87a331d0b690ad01a48575ef537fbbc928271d6f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int x = i + 1; x < nums.length; x++)
            {
                if (nums[i] % 10 == 0 && nums[x] % 10 != 0)
                {
                    nums[x] = nums[i];
                }
            }
        }
    }
    
    return nums;
}
",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",0
eb40012d4b37cf5da376cf00035ed5e704fcbffc,"public int[] tenRun(int[] nums)
{
    for (int i = -1; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            i++
        }
        else
        {
            nums[i] = 10;
        }
    }
    return nums;
}",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
dc23e528bd74dbcdb541ee29b004f0426a8d31c4,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer && temp >= 60 && temp <= 100)
        return true;
    if (!isSummer && temp >= 60 && temp <= 90)
        return true;
    return false;
}
",0
e503bcd53b6c1b8e1f5bceead47b945857b50e9a,"public int dateFashion(int you, int date)
{
    if ( you >= 8 && date >= 8)
    {
        return 2;
    }
    if ( you <= 2 && date <= 2)
    {
        return 0;
    }
     if ( you >= 8 && date <= 8)
    {
        return 1;
    }
   if ( you <= 8 && date >= 8)
    {
        return 1;
    }
    }
    else 
        return 1;
}
",0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",0
ce1937ad05282feacba9a86e4de83bed75e48a04,"public int greenTicket(int a, int b, int c)
{
    if( a == b && b == c)
    {
        return 20;
    }
    if( a == b || b == c || c == a)
    {
        return 10;
    }
    else
    {
        return 0;
    }
    
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",0
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
51d726f3ba7d0bdf6df41f275be7d3e5ae0b21ed,"public String getSandwich(String str)
{
    int firstBread = -1;
    int lastBread = -1;
    for (int i = 0; i < str.length() - 5; i++)
    {
        if (str.substring(i, i+5).equals(""bread""))
        {
            firstBread = i;
            i = str.length();
        }
    }
    for (int j = str.length() - 5; j > 0; j--)
    {
        if (str.substring(j, j+5).equals(""bread""))
        {
            lastBread = j;
            j = 0;
        }
    }
    if(firstBread != -1 && lastBread != -1 && firstBread != lastBread)
        return str.substring(firstBread + 5, lastBread);
    return """";
}
",0
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",0
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",0
dd58011476d1da4d642a4642672cf7ed7f983d14,"public int countCode(String str)
{
    int check = 0;
	while (str.length() > 1)
    {
        int index = str.indexOf(""co"");
        String checkWord;
        if (index != -1)
        {
            str = str.substring(index + 2);
            index = str.indexOf(""e"");
            
            if (index != -1)
            {
                checkWord = str.substring(0, index);
                if (checkWord.length() == 1)
                {
                	check += 1;
                }
            }
            else
            {
                str = """";
            }
        }
        else
        {
            str = """";
        }
    }
    return check;
}
",0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
e1b0736faf96bd2a25e21db515ea12578509a542,"public int[] withoutTen(int[] nums)
{
    int tenCount = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            tenCount += 1;
        }
    }
    int[] val = new int[nums.length - tenCount];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            val[count] = nums[i];
        }
    }
    return val;
}
",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
57de305af5c397df593d610c754a2029157ce03a,"public int[] tenRun(int[] nums)
{
    for (int i =0; i <nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int j = i+1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i]; 
            }
        }
    }
    
    return nums; 
    
}
",0
30ed841a883414ca378b951718dae8e5f58e90be,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            break;
        }
        sum += nums[i];
    }
    return sum;
}
",0
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
cd2afe6f9d34df746f1ce7014919490099ac3ee2,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
            count++;
    }
    return count;
}
",0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
dd58011476d1da4d642a4642672cf7ed7f983d14,"public int countCode(String str)
{
    int check = 0;
	while (str.length() > 1)
    {
        int index = str.indexOf(""co"");
        String checkWord;
        if (index != -1)
        {
            str = str.substring(index + 2);
            index = str.indexOf(""e"");
            
            if (index != -1)
            {
                checkWord = str.substring(0, index);
                if (checkWord.length() == 1)
                {
                	check += 1;
                }
            }
            else
            {
                str = """";
            }
        }
        else
        {
            str = """";
        }
    }
    return check;
}
",0
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",0
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
73ed1de85d5b22771d0d401395f97178f38186a0,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for (int i = 1; i < nums.length; i++)
	{
		sum += nums[i];
		if (nums[i] > max)
        {
			max = nums[i];
        }
		else if(nums[i] < min)
        {
			min = nums[i];
        }
	}
	return (sum - max - min) / (nums.length - 2)
}
",0
CodeStateID,Code,0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",0
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
b21271e79419b123e5e2d4ff29ca2f214f3fb90e,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if (a==b || a==c || b==c)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
",0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",0
666a7f0c20c29b5666745dfb4c61a7a881f21218,"public boolean evenlySpaced(int a, int b, int c)
{
    boolean spaced = false;
    int aMinusB = a - b;
    int aMinusC = a - c;
    if (aMinusB == aMinusC || aMinusB == -aMinusC)
    {
        spaced = true;
    }
    return spaced;
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
dc23e528bd74dbcdb541ee29b004f0426a8d31c4,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer && temp >= 60 && temp <= 100)
        return true;
    if (!isSummer && temp >= 60 && temp <= 90)
        return true;
    return false;
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
076375a7de31fac4f71067d46b002b33e9533045,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning){
        if (isMom){
            return true;
        }
        return false;
    }
    if (isAsleep){
        return false;
    }
    return true;
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",0
8ceecaf78d221153b51f1d631c8212f7ecaf45a9,"public boolean love6(int a, int b)
{
    if ( Math.abs(a+b) != 6 || Math.abs(a-b) != 6)
    {
    	return false;
    }
    return true;
}
",0
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
",0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
96649403e3463cc1c05171bea6b6b5e9d2710fe4,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
    
    for (int i = 0; i <=nums.length-2;i++)

{

if ( nums[i] != val && nums[i+1] != val)

result = false;

}

  return result;

}
",0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",0
ab6e01ad587cf8cc30f23754b8c8c9d3566dc7a4,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0;
    }
    if (b > 21)
    {
        return 0;
    }
    if (a > 21 && b > 21)
    {
        return 0;
    }

}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
cf50e456db1821c67d784b4596db0e3038f70941,"public boolean isEverywhere(int[] nums, int val)
{
//    for (int i = 0; i < nums.length; i++)
//    {
  //   	if (nums[i] != val || nums[i++] != val)
    //    {
      //      return false;
        //}
    //}
    //return true;
boolean result = true;
for (int i = 0; i <=nums.length-2;i++)
{
	if ( nums[i] != val && nums[i+1] != val)
	result = false;
}
return result;
}
",0
30ed841a883414ca378b951718dae8e5f58e90be,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            break;
        }
        sum += nums[i];
    }
    return sum;
}
",0
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
9ac47f6c196a820eacbe8fca8359013950a2cc87,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (!isSummer && temperature >= 60 && temperature <= 90)
    {
        return true;
    }
    else if (isSummer && temperature >= 60 && temperature <= 100)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
",0
828a3b0db925adca159220f3e9faf2fb4e24446a,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21){
        return a;
    }else if (b > a && b <= 21){
        return b;
    }else if (a > 21 && b < 22){
        return b;
    }else if (b > 21 && a < 22){
        return a;
    }else{
        return 0;
    }
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",0
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
",0
703755b18e622f98535aa2fcbd3077187f71293b,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] % 2 == 0) count++;
    }
    return count;
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
faa6cc44696d72e0fa85cc561584a1de159a4aa5,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
        return 0;
    if (you >= 8 || date >= 8)
        return 2;
    return 1;
}
",0
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
bfabd7f60c9ae99dd394933051317b10e684ed16,"public int countEvens(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            return nums[i];
        }
    }
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
9acc78321e1dd670eb79224bfc19ae337b144ee8,"public boolean in1To10(int n, boolean outsideMode)
{
    int outputValue;
    if (n > 1 && n < 10)
    {
        return true;
    }
    else if (n == 1)
    {
        return ""number is equal to 1"";
    }
    else if (n == 10)
    {
        return ""number is equal to 10"";
    }
    else if (n > 10)
    {
        return ""number is greater than 10"";
    }
    else
    {
        return ""number is less than 1"";
    }
		
}
",0
8320e574f1b2963b87989be8f9ea952fbd5ed290,"public int sortaSum(int a, int b)
{
    int sum;
    if (sum >= 10 && sum <= 20)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
",0
217727d1f14f216248eece014e54d93c9ec2a75d,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 != 0)
        {
            largestOdd = nums[i];            
        }
    }
    
    boolean foundNumberRight = false;
    for (int i = nums.length; i <= 0; i++)
    {
        if (nums[i] == largestOdd)
        {
            foundNumberRight = true;
        }
        
        if (foundNumberRight && nums[i] == 0)
        {
            nums[i] = largestOdd;
        }
    }
    
    return nums;

}

",0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",0
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
b916e8075083db817cb0d3d485aec694cb9b22b8,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a)+fixTeen(b)+fixTeen(c);
}

public int fixTeen(int n)
{
    if n=19||n=13||n=14||n=17||n=18;
    	return 0;
}
",0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
ed3b1df13e4b0c1e12a2a3f406666ff7422ea1e3,"public boolean xyBalance(String str)
{
    for (int i = 1; i <= str.length(); i++)
        if (str.charAt(i) == x)
            if (str.charAt(i+1) == y)
                return true;
    if (!str.endsWith(""y""))
        return false;
    return true;
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
a730369051672c668c3efc03eb8dcc6956e9beb3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	// Java arrays are initialized to 0 so no need to set the last elements to 0
	return arr;
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
eb40012d4b37cf5da376cf00035ed5e704fcbffc,"public int[] tenRun(int[] nums)
{
    for (int i = -1; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            i++
        }
        else
        {
            nums[i] = 10;
        }
    }
    return nums;
}",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
e87542225324deb36fc5891405e6401d53aab2a3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed -= 5;
    }
    if (speed=<60)
    {
        return 0;
    }
    if (speed>=61 && speed<= 80)
    {
        return 1;
    }
    if (speed>=81)
    {
        return 2;
    }
}
",0
faa6cc44696d72e0fa85cc561584a1de159a4aa5,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
        return 0;
    if (you >= 8 || date >= 8)
        return 2;
    return 1;
}
",0
41d90442c40d0db01a0ec22f14bbc713b46101a8,"public int[] withoutTen(int[] nums)
{
    nums2[] = [];
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            nums2.add(nums[i]);
        }
    }
}
",0
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",0
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",0
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",0
cd2afe6f9d34df746f1ce7014919490099ac3ee2,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
            count++;
    }
    return count;
}
",0
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
",0
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",0
cee57656ca16e1dba36c9adc7d7dbfc622398c9a,"public int sum13(int[] nums)
{
    int sum = 0;
        if (nums.length < 1) {
            return 0;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 13) {
                i++;
                continue;
            }
            sum += nums[i];
        }
        return sum;
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",0
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
97ae66b043e5397f812782c838ec271319ed9aea,"public int sum3(int[] nums)
{
    int sum = 0;
    for (int i : nums)
    {
        sum = sum + i;
    }
    return sum;
}
",0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",0
8a779c37e36e7e7238238f8fa362f496af39a6e3,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    
    
        
        
    if(first != -1 && last != -1 && first != last)
    {
		return str.substring(first + 5, last);
    }
    else return"""";
}
",0
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",0
dd58011476d1da4d642a4642672cf7ed7f983d14,"public int countCode(String str)
{
    int check = 0;
	while (str.length() > 1)
    {
        int index = str.indexOf(""co"");
        String checkWord;
        if (index != -1)
        {
            str = str.substring(index + 2);
            index = str.indexOf(""e"");
            
            if (index != -1)
            {
                checkWord = str.substring(0, index);
                if (checkWord.length() == 1)
                {
                	check += 1;
                }
            }
            else
            {
                str = """";
            }
        }
        else
        {
            str = """";
        }
    }
    return check;
}
",0
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",0
e1b0736faf96bd2a25e21db515ea12578509a542,"public int[] withoutTen(int[] nums)
{
    int tenCount = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            tenCount += 1;
        }
    }
    int[] val = new int[nums.length - tenCount];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            val[count] = nums[i];
        }
    }
    return val;
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
e87542225324deb36fc5891405e6401d53aab2a3,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed -= 5;
    }
    if (speed=<60)
    {
        return 0;
    }
    if (speed>=61 && speed<= 80)
    {
        return 1;
    }
    if (speed>=81)
    {
        return 2;
    }
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",0
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
",0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",0
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
cdc404479946118fd95418c88f1d9ed0acf21084,"public boolean canBalance(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
        sum += nums[i];
    int sumSoFar = 0;
    for (int j = 0; j < nums.length; j++)
        sumSoFar += nums[j];
        System.out.println(sumSoFar);
        if (sum == 2 * sumSoFar)
            return true;
    return false;
}
",0
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",0
9ac47f6c196a820eacbe8fca8359013950a2cc87,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (!isSummer && temperature >= 60 && temperature <= 90)
    {
        return true;
    }
    else if (isSummer && temperature >= 60 && temperature <= 100)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",0
f0c481a9e07c60bea12e78a5079713f14b24c2a9,"public int blackjack(int a, int b)
{
    if(b > 21 && a < 21)
        return a;
    if(a>21 && b < 21)
        return b;
    if(a > b)
        return a;
    if (b > a)
        return a;
    return 0;
}
",0
dc23e528bd74dbcdb541ee29b004f0426a8d31c4,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer && temp >= 60 && temp <= 100)
        return true;
    if (!isSummer && temp >= 60 && temp <= 90)
        return true;
    return false;
}
",0
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
2ed7f6d787e101490eeaad0609644558aad02f27,"public String atFirst(String str)
{
    if (str.length() >= 2)
       return str.substring(0, 2);
    else if (str.length() == 1)
        return str.subcharAt(0) = ""@"";
    else 
        return ""@@"";
        
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",0
db19ea5f1cabdb8d39c12a6acfc593bd85bf4f95,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
    	{
     	   for (int j = i + 1; j < nums.length && nums[j] % 10 != 0; j++)
           {
            	nums[j] = nums[i];   
           }
    	}
    }
    return nums;
}
",0
e503bcd53b6c1b8e1f5bceead47b945857b50e9a,"public int dateFashion(int you, int date)
{
    if ( you >= 8 && date >= 8)
    {
        return 2;
    }
    if ( you <= 2 && date <= 2)
    {
        return 0;
    }
     if ( you >= 8 && date <= 8)
    {
        return 1;
    }
   if ( you <= 8 && date >= 8)
    {
        return 1;
    }
    }
    else 
        return 1;
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
a2360600b70642aa88ab28814557e53ea027558a,"public boolean canBalance(int[] nums)
{
    int leftSide = 0;
	int rightSide = nums[nums.length-1];
	for (int i = 0; i < nums.length - 1; i++)
    {
		leftSide += nums[i];
    }
	for (int i = nums.length - 2; i > 0; i--)
	{
		if (leftSide == rightSide)
        {
			return true;
        }
        leftSide -= nums[i];
		rightSide += nums[i];
	}
	return (leftSide == rightSide);
}
",0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",0
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
",0
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
",0
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",0
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",0
87a331d0b690ad01a48575ef537fbbc928271d6f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int x = i + 1; x < nums.length; x++)
            {
                if (nums[i] % 10 == 0 && nums[x] % 10 != 0)
                {
                    nums[x] = nums[i];
                }
            }
        }
    }
    
    return nums;
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
a640880805c7b524dec2ff6608a02a339cfe10a0,"public int[] withoutTen(int[] nums)
{
    int[] copy = new int[nums.length];
    int index = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10) 
        {
            copy[index] = nums[i];
            index++;
        }
    }
    return copy;
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",0
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
b916e8075083db817cb0d3d485aec694cb9b22b8,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a)+fixTeen(b)+fixTeen(c);
}

public int fixTeen(int n)
{
    if n=19||n=13||n=14||n=17||n=18;
    	return 0;
}
",0
e444710aa658e2dde4799f8965284cd20bc98f6a,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
        int even = 0;
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;
}
",0
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",0
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
e1b0736faf96bd2a25e21db515ea12578509a542,"public int[] withoutTen(int[] nums)
{
    int tenCount = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            tenCount += 1;
        }
    }
    int[] val = new int[nums.length - tenCount];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            val[count] = nums[i];
        }
    }
    return val;
}
",0
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
",0
1ac085374f785c20ca501ac5939ec5977db8a972,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (isMorning)
    {
 		return false;   
    }
    
    return true;
}
",0
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
faa6cc44696d72e0fa85cc561584a1de159a4aa5,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
        return 0;
    if (you >= 8 || date >= 8)
        return 2;
    return 1;
}
",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",0
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",0
7c7871661cd4465fe9ca613614480b58e74f7aad,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        repeat = repeat + str.substring(str.length() - n);
    return repeat;
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",0
6997480543b126050f41b975e76e3e1bc9835c79,"ublic int countEvens(int[] nums) {
    int count = 0;
    for (int i = 0; i < nums.length; i++)
        if (nums[i] % 2 == 0) count++;
    return count;
}",0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",0
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",0
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
",0
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
",0
e1b0736faf96bd2a25e21db515ea12578509a542,"public int[] withoutTen(int[] nums)
{
    int tenCount = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            tenCount += 1;
        }
    }
    int[] val = new int[nums.length - tenCount];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            val[count] = nums[i];
        }
    }
    return val;
}
",0
cd2afe6f9d34df746f1ce7014919490099ac3ee2,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
            count++;
    }
    return count;
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
51cd81eddc2c0304f6f4b44ade4bf6e3c8a6aff8,"public String alarmClock(int day, boolean vacation)
{
    if (day >=1 && day <= 5)
    {
        return vacation ? ""10:00"" : ""7:00"";
    }
    
    else
    {
        return vacation ? ""off"" : ""10:00""
    }

    
}
",0
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",0
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
f0c481a9e07c60bea12e78a5079713f14b24c2a9,"public int blackjack(int a, int b)
{
    if(b > 21 && a < 21)
        return a;
    if(a>21 && b < 21)
        return b;
    if(a > b)
        return a;
    if (b > a)
        return a;
    return 0;
}
",0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",0
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
9db9cff5028b4b1cc75f4f5c9a641117debb19ac,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0; 
    }    
    if (b > 21)
    {
        return 0;
    }
    if ( a > b)
    {
        return a;
    }
    else
    {
        return b;
    }
    
}
",0
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
600821d9f75414292d281aa304cf31d2a4628fce,"public boolean endOther(String a, String b)
{
    if (this.endsWith(a) || this.endsWith(b))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",0
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",0
faa6cc44696d72e0fa85cc561584a1de159a4aa5,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
        return 0;
    if (you >= 8 || date >= 8)
        return 2;
    return 1;
}
",0
ab6e01ad587cf8cc30f23754b8c8c9d3566dc7a4,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0;
    }
    if (b > 21)
    {
        return 0;
    }
    if (a > 21 && b > 21)
    {
        return 0;
    }

}
",0
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
",0
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",0
f0c481a9e07c60bea12e78a5079713f14b24c2a9,"public int blackjack(int a, int b)
{
    if(b > 21 && a < 21)
        return a;
    if(a>21 && b < 21)
        return b;
    if(a > b)
        return a;
    if (b > a)
        return a;
    return 0;
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
666a7f0c20c29b5666745dfb4c61a7a881f21218,"public boolean evenlySpaced(int a, int b, int c)
{
    boolean spaced = false;
    int aMinusB = a - b;
    int aMinusC = a - c;
    if (aMinusB == aMinusC || aMinusB == -aMinusC)
    {
        spaced = true;
    }
    return spaced;
}
",0
309dc7997e1010df732f8ec41fd34a616365f55d,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if ((str.substring(i, i + 1) == 'co') 
            && (str.substring(i + 3) == 'e'))
        {
            count++;
        }
    }
    return count;
}
",0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",0
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
",0
b916e8075083db817cb0d3d485aec694cb9b22b8,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a)+fixTeen(b)+fixTeen(c);
}

public int fixTeen(int n)
{
    if n=19||n=13||n=14||n=17||n=18;
    	return 0;
}
",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",0
33bf743a9707fb874e5447648c48e307607e03de,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 1) == 'co' &&
            str.substring(i + 3) == 'e')
        {
            count = count + 1;
        }
    }
    return count;
}
",0
21d997dbc1d180fc37f71fb0247cb0ffaa4b9e21,"public String getSandwich(String str)
{
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    if (first == last)
        return """";
    return str.substring(first + 5, last);
}
",0
a640880805c7b524dec2ff6608a02a339cfe10a0,"public int[] withoutTen(int[] nums)
{
    int[] copy = new int[nums.length];
    int index = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10) 
        {
            copy[index] = nums[i];
            index++;
        }
    }
    return copy;
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",0
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",0
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",0
f41fb88b1de966f69c3b0cdf8fdf815e6d979781,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i--)
    {
        if (str.charAt(i) == 'x')
        {
         	return false;   
        }
        else if (str.charAt(i) == 'y')
        {
         	return true;   
        }
    }
    return true;
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
e1b0736faf96bd2a25e21db515ea12578509a542,"public int[] withoutTen(int[] nums)
{
    int tenCount = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            tenCount += 1;
        }
    }
    int[] val = new int[nums.length - tenCount];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            val[count] = nums[i];
        }
    }
    return val;
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
5fb3ce593f880db45f81801eefc18c21cc1e8f84,"public boolean xyzThere(String str)
{
    boolean bef=str.indexOf(“xyz”)<str.indexOf(“.”);
boolean direc=str.lastIndexOf(“xyz”)>(str.lastIndexOf(“.”)+1);
boolean nodot=str.indexOf(“.”)==-1;
boolean noxys=str.indexOf(“xyz”)==-1;
if(noxys) return false;
if(nodot) return true;
if(bef) return true;
if(direc) return true;
return false;
}
",0
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
0dcf6449d4df310d3fe50618ea03c76712671149,"public boolean canBalance(int[] nums)
{
    int upperIndex = nums.length-1;
    int lowerIndex = 0;
    while(lowerIndex<upperIndex){
		int lowerSum = sum(nums,0,lowerIndex);
        int upperSum = sum(nums,lowerIndex,upperIndex);
        if(lowerSum==upperSum)
            return true;
        else if(lowerSum<upperSum)
            lowerSum++;
        else
            upperSum++;
    }
    return false;
}

private int sum(int[] nums,int a, int b){
    int sum = 0;
    for(int i = a; a < b; i++){
        sum+=nums[i];
    }
    return sum;
}",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
73ed1de85d5b22771d0d401395f97178f38186a0,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for (int i = 1; i < nums.length; i++)
	{
		sum += nums[i];
		if (nums[i] > max)
        {
			max = nums[i];
        }
		else if(nums[i] < min)
        {
			min = nums[i];
        }
	}
	return (sum - max - min) / (nums.length - 2)
}
",0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
c1dc534bc134ac150f2499c964686d5c7968c85a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        System.out.printIn(""0"");
    }
    else if (speed >= 61 && <= 80)
    {
        System.out.printIn(""1"")
    }
    else if (speed >= 81)
    {
        System.out.printIn(""2"")
    }
    
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
",0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",0
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
e6c7639a2e1b3af56d85db04d390ef310b45ff98,"def make_chocolate(small, big, goal):
{
    if goal >= 5 * big:
    {
        remainder = goal - 5 * big
    }
    else:
    {
        remainder = goal % 5
    }
        
    if remainder <= small:
    {
        return remainder
    }
    return -1
}
",0
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
db19ea5f1cabdb8d39c12a6acfc593bd85bf4f95,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
    	{
     	   for (int j = i + 1; j < nums.length && nums[j] % 10 != 0; j++)
           {
            	nums[j] = nums[i];   
           }
    	}
    }
    return nums;
}
",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
c3c9383d773b824d0034799c9a56dd226f7f94a8,"public int greenTicket(int a, int b, int c)
{
    if (a == b == c)
    {
        return 20;
    }
    else if (a == b || b == c || c == a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
77eef59d415f15b3ad7bf984b2a232f7486ec6c6,"public int countEvens(int[] nums)
{
    int count = 0;
    
	for(int i = 0; i < nums.length; i++)
	{
		if (nums[i] % 2 == 0)
        {
			count++;
        }
	}
	return count;
}
",0
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
73ed1de85d5b22771d0d401395f97178f38186a0,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for (int i = 1; i < nums.length; i++)
	{
		sum += nums[i];
		if (nums[i] > max)
        {
			max = nums[i];
        }
		else if(nums[i] < min)
        {
			min = nums[i];
        }
	}
	return (sum - max - min) / (nums.length - 2)
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
",0
a6ef869527e799ebeaa3435595e0271453b97469,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    int temperature = temp;
    boolean summer = isSummer;
    int minTemp = 60;
    int maxTemp = 90;
    boolean play = false;
    if (summer == true)
    {
        maxTemp += 10;
    }
    if (temp >= minTemp && temp <= maxTemp)
    {
        play = true;
    }
    return (play);
}
",0
c384cb38b2cffa92ee7bc55feafe1c65d7c5d33e,"public int countCode(String str)
{
int count = 0;

for(int i = 0; i < str.length() - 3; i++)
{
if(str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
count++;
}

return count;  
}
",0
a730369051672c668c3efc03eb8dcc6956e9beb3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	// Java arrays are initialized to 0 so no need to set the last elements to 0
	return arr;
}
",0
1d1ee14392f593dc4de53f7fc03850b89f323c6d,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
        if (nums[i] % 2 == 0) 
        {
            count++;
        }
    return count;
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}",0
9ac47f6c196a820eacbe8fca8359013950a2cc87,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (!isSummer && temperature >= 60 && temperature <= 90)
    {
        return true;
    }
    else if (isSummer && temperature >= 60 && temperature <= 100)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
faa6cc44696d72e0fa85cc561584a1de159a4aa5,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
        return 0;
    if (you >= 8 || date >= 8)
        return 2;
    return 1;
}
",0
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
a6ef869527e799ebeaa3435595e0271453b97469,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    int temperature = temp;
    boolean summer = isSummer;
    int minTemp = 60;
    int maxTemp = 90;
    boolean play = false;
    if (summer == true)
    {
        maxTemp += 10;
    }
    if (temp >= minTemp && temp <= maxTemp)
    {
        play = true;
    }
    return (play);
}
",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
1d1ee14392f593dc4de53f7fc03850b89f323c6d,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
        if (nums[i] % 2 == 0) 
        {
            count++;
        }
    return count;
}
",0
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
",0
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",0
cee57656ca16e1dba36c9adc7d7dbfc622398c9a,"public int sum13(int[] nums)
{
    int sum = 0;
        if (nums.length < 1) {
            return 0;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 13) {
                i++;
                continue;
            }
            sum += nums[i];
        }
        return sum;
}
",0
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


",0
41d90442c40d0db01a0ec22f14bbc713b46101a8,"public int[] withoutTen(int[] nums)
{
    nums2[] = [];
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            nums2.add(nums[i]);
        }
    }
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
25587d30d2f5eb80eebc44fb428e9d2e3f7ee17f,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if(isSummer && 60 <= temp && temp <= 100)
        return true;
          
    if(!isSummer && 60 <= temp && temp <= 90)
        return true;
                    
    return false;
}
",0
a4a204a7f131a2bd02585a880d46d98f1098fd2d,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer){
        return (temp >= 60 && temp <= 100);
    }
    return (temp >= 60 && temp <= 90);
}
",0
3da6d13c5e129585a85f09cc153cb57358bb6316,"public String without2(String str) 
{
    if (str.length() >= 2)
    {
        if (str.substring(0,2).equals(str.substring(str.length() - 2)))
        {
            return str.substring(2);
            // if the two letters at the beginning of the word and at the end of the word are equal to each other, the string will returned with these two letters
        }
        else
        {
            return str;
            // if the two letters are not equal to each other, then the original string will be returned
        }
    }
    else
    {
        return str;
        //if the word is only two letters or less, it will return the original string 
    }
}
",0
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
",0
12eb90cd21edfa3b84b353939a235a5e8fca23c3,"public int makeChocolate(int small, int big, int goal)
{
    int amountOfSmallBars = goal % 5;
    
    if (small + (big * 5) < goal)
    { 
        return -1;
    }
    
    else if (amountOfSmallBars <= small && goal - (big * 5) > 4)
    {
        return amountOfSmallBars + 5; 
    }
    
    else if (amountOfSmallBars <= small)
    {
    	return amountOfSmallBars;
    }
    
    else 
    {
        return -1; 
    }
    
}
",0
0aea652617e26c03e997bb80c8b349264b07e820,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep)
    {
        return false;
    }
    
    if (!isMorning || !isMom)
    {
 		return false;   
    }
    
    return true;
}
",0
30ed841a883414ca378b951718dae8e5f58e90be,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            break;
        }
        sum += nums[i];
    }
    return sum;
}
",0
600821d9f75414292d281aa304cf31d2a4628fce,"public boolean endOther(String a, String b)
{
    if (this.endsWith(a) || this.endsWith(b))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
",0
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
",0
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
e1b0736faf96bd2a25e21db515ea12578509a542,"public int[] withoutTen(int[] nums)
{
    int tenCount = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            tenCount += 1;
        }
    }
    int[] val = new int[nums.length - tenCount];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            val[count] = nums[i];
        }
    }
    return val;
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
ecbf2fab85b1bd02b3a3b5125e375888f43e7967,"public int[] shiftLeft(int[] nums)
{
    for (int i =0; i < nums.length - 1; i++)
    {
        int temp = nums[i];
        nums[i] = nums[i+1];
        nums[nums.length - 1] = temp;
    }   
    return nums;
}
",0
c384cb38b2cffa92ee7bc55feafe1c65d7c5d33e,"public int countCode(String str)
{
int count = 0;

for(int i = 0; i < str.length() - 3; i++)
{
if(str.substring(i, i + 2).equals(""co"") && str.charAt(i + 3) == 'e')
count++;
}

return count;  
}
",0
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
a730369051672c668c3efc03eb8dcc6956e9beb3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	// Java arrays are initialized to 0 so no need to set the last elements to 0
	return arr;
}
",0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
",0
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
0ea1d83d6bffd4f7b531269f88cfadccff02bc63,"public boolean evenlySpaced(int a, int b, int c)
{
    int max = Math.max(a, Math.max(b,c));
    int min = Math.min(a, Math.min(b,c));
    int mid = a+b+c-min-max;
    
    if(max-mid == mid-min) return true;
    return false;
}
",0
b21271e79419b123e5e2d4ff29ca2f214f3fb90e,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if (a==b || a==c || b==c)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
",0
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
",0
af66fca8c597a9ffbe33bf0f8d288679c5719018,"public String[] fizzBuzz(int start, int end)
{
    
int n = end - start;
03
    String[] result = new String[n];
04
  
05
    int pos = 0;
06
    for (int i = start; i < end; i++) {
07
        boolean fizz = i % 3 == 0;
08
        boolean buzz = i % 5 == 0;
09
  
10
        if (fizz && buzz) result[pos] = ""FizzBuzz"";
11
        else if (fizz) result[pos] = ""Fizz"";
12
        else if (buzz) result[pos] = ""Buzz"";
13
        else result[pos] = String.valueOf(i);
14
        pos++;
15
    }
16
    return result;
                                               
    return arr;
",0
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",0
eb40012d4b37cf5da376cf00035ed5e704fcbffc,"public int[] tenRun(int[] nums)
{
    for (int i = -1; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            i++
        }
        else
        {
            nums[i] = 10;
        }
    }
    return nums;
}",0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
65be8e7df201ba354b4a5edfc451e72bcffde787,"public String[] fizzBuzz(int start, int end)
{
     int n = end - start;

    String[] result = new String[n];

  

    int pos = 0;

    for (int i = start; i < end; i++) {

        boolean fizz = i % 3 == 0;

        boolean buzz = i % 5 == 0;

  

        if (fizz && buzz) result[pos] = ""FizzBuzz"";

        else if (fizz) result[pos] = ""Fizz"";

        else if (buzz) result[pos] = ""Buzz"";

        else result[pos] = String.valueOf(i);

        pos++;
    }

    return result;

}
",0
e1b0736faf96bd2a25e21db515ea12578509a542,"public int[] withoutTen(int[] nums)
{
    int tenCount = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            tenCount += 1;
        }
    }
    int[] val = new int[nums.length - tenCount];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            val[count] = nums[i];
        }
    }
    return val;
}
",0
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
30ed841a883414ca378b951718dae8e5f58e90be,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            break;
        }
        sum += nums[i];
    }
    return sum;
}
",0
8a779c37e36e7e7238238f8fa362f496af39a6e3,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    
    
        
        
    if(first != -1 && last != -1 && first != last)
    {
		return str.substring(first + 5, last);
    }
    else return"""";
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",0
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",0
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",0
828a3b0db925adca159220f3e9faf2fb4e24446a,"public int blackjack(int a, int b)
{
    if (a > b && a <= 21){
        return a;
    }else if (b > a && b <= 21){
        return b;
    }else if (a > 21 && b < 22){
        return b;
    }else if (b > 21 && a < 22){
        return a;
    }else{
        return 0;
    }
}
",0
57de305af5c397df593d610c754a2029157ce03a,"public int[] tenRun(int[] nums)
{
    for (int i =0; i <nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int j = i+1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i]; 
            }
        }
    }
    
    return nums; 
    
}
",0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",0
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
0dcf6449d4df310d3fe50618ea03c76712671149,"public boolean canBalance(int[] nums)
{
    int upperIndex = nums.length-1;
    int lowerIndex = 0;
    while(lowerIndex<upperIndex){
		int lowerSum = sum(nums,0,lowerIndex);
        int upperSum = sum(nums,lowerIndex,upperIndex);
        if(lowerSum==upperSum)
            return true;
        else if(lowerSum<upperSum)
            lowerSum++;
        else
            upperSum++;
    }
    return false;
}

private int sum(int[] nums,int a, int b){
    int sum = 0;
    for(int i = a; a < b; i++){
        sum+=nums[i];
    }
    return sum;
}",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
18dd130d03d4d1878442e7e7eefa98c54b4f69d7,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b != a && c != a)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",0
dc23e528bd74dbcdb541ee29b004f0426a8d31c4,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer && temp >= 60 && temp <= 100)
        return true;
    if (!isSummer && temp >= 60 && temp <= 90)
        return true;
    return false;
}
",0
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
",0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",0
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
9ac47f6c196a820eacbe8fca8359013950a2cc87,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (!isSummer && temperature >= 60 && temperature <= 90)
    {
        return true;
    }
    else if (isSummer && temperature >= 60 && temperature <= 100)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",0
db19ea5f1cabdb8d39c12a6acfc593bd85bf4f95,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
    	{
     	   for (int j = i + 1; j < nums.length && nums[j] % 10 != 0; j++)
           {
            	nums[j] = nums[i];   
           }
    	}
    }
    return nums;
}
",0
a69d38f3cf12e6a14454b751528014666fddc16f,"public String mixString(String a, String b)
{
    return a.substring(0, 1) + b.substring(0, 1) + a.substring(1, 2) + b.substring(1, 2) + a.substring(2, 3) + b.substring(2, 3);
}
",0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",0
c2b5233c69ac3f268687caee60f7f68deec9a002,"public String zipZap(String str)
{
    String original = str;
boolean found = false;
if(str.length() == 3) {
if(Character.toString(str.charAt(0)).equals(""z"") && (Character.toString(str.charAt(2)).equals(""p""))) {
return ""zp"";
}
} else if(str.length() < 3) {
return str;
}
 
for(int i = 0; i + 3 < str.length(); i++) {
if(Character.toString(str.charAt(i)).equals(""z"") && Character.toString(str.charAt(i + 2)).equals(""p"")) {
str = str.substring(0, i) + Character.toString(str.charAt(i)) + Character.toString(str.charAt(i + 2)) + str.substring(i + 3, str.length());
found = true;
} else {
}
}
 
if(Character.toString(str.charAt(str.length() - 3)).equals(""z"") && Character.toString(str.charAt(str.length() - 1)).equals(""p"")) {
return str = str.substring(0, str.length() - 3) + Character.toString(str.charAt(str.length() - 3)) + Character.toString(str.charAt(str.length() - 1));
}
 
if(found) {
return str;
} else {
return original;
}
}
",0
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",0
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
",0
5fb3ce593f880db45f81801eefc18c21cc1e8f84,"public boolean xyzThere(String str)
{
    boolean bef=str.indexOf(“xyz”)<str.indexOf(“.”);
boolean direc=str.lastIndexOf(“xyz”)>(str.lastIndexOf(“.”)+1);
boolean nodot=str.indexOf(“.”)==-1;
boolean noxys=str.indexOf(“xyz”)==-1;
if(noxys) return false;
if(nodot) return true;
if(bef) return true;
if(direc) return true;
return false;
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",0
e1b0736faf96bd2a25e21db515ea12578509a542,"public int[] withoutTen(int[] nums)
{
    int tenCount = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            tenCount += 1;
        }
    }
    int[] val = new int[nums.length - tenCount];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            val[count] = nums[i];
        }
    }
    return val;
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",0
eb40012d4b37cf5da376cf00035ed5e704fcbffc,"public int[] tenRun(int[] nums)
{
    for (int i = -1; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            i++
        }
        else
        {
            nums[i] = 10;
        }
    }
    return nums;
}",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
57de305af5c397df593d610c754a2029157ce03a,"public int[] tenRun(int[] nums)
{
    for (int i =0; i <nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int j = i+1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i]; 
            }
        }
    }
    
    return nums; 
    
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",0
73ed1de85d5b22771d0d401395f97178f38186a0,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for (int i = 1; i < nums.length; i++)
	{
		sum += nums[i];
		if (nums[i] > max)
        {
			max = nums[i];
        }
		else if(nums[i] < min)
        {
			min = nums[i];
        }
	}
	return (sum - max - min) / (nums.length - 2)
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
",0
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
dfc5c1e3b63794cf77b99a401b89cf48f5e88571,"public int countClumps(int[] nums)
{
    if (nums.length < 2)
    {
        return 0;
    }
    else
    {
        int counter = 0;
        for (int i = 0; i < nums.length - 1; i++)
        {
            if (nums[i] == nums[i+1])
            {
                int next = nextPos(nums, nums[i], i);
                i = i + next;
                counter++;
            }
        }
        return counter;
    }
}

public int nextPos(int[] nums, int init, int start)
{
    int nextNum = start;
    while (nums[nextNum] == init)
    {
        nextNum++;
    }
    return nextNum;
}",0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",0
8607bf69df97e865fbab7f3aedd1367fc5b36f34,"public int countCode(String str)
{
	int count = 0;
    for (int i = 0; i < str.length; i++)
    {
        if (str.charAt(i) == ""c"" && str.charAt(i + 1) == ""o"" && str.charAt(i + 3) == ""e"")
        {
            count++;
        }
    }
    return count;
}
",0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",0
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
",0
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",0
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",0
0eefe10c954547a7675d5ee81f88d4d112cf44e9,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b') {
            return true;
        }
    }
    return false;
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",0
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
",0
892a5a3886a37110226513fe655b564b73fba9bb,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    int nm = num % 10;
    if (nm <= 5)
    {
        return num - 10 - nm;
    }
    else
    {
        return num + nm;
    }
}
",0
aa4d8b44bff62be088c0c94a7829aa410ffa133b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        if (speed <= 60)
        {
            return 0;
        }
        if (speed <= 80 && speed >= 61)
        {
            return 1;
        }
        if (speed >= 81)
        {
            return 2;
        }
    }
    if (!isBirthday)
    {
        if (speed <= 65)
        {
            return 0;
        }
        if (speed <= 85 && speed >= 66)
        {
            return 1;
        }
        if (speed >= 86)
        {
            return 2;
        }
    }
}",0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",0
433d8d82491f06595b4a7fd44c977dbfb917d6b7,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i ++)
    {
        if (nums[i] != 7 && nums[i+1] != 7)
        {
          return false;
        }
    }
    return true;
    
}
",0
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
51ee6cbb45f01f7e4b1cabe7c7369b0312490aed,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c)
    {
     	return 0;   
    }
    else if (a == b && b == c)
    {
     	return 20;   
    }
    else if (a == b || a == c || b == c)
    {
     	return 10;   
    }
}
",0
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
",0
6a65384394b339168ba9b889d023214cac811820,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
        return 10;
    }
    else if (a == b && a == c && b == c)
    {
        return 5;
    }
    else if (a != b && a != c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",0
b21271e79419b123e5e2d4ff29ca2f214f3fb90e,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
    {
        return 20;
    }
    else if (a==b || a==c || b==c)
    {
        return 10;
    }
    else
    {
        return 0;
    }
}
",0
6f2aa07dfa0846986037573e3e24e0a01ef729f0,"public int[] seriesUp(int n)
{
    int[] nums = new int[n * (n + 1) / 2];
    int index = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i + 1; j++)
        {
            nums[index] = j + 1;
            index++;
        }
    }
    return nums;
}
",0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",0
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",0
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",0
73ed1de85d5b22771d0d401395f97178f38186a0,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for (int i = 1; i < nums.length; i++)
	{
		sum += nums[i];
		if (nums[i] > max)
        {
			max = nums[i];
        }
		else if(nums[i] < min)
        {
			min = nums[i];
        }
	}
	return (sum - max - min) / (nums.length - 2)
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
30ed841a883414ca378b951718dae8e5f58e90be,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            break;
        }
        sum += nums[i];
    }
    return sum;
}
",0
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",0
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
",0
32dd475bccf4e5831dad196cf3cacee9c1fb317d,"public boolean xyzThere(String str)
{
    int length = str.length - 2;
    for (int i = 0; i < length; i++)
    {
        if (str.charAt(i) == 'x' && str.charAt(i + 1) == 'y'
            && str.charAt(i + 2) == 'z')
        {
            if (i == 0 || str.charAt(i - 1) != '.')
                {
                    return true;
                }
                    
        }
        return false;
            
    }
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
dc23e528bd74dbcdb541ee29b004f0426a8d31c4,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer && temp >= 60 && temp <= 100)
        return true;
    if (!isSummer && temp >= 60 && temp <= 90)
        return true;
    return false;
}
",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",0
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}",0
bfabd7f60c9ae99dd394933051317b10e684ed16,"public int countEvens(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            return nums[i];
        }
    }
}
",0
f0c481a9e07c60bea12e78a5079713f14b24c2a9,"public int blackjack(int a, int b)
{
    if(b > 21 && a < 21)
        return a;
    if(a>21 && b < 21)
        return b;
    if(a > b)
        return a;
    if (b > a)
        return a;
    return 0;
}
",0
24de5cf58ab3fa810889fd535572ef5e7eb2a657,"public String repeatEnd(String str, int n)
{
    String lastN = str.substring(str.length() - n);
    for (int i = 0; i < n; i++){
    	lastN += lastN;
    }
    return lastN;
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
217727d1f14f216248eece014e54d93c9ec2a75d,"public int[] zeroMax(int[] nums)
{
    int largestOdd = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 != 0)
        {
            largestOdd = nums[i];            
        }
    }
    
    boolean foundNumberRight = false;
    for (int i = nums.length; i <= 0; i++)
    {
        if (nums[i] == largestOdd)
        {
            foundNumberRight = true;
        }
        
        if (foundNumberRight && nums[i] == 0)
        {
            nums[i] = largestOdd;
        }
    }
    
    return nums;

}

",0
1654d0fdb9de31b1eea81e307988692913d733b4,"public boolean endOther(String a, String b)
{
    a.toLowerCase();
    b.toLowerCase();
    if (a.endsWith(b.toLowerCase()) || b.endsWith(a.toLowerCase()))
    {
        return true;
    }
    else
    {
        return false;
    }
}
",0
a730369051672c668c3efc03eb8dcc6956e9beb3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	// Java arrays are initialized to 0 so no need to set the last elements to 0
	return arr;
}
",0
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
87a331d0b690ad01a48575ef537fbbc928271d6f,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int x = i + 1; x < nums.length; x++)
            {
                if (nums[i] % 10 == 0 && nums[x] % 10 != 0)
                {
                    nums[x] = nums[i];
                }
            }
        }
    }
    
    return nums;
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
3a8055576f5859b599d0044c3fbabfdaadf99b67,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isMom)
            return true;
    else 
        return false;
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",0
d65fe8a4b30c8f6a448cc740f49fa2cc87076dda,"public String atFirst(String str)
{
    if (str.length() >= 2) {
        return str.substring(0, 2);
    }
    else if (str.length() == 1) {
        return str;
    }
    else if (str.length() == 0) {
        return ""@@"";
    }
return str;}
",0
73ed1de85d5b22771d0d401395f97178f38186a0,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for (int i = 1; i < nums.length; i++)
	{
		sum += nums[i];
		if (nums[i] > max)
        {
			max = nums[i];
        }
		else if(nums[i] < min)
        {
			min = nums[i];
        }
	}
	return (sum - max - min) / (nums.length - 2)
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
6a79abf13e5186d1006442dec2658a7168636406,"public String atFirst(String str)
{
    if (str.length() >= 2)
    {
    	return str.substring(0,2);
    }
  else if (str.length() == 1)
  {
    return str + ""@"";
  }
  else
    return ""@@"";

}
",0
9e9542ff6fbf9e9b88a43d0fb3f6ca6777ffd9f2,"public int countEvens(int[] nums)
{
   	int numEvens = 0;
    for (int i = 0; i < nums.length; i++)
    {
        currentNum = nums[i];
        int remainder = currentNum % 2;
        if (remainder == 0)
        {
            numEvens++;
        }
    }
    return numEvens;
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}",0
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
",0
56cccc5e57b71638ae0f36747e6ae090dc81fe2d,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i + 1; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        else
        {
        count = count + nums[i];
        }
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",0
7c7871661cd4465fe9ca613614480b58e74f7aad,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        repeat = repeat + str.substring(str.length() - n);
    return repeat;
}
",0
ab6e01ad587cf8cc30f23754b8c8c9d3566dc7a4,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0;
    }
    if (b > 21)
    {
        return 0;
    }
    if (a > 21 && b > 21)
    {
        return 0;
    }

}
",0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",0
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}",0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",0
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


",0
73ed1de85d5b22771d0d401395f97178f38186a0,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for (int i = 1; i < nums.length; i++)
	{
		sum += nums[i];
		if (nums[i] > max)
        {
			max = nums[i];
        }
		else if(nums[i] < min)
        {
			min = nums[i];
        }
	}
	return (sum - max - min) / (nums.length - 2)
}
",0
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
",0
19a5b90083c799114b8bccdc97fb09a69be2aba1,"public int greenTicket(int a, int b, int c)
{
    if (a == b || a == c || b == c)
        return 10;
	if (a == b && a == c || b == c)
        return 20;
    else
        return 0;
}
",0
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",0
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
",0
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
",0
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
",0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",0
d96a0285c6ef424bb4ff5119134143d2d1c7d7b0,"public String alarmClock(int day, boolean vacation)
{
	if (vacation)
    {
       	if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
    {
        if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""10:00"";
        }
		else if (day == 0 || day == 6)
        {
            return ""off"";
        }
    }
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
c1dc534bc134ac150f2499c964686d5c7968c85a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        System.out.printIn(""0"");
    }
    else if (speed >= 61 && <= 80)
    {
        System.out.printIn(""1"")
    }
    else if (speed >= 81)
    {
        System.out.printIn(""2"")
    }
    
}
",0
2b92c031167d3664a0be5ab4cee6d5ad678ce824,"public int sum67(int[] nums)
{
    int count = 0;
    int seven = 0;
    
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 6)
        {
           for (int x = i; x < nums.length; x++)
           {
               if (nums[x] != 7)
               {
                   count = count + 0;
               }
               else if (nums[x] == 7)
               {
                   count = count + 0;
                   i = i + x;
               }
           }
        
        }
        
        count = count + nums[i];
        // i'm stuck on excluding numbers up till 7.
        // okay, i'm trying to say:
        // when you reach a 6, ignore the 6.
        // then, ignore each number until you reach a 7.
        
        // so perhaps the smarter way to state this is:
        // ahhh maybe a separate int to count 7's?
        
        // i'm thinking in the way the problem is laid out for me, where
        // i'm supposed to ""ignore"" sections of numbers
        
        // maybe just fucking count them all and ignore the ones in between 6 and 7
        
       
        
    }
    
    return count;
}

",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",0
685ae300716306fda25a859b9226d6849a71d347,"
public String atFirst(String str)
{
    if (str.length() >= 2)
    {
        System.out.println(str.substring(0, 2));
    }
    else
    {
        if (str.length() >= 1)
        {
            System.out.println(str + ""@"");
        }
        else
        {
            System.out.println(str + ""@@"");
        }
    }
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
37483792e65efa307aab5d74a47b4a1dbe36e195,"public boolean bobThere(String str)
{
    //int firstB = str.indexOf(""b"");
   // int secondB = str.lastIndexOf(""b"");
    //if (secondB == firstB + 2)
    //    return true;
   // return false;
    for (int n == 0; n < str.length(); n++)
    {
        if ((str.charAt(n) == str.indexOf(""b"") && (str.charAt(n + 2) == str.indexOf(""b"", n))
        {
            return true;
        }
                
    }//end for loop
    return false;
}
",0
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",0
f7b47c261f888fe99159f9f86c3bdfa5878c0fe8,"public int[] frontPiece(int[] nums)
{
    int[] first2 = new int[2];
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2[i] = nums[i];
    }
    return first2;
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
dc23e528bd74dbcdb541ee29b004f0426a8d31c4,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer && temp >= 60 && temp <= 100)
        return true;
    if (!isSummer && temp >= 60 && temp <= 90)
        return true;
    return false;
}
",0
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
",0
80b80a660b8113337e5dc1d8d8d78cd8c918c58c,"public int[] seriesUp(int n)
{
    int[] result = new int[n*(n+1)/2];
    int m = 0;
    for (int i = 0;i<=n;i++)
    {
        for (int j = 1;j<i;j++, m++)
        {
            result[m] = j;
        }
        return result;
    }
}",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",0
3e52e3a1544f71192d5ae9883005f6c91861bff1,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    switch (n) {
        case 13:
        case 14:
        case 17:
        case 18:
        case 19:
            return 0;
            break;
        default:
            return n;
            break;
    }
    
}
",0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
a730369051672c668c3efc03eb8dcc6956e9beb3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	// Java arrays are initialized to 0 so no need to set the last elements to 0
	return arr;
}
",0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",0
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
",0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",0
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
",0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
9ac47f6c196a820eacbe8fca8359013950a2cc87,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (!isSummer && temperature >= 60 && temperature <= 90)
    {
        return true;
    }
    else if (isSummer && temperature >= 60 && temperature <= 100)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",0
44401b7a795caa5e1f94585e15dc8c88bdb84119,"public boolean isEverywhere(int[] nums, int val)
{	
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ( nums[i] != val && nums[i+1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
",0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",0
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",0
708073e053068889622d8588b7bec2ceea644404,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
3f9fb6fe01554295f4eba9d360fb11240c63107c,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++)
    {
        if (str.substring(i).startsWith(""b"") 
            && str.substring(i + 2).startsWith(""b""))
        {
            return true;
        }
    }
    return false;
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
4b739892a3a01dc0f58db94873932aeb2301f0b2,"public int[] fix45(int[] nums)
{
    List<int> fourIndex = new ArrayList();
    list<int> fiveIndex = new ArrayList();
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            fourIndex.add(i);                  
        }
        else if (nums[i] == 5)
        {
            fiveIndex.add(i);
        }
    }
    for (int i = 0; i < fourIndex.size(); i++)
    {
        int fivePos = fiveIndex(i);
        int newPos = fourIndex(i + 1);
        int number = nums[newPos];
        nums[fivePos] = number;
        nums[newPos] = 5;
    }
    return nums;
}
",0
eb40012d4b37cf5da376cf00035ed5e704fcbffc,"public int[] tenRun(int[] nums)
{
    for (int i = -1; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            i++
        }
        else
        {
            nums[i] = 10;
        }
    }
    return nums;
}",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
ce8f33a8716ba7591c714936098b3c249bc1bf61,"public int[] tenRun(int[] nums)
{
	for (int i = 0; i < nums.length; i++)
    {
        
    }
	return nums;
}
",0
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
d96a0285c6ef424bb4ff5119134143d2d1c7d7b0,"public String alarmClock(int day, boolean vacation)
{
	if (vacation)
    {
       	if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""7:00"";
        }
        else if (day == 0 || day == 6)
        {
            return ""10:00"";
        }
    }
    if (!vacation)
    {
        if (day == 1 || day == 2 || day == 3 || day == 4 || day == 5)
        {
            return ""10:00"";
        }
		else if (day == 0 || day == 6)
        {
            return ""off"";
        }
    }
}
",0
8a779c37e36e7e7238238f8fa362f496af39a6e3,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    
    
        
        
    if(first != -1 && last != -1 && first != last)
    {
		return str.substring(first + 5, last);
    }
    else return"""";
}
",0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
93d04bbaaacbdc2e43e79af8101e3443d99f3216,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
57de305af5c397df593d610c754a2029157ce03a,"public int[] tenRun(int[] nums)
{
    for (int i =0; i <nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int j = i+1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i]; 
            }
        }
    }
    
    return nums; 
    
}
",0
eb40012d4b37cf5da376cf00035ed5e704fcbffc,"public int[] tenRun(int[] nums)
{
    for (int i = -1; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            i++
        }
        else
        {
            nums[i] = 10;
        }
    }
    return nums;
}",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
c0dbc4d8e7248361a8572bc2edab98f5b3c74203,"public int greenTicket(int a, int b, int c)
{
    if (a != b && b != c && a != c){
        return 0;
    } 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
}
",0
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
e1b0736faf96bd2a25e21db515ea12578509a542,"public int[] withoutTen(int[] nums)
{
    int tenCount = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            tenCount += 1;
        }
    }
    int[] val = new int[nums.length - tenCount];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            val[count] = nums[i];
        }
    }
    return val;
}
",0
560377dcdf6da429d6799caabccae79391bbb832,"public boolean sameEnds(int[] nums, int n)
{
    if (n == 0)
    {
        return true;
    }
    
    for (int i = 0; i < n; i++)
    {
		if (nums[i] != nums[nums.length - n + i])
        {
            return false;
        }
   
    }
   
        return false;
}
    
",0
1fa41a21febf1d5750ebe4a3a9ad6e30f131577f,"public String mixString(String a, String b)
{
    int aLength = a.length();
    int bLength = b.length();
    
    int max = Math.max(aLength, bLength);
    
    String result = """";
    
    for (int i = 0; i < max; i++)
    {
        if (i <= aLength - 1)
        {
            result += a.substring(i, i + 1);
        }
        if (i <= bLength - 1)
        {
            result += b.substring(i, i + 1);
        }
    }
    
    return result;
}",0
45bb0c43390b2898deab9a359cdda85e43e43e39,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length];
    for (int i = 0; i< nums.length - 1; i++)
    {
		result[i] = nums[i+1];
    }
    result[nums.length - 1] = nums[0];
    
    return result;
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",0
59a0088f887207b9450033d0bec152a0c9e18bab,"public int[] shiftLeft(int[] nums)
{
    int[] result = new int[nums.length]; 
    result[nums.length - 1] = nums[0]; 
    int j = 0; 
    for (int i = 1; i < nums.length - 1; i++)
    {
        result[j] = nums[i];
        j++; 
    }
    
    return result; 
}
",0
3421e294ef663dea5cc4a12c48942aa3987b86e6,"public int makeChocolate(int small, int big, int goal)
{
    if (small + big*5 < goal)  return -1;

    int smallNeeded = goal - big * 5;

    if(smallNeeded <= 0) return 0;

    return smallNeeded;
    
            
    
}
",0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",0
b7a794971b30c770d5570accb374dac5104bef0e,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isMorning && isAsleep)
    {
        return false;
    }
    if (isMom && (!isAsleep) && isMorning)
    {
        return true;
    }
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",0
324744e665f46a82492205626535ae0a59adced1,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
ecd2767c2649044a0da26903ef340674e89f1009,"public int[] fix45(int[] nums) {
  int[] result = nums;
  for(int i = 0; i < result.length; i++) {
      if(result[i] == 4 && i != result.length) {
          int index = findIndexOfValidFive(result);
           
          if(index != -1) {
              int temp = result[i + 1];
              result[i + 1] = result[index];
              result[index] = temp;
          }
      }
  }  
   
  return result;
}
 
public int findIndexOfValidFive(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
        if((i == 0 && nums[i] == 5) || (nums[i] == 5 && nums[i - 1] != 4)) {
            return i;
        }
    }
     
    return -1;",0
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
c1078c51f22bc78bd01e7db2804f323868e76600,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
    {
        return true;
    }
}
",0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",0
7407aaf23f6102440a21d7a9618a9e989f370622,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    boolean successful;
    if (cigars >= 40 && cigars <= 60 && !isWeekend)
        successful = !successful
}
",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
eb40012d4b37cf5da376cf00035ed5e704fcbffc,"public int[] tenRun(int[] nums)
{
    for (int i = -1; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            i++
        }
        else
        {
            nums[i] = 10;
        }
    }
    return nums;
}",0
b916e8075083db817cb0d3d485aec694cb9b22b8,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a)+fixTeen(b)+fixTeen(c);
}

public int fixTeen(int n)
{
    if n=19||n=13||n=14||n=17||n=18;
    	return 0;
}
",0
e73e062870f1d171b59cd904b257c0d67d7c10f8,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 1] = a;
        }
    }
    return result;
}
",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
a640880805c7b524dec2ff6608a02a339cfe10a0,"public int[] withoutTen(int[] nums)
{
    int[] copy = new int[nums.length];
    int index = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10) 
        {
            copy[index] = nums[i];
            index++;
        }
    }
    return copy;
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
21e89b678cc68f8c7a4233261dc10576fa87b0ae,"public int[] seriesUp(int n)
{
    int[] result = new int[n * (n + 1)/2];
    if (n == 0)
    {
        return result;
    }
    for	(int i = 1;i <= n; i++)
    {
        for (int a = 1; a <= i; a++)
        {
            result[i + a - 2] = a;
        }
    }
    return result;
}
",0
faa6cc44696d72e0fa85cc561584a1de159a4aa5,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
        return 0;
    if (you >= 8 || date >= 8)
        return 2;
    return 1;
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",0
cdf42d5c2d560cf867cc0f628e892b8731b4a6c5,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2 && nums[i+1] == 2)
        {
            return true;
        }
    }
    return false;;
}
",0
CodeStateID,Code,0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
c1fdbe3e9fca73de72f1831d00c35304cb29463e,"public int[] fizzArray(int n)
{
    int[] result = new int[n];
    for (int i = 0; i < n; i++)
    {
        result[i] = i;
    }
    return result;
}
",0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",0
a937ca98bf07376a16173c226e492c54fe9de26f,"public int redTicket(int a, int b, int c)
{
  if (a == b && b == c)
  {
      if (a == 2)
      {
          return 10;
      }
      return 5;
  }
    if (a != b && a != c)
    {
        return 1;
    }
    return 0;
}
",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
43deef182cd61bed063eb9c08a0e2f5288da8f7b,"public int[] tenRun(int[] nums)
{
    int x = nums.length;
    int ten = 0;
    for (int i = 0; i < x; i++)
    {
        if (nums[i] % 10 == 0)
        {
            ten = nums[i];
            i++;
            while (i < x && nums[i] % 10 != 0)
            {
                nums[i] = ten;
            }
        }
    }
    return nums;
}
",0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
e3604130ed0d8066301429b1026d44bbec5d2b4b,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder(n*n);
    for (int i = 0; i < n; i++)
    {
    	sb.append(n);
    }
    return sb.toString();
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
58f8f141073ae3a1ee18e35d8cdf6ef297f50f94,"public int redTicket(int a, int b, int c)
{
    if (a == b && b == c && a == 2)
    {
        return 10;
    }
    else if (a == b && b == c)
    {
        return 5;
    }
    else if (b == c)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
f1fd374758a7a1519744512d0b09bb8be76f98ea,"public String alarmClock(int day, boolean vacation)
{
    while (vacation == false)
    {
        if (day >= 1 && day <= 5)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        }
    }
    while (vacation == true)
    {
        if (day >= 1 && day <= 5)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
    return ""off"";
}
",0
83e67904551bc1bb1045d11486fc9d857011e519,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == b && b == c)
    {
     	return 5;   
    }
    else if (a != b && a != c)
    {
     	return 1;   
    }
    else
    {
        return 0;
    }
        
}
",0
b02997d91fd09f8bee8d42b148052543fc339026,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday)
    {
        speed = speed - 5;
    }
    
    if (speed <= 60)
    {
        return 0;
    }
}
",0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",0
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",0
180da2e81e06d1caf5687df83d97d383cf18a3ce,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i <= n - 1; i++)
    {
        if(nums[i] == nums[nums.length - n + i - 1])
        {
            
        }
        else
        {
            return false;
        }
    }
    
    return true;
}
",0
c2b5233c69ac3f268687caee60f7f68deec9a002,"public String zipZap(String str)
{
    String original = str;
boolean found = false;
if(str.length() == 3) {
if(Character.toString(str.charAt(0)).equals(""z"") && (Character.toString(str.charAt(2)).equals(""p""))) {
return ""zp"";
}
} else if(str.length() < 3) {
return str;
}
 
for(int i = 0; i + 3 < str.length(); i++) {
if(Character.toString(str.charAt(i)).equals(""z"") && Character.toString(str.charAt(i + 2)).equals(""p"")) {
str = str.substring(0, i) + Character.toString(str.charAt(i)) + Character.toString(str.charAt(i + 2)) + str.substring(i + 3, str.length());
found = true;
} else {
}
}
 
if(Character.toString(str.charAt(str.length() - 3)).equals(""z"") && Character.toString(str.charAt(str.length() - 1)).equals(""p"")) {
return str = str.substring(0, str.length() - 3) + Character.toString(str.charAt(str.length() - 3)) + Character.toString(str.charAt(str.length() - 1));
}
 
if(found) {
return str;
} else {
return original;
}
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",0
a730369051672c668c3efc03eb8dcc6956e9beb3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	// Java arrays are initialized to 0 so no need to set the last elements to 0
	return arr;
}
",0
ce8f33a8716ba7591c714936098b3c249bc1bf61,"public int[] tenRun(int[] nums)
{
	for (int i = 0; i < nums.length; i++)
    {
        
    }
	return nums;
}
",0
bfabd7f60c9ae99dd394933051317b10e684ed16,"public int countEvens(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            return nums[i];
        }
    }
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",0
d0240fa701f593a04989201ae92746b03b43df48,"public int loneSum(int a, int b, int c)
{
    int sum = a;
    if(b != a)
        sum += b;
    if(c!=a && c!=b)
        sum += c
    return sum;
}
",0
63ba2e643b4b30f1a55fc704d2da881e424c0864,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7)
        {
            if (nums[i + 1] == 7)
            {
                return true;
            }
            else if (i < nums.length - 2 && nums[i + 2] == 7)
            {
                return true;
            }
        }
    }
    return false;
}
",0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",0
eb40012d4b37cf5da376cf00035ed5e704fcbffc,"public int[] tenRun(int[] nums)
{
    for (int i = -1; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            i++
        }
        else
        {
            nums[i] = 10;
        }
    }
    return nums;
}",0
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
",0
e7a99c827a4b5c4367c8b88d0c56b42bfd668f9f,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    
    if (sum >= 10 && sum <= 19)
    {
        sum = 20;
    }
    
    return sum;
    
}
",0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",0
239d63df8977727f828c61cb242a54331ab52605,"public int[] withoutTen(int[] nums)
{
    for(int i=0; i < nums.length; i++) {
    for(int j=i+1; j < nums.length; j++) {
      if(nums[i] == 10 && nums[j] != 10) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
      }
    }
    if(nums[i] == 10) nums[i] = 0;
  }
  
  return nums;
}
",0
7991e5a91ee75b2ca8290f4fbbd9dee8ea1ad8dc,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
    }
    return nums;
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
e503bcd53b6c1b8e1f5bceead47b945857b50e9a,"public int dateFashion(int you, int date)
{
    if ( you >= 8 && date >= 8)
    {
        return 2;
    }
    if ( you <= 2 && date <= 2)
    {
        return 0;
    }
     if ( you >= 8 && date <= 8)
    {
        return 1;
    }
   if ( you <= 8 && date >= 8)
    {
        return 1;
    }
    }
    else 
        return 1;
}
",0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",0
9c1b24f0268b9d5238feaf59114da5d3b827e88f,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    }
    return false;
}
",0
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
7862665265faf85e50ada49c030c401c79b4301c,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - (n - i)])
        {
            return false;
        }
    }
    
    return true;
}
",0
dc8066a4ce0e948c3507c575f5e9322070445254,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (!isAsleep) {
        if (isMom || !isMorning) {
            return true;
        }
        return false;
    }
    return false;
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
9168269e62eec3d2cc6abee104600936fad07115,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 || a + b <= 19)
    {
        return 20;
    }
    return a + b;
}
",0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
79792a5b4d76f04a6b74a8eb6014db01e4a84a1b,"public int sortaSum(int a, int b)
{
    if (a + b >= 10 && a + b <= 19)
    {
        return 20;
    }
    else
    {
        return a + b;
    }
}
",0
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
",0
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
",0
dc23e528bd74dbcdb541ee29b004f0426a8d31c4,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (isSummer && temp >= 60 && temp <= 100)
        return true;
    if (!isSummer && temp >= 60 && temp <= 90)
        return true;
    return false;
}
",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
b916e8075083db817cb0d3d485aec694cb9b22b8,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a)+fixTeen(b)+fixTeen(c);
}

public int fixTeen(int n)
{
    if n=19||n=13||n=14||n=17||n=18;
    	return 0;
}
",0
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
",0
30ed841a883414ca378b951718dae8e5f58e90be,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            break;
        }
        sum += nums[i];
    }
    return sum;
}
",0
a641c5efbb7e5f53f92580571992aa0a53d6cdf6,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
ec03a0ab16a221fcf9292fec81dde347af81b619,"public String repeatEnd(String str, int n)
{
StringBuffer result = new StringBuffer();
String end = str.substring(str.length() - n);

for(int i = 0; i < n; i++)
result.append(end);

return result.toString(
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
62ce70304358abfdd932378fb6cd7769b980fdc9,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (13 <= n && n <= 19)
    {
        if (n != 15 || n != 16)
        {
            n = 0;
        }
        return n;
    }
}
",0
469345bd6acd9ad504ce3cd1aaa0a852de97ddfe,"public int[] tenRun(int[] nums)
{
    int current;
    int i = 0;
      
    while(i < nums.length && nums[i] % 10 != 0)
        i++;
                
    if(i >= nums.length)
        return nums;
                          
    current = nums[i]; 
    i++;
                                
    while(i < nums.length) {
        if(nums[i] % 10 == 0)
            current = nums[i];
        else
            nums[i] = current;
        i++;
    }
                                                              
    return nums; 
}
",0
56e4dc22fcaa600e70470c4379b993e5425d1fd5,"public boolean bobThere(String str)
{
    if (str.length() < 3)
        {
            return false;
        }
    
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    return bobThere(str);
}
",0
f300c3316033d29c0150506e776d9d9a8546affd,"public int[] tenRun(int[] nums)
{
    int current;
    int i = 0;
      
    while(i < nums.length && nums[i] % 10 != 0)
        i++;
                
    if(i >= nums.length)
        return nums;
                          
    current = nums[i]; 
    i++;
                                
    while(i < nums.length) {
        if(nums[i] % 10 == 0)
            current = nums[i];
        else
            nums[i] = current;
        i++;
    }
                                                              
    return nums; 
}
",0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",0
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",0
4355cade3faaadd4892740ef4a2eec5f7471e9e8,"public int[] withoutTen(int[] nums)
{
    int i = 0;
    while (i < nums.length && nums[i] != 10)
        i++;
    for(int j = i+1; j < nums.length; j++)
    {
    	if(nums[j] != 10)
        {
        	nums[i] = nums[j];
            nums[j] = 10;
            i++;
        }
    }
    for( ; i < nums.length; i++)
        nums[i] = 0;
    
    return nums;
}
",0
73ed1de85d5b22771d0d401395f97178f38186a0,"public int centeredAverage(int[] nums)
{
    int max = nums[0];
	int min = nums[0];
	int sum = nums[0];
	for (int i = 1; i < nums.length; i++)
	{
		sum += nums[i];
		if (nums[i] > max)
        {
			max = nums[i];
        }
		else if(nums[i] < min)
        {
			min = nums[i];
        }
	}
	return (sum - max - min) / (nums.length - 2)
}
",0
c4cd9fb76f3a67d4e774521d2a07bd1fe7cd0b11,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
f30654182094f99250e185d999714f2745fd679b,"public int sum67(int[] nums)
{
    int sum = 0;
    boolean check = false;
    if (nums.length == 0)
    {
        return sum;
    }
    for (int i = 0; i < nums.length; i++)
    {
        if (check)
        {
            if (nums[i] == 6)
            {
               check = true;
            }  
        }
        else if (nums[i] == 7)
        {       
            check = false;
        }
        if (!check)
        {
            sum = sum + nums[i];
        }
    }
    return sum;
}
",0
84daaaac2d5439ab5d79c9a7ff06a4072ff9a553,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
    	return 10;
    }
    else if (a == b && b == c && a == c)
    {
    	return 5;
    }
    else if (b != a && c!= a)
    {
    	return 1;
    }
    else
    {
    	return 0;
    }
}
",0
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
",0
2d93e4072a980ef993907c9526395445c01a414f,"public boolean xyBalance(String str)
{
    boolean t=true;
    for (int i=0; i<str.length()-1; i++)
    {
        if (str.charAt=='y')
        {
            t=true;
        }
        if (str.charAt=='x' && !str.charAt=='y')
        {
            t=false;
        }
    }
    return t;
}
",0
6e2e62d18f30974998599ac300549d4eb85fb22c,"public static int[] fizzArray(int n) {

//initializing integer array with size n

int[] result = new int[n];

for (int i = 0; i < n; i++){

result[i] = i;

}

return result;

}
",0
51d726f3ba7d0bdf6df41f275be7d3e5ae0b21ed,"public String getSandwich(String str)
{
    int firstBread = -1;
    int lastBread = -1;
    for (int i = 0; i < str.length() - 5; i++)
    {
        if (str.substring(i, i+5).equals(""bread""))
        {
            firstBread = i;
            i = str.length();
        }
    }
    for (int j = str.length() - 5; j > 0; j--)
    {
        if (str.substring(j, j+5).equals(""bread""))
        {
            lastBread = j;
            j = 0;
        }
    }
    if(firstBread != -1 && lastBread != -1 && firstBread != lastBread)
        return str.substring(firstBread + 5, lastBread);
    return """";
}
",0
7c7871661cd4465fe9ca613614480b58e74f7aad,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        repeat = repeat + str.substring(str.length() - n);
    return repeat;
}
",0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",0
de2b521aa2c62ce8dcb54219041aa20489dda3f4,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c)
        return 0;
    if (a == b)
        return c;
    if (b == c)
        return a;
    if (a == c)
        return b;
    return a + b + c;
}
",0
8c963fd43ebd7f0640a20658e78434e55bda7b05,"public boolean isEverywhere(int[] nums, int val)
{
    for(int i =0; i < nums.length - 1; i++)
    {
        if(nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
07e5044ee85fdfbd00a05896e4320766869d1163,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",0
5ba8867472a774992529ec0efdd84c077603594d,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c)
        return 20;
    if (a == b || a == c || b == c)
        return 10;
    else
        return 0;
}
",0
db19ea5f1cabdb8d39c12a6acfc593bd85bf4f95,"public int[] tenRun(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
    	if (nums[i] % 10 == 0)
    	{
     	   for (int j = i + 1; j < nums.length && nums[j] % 10 != 0; j++)
           {
            	nums[j] = nums[i];   
           }
    	}
    }
    return nums;
}
",0
b18357d08d239c3169eb42bdabc04d80a3bba5bf,"public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
{
    if (isAsleep) 
    {
        return false;
    }
    if (isMorning && !isMom) 
    {
        return false;
    }
    return true;
}
",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
54f16f3c5196c9d23444381409e354f9fae465c0,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
71d268cab1e5b5629eb35d8e729c7c8880965509,"public int countEvens(int[] nums)
{
    for (int count=0; count < nums.length; count++) {
  if (nums[count] % 2 == 0)
  even++;
  }
  return even;

}
",0
ab6e01ad587cf8cc30f23754b8c8c9d3566dc7a4,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0;
    }
    if (b > 21)
    {
        return 0;
    }
    if (a > 21 && b > 21)
    {
        return 0;
    }

}
",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
57de305af5c397df593d610c754a2029157ce03a,"public int[] tenRun(int[] nums)
{
    for (int i =0; i <nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int j = i+1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i]; 
            }
        }
    }
    
    return nums; 
    
}
",0
c0688007700196b729fe8805c0305ca47210be5c,"public int countClumps(int[] nums)
{
    boolean foundClump = false;
    int clump = 0; 
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == nums[i + 1] && !foundClump)
        {
            foundClump = true;
            clump++;
        }
        else if (nums[i] != nums[i + 1])
        {
            foundClump = false;
        }
    }
    
    return clump;
}


",0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",0
b7d5d5590bde31e23ee41e67ec8ade069279409e,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (isBirthday) speed >= 5;
    if (speed <= 60) return 0;
    return (speed > 60 && speed <= 80) ? 1 : 2;
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
0808dca8b4a525f8b42f6b75f66b3b1d93c3c6cc,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 13 && nums[i - 1] != 13)
        {
            sum += nums[i];
        }
    }
    return sum;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
e56008dbd117a0aef4369418363fa77dd07a32e2,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + num % 10;
    }
    else
    {
        num = num - num % 10;
}
",0
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",0
226b5d8a7b8a50ea1a33a1983fecefe1ef7fa72b,"public boolean canBalance(int[] nums)
{
	int leftNum = 0;
	int rightNum;
	for(int i = 0; i < nums.length - 1; i++)
    {
		leftNum += nums[i];
    }
	rightNum = nums[nums.length-1];
	for(int i = nums.length - 2; i > 0; i--)
	{
		if(leftNum == rightNum)
        {
			return true;
        }
		leftNum -= nums[i];
		rightNum += nums[i];
	}
	return (leftNum == rightNum);
}",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
a9e28b208ebd799c89289ae125794d7301b373d2,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 1; i < nums.length() - 1; i++)
    {
        if (nums[i - 1] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",0
9ba9d8618a99bf06f7c45d5ee796bf2c7bcc2325,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                return false;
            }
            i++;
        }
    }
    if (nums. length >= 2 && nums[nums.length - 2] != 2 && nums[nums.length - 1] == 2)
    {
        return false;
    }
    return true;
}
",0
b60fafea9d0e4f435fdf8bfedf54ff4f63b769dc,"public int centeredAverage(int[] nums)
{
     nums.sort();
     int count = 0;
     int sum = 0;
     for (int i = 1; i < nums.length - 1; i++){
     sum += nums[i];
     count++;}
     return sum / count;
}
",0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",0
3f5371d66ceab48748b0f582c36f8b706e9a62a3,"public int centeredAverage(int[] nums)
{
     int sum = 0;
    int min = nums[0];
    int max = nums[1];
         
    for(int i = 0; i < nums.length; i++) {
         max = Math.max(max, nums[i]);
        sum += nums[i];
        min = Math.min(min, nums[i]);
       
    }
    int result = (sum - min - max) / (nums.length - 2);                      
    return result ;
}
",0
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",0
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
",0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",0
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
",0
8047786c1585a4f48b0dc586270106bbf6781d9b,"public String without2(String str) 
{
    if(str.length() < 2) {
        return str;
    }
    if (str.substring(0,2).equals(str.substring(str.length() - 2,str.length() - 1))) {
        return str.substring(1);
    }
    return str;
}
",0
170032b3df93df1f34814f661c635a524e790f57,"public int roundSum(int a, int b, int c)
{
    a.round10(a);
    b.round10(b);
    c.round10(c);
    int result = a + b + c;
    return result;
}

public int round10(int num)
{
    int numChecker = num % 10;
    
    if (numChecker > 0)
    {
        if (numChecker >= 5)
        {
            num = num + (10 - numChecker);
        }
        else
        {
            num = num - numChecker;
        }
    }
    return num;
}
",0
c97661988164da1f8f5aa8c8e8227ec76c134a55,"public int greenTicket(int a, int b, int c)
{
    if(a == b)
	{
		if(b == c)
        {
			return 20;
        }
		return 10;
	}
	if(a == c || b == c)
    {
		return 10;
    }
	return 0;
}
",0
30ed841a883414ca378b951718dae8e5f58e90be,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            break;
        }
        sum += nums[i];
    }
    return sum;
}
",0
d07d2f1b40602638d4c357809540b7e2870f1eb1,"public boolean cigarParty(int cigars, boolean isWeekend)
{
    if (isWeekend) 
        return cigar >=40;
    else 
        return cigar >= 40 && <= 60;
        
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
1246d82dc38af3da4d77890172a9d1890cc382a1,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
9df1cbdbe2059e87bcede6e1d1033ffff3e609ed,"public int[] withoutTen(int[] nums)
{
  	int[] result = new int[nums.length];
  	int count = 0;
  	
    for (int i = 0; i < nums.length; i++)
    {
     	if (nums[i] != 10)
        {
         	result[count] = nums[i];
            count++;
        }
    }
    for (int i = 0; i < count; i++)
    {
     	result[result.length - i] = 0;
    }
    
    return result;
}
",0
58b7922bf9cf25f01ea79cd804874a9a36ad1d1e,"public boolean xyzThere(String str)
{
    for (int i; i < str.length(); i++)
    {
        if (charAt(i).equals(""x"") && charAt(i + 1).equals(""y"") &&
            charAt(i + 2).equals(""z"")
        {
            if (charAt(i - 1).equals("".""))
            {
                return false;
            }
            return true;
        }
    }
}
",0
c9864807562ce05a0e1872a9d5d2eae382cb6654,"public boolean canBalance(int[] nums)
{
    boolean result = false;
        int nums1 = 0;
    	int nums2 = 0;
        for (int i = 0; i < nums.length / 2; i++)
        {
            nums1 += nums[i];
        }
        
        for (int j = (nums.length / 2 ) + 1; j < nums.length; j++)
        {
            nums2 += nums[j];
        }
        
        if (nums1 == nums2)
        {
            result = true;
        }
    return result;
}
",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",0
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
",0
372645503350c2f98b54e8893d8beaf699d30377,"public int greenTicket(int a, int b, int c)
{
 if (a == b || b ==c )
 {
     return 20;
 }
    else if (a == b || a == c || b == c)
    {
        return 10;
        
    }
    else 
    {
        return 0;
    }
}
",0
407ce4a7f680e3d8d40e80b3c4b7bee5814fea86,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 13) {
            sum += nums[i];
        }
        else {
            i += 1;
        }
        return sum;
}
",0
af039df147062104ef5bfd49ba70c81cef38f1bd,"public int countClumps(int[] nums)
{
    return 5;
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",0
6d62699ce20db7e91bf9a9c10e2cc7b3850ad892,"public int[] tenRun(int[] nums)
{
    for (int i - 0; i < nums.length; i++)
    {
    	if nums[i] % 10 == 0
        {
        	for (int j = i + 1; j < nums.length &&
                 !(nums[j] % 10 == 0); j++)
        	{
        		nums[j] = nums[i];
        	}   	  
        }
        return nums;
    }
}
",0
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",0
dd09babe580586f1680177c5f9004d2f1f2011bf,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
            return true;
        if (nums[i] < nums.length - 2 && nums[i] == 7 && nums[i + 2] == 7)
            return true;
    }
    return false;
}
",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
dbbe2c6beeefd93c68c1cf77a6130ed4323b9aa3,"public int countEvens(int[] nums)
{
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] % 2 == 0)
        {
            count++;
        }
    }
    return count;
}
",0
4189ca044ea58662337930dbfcb852ab166203b5,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i<n; i++)
    {
        if (nums[i] != nums[nums.length-n+i])
        {
            return false;
        }
    }
    return true;
}
",0
ce8f33a8716ba7591c714936098b3c249bc1bf61,"public int[] tenRun(int[] nums)
{
	for (int i = 0; i < nums.length; i++)
    {
        
    }
	return nums;
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
5b69f1455bc5efd1f92580cc97a56052ce4c2277,"public int noTeenSum(int a, int b, int c)
{
	
    int sum = fixTeen(a) + fixTeen(b) + fixTeen(c);
    return sum;
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else 
    {
     	return n;   
    }
}",0
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
",0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",0
04d3dc5f15435b8116c064824aae98cef0971263,"public int sortaSum(int a, int b)
{
    private int sum
    sum = a + b;
    if (sum >= 10 && sum <= 19)
    {
     	return 20;   
    }
    else
    {
     	return sum;   
    }
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
bac3eca30891386a7a86f4aa548c6eb9db5f32c9,"public String alarmClock(int day, boolean vacation)
{
    
    if (vacation)
    {
        return ""10:00"";
    }
    
    if (day == 0 || day == 6)
    {
        return ""10:00"";
    }
    else 
    {
        return ""7:00"";
    }
    
}
",0
faa6cc44696d72e0fa85cc561584a1de159a4aa5,"public int dateFashion(int you, int date)
{
    if (you <= 2 || date <= 2)
        return 0;
    if (you >= 8 || date >= 8)
        return 2;
    return 1;
}
",0
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
",0
f7b47c261f888fe99159f9f86c3bdfa5878c0fe8,"public int[] frontPiece(int[] nums)
{
    int[] first2 = new int[2];
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2[i] = nums[i];
    }
    return first2;
}
",0
985dc15634defa9ba5d2aa7ac55495fea7c082ea,"public boolean bobThere(String str)
{
    for (int i = 0; i < str.length(); i++) 
    {
    if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
    {
        return true;
    }
    else
    {
        return false;
    }
        return """";
    }
}
",0
9ac47f6c196a820eacbe8fca8359013950a2cc87,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (!isSummer && temperature >= 60 && temperature <= 90)
    {
        return true;
    }
    else if (isSummer && temperature >= 60 && temperature <= 100)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",0
a69d38f3cf12e6a14454b751528014666fddc16f,"public String mixString(String a, String b)
{
    return a.substring(0, 1) + b.substring(0, 1) + a.substring(1, 2) + b.substring(1, 2) + a.substring(2, 3) + b.substring(2, 3);
}
",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
a948531c5f36b52d18c23067a3df3f2438fc7b3c,"public int[] frontPiece(int[] nums)
{
    int[] first2;
    for (int i=0; i < 2 && i < nums.length; i++)
    {
        first2.add(nums.get(i));
    }
    return first2;
}
",0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
f1f0a6448bfe3ad005796a40633fc50d6ffa6023,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
25377a5b9a3ef88990fe4ec6e458a708a3adeb13,"public int[] frontPiece(int[] nums)
{
  	
    if (nums.length > 2)
    {
        return nums.getIndex - 1;
    }
    return nums;
}
",0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",0
3c7fcd8b79f482dfed60c826a914d6e742c28ac2,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
        return 0;
}
",0
e05151e763b22c6322f72dd9558578b0970a10d6,"public boolean canBalance(int[] nums)
{
    double sum = 0;
    for (int n : nums) {
        sum += n;
    }
    
    double target = sum / 2;
    sum = 0;
    
    for (int i : nums) {
        sum += i;
        if (sum == target) {
            return true;
        }
    }
    return false;
}
",0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
bbf414c607917bae018f323952576cc4855d0403,"public int[] fix45(int[] nums)
{
    int[] fours = new int [3];
    int[] fives = new int[3];
    int index4=0;
    int index5 = 0;
    for (int i=0; i<nums.length;i++)
    {
        if (nums[i] == 4)
        {
            fours[index4] = i;
            index4++;
        }
        else if (nums[i] == 5)
        {
            fives[index5] = i;
            index5++;
        }
    }
    for (int i = index5-1; i>=0;i--)
    {
        if (nums[fours[i]+1]!=5)
        {
        	nums[fives[i]] = nums[fours[i]+1];
        	nums[fours[i]+1] = 5;
        }
    }
    
    
    
    
    //int start = 0;
    //int skip = -1;
    //for (int i=0; i<nums.length;i++)
    //{
    //    if (nums[i] == 4)
    //    {
    //        for (int j=start; j<nums.length;j++)
   	//		{
    //            if (j!=skip && nums[j]==5)
    //            {
    //                nums[j]=nums[i+1];
    //                nums[i+1]=5;
    //                skip = i+1;
    //                break;
    //            }
    //        }
    //    }
    //}
    return nums;
}
",0
98b41121a7f0c87d5746dc0ae2746596c4a8bb37,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
dac02affbaef5f9819fa18c7c800dd09d3516ca0,"public String alarmClock(int day, boolean vacation)
{
    if (vacation){
        if (day == 0 || day == 6){
            return ""off"";
        } else {
            return ""10:00"";
        }
    }else if (day == 0 || day == 6){
        return ""10:00"";
    }
    return ""7:00""
    
        
}
",0
f0c481a9e07c60bea12e78a5079713f14b24c2a9,"public int blackjack(int a, int b)
{
    if(b > 21 && a < 21)
        return a;
    if(a>21 && b < 21)
        return b;
    if(a > b)
        return a;
    if (b > a)
        return a;
    return 0;
}
",0
17dd117f3cb65b3831789b22e24c95837663e40d,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2) 
        {
            int count = 0;
            for (int j = i; j < nums.length; j++)
            {
                if (nums[j] == 2)
                {
                    count++;
                }
                else 
                {
                    break;
                }
            }
            i += count;
            if (count < 2) 
            {
                return false;
            }
        }
    }
    return true;
}
",0
a3094c783a89e5b171d6fe2cc1058631ef24f08a,"public int blackjack(int a, int b)
{
    if ( a - 21 > b - 21)
    {
        return ""a"";
    }
    else if (a - 21 < b - 21)
    {
        return""b"";
    }
    else if ( a - 21 > 0 && b - 21 > 0)
    {
        return ""0"";
    }
}
",0
da35db888e070aad3d1910413f0731e4b429579c,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    if (20 - n < 7  && 20 - n < 1)
    {
        return 0;
    }
    else 
    {
        return n;
    }
}
",0
dea353e4fa8946278ebcfad2f8039a9f72b55b28,"public int sum3(int[] nums)
{
 return nums[0] + nums[1] + nums[2];   
}
",0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",0
0787f96457c9c72e7057e223b3ba985531d643c0,"public String atFirst(String str)
{
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else if (str.length() == 1)
    {
        return str.substring(0, 1) + ""@"";
    }
    else
    {
        return str.substring(0, 2);
    }
}
",0
dafc39964692024a09a3489ea6b3e449f9d2c654,"public int dateFashion(int you, int date)
{
    if (you >= 8 || date >= 8) {
        if ((you <= 2 || date <= 2) || (you <= 2 && date <= 2)) {
            return 0;
        }
        return 2;
    } else {
        return 1;
    }
    
}
",0
da986520180a13a98bb67c061d43bd9c2686e469,"public String alarmClock(int day, boolean vacation)
{
    if (vacation) { 
        if (day == 0 || day == 6) {
            return ""off"";
        } else {
            return ""10:00"";
        }
    } else {
        if (day == 0 || day == 6) {
            return ""10:00"";
        } else {
            return ""7:00"";
        }
    }
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
0338f05f60cc71f327e75cd4e8dc28138e83cecf,"public boolean has77(int[] nums)
{
    boolean truth = false;
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == nums[i + 2])
        {
            truth = true;
        }
    }
    return truth;
}
",0
717d70ba5fc0add05a34943b070be6424a55d3d6,"public boolean bobThere(String str)
{
    for (int i == 0; i < str.length()-3, i++)
     if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
     {
            return true;
     }
    return false;
}
",0
83a239f0521cd38117ddbaaf228f8523a019cc40,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().endsWith(b.toLowerCase()) || b.toLowerCase().endsWith(a.toLowerCase());
}
",0
b25bb0be3214d6ebfc03874ccb1735f374a8c287,"public boolean twoTwo(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 2)
        {
            if (nums[i + 1] != 2)
            {
                i++;
                return false;
                
            }
        }
    }
    return true;
}
",0
abf203f02a8e6355f71ebc0195c9c4f08db3dca9,"public int greenTicket(int a, int b, int c)
{ 
    if (a == b && b == c){
        return 20;
    }
    if (a == b || b == c || a == c){
        return 10;
    }
    return 0;
}
",0
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",0
3d4c98b74adf52d4ca5fe21febb24b1a8f6a6120,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (nums[i] != val && nums[i + 1] != val) {
            return false;
        }
    }
    return true;
}
",0
e1b0736faf96bd2a25e21db515ea12578509a542,"public int[] withoutTen(int[] nums)
{
    int tenCount = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            tenCount += 1;
        }
    }
    int[] val = new int[nums.length - tenCount];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            val[count] = nums[i];
        }
    }
    return val;
}
",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
351839745bc2cdccbb945ecd1391b63bfee8a94a,"public boolean twoTwo(int[] nums)
{
    for (int i = 1; i < nums.length -1; i++){
        if (i ==2 && (i-1!=2 || i+1!= 2)){
                return false;
        }
    }
    return true;
}
",0
77eef59d415f15b3ad7bf984b2a232f7486ec6c6,"public int countEvens(int[] nums)
{
    int count = 0;
    
	for(int i = 0; i < nums.length; i++)
	{
		if (nums[i] % 2 == 0)
        {
			count++;
        }
	}
	return count;
}
",0
eb40012d4b37cf5da376cf00035ed5e704fcbffc,"public int[] tenRun(int[] nums)
{
    for (int i = -1; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            i++
        }
        else
        {
            nums[i] = 10;
        }
    }
    return nums;
}",0
b916e8075083db817cb0d3d485aec694cb9b22b8,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a)+fixTeen(b)+fixTeen(c);
}

public int fixTeen(int n)
{
    if n=19||n=13||n=14||n=17||n=18;
    	return 0;
}
",0
68e3bb5f96347b10e0c0bade3bdb8460b5d95909,"public String mixString(String a, String b)
{
    String Result = """"; 
    int times = Math.min(a.length(), b.length()); 
    
    for (int i = 0; i < times; i++)
    {
        String strA = Character.toString(a.charAt(i);
        String strB = Character.toString(b.charAt(i);
                                         
        Result = Result.concat(strA);
        Result = Result.concat(strB);
        a.replaceFirst(strA, """"); 
        b.replaceFirst(strB, """");  
    }
   
    return Result; 
   	
    
}
",0
0d38a3b3464f5d971a097be8fd5ed8ab0ba11d25,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    int result;
    if (isBirthday == true)
    {
        speed = speed - 5;
    }
    if (speed <= 60)
    {
        return 0;
    }
    else if (speed <= 80)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
b1734b84d9123cc28d3f62e758b480ab26ea8fb9,"public int sortaSum(int a, int b)
{
   int sum = a + b;
   if (sum >= 10 && sum <= 19)
   {
   		return 20; 
   }
   else
   {
   		return sum;
   }
}
",0
77a60edbce12abb3bff800d9c3b972ecee4b4b13,"public boolean xyzThere(String str)
{
    for (int i = 0; i < str.length() - 2; i++)
    {
        if (str.charAt(i) == '.') 
        {
            i++;
        }
        else if (str.substring(i, i + 3).equals(""xyz""))
        {
            return false;
        }
    }
}
",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
7fb7d5081539b5b723150f47a24d5236e4a55c98,"public String atFirst(String str)
{
    if (str.length() < 2)
    {
        return = ""@"" + str;
    }
    else
    {
        return = str.substring(0, 2)
    }
    return return;
}
",0
c5aebb4151a6c14d6fb00ca52ff6164ceb64474b,"public int noTeenSum(int a, int b, int c)
{
    return fixTeen(a) + fixTeen(b) + fixTeen(c);
}

public int fixTeen(int n)
{
    return (n &gt;= 13 &amp;&amp; n &lt; 15 || n &gt; 16 &amp;&amp; n &lt;= 19) ?
        0 : n;
}
",0
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",0
a87473468990704a6ab3444826178c2be3d21c09,"public int roundSum(int a, int b, int c)
{
    return round10(a) + round10(b) + round10(c);
}

public int round10(int num)
{
    if (num % 10 >= 5)
    {
        num = num + (10 - num % 10);
        return num;
    }
    else
    {
        num = num - (num % 10)
        return num;
    }
}
",0
a5ec692ec461fd147520eca84652650f85204ecc,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && b == 2 && c == 2)
    {
     	return 10;   
    }
    else if (a == 2 && b == 2 && c == 2)
    {
     	return 5;   
    }
    else if ( a != b && a != c)
    {
     	return 1;   
    }
    else
    {
     	return 0;   
    }
}
",0
c329134243440bf2697e3b175b55c97ed2cb647d,"public int countCode(String str)
{
    int codeCount = 0;
    if (str.length() >= 4)
    {
    for (int i = 0; i < str.length()- 4; i++)
    {
        
    	if (str.substring(i, i+2).equals(""co"") && str.substring(i + 3, i+4).equals(""e""))
            {
                
             codeCount++;   
                
                
            }
        
    }  

        
            }
            
            return codeCount;
        
    }
                                                                                                            
                                                              
    
    
}
",0
e3604130ed0d8066301429b1026d44bbec5d2b4b,"public String repeatEnd(String str, int n)
{
	StringBuilder sb = new StringBuilder(n*n);
    for (int i = 0; i < n; i++)
    {
    	sb.append(n);
    }
    return sb.toString();
}
",0
b916e8075083db817cb0d3d485aec694cb9b22b8,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a)+fixTeen(b)+fixTeen(c);
}

public int fixTeen(int n)
{
    if n=19||n=13||n=14||n=17||n=18;
    	return 0;
}
",0
f7613e1314baffe2be7c9164f5586a14e6e82fd6,"public int countCode(String str)
{
    int count = 0;
    for (int i = 0; i < str.length() - 4; i++) {
        if (str.substring(i, i + 1).equals(""co"") && str.charAt(i + 3) == 'e') {
            count++;
        }
    }
    return count;
}
",0
8dbe6fb15987997ffaf0f07b86943c0bcb2846fb,"public String alarmClock(int day, boolean vacation)
{
    if (vacation)
    {
        if (day != 0 || day != 6)
        {
            return ""10:00"";
        }
        else
        {
            return ""off"";
        }
    }
	else
    {
        if (day != 0 || day != 6)
        {
            return ""7:00"";
        }
        else
        {
            return ""10:00"";
        {
    }


",0
3a5b1294ef5b59964830e8cf8f6219db0c34b7d8,"public int blackjack(int a, int b)
{
    double remainA;
    remainA = (a % 21); //NOTE: The '%' yields the remainder!!!!
    double remainB;
    remainB =  (b % 21);
    
    // IF the remainder is large for one number, IT IS FAR AWAY from 21.
    if (a > 21 && b > 21)
    {
        return 0;
    }
    else if (a < 21 || b < 21)
    {
        if (a < 21 && b > 21)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
    else
    {
        if (remainA > remainB)
        {
            return b;
        }
        else
        {
            return a;
        }
    }
}",0
e1b0736faf96bd2a25e21db515ea12578509a542,"public int[] withoutTen(int[] nums)
{
    int tenCount = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 10)
        {
            tenCount += 1;
        }
    }
    int[] val = new int[nums.length - tenCount];
    int count = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] != 10)
        {
            val[count] = nums[i];
        }
    }
    return val;
}
",0
b716d157ac664292fc299cd0d52fb5af40deb1e6,"public String atFirst(String str)
{
    if (str.length() == 1)
    {
        return str + ""@"";
    }
    if (str.length() == 0)
    {
        return ""@@"";
    }
    else
    {
        return str.substring(0, 2);
    }
        
}
",0
437b73c3a3e709e33de0f781ddfc583088171598,"public boolean xyBalance(String str)
{
    for (int i = str.length() - 1; i >= 0; i++)
    {
        if (str.charAt(i) == 'y')
        {
            return true;
        }
        else if (str.charAt(i) == 'x')
        {
            return false;
        }
    }
    return true;
}
",0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",0
d3ef0716ecf4a8ef9e4bec34fa89d1f94ed95074,"public boolean endOther(String a, String b)
{
    return a.toLowerCase().equals(b.toLowerCase()
}
",0
852b3e14a19fa6d9cd555e092d1e015cb6087fa2,"public int sum13(int[] nums)
{
    int sum = 0;
    if (num.length != 0)
    {
        for (int num: nums)
        {
            if (num != 13)
            {
                sum = sum + num;
            }
        }
    }
    return sum;
}
",0
e503bcd53b6c1b8e1f5bceead47b945857b50e9a,"public int dateFashion(int you, int date)
{
    if ( you >= 8 && date >= 8)
    {
        return 2;
    }
    if ( you <= 2 && date <= 2)
    {
        return 0;
    }
     if ( you >= 8 && date <= 8)
    {
        return 1;
    }
   if ( you <= 8 && date >= 8)
    {
        return 1;
    }
    }
    else 
        return 1;
}
",0
7a76d1abad81a69b50456192d50af23131339fe6,"public int[] shiftLeft(int[] nums)
{
    if (nums.length == 0)
    {
        return nums;
    }
    int first = nums[0];
    int last = nums[nums.length - 1];
    for (int i = 0; i < nums.length - 1; i++)
    {
        nums[i] = nums[i + 1];
    }
    nums[nums.length - 1] = first;
    return nums;
}
",0
92e2c7db539611643d15e879f2157e4a51220854,"public boolean xyBalance(String str)
{
    if (str.contains('x'))
    {
        return str.charAt();
    }
}
",0
eee0eb76d7c982f7cdbbfb86dbf032940b49e38b,"public int luckySum(int a, int b, int c)
{
    if (a == 13) // if a is equal to 13
        return 0;
    if (b == 13) // if b is equal to 13 go to the a value
        return a;
    if (c == 13) //if c is 13, only add  and b
        return (a + b);
    return (a + b + c); //if none of the others,add all the numbers
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
ab6e01ad587cf8cc30f23754b8c8c9d3566dc7a4,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0;
    }
    if (b > 21)
    {
        return 0;
    }
    if (a > 21 && b > 21)
    {
        return 0;
    }

}
",0
ced18d3b51d6a77c1a04d2cce66e7772508bbf25,"public int redTicket(int a, int b, int c)
{
    if (a == 2 && a == b && b == c) {
        return 10;
    }
    else if (a == b && b == c) {
        return 5;
    }
    else if (b != a && c != a) {
        return 1;
    }
    else {
       return 0; 
    }
}
",0
9e81d1a2a7638c14b721846f5090b36ad07ab308,"public int[] seriesUp(int n)
{
    int[] result = new int[(n * (n + 1)) / 2];
    int count = 1;
    int index = 0;
    for (int i = 0; i < result.length; i++)
    {
        for (int j = 0; j < count; j++)
        {
            result[index] = j;
        	index++;
        }
        count++;
    }
}
",0
b1fdab900f9b604fd821daf0f7451c45e2dcd8cb,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        return;
    }
    else if (b == 13)
    {
        return a;
    }
    else if (c == 13)
    {
        return a;
        return b;
    }
    else
    {
        return a;
        return b;
        return c;
    }
    
}
",0
03847fc873ee3a75107c8aed7dbcefc0b1eac14a,"public int[] fizzArray(int n)
{

int[] result = new int[n];

for (int i = 0; i < n; i++){

	result[i] = i;

}

return result;
}
",0
666a7f0c20c29b5666745dfb4c61a7a881f21218,"public boolean evenlySpaced(int a, int b, int c)
{
    boolean spaced = false;
    int aMinusB = a - b;
    int aMinusC = a - c;
    if (aMinusB == aMinusC || aMinusB == -aMinusC)
    {
        spaced = true;
    }
    return spaced;
}
",0
9ac47f6c196a820eacbe8fca8359013950a2cc87,"public boolean squirrelPlay(int temp, boolean isSummer)
{
    if (!isSummer && temperature >= 60 && temperature <= 90)
    {
        return true;
    }
    else if (isSummer && temperature >= 60 && temperature <= 100)
    {
        return true;
    }
    else
    {
        return false;
    }
    
}
",0
a730369051672c668c3efc03eb8dcc6956e9beb3,"public int[] withoutTen(int[] nums)
{
    int[] arr = new int[nums.length];
	int p = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] != 10)
		{
			arr[p] = nums[i];
			p++;
		}
	}
	// Java arrays are initialized to 0 so no need to set the last elements to 0
	return arr;
}
",0
c80cbf206a19a4ae8b3792d3f4b4c3252c0e3b34,"public int[] fizzArray(int n) {

    int[] result = new int[n];

    for (int i = 0; i < n; i++)

        result[i] = i;

    return result;

}
",0
b030134106433fcea045d0037ad10bbe22d66796,"public int noTeenSum(int a, int b, int c)
{
   return fixTeen(a);
    return fixTeen(b);
     return fixTeen(c);

}

public int fixTeen(int n)
{
    if (n >= 13 && n <= 19 && n != 15 && n != 16)
    {
        return 0;
    }
    else
    {
        return n;
    }
    
}
",0
fa7e52a8dd82b9e07db5c24a9f6640028d267b37,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
        {
            return false;
        }
    }
    return true;
}
",0
e1377201338b35fe171b9444b54cc7c825b47de7,"public int greenTicket(int a, int b, int c)
{
    if (a == b && b == c) //if two numbers are the same
        return 20;
    if (a == b || a == c || b == c) //if all the numbers are the same
        return 10;
    else //none of the numbers are the same
        return 0;
}
",0
d3bbd5372c67b93d7e4c5f3425ac793bb5763980,"public int sortaSum(int a, int b)
{
    int sum = a + b;
    if (sum >= 10 && sum <= 19)
        return 20;
    return sum;
}
",0
b8c119c667e36132f25df0fd31ba102f94d1c6df,"public boolean evenlySpaced(int a, int b, int c)
{
    if (a != b && a != c && b != c)
    {
         return (Math.abs(b - a) == Math.abs(c - b) 
         || Math.abs(b - a) == Math.abs(c - a)
         || Math.abs(a - b) == Math.abs(c - b)
         || Math.abs(c - a) == Math.abs(b - c) 
         || a == b && b == c);
    }
    return false;
}
",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
109f0388a3981d429a9290e5861cb47f08920b3b,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed < 60)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
b6c8be2f5f7309923ebb19a0553979d7cc50dce9,"public String zipZap(String str)
{
    for (int i = 0; i < str.length() - 2; i++) 
    {
    if (str.charAt(i) == 'z' && str.charAt(i + 2) == 'p')
    {
        str.replace(str.substring(i + 1), """");
    }
    }
    return str;
}
",0
ff2c788cde3e893144e29eebedc5a72de86ce95c,"public String getSandwich(String str)
{
    String result = """";
    int first = str.indexOf(""bread"");
    int last = str.lastIndexOf(""bread"");
    
    if (first < 0 || last < 0 || first == last)
    {
        return result;
    }
    if (first > 0 && last >= 0)
    {
        return str.substing(first + 5,last);
    }
}",0
c5b678ff310e1ddb50d0866291cc960abdb63560,"public int[] fix45(int[] nums)
{
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 4)
        {
            for (int j = 1; j <= nums.length; j++)
            {
                if (i + j < nums.length)
                {
                    if (nums[i + j] == 5)
                    {
                        nums[i + j] = nums[i + 1];
                        nums[i + 1] = 5;
                        break;
                    }                  
 
                }
                if (i - j >= 0)
                {
                    if (nums[i - j] == 5)
                    {
                        nums[i - j] = nums[i + 2];
                        nums[i + 1] = 5;
                        break;
                    }  
                }
            }
        }
    }
    return nums;
}
",0
8a779c37e36e7e7238238f8fa362f496af39a6e3,"public String getSandwich(String str)
{
    int first = -1;
    int last = -1;
    
    
        
        
    if(first != -1 && last != -1 && first != last)
    {
		return str.substring(first + 5, last);
    }
    else return"""";
}
",0
8a4197cd94d2fc278a10045f02c9323393eb70ad,"public boolean sameEnds(int[] nums, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (nums[i] != nums[nums.length - n + i])
            return false;
    }
    return true;
}
",0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
79b79da1a16315644f95dfca9d5beb67d09cd8db,"public int loneSum(int a, int b, int c)
{
    if (a == b && b == c) {
    if (a == b)
    {
        return c;
    }
    else if (b == c)
    {
        return a;
    }
    else if (a == c)
    {
        return b;
    }
    else
    {
        return a + b + c;
    }
    }
}
",0
6b9f55c88028fdb9f9e0adbb7f59b28fb9564c5a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val)
        {
            if (i < nums.length - 1)
            {
                if (nums[i + 1] != val)
                {
                    return false;
                }
            }
        }
        
    }
    return true;
}
",0
c1dc534bc134ac150f2499c964686d5c7968c85a,"public int caughtSpeeding(int speed, boolean isBirthday)
{
    if (speed <= 60)
    {
        System.out.printIn(""0"");
    }
    else if (speed >= 61 && <= 80)
    {
        System.out.printIn(""1"")
    }
    else if (speed >= 81)
    {
        System.out.printIn(""2"")
    }
    
}
",0
30ed841a883414ca378b951718dae8e5f58e90be,"public int sum13(int[] nums)
{
    int sum = 0;
    for (int i = 0; i < nums.length; i++)
    {
        if (nums[i] == 0)
        {
            break;
        }
        sum += nums[i];
    }
    return sum;
}
",0
ab6e01ad587cf8cc30f23754b8c8c9d3566dc7a4,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0;
    }
    if (b > 21)
    {
        return 0;
    }
    if (a > 21 && b > 21)
    {
        return 0;
    }

}
",0
f3f8a46c06347f005fc0c551e63762d27fb11704,"public boolean has77(int[] nums)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] == 7 && nums[i + 1] == 7)
        {
            return true;
        }
    }
    for (int i = 0; i < nums.length - 2; i++)
    {
        if (nums[i] == 7 && nums[i + 2] == 7)
        {
            return true;
        }
    }
}
",0
00e965d53a2c068467dc780c163a1170b8d6a056,"public int countCode(String str)
{
    int count = 0;
    
    for (int i = 0; i < str.length() - 3; i++)
    {
        if (str.charAt(i) == 'c' && str.charAt(i + 1) == 'o' && str.charAt(i + 3) == 'e')
        {
            count++;
            i += 4;
        }
    }
    
    return count;
}
",0
3716e52883778fd89a65151c2b55e28aaab539b2,"public int caughtSpeeding(int speed, boolean isBirthday)
{ if (speed <= 60)
{
    return 0;
}
if (speed >= 61 && speed <= 80)
{
    return 1;
}
if (isBirthday())
{
    return 2;
}
}
",0
f0c481a9e07c60bea12e78a5079713f14b24c2a9,"public int blackjack(int a, int b)
{
    if(b > 21 && a < 21)
        return a;
    if(a>21 && b < 21)
        return b;
    if(a > b)
        return a;
    if (b > a)
        return a;
    return 0;
}
",0
1210586898611da22a06d0d9dcf9c07490875ee1,"public String atFirst(String str)
{
    if (str.length() < 2)
        return '@';
    else 
        return str.substring(0, 2)
        
}
",0
b1ffd079f8c4294a66e06ad7d2fb2a7a8fbe7344,"public int sum3(int[] nums)
{
    return nums[0] + nums[1] + nums[2];
}
",0
01aa95fc5b389fabcff7b8fa062583666ccaa968,"public int luckySum(int a, int b, int c)
{
    if (a == 13)
    {
        
    }
    else if (b == 13)
    {
        return a;
    }
    else
    {
        return a + b;
    }
    return a + b + c;  
}",0
57de305af5c397df593d610c754a2029157ce03a,"public int[] tenRun(int[] nums)
{
    for (int i =0; i <nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            for (int j = i+1; j < nums.length && nums[j] % 10 != 0; j++)
            {
                nums[j] = nums[i]; 
            }
        }
    }
    
    return nums; 
    
}
",0
afec4a1fda7760651e34095e9ceef8a8483018be,"public boolean sameEnds(int[] nums, int n)
{
    
    for (int i = 0; i <= n; i++)
    {
        if (nums[i] != nums[nums.length - n + i - 1])
        {
            return false;
        }
    }
    return true;
}
",0
106e3d5e1b22ac3e35e7f965dd8b8298da752b7e,"public boolean xyzThere(String str)
{
    for(int i = 0; i < str.length() - 3; i++)
    {
        if (str.substring(i, i + 3).equals(""xyz"") && str.charAt(i-1) != '.')
        {
            return true;
        }
    }
    return false;
}
",0
6f326caf302bdfdbefc02faf1dc435ba9d9f04d6,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if ((nums[i] != val) && (nums[i + 1] != val))
        {
            return false;
        }          
        
    }
     return true;
}
",0
7dfcce65fc73fc585834f100c75c5d012ca175b9,"public boolean bobThere(String str)
{
   for (int i = 0; i < str.length() - 2; i++)
   {
       if (str.charAt(i) == 'b' && str.charAt(i + 2) == 'b')
   }
    return false;
}
",0
b916e8075083db817cb0d3d485aec694cb9b22b8,"public int noTeenSum(int a, int b, int c)
{
	return fixTeen(a)+fixTeen(b)+fixTeen(c);
}

public int fixTeen(int n)
{
    if n=19||n=13||n=14||n=17||n=18;
    	return 0;
}
",0
94c122a021a2cf0d8bce563a59aea25bbb53928a,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++) {
        if (val != nums[i] && val!= nums[i+1]) {
            return false;
        }
    }
    return true;
}
",0
3eb765355b81909fe2778872f22843054944d21a,"public int[] tenRun(int[] nums)
{
    if (nums.length<1)
    {
        return nums;
    }
    int tenn = nums[0];
    for (int i = o: i < nums.length; i++)
    {
        if (tenn % 10 !=0)
        {
            tenn = nums[i];
        }
        if (nums[i] % 10 == 0)
        {
            tenn = nums[i];
        }
        nums[i] = tenn;
    }
    return nums;
}
",0
eb40012d4b37cf5da376cf00035ed5e704fcbffc,"public int[] tenRun(int[] nums)
{
    for (int i = -1; i < nums.length; i++)
    {
        if (nums[i] % 10 == 0)
        {
            i++
        }
        else
        {
            nums[i] = 10;
        }
    }
    return nums;
}",0
eb9d1e97323f6c0c1410dd8ae35aa261280fc389,"public boolean endOther(String a, String b)
{
    a = a.toLowerCase();
    b = a.toLowerCase();
    return(a.endsWith(b) || b.endsWith(a));
    
    
}
",0
e503bcd53b6c1b8e1f5bceead47b945857b50e9a,"public int dateFashion(int you, int date)
{
    if ( you >= 8 && date >= 8)
    {
        return 2;
    }
    if ( you <= 2 && date <= 2)
    {
        return 0;
    }
     if ( you >= 8 && date <= 8)
    {
        return 1;
    }
   if ( you <= 8 && date >= 8)
    {
        return 1;
    }
    }
    else 
        return 1;
}
",0
a581a8a3d84b2ba650ac433de7fddce80ff00321,"public int redTicket(int a, int b, int c)
{
    /*if (b != a && c != a)
    {
     	return 0;   
    }
    if*/
    {
     	if (a == 2 && b == 2 && c == 2)
        {
         	return 10;   
        }
        else if (a == b && b == c && a == c)
        {
         	return 5;   
        }
        else 
        {
         	return 0;   
        }
    }
}
",0
8f6dbd26c957f489904930b7ed0aa2950cd254af,"public String repeatEnd(String str, int n)
{
    String repeat = str.substring(str.length() - n);
    for (int i = 1; i < n; i++)
        //starts with the first letter of the string
    {
        repeat = repeat + str.substring(str.length() - n);
        //gets the part of the word that needs to be returned
    }
    return repeat;
    //returns the string made out of the n repetitions
}
",0
9db9cff5028b4b1cc75f4f5c9a641117debb19ac,"public int blackjack(int a, int b)
{
    if (a > 21)
    {
        return 0; 
    }    
    if (b > 21)
    {
        return 0;
    }
    if ( a > b)
    {
        return a;
    }
    else
    {
        return b;
    }
    
}
",0
33e1684529896667b663d935101657bf9205ef10,"public boolean isEverywhere(int[] nums, int val)
{
    for (int i = 0; i < nums.length - 1; i++)
    {
        if (nums[i] != val && nums[i + 1] != val)
            return false;
    }
    return true;
}
",0
